
ble.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d9d8  08000140  08000140  00001140  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000554  0800db18  0800db18  0000eb18  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800e06c  0800e06c  000101f0  2**0
                  CONTENTS
  4 .ARM          00000008  0800e06c  0800e06c  0000f06c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800e074  0800e074  000101f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800e074  0800e074  0000f074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800e078  0800e078  0000f078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001f0  20000000  0800e07c  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000728  200001f0  0800e26c  000101f0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000918  0800e26c  00010918  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000101f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00016bd1  00000000  00000000  00010219  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000039c4  00000000  00000000  00026dea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000013b8  00000000  00000000  0002a7b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000f41  00000000  00000000  0002bb68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001c4ea  00000000  00000000  0002caa9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001b451  00000000  00000000  00048f93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009bbc8  00000000  00000000  000643e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000fffac  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006840  00000000  00000000  000ffff0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006e  00000000  00000000  00106830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	@ (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	@ (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	@ (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	200001f0 	.word	0x200001f0
 800015c:	00000000 	.word	0x00000000
 8000160:	0800db00 	.word	0x0800db00

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	@ (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	@ (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	@ (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	200001f4 	.word	0x200001f4
 800017c:	0800db00 	.word	0x0800db00

08000180 <strlen>:
 8000180:	4603      	mov	r3, r0
 8000182:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000186:	2a00      	cmp	r2, #0
 8000188:	d1fb      	bne.n	8000182 <strlen+0x2>
 800018a:	1a18      	subs	r0, r3, r0
 800018c:	3801      	subs	r0, #1
 800018e:	4770      	bx	lr

08000190 <__aeabi_drsub>:
 8000190:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000194:	e002      	b.n	800019c <__adddf3>
 8000196:	bf00      	nop

08000198 <__aeabi_dsub>:
 8000198:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800019c <__adddf3>:
 800019c:	b530      	push	{r4, r5, lr}
 800019e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001a6:	ea94 0f05 	teq	r4, r5
 80001aa:	bf08      	it	eq
 80001ac:	ea90 0f02 	teqeq	r0, r2
 80001b0:	bf1f      	itttt	ne
 80001b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001c2:	f000 80e2 	beq.w	800038a <__adddf3+0x1ee>
 80001c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001ce:	bfb8      	it	lt
 80001d0:	426d      	neglt	r5, r5
 80001d2:	dd0c      	ble.n	80001ee <__adddf3+0x52>
 80001d4:	442c      	add	r4, r5
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	ea82 0000 	eor.w	r0, r2, r0
 80001e2:	ea83 0101 	eor.w	r1, r3, r1
 80001e6:	ea80 0202 	eor.w	r2, r0, r2
 80001ea:	ea81 0303 	eor.w	r3, r1, r3
 80001ee:	2d36      	cmp	r5, #54	@ 0x36
 80001f0:	bf88      	it	hi
 80001f2:	bd30      	pophi	{r4, r5, pc}
 80001f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000200:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000204:	d002      	beq.n	800020c <__adddf3+0x70>
 8000206:	4240      	negs	r0, r0
 8000208:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800020c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000210:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000214:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000218:	d002      	beq.n	8000220 <__adddf3+0x84>
 800021a:	4252      	negs	r2, r2
 800021c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000220:	ea94 0f05 	teq	r4, r5
 8000224:	f000 80a7 	beq.w	8000376 <__adddf3+0x1da>
 8000228:	f1a4 0401 	sub.w	r4, r4, #1
 800022c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000230:	db0d      	blt.n	800024e <__adddf3+0xb2>
 8000232:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000236:	fa22 f205 	lsr.w	r2, r2, r5
 800023a:	1880      	adds	r0, r0, r2
 800023c:	f141 0100 	adc.w	r1, r1, #0
 8000240:	fa03 f20e 	lsl.w	r2, r3, lr
 8000244:	1880      	adds	r0, r0, r2
 8000246:	fa43 f305 	asr.w	r3, r3, r5
 800024a:	4159      	adcs	r1, r3
 800024c:	e00e      	b.n	800026c <__adddf3+0xd0>
 800024e:	f1a5 0520 	sub.w	r5, r5, #32
 8000252:	f10e 0e20 	add.w	lr, lr, #32
 8000256:	2a01      	cmp	r2, #1
 8000258:	fa03 fc0e 	lsl.w	ip, r3, lr
 800025c:	bf28      	it	cs
 800025e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000262:	fa43 f305 	asr.w	r3, r3, r5
 8000266:	18c0      	adds	r0, r0, r3
 8000268:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800026c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000270:	d507      	bpl.n	8000282 <__adddf3+0xe6>
 8000272:	f04f 0e00 	mov.w	lr, #0
 8000276:	f1dc 0c00 	rsbs	ip, ip, #0
 800027a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800027e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000282:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000286:	d31b      	bcc.n	80002c0 <__adddf3+0x124>
 8000288:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800028c:	d30c      	bcc.n	80002a8 <__adddf3+0x10c>
 800028e:	0849      	lsrs	r1, r1, #1
 8000290:	ea5f 0030 	movs.w	r0, r0, rrx
 8000294:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000298:	f104 0401 	add.w	r4, r4, #1
 800029c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80002a4:	f080 809a 	bcs.w	80003dc <__adddf3+0x240>
 80002a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80002ac:	bf08      	it	eq
 80002ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002b2:	f150 0000 	adcs.w	r0, r0, #0
 80002b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002ba:	ea41 0105 	orr.w	r1, r1, r5
 80002be:	bd30      	pop	{r4, r5, pc}
 80002c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002c4:	4140      	adcs	r0, r0
 80002c6:	eb41 0101 	adc.w	r1, r1, r1
 80002ca:	3c01      	subs	r4, #1
 80002cc:	bf28      	it	cs
 80002ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002d2:	d2e9      	bcs.n	80002a8 <__adddf3+0x10c>
 80002d4:	f091 0f00 	teq	r1, #0
 80002d8:	bf04      	itt	eq
 80002da:	4601      	moveq	r1, r0
 80002dc:	2000      	moveq	r0, #0
 80002de:	fab1 f381 	clz	r3, r1
 80002e2:	bf08      	it	eq
 80002e4:	3320      	addeq	r3, #32
 80002e6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ea:	f1b3 0220 	subs.w	r2, r3, #32
 80002ee:	da0c      	bge.n	800030a <__adddf3+0x16e>
 80002f0:	320c      	adds	r2, #12
 80002f2:	dd08      	ble.n	8000306 <__adddf3+0x16a>
 80002f4:	f102 0c14 	add.w	ip, r2, #20
 80002f8:	f1c2 020c 	rsb	r2, r2, #12
 80002fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000300:	fa21 f102 	lsr.w	r1, r1, r2
 8000304:	e00c      	b.n	8000320 <__adddf3+0x184>
 8000306:	f102 0214 	add.w	r2, r2, #20
 800030a:	bfd8      	it	le
 800030c:	f1c2 0c20 	rsble	ip, r2, #32
 8000310:	fa01 f102 	lsl.w	r1, r1, r2
 8000314:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000318:	bfdc      	itt	le
 800031a:	ea41 010c 	orrle.w	r1, r1, ip
 800031e:	4090      	lslle	r0, r2
 8000320:	1ae4      	subs	r4, r4, r3
 8000322:	bfa2      	ittt	ge
 8000324:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000328:	4329      	orrge	r1, r5
 800032a:	bd30      	popge	{r4, r5, pc}
 800032c:	ea6f 0404 	mvn.w	r4, r4
 8000330:	3c1f      	subs	r4, #31
 8000332:	da1c      	bge.n	800036e <__adddf3+0x1d2>
 8000334:	340c      	adds	r4, #12
 8000336:	dc0e      	bgt.n	8000356 <__adddf3+0x1ba>
 8000338:	f104 0414 	add.w	r4, r4, #20
 800033c:	f1c4 0220 	rsb	r2, r4, #32
 8000340:	fa20 f004 	lsr.w	r0, r0, r4
 8000344:	fa01 f302 	lsl.w	r3, r1, r2
 8000348:	ea40 0003 	orr.w	r0, r0, r3
 800034c:	fa21 f304 	lsr.w	r3, r1, r4
 8000350:	ea45 0103 	orr.w	r1, r5, r3
 8000354:	bd30      	pop	{r4, r5, pc}
 8000356:	f1c4 040c 	rsb	r4, r4, #12
 800035a:	f1c4 0220 	rsb	r2, r4, #32
 800035e:	fa20 f002 	lsr.w	r0, r0, r2
 8000362:	fa01 f304 	lsl.w	r3, r1, r4
 8000366:	ea40 0003 	orr.w	r0, r0, r3
 800036a:	4629      	mov	r1, r5
 800036c:	bd30      	pop	{r4, r5, pc}
 800036e:	fa21 f004 	lsr.w	r0, r1, r4
 8000372:	4629      	mov	r1, r5
 8000374:	bd30      	pop	{r4, r5, pc}
 8000376:	f094 0f00 	teq	r4, #0
 800037a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800037e:	bf06      	itte	eq
 8000380:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000384:	3401      	addeq	r4, #1
 8000386:	3d01      	subne	r5, #1
 8000388:	e74e      	b.n	8000228 <__adddf3+0x8c>
 800038a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800038e:	bf18      	it	ne
 8000390:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000394:	d029      	beq.n	80003ea <__adddf3+0x24e>
 8000396:	ea94 0f05 	teq	r4, r5
 800039a:	bf08      	it	eq
 800039c:	ea90 0f02 	teqeq	r0, r2
 80003a0:	d005      	beq.n	80003ae <__adddf3+0x212>
 80003a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80003a6:	bf04      	itt	eq
 80003a8:	4619      	moveq	r1, r3
 80003aa:	4610      	moveq	r0, r2
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	ea91 0f03 	teq	r1, r3
 80003b2:	bf1e      	ittt	ne
 80003b4:	2100      	movne	r1, #0
 80003b6:	2000      	movne	r0, #0
 80003b8:	bd30      	popne	{r4, r5, pc}
 80003ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003be:	d105      	bne.n	80003cc <__adddf3+0x230>
 80003c0:	0040      	lsls	r0, r0, #1
 80003c2:	4149      	adcs	r1, r1
 80003c4:	bf28      	it	cs
 80003c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80003ca:	bd30      	pop	{r4, r5, pc}
 80003cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003d0:	bf3c      	itt	cc
 80003d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003d6:	bd30      	popcc	{r4, r5, pc}
 80003d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003e4:	f04f 0000 	mov.w	r0, #0
 80003e8:	bd30      	pop	{r4, r5, pc}
 80003ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ee:	bf1a      	itte	ne
 80003f0:	4619      	movne	r1, r3
 80003f2:	4610      	movne	r0, r2
 80003f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003f8:	bf1c      	itt	ne
 80003fa:	460b      	movne	r3, r1
 80003fc:	4602      	movne	r2, r0
 80003fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000402:	bf06      	itte	eq
 8000404:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000408:	ea91 0f03 	teqeq	r1, r3
 800040c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000410:	bd30      	pop	{r4, r5, pc}
 8000412:	bf00      	nop

08000414 <__aeabi_ui2d>:
 8000414:	f090 0f00 	teq	r0, #0
 8000418:	bf04      	itt	eq
 800041a:	2100      	moveq	r1, #0
 800041c:	4770      	bxeq	lr
 800041e:	b530      	push	{r4, r5, lr}
 8000420:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000424:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000428:	f04f 0500 	mov.w	r5, #0
 800042c:	f04f 0100 	mov.w	r1, #0
 8000430:	e750      	b.n	80002d4 <__adddf3+0x138>
 8000432:	bf00      	nop

08000434 <__aeabi_i2d>:
 8000434:	f090 0f00 	teq	r0, #0
 8000438:	bf04      	itt	eq
 800043a:	2100      	moveq	r1, #0
 800043c:	4770      	bxeq	lr
 800043e:	b530      	push	{r4, r5, lr}
 8000440:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000444:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000448:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800044c:	bf48      	it	mi
 800044e:	4240      	negmi	r0, r0
 8000450:	f04f 0100 	mov.w	r1, #0
 8000454:	e73e      	b.n	80002d4 <__adddf3+0x138>
 8000456:	bf00      	nop

08000458 <__aeabi_f2d>:
 8000458:	0042      	lsls	r2, r0, #1
 800045a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800045e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000462:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000466:	bf1f      	itttt	ne
 8000468:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800046c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000470:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000474:	4770      	bxne	lr
 8000476:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800047a:	bf08      	it	eq
 800047c:	4770      	bxeq	lr
 800047e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000482:	bf04      	itt	eq
 8000484:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000488:	4770      	bxeq	lr
 800048a:	b530      	push	{r4, r5, lr}
 800048c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000490:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000494:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000498:	e71c      	b.n	80002d4 <__adddf3+0x138>
 800049a:	bf00      	nop

0800049c <__aeabi_ul2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f04f 0500 	mov.w	r5, #0
 80004aa:	e00a      	b.n	80004c2 <__aeabi_l2d+0x16>

080004ac <__aeabi_l2d>:
 80004ac:	ea50 0201 	orrs.w	r2, r0, r1
 80004b0:	bf08      	it	eq
 80004b2:	4770      	bxeq	lr
 80004b4:	b530      	push	{r4, r5, lr}
 80004b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80004ba:	d502      	bpl.n	80004c2 <__aeabi_l2d+0x16>
 80004bc:	4240      	negs	r0, r0
 80004be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004ce:	f43f aed8 	beq.w	8000282 <__adddf3+0xe6>
 80004d2:	f04f 0203 	mov.w	r2, #3
 80004d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004da:	bf18      	it	ne
 80004dc:	3203      	addne	r2, #3
 80004de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004e2:	bf18      	it	ne
 80004e4:	3203      	addne	r2, #3
 80004e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80004f2:	fa20 f002 	lsr.w	r0, r0, r2
 80004f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004fa:	ea40 000e 	orr.w	r0, r0, lr
 80004fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000502:	4414      	add	r4, r2
 8000504:	e6bd      	b.n	8000282 <__adddf3+0xe6>
 8000506:	bf00      	nop

08000508 <__aeabi_dmul>:
 8000508:	b570      	push	{r4, r5, r6, lr}
 800050a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800050e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000512:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000516:	bf1d      	ittte	ne
 8000518:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800051c:	ea94 0f0c 	teqne	r4, ip
 8000520:	ea95 0f0c 	teqne	r5, ip
 8000524:	f000 f8de 	bleq	80006e4 <__aeabi_dmul+0x1dc>
 8000528:	442c      	add	r4, r5
 800052a:	ea81 0603 	eor.w	r6, r1, r3
 800052e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000532:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000536:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800053a:	bf18      	it	ne
 800053c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000540:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000544:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000548:	d038      	beq.n	80005bc <__aeabi_dmul+0xb4>
 800054a:	fba0 ce02 	umull	ip, lr, r0, r2
 800054e:	f04f 0500 	mov.w	r5, #0
 8000552:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000556:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800055a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800055e:	f04f 0600 	mov.w	r6, #0
 8000562:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000566:	f09c 0f00 	teq	ip, #0
 800056a:	bf18      	it	ne
 800056c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000570:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000574:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000578:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800057c:	d204      	bcs.n	8000588 <__aeabi_dmul+0x80>
 800057e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000582:	416d      	adcs	r5, r5
 8000584:	eb46 0606 	adc.w	r6, r6, r6
 8000588:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800058c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000590:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000594:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000598:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800059c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80005a0:	bf88      	it	hi
 80005a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80005a6:	d81e      	bhi.n	80005e6 <__aeabi_dmul+0xde>
 80005a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80005ac:	bf08      	it	eq
 80005ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005b2:	f150 0000 	adcs.w	r0, r0, #0
 80005b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005ba:	bd70      	pop	{r4, r5, r6, pc}
 80005bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80005c0:	ea46 0101 	orr.w	r1, r6, r1
 80005c4:	ea40 0002 	orr.w	r0, r0, r2
 80005c8:	ea81 0103 	eor.w	r1, r1, r3
 80005cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005d0:	bfc2      	ittt	gt
 80005d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005da:	bd70      	popgt	{r4, r5, r6, pc}
 80005dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005e0:	f04f 0e00 	mov.w	lr, #0
 80005e4:	3c01      	subs	r4, #1
 80005e6:	f300 80ab 	bgt.w	8000740 <__aeabi_dmul+0x238>
 80005ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005ee:	bfde      	ittt	le
 80005f0:	2000      	movle	r0, #0
 80005f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005f6:	bd70      	pople	{r4, r5, r6, pc}
 80005f8:	f1c4 0400 	rsb	r4, r4, #0
 80005fc:	3c20      	subs	r4, #32
 80005fe:	da35      	bge.n	800066c <__aeabi_dmul+0x164>
 8000600:	340c      	adds	r4, #12
 8000602:	dc1b      	bgt.n	800063c <__aeabi_dmul+0x134>
 8000604:	f104 0414 	add.w	r4, r4, #20
 8000608:	f1c4 0520 	rsb	r5, r4, #32
 800060c:	fa00 f305 	lsl.w	r3, r0, r5
 8000610:	fa20 f004 	lsr.w	r0, r0, r4
 8000614:	fa01 f205 	lsl.w	r2, r1, r5
 8000618:	ea40 0002 	orr.w	r0, r0, r2
 800061c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000620:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000624:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000628:	fa21 f604 	lsr.w	r6, r1, r4
 800062c:	eb42 0106 	adc.w	r1, r2, r6
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 040c 	rsb	r4, r4, #12
 8000640:	f1c4 0520 	rsb	r5, r4, #32
 8000644:	fa00 f304 	lsl.w	r3, r0, r4
 8000648:	fa20 f005 	lsr.w	r0, r0, r5
 800064c:	fa01 f204 	lsl.w	r2, r1, r4
 8000650:	ea40 0002 	orr.w	r0, r0, r2
 8000654:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000658:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800065c:	f141 0100 	adc.w	r1, r1, #0
 8000660:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000664:	bf08      	it	eq
 8000666:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800066a:	bd70      	pop	{r4, r5, r6, pc}
 800066c:	f1c4 0520 	rsb	r5, r4, #32
 8000670:	fa00 f205 	lsl.w	r2, r0, r5
 8000674:	ea4e 0e02 	orr.w	lr, lr, r2
 8000678:	fa20 f304 	lsr.w	r3, r0, r4
 800067c:	fa01 f205 	lsl.w	r2, r1, r5
 8000680:	ea43 0302 	orr.w	r3, r3, r2
 8000684:	fa21 f004 	lsr.w	r0, r1, r4
 8000688:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800068c:	fa21 f204 	lsr.w	r2, r1, r4
 8000690:	ea20 0002 	bic.w	r0, r0, r2
 8000694:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000698:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800069c:	bf08      	it	eq
 800069e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006a2:	bd70      	pop	{r4, r5, r6, pc}
 80006a4:	f094 0f00 	teq	r4, #0
 80006a8:	d10f      	bne.n	80006ca <__aeabi_dmul+0x1c2>
 80006aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80006ae:	0040      	lsls	r0, r0, #1
 80006b0:	eb41 0101 	adc.w	r1, r1, r1
 80006b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80006b8:	bf08      	it	eq
 80006ba:	3c01      	subeq	r4, #1
 80006bc:	d0f7      	beq.n	80006ae <__aeabi_dmul+0x1a6>
 80006be:	ea41 0106 	orr.w	r1, r1, r6
 80006c2:	f095 0f00 	teq	r5, #0
 80006c6:	bf18      	it	ne
 80006c8:	4770      	bxne	lr
 80006ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80006ce:	0052      	lsls	r2, r2, #1
 80006d0:	eb43 0303 	adc.w	r3, r3, r3
 80006d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006d8:	bf08      	it	eq
 80006da:	3d01      	subeq	r5, #1
 80006dc:	d0f7      	beq.n	80006ce <__aeabi_dmul+0x1c6>
 80006de:	ea43 0306 	orr.w	r3, r3, r6
 80006e2:	4770      	bx	lr
 80006e4:	ea94 0f0c 	teq	r4, ip
 80006e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006ec:	bf18      	it	ne
 80006ee:	ea95 0f0c 	teqne	r5, ip
 80006f2:	d00c      	beq.n	800070e <__aeabi_dmul+0x206>
 80006f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006f8:	bf18      	it	ne
 80006fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006fe:	d1d1      	bne.n	80006a4 <__aeabi_dmul+0x19c>
 8000700:	ea81 0103 	eor.w	r1, r1, r3
 8000704:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000708:	f04f 0000 	mov.w	r0, #0
 800070c:	bd70      	pop	{r4, r5, r6, pc}
 800070e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000712:	bf06      	itte	eq
 8000714:	4610      	moveq	r0, r2
 8000716:	4619      	moveq	r1, r3
 8000718:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800071c:	d019      	beq.n	8000752 <__aeabi_dmul+0x24a>
 800071e:	ea94 0f0c 	teq	r4, ip
 8000722:	d102      	bne.n	800072a <__aeabi_dmul+0x222>
 8000724:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000728:	d113      	bne.n	8000752 <__aeabi_dmul+0x24a>
 800072a:	ea95 0f0c 	teq	r5, ip
 800072e:	d105      	bne.n	800073c <__aeabi_dmul+0x234>
 8000730:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000734:	bf1c      	itt	ne
 8000736:	4610      	movne	r0, r2
 8000738:	4619      	movne	r1, r3
 800073a:	d10a      	bne.n	8000752 <__aeabi_dmul+0x24a>
 800073c:	ea81 0103 	eor.w	r1, r1, r3
 8000740:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000748:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800074c:	f04f 0000 	mov.w	r0, #0
 8000750:	bd70      	pop	{r4, r5, r6, pc}
 8000752:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000756:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800075a:	bd70      	pop	{r4, r5, r6, pc}

0800075c <__aeabi_ddiv>:
 800075c:	b570      	push	{r4, r5, r6, lr}
 800075e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000762:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000766:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800076a:	bf1d      	ittte	ne
 800076c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000770:	ea94 0f0c 	teqne	r4, ip
 8000774:	ea95 0f0c 	teqne	r5, ip
 8000778:	f000 f8a7 	bleq	80008ca <__aeabi_ddiv+0x16e>
 800077c:	eba4 0405 	sub.w	r4, r4, r5
 8000780:	ea81 0e03 	eor.w	lr, r1, r3
 8000784:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000788:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800078c:	f000 8088 	beq.w	80008a0 <__aeabi_ddiv+0x144>
 8000790:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000794:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000798:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800079c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80007b4:	429d      	cmp	r5, r3
 80007b6:	bf08      	it	eq
 80007b8:	4296      	cmpeq	r6, r2
 80007ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80007be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80007c2:	d202      	bcs.n	80007ca <__aeabi_ddiv+0x6e>
 80007c4:	085b      	lsrs	r3, r3, #1
 80007c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ca:	1ab6      	subs	r6, r6, r2
 80007cc:	eb65 0503 	sbc.w	r5, r5, r3
 80007d0:	085b      	lsrs	r3, r3, #1
 80007d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000808:	085b      	lsrs	r3, r3, #1
 800080a:	ea4f 0232 	mov.w	r2, r2, rrx
 800080e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000812:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000816:	bf22      	ittt	cs
 8000818:	1ab6      	subcs	r6, r6, r2
 800081a:	4675      	movcs	r5, lr
 800081c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000820:	085b      	lsrs	r3, r3, #1
 8000822:	ea4f 0232 	mov.w	r2, r2, rrx
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000838:	ea55 0e06 	orrs.w	lr, r5, r6
 800083c:	d018      	beq.n	8000870 <__aeabi_ddiv+0x114>
 800083e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000842:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000846:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800084a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800084e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000852:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000856:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800085a:	d1c0      	bne.n	80007de <__aeabi_ddiv+0x82>
 800085c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000860:	d10b      	bne.n	800087a <__aeabi_ddiv+0x11e>
 8000862:	ea41 0100 	orr.w	r1, r1, r0
 8000866:	f04f 0000 	mov.w	r0, #0
 800086a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800086e:	e7b6      	b.n	80007de <__aeabi_ddiv+0x82>
 8000870:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000874:	bf04      	itt	eq
 8000876:	4301      	orreq	r1, r0
 8000878:	2000      	moveq	r0, #0
 800087a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800087e:	bf88      	it	hi
 8000880:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000884:	f63f aeaf 	bhi.w	80005e6 <__aeabi_dmul+0xde>
 8000888:	ebb5 0c03 	subs.w	ip, r5, r3
 800088c:	bf04      	itt	eq
 800088e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000892:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000896:	f150 0000 	adcs.w	r0, r0, #0
 800089a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800089e:	bd70      	pop	{r4, r5, r6, pc}
 80008a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80008a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008ac:	bfc2      	ittt	gt
 80008ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008b6:	bd70      	popgt	{r4, r5, r6, pc}
 80008b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80008bc:	f04f 0e00 	mov.w	lr, #0
 80008c0:	3c01      	subs	r4, #1
 80008c2:	e690      	b.n	80005e6 <__aeabi_dmul+0xde>
 80008c4:	ea45 0e06 	orr.w	lr, r5, r6
 80008c8:	e68d      	b.n	80005e6 <__aeabi_dmul+0xde>
 80008ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ce:	ea94 0f0c 	teq	r4, ip
 80008d2:	bf08      	it	eq
 80008d4:	ea95 0f0c 	teqeq	r5, ip
 80008d8:	f43f af3b 	beq.w	8000752 <__aeabi_dmul+0x24a>
 80008dc:	ea94 0f0c 	teq	r4, ip
 80008e0:	d10a      	bne.n	80008f8 <__aeabi_ddiv+0x19c>
 80008e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008e6:	f47f af34 	bne.w	8000752 <__aeabi_dmul+0x24a>
 80008ea:	ea95 0f0c 	teq	r5, ip
 80008ee:	f47f af25 	bne.w	800073c <__aeabi_dmul+0x234>
 80008f2:	4610      	mov	r0, r2
 80008f4:	4619      	mov	r1, r3
 80008f6:	e72c      	b.n	8000752 <__aeabi_dmul+0x24a>
 80008f8:	ea95 0f0c 	teq	r5, ip
 80008fc:	d106      	bne.n	800090c <__aeabi_ddiv+0x1b0>
 80008fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000902:	f43f aefd 	beq.w	8000700 <__aeabi_dmul+0x1f8>
 8000906:	4610      	mov	r0, r2
 8000908:	4619      	mov	r1, r3
 800090a:	e722      	b.n	8000752 <__aeabi_dmul+0x24a>
 800090c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000910:	bf18      	it	ne
 8000912:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000916:	f47f aec5 	bne.w	80006a4 <__aeabi_dmul+0x19c>
 800091a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800091e:	f47f af0d 	bne.w	800073c <__aeabi_dmul+0x234>
 8000922:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000926:	f47f aeeb 	bne.w	8000700 <__aeabi_dmul+0x1f8>
 800092a:	e712      	b.n	8000752 <__aeabi_dmul+0x24a>

0800092c <__gedf2>:
 800092c:	f04f 3cff 	mov.w	ip, #4294967295
 8000930:	e006      	b.n	8000940 <__cmpdf2+0x4>
 8000932:	bf00      	nop

08000934 <__ledf2>:
 8000934:	f04f 0c01 	mov.w	ip, #1
 8000938:	e002      	b.n	8000940 <__cmpdf2+0x4>
 800093a:	bf00      	nop

0800093c <__cmpdf2>:
 800093c:	f04f 0c01 	mov.w	ip, #1
 8000940:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000944:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000948:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800094c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000950:	bf18      	it	ne
 8000952:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000956:	d01b      	beq.n	8000990 <__cmpdf2+0x54>
 8000958:	b001      	add	sp, #4
 800095a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800095e:	bf0c      	ite	eq
 8000960:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000964:	ea91 0f03 	teqne	r1, r3
 8000968:	bf02      	ittt	eq
 800096a:	ea90 0f02 	teqeq	r0, r2
 800096e:	2000      	moveq	r0, #0
 8000970:	4770      	bxeq	lr
 8000972:	f110 0f00 	cmn.w	r0, #0
 8000976:	ea91 0f03 	teq	r1, r3
 800097a:	bf58      	it	pl
 800097c:	4299      	cmppl	r1, r3
 800097e:	bf08      	it	eq
 8000980:	4290      	cmpeq	r0, r2
 8000982:	bf2c      	ite	cs
 8000984:	17d8      	asrcs	r0, r3, #31
 8000986:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800098a:	f040 0001 	orr.w	r0, r0, #1
 800098e:	4770      	bx	lr
 8000990:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d102      	bne.n	80009a0 <__cmpdf2+0x64>
 800099a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800099e:	d107      	bne.n	80009b0 <__cmpdf2+0x74>
 80009a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009a8:	d1d6      	bne.n	8000958 <__cmpdf2+0x1c>
 80009aa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009ae:	d0d3      	beq.n	8000958 <__cmpdf2+0x1c>
 80009b0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009b4:	4770      	bx	lr
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdrcmple>:
 80009b8:	4684      	mov	ip, r0
 80009ba:	4610      	mov	r0, r2
 80009bc:	4662      	mov	r2, ip
 80009be:	468c      	mov	ip, r1
 80009c0:	4619      	mov	r1, r3
 80009c2:	4663      	mov	r3, ip
 80009c4:	e000      	b.n	80009c8 <__aeabi_cdcmpeq>
 80009c6:	bf00      	nop

080009c8 <__aeabi_cdcmpeq>:
 80009c8:	b501      	push	{r0, lr}
 80009ca:	f7ff ffb7 	bl	800093c <__cmpdf2>
 80009ce:	2800      	cmp	r0, #0
 80009d0:	bf48      	it	mi
 80009d2:	f110 0f00 	cmnmi.w	r0, #0
 80009d6:	bd01      	pop	{r0, pc}

080009d8 <__aeabi_dcmpeq>:
 80009d8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009dc:	f7ff fff4 	bl	80009c8 <__aeabi_cdcmpeq>
 80009e0:	bf0c      	ite	eq
 80009e2:	2001      	moveq	r0, #1
 80009e4:	2000      	movne	r0, #0
 80009e6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ea:	bf00      	nop

080009ec <__aeabi_dcmplt>:
 80009ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f0:	f7ff ffea 	bl	80009c8 <__aeabi_cdcmpeq>
 80009f4:	bf34      	ite	cc
 80009f6:	2001      	movcc	r0, #1
 80009f8:	2000      	movcs	r0, #0
 80009fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80009fe:	bf00      	nop

08000a00 <__aeabi_dcmple>:
 8000a00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a04:	f7ff ffe0 	bl	80009c8 <__aeabi_cdcmpeq>
 8000a08:	bf94      	ite	ls
 8000a0a:	2001      	movls	r0, #1
 8000a0c:	2000      	movhi	r0, #0
 8000a0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a12:	bf00      	nop

08000a14 <__aeabi_dcmpge>:
 8000a14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a18:	f7ff ffce 	bl	80009b8 <__aeabi_cdrcmple>
 8000a1c:	bf94      	ite	ls
 8000a1e:	2001      	movls	r0, #1
 8000a20:	2000      	movhi	r0, #0
 8000a22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a26:	bf00      	nop

08000a28 <__aeabi_dcmpgt>:
 8000a28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a2c:	f7ff ffc4 	bl	80009b8 <__aeabi_cdrcmple>
 8000a30:	bf34      	ite	cc
 8000a32:	2001      	movcc	r0, #1
 8000a34:	2000      	movcs	r0, #0
 8000a36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3a:	bf00      	nop

08000a3c <__aeabi_dcmpun>:
 8000a3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x10>
 8000a46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a4a:	d10a      	bne.n	8000a62 <__aeabi_dcmpun+0x26>
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a54:	d102      	bne.n	8000a5c <__aeabi_dcmpun+0x20>
 8000a56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a5a:	d102      	bne.n	8000a62 <__aeabi_dcmpun+0x26>
 8000a5c:	f04f 0000 	mov.w	r0, #0
 8000a60:	4770      	bx	lr
 8000a62:	f04f 0001 	mov.w	r0, #1
 8000a66:	4770      	bx	lr

08000a68 <__aeabi_d2iz>:
 8000a68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a70:	d215      	bcs.n	8000a9e <__aeabi_d2iz+0x36>
 8000a72:	d511      	bpl.n	8000a98 <__aeabi_d2iz+0x30>
 8000a74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a7c:	d912      	bls.n	8000aa4 <__aeabi_d2iz+0x3c>
 8000a7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a92:	bf18      	it	ne
 8000a94:	4240      	negne	r0, r0
 8000a96:	4770      	bx	lr
 8000a98:	f04f 0000 	mov.w	r0, #0
 8000a9c:	4770      	bx	lr
 8000a9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aa2:	d105      	bne.n	8000ab0 <__aeabi_d2iz+0x48>
 8000aa4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000aa8:	bf08      	it	eq
 8000aaa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_d2uiz>:
 8000ab8:	004a      	lsls	r2, r1, #1
 8000aba:	d211      	bcs.n	8000ae0 <__aeabi_d2uiz+0x28>
 8000abc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ac0:	d211      	bcs.n	8000ae6 <__aeabi_d2uiz+0x2e>
 8000ac2:	d50d      	bpl.n	8000ae0 <__aeabi_d2uiz+0x28>
 8000ac4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ac8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000acc:	d40e      	bmi.n	8000aec <__aeabi_d2uiz+0x34>
 8000ace:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ad2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000ad6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ada:	fa23 f002 	lsr.w	r0, r3, r2
 8000ade:	4770      	bx	lr
 8000ae0:	f04f 0000 	mov.w	r0, #0
 8000ae4:	4770      	bx	lr
 8000ae6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aea:	d102      	bne.n	8000af2 <__aeabi_d2uiz+0x3a>
 8000aec:	f04f 30ff 	mov.w	r0, #4294967295
 8000af0:	4770      	bx	lr
 8000af2:	f04f 0000 	mov.w	r0, #0
 8000af6:	4770      	bx	lr

08000af8 <__aeabi_d2f>:
 8000af8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000afc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b00:	bf24      	itt	cs
 8000b02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b0a:	d90d      	bls.n	8000b28 <__aeabi_d2f+0x30>
 8000b0c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b18:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b20:	bf08      	it	eq
 8000b22:	f020 0001 	biceq.w	r0, r0, #1
 8000b26:	4770      	bx	lr
 8000b28:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b2c:	d121      	bne.n	8000b72 <__aeabi_d2f+0x7a>
 8000b2e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b32:	bfbc      	itt	lt
 8000b34:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b38:	4770      	bxlt	lr
 8000b3a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b42:	f1c2 0218 	rsb	r2, r2, #24
 8000b46:	f1c2 0c20 	rsb	ip, r2, #32
 8000b4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b52:	bf18      	it	ne
 8000b54:	f040 0001 	orrne.w	r0, r0, #1
 8000b58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b64:	ea40 000c 	orr.w	r0, r0, ip
 8000b68:	fa23 f302 	lsr.w	r3, r3, r2
 8000b6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b70:	e7cc      	b.n	8000b0c <__aeabi_d2f+0x14>
 8000b72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b76:	d107      	bne.n	8000b88 <__aeabi_d2f+0x90>
 8000b78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b7c:	bf1e      	ittt	ne
 8000b7e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b82:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b86:	4770      	bxne	lr
 8000b88:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b8c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b90:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b94:	4770      	bx	lr
 8000b96:	bf00      	nop

08000b98 <__aeabi_frsub>:
 8000b98:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000b9c:	e002      	b.n	8000ba4 <__addsf3>
 8000b9e:	bf00      	nop

08000ba0 <__aeabi_fsub>:
 8000ba0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000ba4 <__addsf3>:
 8000ba4:	0042      	lsls	r2, r0, #1
 8000ba6:	bf1f      	itttt	ne
 8000ba8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bac:	ea92 0f03 	teqne	r2, r3
 8000bb0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bb4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bb8:	d06a      	beq.n	8000c90 <__addsf3+0xec>
 8000bba:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bbe:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bc2:	bfc1      	itttt	gt
 8000bc4:	18d2      	addgt	r2, r2, r3
 8000bc6:	4041      	eorgt	r1, r0
 8000bc8:	4048      	eorgt	r0, r1
 8000bca:	4041      	eorgt	r1, r0
 8000bcc:	bfb8      	it	lt
 8000bce:	425b      	neglt	r3, r3
 8000bd0:	2b19      	cmp	r3, #25
 8000bd2:	bf88      	it	hi
 8000bd4:	4770      	bxhi	lr
 8000bd6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000bda:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bde:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000be2:	bf18      	it	ne
 8000be4:	4240      	negne	r0, r0
 8000be6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bea:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000bee:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000bf2:	bf18      	it	ne
 8000bf4:	4249      	negne	r1, r1
 8000bf6:	ea92 0f03 	teq	r2, r3
 8000bfa:	d03f      	beq.n	8000c7c <__addsf3+0xd8>
 8000bfc:	f1a2 0201 	sub.w	r2, r2, #1
 8000c00:	fa41 fc03 	asr.w	ip, r1, r3
 8000c04:	eb10 000c 	adds.w	r0, r0, ip
 8000c08:	f1c3 0320 	rsb	r3, r3, #32
 8000c0c:	fa01 f103 	lsl.w	r1, r1, r3
 8000c10:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c14:	d502      	bpl.n	8000c1c <__addsf3+0x78>
 8000c16:	4249      	negs	r1, r1
 8000c18:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c1c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c20:	d313      	bcc.n	8000c4a <__addsf3+0xa6>
 8000c22:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c26:	d306      	bcc.n	8000c36 <__addsf3+0x92>
 8000c28:	0840      	lsrs	r0, r0, #1
 8000c2a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c2e:	f102 0201 	add.w	r2, r2, #1
 8000c32:	2afe      	cmp	r2, #254	@ 0xfe
 8000c34:	d251      	bcs.n	8000cda <__addsf3+0x136>
 8000c36:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c3a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c3e:	bf08      	it	eq
 8000c40:	f020 0001 	biceq.w	r0, r0, #1
 8000c44:	ea40 0003 	orr.w	r0, r0, r3
 8000c48:	4770      	bx	lr
 8000c4a:	0049      	lsls	r1, r1, #1
 8000c4c:	eb40 0000 	adc.w	r0, r0, r0
 8000c50:	3a01      	subs	r2, #1
 8000c52:	bf28      	it	cs
 8000c54:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c58:	d2ed      	bcs.n	8000c36 <__addsf3+0x92>
 8000c5a:	fab0 fc80 	clz	ip, r0
 8000c5e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c62:	ebb2 020c 	subs.w	r2, r2, ip
 8000c66:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c6a:	bfaa      	itet	ge
 8000c6c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c70:	4252      	neglt	r2, r2
 8000c72:	4318      	orrge	r0, r3
 8000c74:	bfbc      	itt	lt
 8000c76:	40d0      	lsrlt	r0, r2
 8000c78:	4318      	orrlt	r0, r3
 8000c7a:	4770      	bx	lr
 8000c7c:	f092 0f00 	teq	r2, #0
 8000c80:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000c84:	bf06      	itte	eq
 8000c86:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000c8a:	3201      	addeq	r2, #1
 8000c8c:	3b01      	subne	r3, #1
 8000c8e:	e7b5      	b.n	8000bfc <__addsf3+0x58>
 8000c90:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c94:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c98:	bf18      	it	ne
 8000c9a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c9e:	d021      	beq.n	8000ce4 <__addsf3+0x140>
 8000ca0:	ea92 0f03 	teq	r2, r3
 8000ca4:	d004      	beq.n	8000cb0 <__addsf3+0x10c>
 8000ca6:	f092 0f00 	teq	r2, #0
 8000caa:	bf08      	it	eq
 8000cac:	4608      	moveq	r0, r1
 8000cae:	4770      	bx	lr
 8000cb0:	ea90 0f01 	teq	r0, r1
 8000cb4:	bf1c      	itt	ne
 8000cb6:	2000      	movne	r0, #0
 8000cb8:	4770      	bxne	lr
 8000cba:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000cbe:	d104      	bne.n	8000cca <__addsf3+0x126>
 8000cc0:	0040      	lsls	r0, r0, #1
 8000cc2:	bf28      	it	cs
 8000cc4:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000cc8:	4770      	bx	lr
 8000cca:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000cce:	bf3c      	itt	cc
 8000cd0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000cd4:	4770      	bxcc	lr
 8000cd6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000cda:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cde:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ce2:	4770      	bx	lr
 8000ce4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000ce8:	bf16      	itet	ne
 8000cea:	4608      	movne	r0, r1
 8000cec:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cf0:	4601      	movne	r1, r0
 8000cf2:	0242      	lsls	r2, r0, #9
 8000cf4:	bf06      	itte	eq
 8000cf6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cfa:	ea90 0f01 	teqeq	r0, r1
 8000cfe:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000d02:	4770      	bx	lr

08000d04 <__aeabi_ui2f>:
 8000d04:	f04f 0300 	mov.w	r3, #0
 8000d08:	e004      	b.n	8000d14 <__aeabi_i2f+0x8>
 8000d0a:	bf00      	nop

08000d0c <__aeabi_i2f>:
 8000d0c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d10:	bf48      	it	mi
 8000d12:	4240      	negmi	r0, r0
 8000d14:	ea5f 0c00 	movs.w	ip, r0
 8000d18:	bf08      	it	eq
 8000d1a:	4770      	bxeq	lr
 8000d1c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d20:	4601      	mov	r1, r0
 8000d22:	f04f 0000 	mov.w	r0, #0
 8000d26:	e01c      	b.n	8000d62 <__aeabi_l2f+0x2a>

08000d28 <__aeabi_ul2f>:
 8000d28:	ea50 0201 	orrs.w	r2, r0, r1
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f04f 0300 	mov.w	r3, #0
 8000d34:	e00a      	b.n	8000d4c <__aeabi_l2f+0x14>
 8000d36:	bf00      	nop

08000d38 <__aeabi_l2f>:
 8000d38:	ea50 0201 	orrs.w	r2, r0, r1
 8000d3c:	bf08      	it	eq
 8000d3e:	4770      	bxeq	lr
 8000d40:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d44:	d502      	bpl.n	8000d4c <__aeabi_l2f+0x14>
 8000d46:	4240      	negs	r0, r0
 8000d48:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d4c:	ea5f 0c01 	movs.w	ip, r1
 8000d50:	bf02      	ittt	eq
 8000d52:	4684      	moveq	ip, r0
 8000d54:	4601      	moveq	r1, r0
 8000d56:	2000      	moveq	r0, #0
 8000d58:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d5c:	bf08      	it	eq
 8000d5e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d62:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d66:	fabc f28c 	clz	r2, ip
 8000d6a:	3a08      	subs	r2, #8
 8000d6c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d70:	db10      	blt.n	8000d94 <__aeabi_l2f+0x5c>
 8000d72:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d76:	4463      	add	r3, ip
 8000d78:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d7c:	f1c2 0220 	rsb	r2, r2, #32
 8000d80:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000d84:	fa20 f202 	lsr.w	r2, r0, r2
 8000d88:	eb43 0002 	adc.w	r0, r3, r2
 8000d8c:	bf08      	it	eq
 8000d8e:	f020 0001 	biceq.w	r0, r0, #1
 8000d92:	4770      	bx	lr
 8000d94:	f102 0220 	add.w	r2, r2, #32
 8000d98:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d9c:	f1c2 0220 	rsb	r2, r2, #32
 8000da0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000da4:	fa21 f202 	lsr.w	r2, r1, r2
 8000da8:	eb43 0002 	adc.w	r0, r3, r2
 8000dac:	bf08      	it	eq
 8000dae:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000db2:	4770      	bx	lr

08000db4 <__aeabi_fmul>:
 8000db4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000db8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dbc:	bf1e      	ittt	ne
 8000dbe:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dc2:	ea92 0f0c 	teqne	r2, ip
 8000dc6:	ea93 0f0c 	teqne	r3, ip
 8000dca:	d06f      	beq.n	8000eac <__aeabi_fmul+0xf8>
 8000dcc:	441a      	add	r2, r3
 8000dce:	ea80 0c01 	eor.w	ip, r0, r1
 8000dd2:	0240      	lsls	r0, r0, #9
 8000dd4:	bf18      	it	ne
 8000dd6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dda:	d01e      	beq.n	8000e1a <__aeabi_fmul+0x66>
 8000ddc:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000de0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000de4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000de8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dec:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000df0:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000df4:	bf3e      	ittt	cc
 8000df6:	0049      	lslcc	r1, r1, #1
 8000df8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dfc:	005b      	lslcc	r3, r3, #1
 8000dfe:	ea40 0001 	orr.w	r0, r0, r1
 8000e02:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000e06:	2afd      	cmp	r2, #253	@ 0xfd
 8000e08:	d81d      	bhi.n	8000e46 <__aeabi_fmul+0x92>
 8000e0a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000e0e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e12:	bf08      	it	eq
 8000e14:	f020 0001 	biceq.w	r0, r0, #1
 8000e18:	4770      	bx	lr
 8000e1a:	f090 0f00 	teq	r0, #0
 8000e1e:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000e22:	bf08      	it	eq
 8000e24:	0249      	lsleq	r1, r1, #9
 8000e26:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e2a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e2e:	3a7f      	subs	r2, #127	@ 0x7f
 8000e30:	bfc2      	ittt	gt
 8000e32:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000e36:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e3a:	4770      	bxgt	lr
 8000e3c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e40:	f04f 0300 	mov.w	r3, #0
 8000e44:	3a01      	subs	r2, #1
 8000e46:	dc5d      	bgt.n	8000f04 <__aeabi_fmul+0x150>
 8000e48:	f112 0f19 	cmn.w	r2, #25
 8000e4c:	bfdc      	itt	le
 8000e4e:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000e52:	4770      	bxle	lr
 8000e54:	f1c2 0200 	rsb	r2, r2, #0
 8000e58:	0041      	lsls	r1, r0, #1
 8000e5a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e5e:	f1c2 0220 	rsb	r2, r2, #32
 8000e62:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e66:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e6a:	f140 0000 	adc.w	r0, r0, #0
 8000e6e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e72:	bf08      	it	eq
 8000e74:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e78:	4770      	bx	lr
 8000e7a:	f092 0f00 	teq	r2, #0
 8000e7e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000e82:	bf02      	ittt	eq
 8000e84:	0040      	lsleq	r0, r0, #1
 8000e86:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000e8a:	3a01      	subeq	r2, #1
 8000e8c:	d0f9      	beq.n	8000e82 <__aeabi_fmul+0xce>
 8000e8e:	ea40 000c 	orr.w	r0, r0, ip
 8000e92:	f093 0f00 	teq	r3, #0
 8000e96:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000e9a:	bf02      	ittt	eq
 8000e9c:	0049      	lsleq	r1, r1, #1
 8000e9e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000ea2:	3b01      	subeq	r3, #1
 8000ea4:	d0f9      	beq.n	8000e9a <__aeabi_fmul+0xe6>
 8000ea6:	ea41 010c 	orr.w	r1, r1, ip
 8000eaa:	e78f      	b.n	8000dcc <__aeabi_fmul+0x18>
 8000eac:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000eb0:	ea92 0f0c 	teq	r2, ip
 8000eb4:	bf18      	it	ne
 8000eb6:	ea93 0f0c 	teqne	r3, ip
 8000eba:	d00a      	beq.n	8000ed2 <__aeabi_fmul+0x11e>
 8000ebc:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000ec0:	bf18      	it	ne
 8000ec2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000ec6:	d1d8      	bne.n	8000e7a <__aeabi_fmul+0xc6>
 8000ec8:	ea80 0001 	eor.w	r0, r0, r1
 8000ecc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ed0:	4770      	bx	lr
 8000ed2:	f090 0f00 	teq	r0, #0
 8000ed6:	bf17      	itett	ne
 8000ed8:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000edc:	4608      	moveq	r0, r1
 8000ede:	f091 0f00 	teqne	r1, #0
 8000ee2:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000ee6:	d014      	beq.n	8000f12 <__aeabi_fmul+0x15e>
 8000ee8:	ea92 0f0c 	teq	r2, ip
 8000eec:	d101      	bne.n	8000ef2 <__aeabi_fmul+0x13e>
 8000eee:	0242      	lsls	r2, r0, #9
 8000ef0:	d10f      	bne.n	8000f12 <__aeabi_fmul+0x15e>
 8000ef2:	ea93 0f0c 	teq	r3, ip
 8000ef6:	d103      	bne.n	8000f00 <__aeabi_fmul+0x14c>
 8000ef8:	024b      	lsls	r3, r1, #9
 8000efa:	bf18      	it	ne
 8000efc:	4608      	movne	r0, r1
 8000efe:	d108      	bne.n	8000f12 <__aeabi_fmul+0x15e>
 8000f00:	ea80 0001 	eor.w	r0, r0, r1
 8000f04:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000f08:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000f0c:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f10:	4770      	bx	lr
 8000f12:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000f16:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000f1a:	4770      	bx	lr

08000f1c <__aeabi_fdiv>:
 8000f1c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000f20:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f24:	bf1e      	ittt	ne
 8000f26:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f2a:	ea92 0f0c 	teqne	r2, ip
 8000f2e:	ea93 0f0c 	teqne	r3, ip
 8000f32:	d069      	beq.n	8001008 <__aeabi_fdiv+0xec>
 8000f34:	eba2 0203 	sub.w	r2, r2, r3
 8000f38:	ea80 0c01 	eor.w	ip, r0, r1
 8000f3c:	0249      	lsls	r1, r1, #9
 8000f3e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f42:	d037      	beq.n	8000fb4 <__aeabi_fdiv+0x98>
 8000f44:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000f48:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f4c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f50:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000f54:	428b      	cmp	r3, r1
 8000f56:	bf38      	it	cc
 8000f58:	005b      	lslcc	r3, r3, #1
 8000f5a:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000f5e:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000f62:	428b      	cmp	r3, r1
 8000f64:	bf24      	itt	cs
 8000f66:	1a5b      	subcs	r3, r3, r1
 8000f68:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f6c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f70:	bf24      	itt	cs
 8000f72:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f76:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f7a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f7e:	bf24      	itt	cs
 8000f80:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f84:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f88:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f8c:	bf24      	itt	cs
 8000f8e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f92:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f96:	011b      	lsls	r3, r3, #4
 8000f98:	bf18      	it	ne
 8000f9a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f9e:	d1e0      	bne.n	8000f62 <__aeabi_fdiv+0x46>
 8000fa0:	2afd      	cmp	r2, #253	@ 0xfd
 8000fa2:	f63f af50 	bhi.w	8000e46 <__aeabi_fmul+0x92>
 8000fa6:	428b      	cmp	r3, r1
 8000fa8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000fac:	bf08      	it	eq
 8000fae:	f020 0001 	biceq.w	r0, r0, #1
 8000fb2:	4770      	bx	lr
 8000fb4:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000fb8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fbc:	327f      	adds	r2, #127	@ 0x7f
 8000fbe:	bfc2      	ittt	gt
 8000fc0:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000fc4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fc8:	4770      	bxgt	lr
 8000fca:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000fce:	f04f 0300 	mov.w	r3, #0
 8000fd2:	3a01      	subs	r2, #1
 8000fd4:	e737      	b.n	8000e46 <__aeabi_fmul+0x92>
 8000fd6:	f092 0f00 	teq	r2, #0
 8000fda:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000fde:	bf02      	ittt	eq
 8000fe0:	0040      	lsleq	r0, r0, #1
 8000fe2:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000fe6:	3a01      	subeq	r2, #1
 8000fe8:	d0f9      	beq.n	8000fde <__aeabi_fdiv+0xc2>
 8000fea:	ea40 000c 	orr.w	r0, r0, ip
 8000fee:	f093 0f00 	teq	r3, #0
 8000ff2:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ff6:	bf02      	ittt	eq
 8000ff8:	0049      	lsleq	r1, r1, #1
 8000ffa:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000ffe:	3b01      	subeq	r3, #1
 8001000:	d0f9      	beq.n	8000ff6 <__aeabi_fdiv+0xda>
 8001002:	ea41 010c 	orr.w	r1, r1, ip
 8001006:	e795      	b.n	8000f34 <__aeabi_fdiv+0x18>
 8001008:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800100c:	ea92 0f0c 	teq	r2, ip
 8001010:	d108      	bne.n	8001024 <__aeabi_fdiv+0x108>
 8001012:	0242      	lsls	r2, r0, #9
 8001014:	f47f af7d 	bne.w	8000f12 <__aeabi_fmul+0x15e>
 8001018:	ea93 0f0c 	teq	r3, ip
 800101c:	f47f af70 	bne.w	8000f00 <__aeabi_fmul+0x14c>
 8001020:	4608      	mov	r0, r1
 8001022:	e776      	b.n	8000f12 <__aeabi_fmul+0x15e>
 8001024:	ea93 0f0c 	teq	r3, ip
 8001028:	d104      	bne.n	8001034 <__aeabi_fdiv+0x118>
 800102a:	024b      	lsls	r3, r1, #9
 800102c:	f43f af4c 	beq.w	8000ec8 <__aeabi_fmul+0x114>
 8001030:	4608      	mov	r0, r1
 8001032:	e76e      	b.n	8000f12 <__aeabi_fmul+0x15e>
 8001034:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8001038:	bf18      	it	ne
 800103a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800103e:	d1ca      	bne.n	8000fd6 <__aeabi_fdiv+0xba>
 8001040:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8001044:	f47f af5c 	bne.w	8000f00 <__aeabi_fmul+0x14c>
 8001048:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 800104c:	f47f af3c 	bne.w	8000ec8 <__aeabi_fmul+0x114>
 8001050:	e75f      	b.n	8000f12 <__aeabi_fmul+0x15e>
 8001052:	bf00      	nop

08001054 <__gesf2>:
 8001054:	f04f 3cff 	mov.w	ip, #4294967295
 8001058:	e006      	b.n	8001068 <__cmpsf2+0x4>
 800105a:	bf00      	nop

0800105c <__lesf2>:
 800105c:	f04f 0c01 	mov.w	ip, #1
 8001060:	e002      	b.n	8001068 <__cmpsf2+0x4>
 8001062:	bf00      	nop

08001064 <__cmpsf2>:
 8001064:	f04f 0c01 	mov.w	ip, #1
 8001068:	f84d cd04 	str.w	ip, [sp, #-4]!
 800106c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001070:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001074:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001078:	bf18      	it	ne
 800107a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800107e:	d011      	beq.n	80010a4 <__cmpsf2+0x40>
 8001080:	b001      	add	sp, #4
 8001082:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001086:	bf18      	it	ne
 8001088:	ea90 0f01 	teqne	r0, r1
 800108c:	bf58      	it	pl
 800108e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001092:	bf88      	it	hi
 8001094:	17c8      	asrhi	r0, r1, #31
 8001096:	bf38      	it	cc
 8001098:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800109c:	bf18      	it	ne
 800109e:	f040 0001 	orrne.w	r0, r0, #1
 80010a2:	4770      	bx	lr
 80010a4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80010a8:	d102      	bne.n	80010b0 <__cmpsf2+0x4c>
 80010aa:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80010ae:	d105      	bne.n	80010bc <__cmpsf2+0x58>
 80010b0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010b4:	d1e4      	bne.n	8001080 <__cmpsf2+0x1c>
 80010b6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010ba:	d0e1      	beq.n	8001080 <__cmpsf2+0x1c>
 80010bc:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010c0:	4770      	bx	lr
 80010c2:	bf00      	nop

080010c4 <__aeabi_cfrcmple>:
 80010c4:	4684      	mov	ip, r0
 80010c6:	4608      	mov	r0, r1
 80010c8:	4661      	mov	r1, ip
 80010ca:	e7ff      	b.n	80010cc <__aeabi_cfcmpeq>

080010cc <__aeabi_cfcmpeq>:
 80010cc:	b50f      	push	{r0, r1, r2, r3, lr}
 80010ce:	f7ff ffc9 	bl	8001064 <__cmpsf2>
 80010d2:	2800      	cmp	r0, #0
 80010d4:	bf48      	it	mi
 80010d6:	f110 0f00 	cmnmi.w	r0, #0
 80010da:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010dc <__aeabi_fcmpeq>:
 80010dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010e0:	f7ff fff4 	bl	80010cc <__aeabi_cfcmpeq>
 80010e4:	bf0c      	ite	eq
 80010e6:	2001      	moveq	r0, #1
 80010e8:	2000      	movne	r0, #0
 80010ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80010ee:	bf00      	nop

080010f0 <__aeabi_fcmplt>:
 80010f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f4:	f7ff ffea 	bl	80010cc <__aeabi_cfcmpeq>
 80010f8:	bf34      	ite	cc
 80010fa:	2001      	movcc	r0, #1
 80010fc:	2000      	movcs	r0, #0
 80010fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8001102:	bf00      	nop

08001104 <__aeabi_fcmple>:
 8001104:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001108:	f7ff ffe0 	bl	80010cc <__aeabi_cfcmpeq>
 800110c:	bf94      	ite	ls
 800110e:	2001      	movls	r0, #1
 8001110:	2000      	movhi	r0, #0
 8001112:	f85d fb08 	ldr.w	pc, [sp], #8
 8001116:	bf00      	nop

08001118 <__aeabi_fcmpge>:
 8001118:	f84d ed08 	str.w	lr, [sp, #-8]!
 800111c:	f7ff ffd2 	bl	80010c4 <__aeabi_cfrcmple>
 8001120:	bf94      	ite	ls
 8001122:	2001      	movls	r0, #1
 8001124:	2000      	movhi	r0, #0
 8001126:	f85d fb08 	ldr.w	pc, [sp], #8
 800112a:	bf00      	nop

0800112c <__aeabi_fcmpgt>:
 800112c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001130:	f7ff ffc8 	bl	80010c4 <__aeabi_cfrcmple>
 8001134:	bf34      	ite	cc
 8001136:	2001      	movcc	r0, #1
 8001138:	2000      	movcs	r0, #0
 800113a:	f85d fb08 	ldr.w	pc, [sp], #8
 800113e:	bf00      	nop

08001140 <__aeabi_f2iz>:
 8001140:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001144:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8001148:	d30f      	bcc.n	800116a <__aeabi_f2iz+0x2a>
 800114a:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 800114e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001152:	d90d      	bls.n	8001170 <__aeabi_f2iz+0x30>
 8001154:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001158:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800115c:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8001160:	fa23 f002 	lsr.w	r0, r3, r2
 8001164:	bf18      	it	ne
 8001166:	4240      	negne	r0, r0
 8001168:	4770      	bx	lr
 800116a:	f04f 0000 	mov.w	r0, #0
 800116e:	4770      	bx	lr
 8001170:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8001174:	d101      	bne.n	800117a <__aeabi_f2iz+0x3a>
 8001176:	0242      	lsls	r2, r0, #9
 8001178:	d105      	bne.n	8001186 <__aeabi_f2iz+0x46>
 800117a:	f010 4000 	ands.w	r0, r0, #2147483648	@ 0x80000000
 800117e:	bf08      	it	eq
 8001180:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8001184:	4770      	bx	lr
 8001186:	f04f 0000 	mov.w	r0, #0
 800118a:	4770      	bx	lr

0800118c <__aeabi_f2uiz>:
 800118c:	0042      	lsls	r2, r0, #1
 800118e:	d20e      	bcs.n	80011ae <__aeabi_f2uiz+0x22>
 8001190:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8001194:	d30b      	bcc.n	80011ae <__aeabi_f2uiz+0x22>
 8001196:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 800119a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800119e:	d409      	bmi.n	80011b4 <__aeabi_f2uiz+0x28>
 80011a0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80011a4:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80011a8:	fa23 f002 	lsr.w	r0, r3, r2
 80011ac:	4770      	bx	lr
 80011ae:	f04f 0000 	mov.w	r0, #0
 80011b2:	4770      	bx	lr
 80011b4:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 80011b8:	d101      	bne.n	80011be <__aeabi_f2uiz+0x32>
 80011ba:	0242      	lsls	r2, r0, #9
 80011bc:	d102      	bne.n	80011c4 <__aeabi_f2uiz+0x38>
 80011be:	f04f 30ff 	mov.w	r0, #4294967295
 80011c2:	4770      	bx	lr
 80011c4:	f04f 0000 	mov.w	r0, #0
 80011c8:	4770      	bx	lr
 80011ca:	bf00      	nop

080011cc <__aeabi_uldivmod>:
 80011cc:	b953      	cbnz	r3, 80011e4 <__aeabi_uldivmod+0x18>
 80011ce:	b94a      	cbnz	r2, 80011e4 <__aeabi_uldivmod+0x18>
 80011d0:	2900      	cmp	r1, #0
 80011d2:	bf08      	it	eq
 80011d4:	2800      	cmpeq	r0, #0
 80011d6:	bf1c      	itt	ne
 80011d8:	f04f 31ff 	movne.w	r1, #4294967295
 80011dc:	f04f 30ff 	movne.w	r0, #4294967295
 80011e0:	f000 b99e 	b.w	8001520 <__aeabi_idiv0>
 80011e4:	f1ad 0c08 	sub.w	ip, sp, #8
 80011e8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80011ec:	f000 f83c 	bl	8001268 <__udivmoddi4>
 80011f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80011f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80011f8:	b004      	add	sp, #16
 80011fa:	4770      	bx	lr

080011fc <__aeabi_d2lz>:
 80011fc:	b538      	push	{r3, r4, r5, lr}
 80011fe:	2200      	movs	r2, #0
 8001200:	2300      	movs	r3, #0
 8001202:	4604      	mov	r4, r0
 8001204:	460d      	mov	r5, r1
 8001206:	f7ff fbf1 	bl	80009ec <__aeabi_dcmplt>
 800120a:	b928      	cbnz	r0, 8001218 <__aeabi_d2lz+0x1c>
 800120c:	4620      	mov	r0, r4
 800120e:	4629      	mov	r1, r5
 8001210:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001214:	f000 b80a 	b.w	800122c <__aeabi_d2ulz>
 8001218:	4620      	mov	r0, r4
 800121a:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 800121e:	f000 f805 	bl	800122c <__aeabi_d2ulz>
 8001222:	4240      	negs	r0, r0
 8001224:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8001228:	bd38      	pop	{r3, r4, r5, pc}
 800122a:	bf00      	nop

0800122c <__aeabi_d2ulz>:
 800122c:	b5d0      	push	{r4, r6, r7, lr}
 800122e:	2200      	movs	r2, #0
 8001230:	4b0b      	ldr	r3, [pc, #44]	@ (8001260 <__aeabi_d2ulz+0x34>)
 8001232:	4606      	mov	r6, r0
 8001234:	460f      	mov	r7, r1
 8001236:	f7ff f967 	bl	8000508 <__aeabi_dmul>
 800123a:	f7ff fc3d 	bl	8000ab8 <__aeabi_d2uiz>
 800123e:	4604      	mov	r4, r0
 8001240:	f7ff f8e8 	bl	8000414 <__aeabi_ui2d>
 8001244:	2200      	movs	r2, #0
 8001246:	4b07      	ldr	r3, [pc, #28]	@ (8001264 <__aeabi_d2ulz+0x38>)
 8001248:	f7ff f95e 	bl	8000508 <__aeabi_dmul>
 800124c:	4602      	mov	r2, r0
 800124e:	460b      	mov	r3, r1
 8001250:	4630      	mov	r0, r6
 8001252:	4639      	mov	r1, r7
 8001254:	f7fe ffa0 	bl	8000198 <__aeabi_dsub>
 8001258:	f7ff fc2e 	bl	8000ab8 <__aeabi_d2uiz>
 800125c:	4621      	mov	r1, r4
 800125e:	bdd0      	pop	{r4, r6, r7, pc}
 8001260:	3df00000 	.word	0x3df00000
 8001264:	41f00000 	.word	0x41f00000

08001268 <__udivmoddi4>:
 8001268:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800126c:	9d08      	ldr	r5, [sp, #32]
 800126e:	460c      	mov	r4, r1
 8001270:	2b00      	cmp	r3, #0
 8001272:	d14e      	bne.n	8001312 <__udivmoddi4+0xaa>
 8001274:	4694      	mov	ip, r2
 8001276:	458c      	cmp	ip, r1
 8001278:	4686      	mov	lr, r0
 800127a:	fab2 f282 	clz	r2, r2
 800127e:	d962      	bls.n	8001346 <__udivmoddi4+0xde>
 8001280:	b14a      	cbz	r2, 8001296 <__udivmoddi4+0x2e>
 8001282:	f1c2 0320 	rsb	r3, r2, #32
 8001286:	4091      	lsls	r1, r2
 8001288:	fa20 f303 	lsr.w	r3, r0, r3
 800128c:	fa0c fc02 	lsl.w	ip, ip, r2
 8001290:	4319      	orrs	r1, r3
 8001292:	fa00 fe02 	lsl.w	lr, r0, r2
 8001296:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800129a:	fbb1 f4f7 	udiv	r4, r1, r7
 800129e:	fb07 1114 	mls	r1, r7, r4, r1
 80012a2:	fa1f f68c 	uxth.w	r6, ip
 80012a6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80012aa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80012ae:	fb04 f106 	mul.w	r1, r4, r6
 80012b2:	4299      	cmp	r1, r3
 80012b4:	d90a      	bls.n	80012cc <__udivmoddi4+0x64>
 80012b6:	eb1c 0303 	adds.w	r3, ip, r3
 80012ba:	f104 30ff 	add.w	r0, r4, #4294967295
 80012be:	f080 8110 	bcs.w	80014e2 <__udivmoddi4+0x27a>
 80012c2:	4299      	cmp	r1, r3
 80012c4:	f240 810d 	bls.w	80014e2 <__udivmoddi4+0x27a>
 80012c8:	3c02      	subs	r4, #2
 80012ca:	4463      	add	r3, ip
 80012cc:	1a59      	subs	r1, r3, r1
 80012ce:	fbb1 f0f7 	udiv	r0, r1, r7
 80012d2:	fb07 1110 	mls	r1, r7, r0, r1
 80012d6:	fb00 f606 	mul.w	r6, r0, r6
 80012da:	fa1f f38e 	uxth.w	r3, lr
 80012de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80012e2:	429e      	cmp	r6, r3
 80012e4:	d90a      	bls.n	80012fc <__udivmoddi4+0x94>
 80012e6:	eb1c 0303 	adds.w	r3, ip, r3
 80012ea:	f100 31ff 	add.w	r1, r0, #4294967295
 80012ee:	f080 80fa 	bcs.w	80014e6 <__udivmoddi4+0x27e>
 80012f2:	429e      	cmp	r6, r3
 80012f4:	f240 80f7 	bls.w	80014e6 <__udivmoddi4+0x27e>
 80012f8:	4463      	add	r3, ip
 80012fa:	3802      	subs	r0, #2
 80012fc:	2100      	movs	r1, #0
 80012fe:	1b9b      	subs	r3, r3, r6
 8001300:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8001304:	b11d      	cbz	r5, 800130e <__udivmoddi4+0xa6>
 8001306:	40d3      	lsrs	r3, r2
 8001308:	2200      	movs	r2, #0
 800130a:	e9c5 3200 	strd	r3, r2, [r5]
 800130e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001312:	428b      	cmp	r3, r1
 8001314:	d905      	bls.n	8001322 <__udivmoddi4+0xba>
 8001316:	b10d      	cbz	r5, 800131c <__udivmoddi4+0xb4>
 8001318:	e9c5 0100 	strd	r0, r1, [r5]
 800131c:	2100      	movs	r1, #0
 800131e:	4608      	mov	r0, r1
 8001320:	e7f5      	b.n	800130e <__udivmoddi4+0xa6>
 8001322:	fab3 f183 	clz	r1, r3
 8001326:	2900      	cmp	r1, #0
 8001328:	d146      	bne.n	80013b8 <__udivmoddi4+0x150>
 800132a:	42a3      	cmp	r3, r4
 800132c:	d302      	bcc.n	8001334 <__udivmoddi4+0xcc>
 800132e:	4290      	cmp	r0, r2
 8001330:	f0c0 80ee 	bcc.w	8001510 <__udivmoddi4+0x2a8>
 8001334:	1a86      	subs	r6, r0, r2
 8001336:	eb64 0303 	sbc.w	r3, r4, r3
 800133a:	2001      	movs	r0, #1
 800133c:	2d00      	cmp	r5, #0
 800133e:	d0e6      	beq.n	800130e <__udivmoddi4+0xa6>
 8001340:	e9c5 6300 	strd	r6, r3, [r5]
 8001344:	e7e3      	b.n	800130e <__udivmoddi4+0xa6>
 8001346:	2a00      	cmp	r2, #0
 8001348:	f040 808f 	bne.w	800146a <__udivmoddi4+0x202>
 800134c:	eba1 040c 	sub.w	r4, r1, ip
 8001350:	2101      	movs	r1, #1
 8001352:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8001356:	fa1f f78c 	uxth.w	r7, ip
 800135a:	fbb4 f6f8 	udiv	r6, r4, r8
 800135e:	fb08 4416 	mls	r4, r8, r6, r4
 8001362:	fb07 f006 	mul.w	r0, r7, r6
 8001366:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800136a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800136e:	4298      	cmp	r0, r3
 8001370:	d908      	bls.n	8001384 <__udivmoddi4+0x11c>
 8001372:	eb1c 0303 	adds.w	r3, ip, r3
 8001376:	f106 34ff 	add.w	r4, r6, #4294967295
 800137a:	d202      	bcs.n	8001382 <__udivmoddi4+0x11a>
 800137c:	4298      	cmp	r0, r3
 800137e:	f200 80cb 	bhi.w	8001518 <__udivmoddi4+0x2b0>
 8001382:	4626      	mov	r6, r4
 8001384:	1a1c      	subs	r4, r3, r0
 8001386:	fbb4 f0f8 	udiv	r0, r4, r8
 800138a:	fb08 4410 	mls	r4, r8, r0, r4
 800138e:	fb00 f707 	mul.w	r7, r0, r7
 8001392:	fa1f f38e 	uxth.w	r3, lr
 8001396:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800139a:	429f      	cmp	r7, r3
 800139c:	d908      	bls.n	80013b0 <__udivmoddi4+0x148>
 800139e:	eb1c 0303 	adds.w	r3, ip, r3
 80013a2:	f100 34ff 	add.w	r4, r0, #4294967295
 80013a6:	d202      	bcs.n	80013ae <__udivmoddi4+0x146>
 80013a8:	429f      	cmp	r7, r3
 80013aa:	f200 80ae 	bhi.w	800150a <__udivmoddi4+0x2a2>
 80013ae:	4620      	mov	r0, r4
 80013b0:	1bdb      	subs	r3, r3, r7
 80013b2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80013b6:	e7a5      	b.n	8001304 <__udivmoddi4+0x9c>
 80013b8:	f1c1 0720 	rsb	r7, r1, #32
 80013bc:	408b      	lsls	r3, r1
 80013be:	fa22 fc07 	lsr.w	ip, r2, r7
 80013c2:	ea4c 0c03 	orr.w	ip, ip, r3
 80013c6:	fa24 f607 	lsr.w	r6, r4, r7
 80013ca:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80013ce:	fbb6 f8f9 	udiv	r8, r6, r9
 80013d2:	fa1f fe8c 	uxth.w	lr, ip
 80013d6:	fb09 6618 	mls	r6, r9, r8, r6
 80013da:	fa20 f307 	lsr.w	r3, r0, r7
 80013de:	408c      	lsls	r4, r1
 80013e0:	fa00 fa01 	lsl.w	sl, r0, r1
 80013e4:	fb08 f00e 	mul.w	r0, r8, lr
 80013e8:	431c      	orrs	r4, r3
 80013ea:	0c23      	lsrs	r3, r4, #16
 80013ec:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 80013f0:	4298      	cmp	r0, r3
 80013f2:	fa02 f201 	lsl.w	r2, r2, r1
 80013f6:	d90a      	bls.n	800140e <__udivmoddi4+0x1a6>
 80013f8:	eb1c 0303 	adds.w	r3, ip, r3
 80013fc:	f108 36ff 	add.w	r6, r8, #4294967295
 8001400:	f080 8081 	bcs.w	8001506 <__udivmoddi4+0x29e>
 8001404:	4298      	cmp	r0, r3
 8001406:	d97e      	bls.n	8001506 <__udivmoddi4+0x29e>
 8001408:	f1a8 0802 	sub.w	r8, r8, #2
 800140c:	4463      	add	r3, ip
 800140e:	1a1e      	subs	r6, r3, r0
 8001410:	fbb6 f3f9 	udiv	r3, r6, r9
 8001414:	fb09 6613 	mls	r6, r9, r3, r6
 8001418:	fb03 fe0e 	mul.w	lr, r3, lr
 800141c:	b2a4      	uxth	r4, r4
 800141e:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8001422:	45a6      	cmp	lr, r4
 8001424:	d908      	bls.n	8001438 <__udivmoddi4+0x1d0>
 8001426:	eb1c 0404 	adds.w	r4, ip, r4
 800142a:	f103 30ff 	add.w	r0, r3, #4294967295
 800142e:	d266      	bcs.n	80014fe <__udivmoddi4+0x296>
 8001430:	45a6      	cmp	lr, r4
 8001432:	d964      	bls.n	80014fe <__udivmoddi4+0x296>
 8001434:	3b02      	subs	r3, #2
 8001436:	4464      	add	r4, ip
 8001438:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 800143c:	fba0 8302 	umull	r8, r3, r0, r2
 8001440:	eba4 040e 	sub.w	r4, r4, lr
 8001444:	429c      	cmp	r4, r3
 8001446:	46c6      	mov	lr, r8
 8001448:	461e      	mov	r6, r3
 800144a:	d350      	bcc.n	80014ee <__udivmoddi4+0x286>
 800144c:	d04d      	beq.n	80014ea <__udivmoddi4+0x282>
 800144e:	b155      	cbz	r5, 8001466 <__udivmoddi4+0x1fe>
 8001450:	ebba 030e 	subs.w	r3, sl, lr
 8001454:	eb64 0406 	sbc.w	r4, r4, r6
 8001458:	fa04 f707 	lsl.w	r7, r4, r7
 800145c:	40cb      	lsrs	r3, r1
 800145e:	431f      	orrs	r7, r3
 8001460:	40cc      	lsrs	r4, r1
 8001462:	e9c5 7400 	strd	r7, r4, [r5]
 8001466:	2100      	movs	r1, #0
 8001468:	e751      	b.n	800130e <__udivmoddi4+0xa6>
 800146a:	fa0c fc02 	lsl.w	ip, ip, r2
 800146e:	f1c2 0320 	rsb	r3, r2, #32
 8001472:	40d9      	lsrs	r1, r3
 8001474:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8001478:	fa20 f303 	lsr.w	r3, r0, r3
 800147c:	fa00 fe02 	lsl.w	lr, r0, r2
 8001480:	fbb1 f0f8 	udiv	r0, r1, r8
 8001484:	fb08 1110 	mls	r1, r8, r0, r1
 8001488:	4094      	lsls	r4, r2
 800148a:	431c      	orrs	r4, r3
 800148c:	fa1f f78c 	uxth.w	r7, ip
 8001490:	0c23      	lsrs	r3, r4, #16
 8001492:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001496:	fb00 f107 	mul.w	r1, r0, r7
 800149a:	4299      	cmp	r1, r3
 800149c:	d908      	bls.n	80014b0 <__udivmoddi4+0x248>
 800149e:	eb1c 0303 	adds.w	r3, ip, r3
 80014a2:	f100 36ff 	add.w	r6, r0, #4294967295
 80014a6:	d22c      	bcs.n	8001502 <__udivmoddi4+0x29a>
 80014a8:	4299      	cmp	r1, r3
 80014aa:	d92a      	bls.n	8001502 <__udivmoddi4+0x29a>
 80014ac:	3802      	subs	r0, #2
 80014ae:	4463      	add	r3, ip
 80014b0:	1a5b      	subs	r3, r3, r1
 80014b2:	fbb3 f1f8 	udiv	r1, r3, r8
 80014b6:	fb08 3311 	mls	r3, r8, r1, r3
 80014ba:	b2a4      	uxth	r4, r4
 80014bc:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80014c0:	fb01 f307 	mul.w	r3, r1, r7
 80014c4:	42a3      	cmp	r3, r4
 80014c6:	d908      	bls.n	80014da <__udivmoddi4+0x272>
 80014c8:	eb1c 0404 	adds.w	r4, ip, r4
 80014cc:	f101 36ff 	add.w	r6, r1, #4294967295
 80014d0:	d213      	bcs.n	80014fa <__udivmoddi4+0x292>
 80014d2:	42a3      	cmp	r3, r4
 80014d4:	d911      	bls.n	80014fa <__udivmoddi4+0x292>
 80014d6:	3902      	subs	r1, #2
 80014d8:	4464      	add	r4, ip
 80014da:	1ae4      	subs	r4, r4, r3
 80014dc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80014e0:	e73b      	b.n	800135a <__udivmoddi4+0xf2>
 80014e2:	4604      	mov	r4, r0
 80014e4:	e6f2      	b.n	80012cc <__udivmoddi4+0x64>
 80014e6:	4608      	mov	r0, r1
 80014e8:	e708      	b.n	80012fc <__udivmoddi4+0x94>
 80014ea:	45c2      	cmp	sl, r8
 80014ec:	d2af      	bcs.n	800144e <__udivmoddi4+0x1e6>
 80014ee:	ebb8 0e02 	subs.w	lr, r8, r2
 80014f2:	eb63 060c 	sbc.w	r6, r3, ip
 80014f6:	3801      	subs	r0, #1
 80014f8:	e7a9      	b.n	800144e <__udivmoddi4+0x1e6>
 80014fa:	4631      	mov	r1, r6
 80014fc:	e7ed      	b.n	80014da <__udivmoddi4+0x272>
 80014fe:	4603      	mov	r3, r0
 8001500:	e79a      	b.n	8001438 <__udivmoddi4+0x1d0>
 8001502:	4630      	mov	r0, r6
 8001504:	e7d4      	b.n	80014b0 <__udivmoddi4+0x248>
 8001506:	46b0      	mov	r8, r6
 8001508:	e781      	b.n	800140e <__udivmoddi4+0x1a6>
 800150a:	4463      	add	r3, ip
 800150c:	3802      	subs	r0, #2
 800150e:	e74f      	b.n	80013b0 <__udivmoddi4+0x148>
 8001510:	4606      	mov	r6, r0
 8001512:	4623      	mov	r3, r4
 8001514:	4608      	mov	r0, r1
 8001516:	e711      	b.n	800133c <__udivmoddi4+0xd4>
 8001518:	3e02      	subs	r6, #2
 800151a:	4463      	add	r3, ip
 800151c:	e732      	b.n	8001384 <__udivmoddi4+0x11c>
 800151e:	bf00      	nop

08001520 <__aeabi_idiv0>:
 8001520:	4770      	bx	lr
 8001522:	bf00      	nop

08001524 <MX_BlueNRG_MS_Init>:
  PRINT_CSV("%02ld:%02ld:%02ld.%03ld", (long)(ms/(60*60*1000)%24), (long)(ms/(60*1000)%60), (long)((ms/1000)%60), (long)(ms%1000));
}
#endif

void MX_BlueNRG_MS_Init(void)
{
 8001524:	b5b0      	push	{r4, r5, r7, lr}
 8001526:	b08a      	sub	sp, #40	@ 0x28
 8001528:	af04      	add	r7, sp, #16
  /* USER CODE BEGIN BlueNRG_MS_Init_PreTreatment */

  /* USER CODE END BlueNRG_MS_Init_PreTreatment */

  /* Initialize the peripherals and the BLE Stack */
  const char *name = "BlueNRG";
 800152a:	4b4e      	ldr	r3, [pc, #312]	@ (8001664 <MX_BlueNRG_MS_Init+0x140>)
 800152c:	617b      	str	r3, [r7, #20]
  uint8_t  bdaddr_len_out;
  uint8_t  hwVersion;
  uint16_t fwVersion;
  int ret;

  User_Init();
 800152e:	f000 f8ad 	bl	800168c <User_Init>

  /* Get the User Button initial state */
  user_button_init_state = BSP_PB_GetState(BUTTON_KEY);
 8001532:	2000      	movs	r0, #0
 8001534:	f002 ff6a 	bl	800440c <BSP_PB_GetState>
 8001538:	4603      	mov	r3, r0
 800153a:	b2da      	uxtb	r2, r3
 800153c:	4b4a      	ldr	r3, [pc, #296]	@ (8001668 <MX_BlueNRG_MS_Init+0x144>)
 800153e:	701a      	strb	r2, [r3, #0]

  hci_init(user_notify, NULL);
 8001540:	2100      	movs	r1, #0
 8001542:	484a      	ldr	r0, [pc, #296]	@ (800166c <MX_BlueNRG_MS_Init+0x148>)
 8001544:	f007 fb80 	bl	8008c48 <hci_init>

  /* get the BlueNRG HW and FW versions */
  getBlueNRGVersion(&hwVersion, &fwVersion);
 8001548:	1dba      	adds	r2, r7, #6
 800154a:	f107 0308 	add.w	r3, r7, #8
 800154e:	4611      	mov	r1, r2
 8001550:	4618      	mov	r0, r3
 8001552:	f007 f9ef 	bl	8008934 <getBlueNRGVersion>
   * Reset BlueNRG again otherwise we won't
   * be able to change its MAC address.
   * aci_hal_write_config_data() must be the first
   * command after reset otherwise it will fail.
   */
  hci_reset();
 8001556:	f007 fa31 	bl	80089bc <hci_reset>
  HAL_Delay(100);
 800155a:	2064      	movs	r0, #100	@ 0x64
 800155c:	f003 f8ee 	bl	800473c <HAL_Delay>

  PRINTF("HWver %d\nFWver %d\n", hwVersion, fwVersion);
  if (hwVersion > 0x30) { /* X-NUCLEO-IDB05A1 expansion board is used */
 8001560:	7a3b      	ldrb	r3, [r7, #8]
 8001562:	2b30      	cmp	r3, #48	@ 0x30
 8001564:	d902      	bls.n	800156c <MX_BlueNRG_MS_Init+0x48>
    bnrg_expansion_board = IDB05A1;
 8001566:	4b42      	ldr	r3, [pc, #264]	@ (8001670 <MX_BlueNRG_MS_Init+0x14c>)
 8001568:	2201      	movs	r2, #1
 800156a:	701a      	strb	r2, [r3, #0]
  }

  ret = aci_hal_read_config_data(CONFIG_DATA_RANDOM_ADDRESS, BDADDR_SIZE, &bdaddr_len_out, bdaddr);
 800156c:	f107 0209 	add.w	r2, r7, #9
 8001570:	4b40      	ldr	r3, [pc, #256]	@ (8001674 <MX_BlueNRG_MS_Init+0x150>)
 8001572:	2106      	movs	r1, #6
 8001574:	2080      	movs	r0, #128	@ 0x80
 8001576:	f007 f957 	bl	8008828 <aci_hal_read_config_data>
 800157a:	4603      	mov	r3, r0
 800157c:	613b      	str	r3, [r7, #16]

  if (ret) {
    PRINTF("Read Static Random address failed.\n");
  }

  if ((bdaddr[5] & 0xC0) != 0xC0) {
 800157e:	4b3d      	ldr	r3, [pc, #244]	@ (8001674 <MX_BlueNRG_MS_Init+0x150>)
 8001580:	795b      	ldrb	r3, [r3, #5]
 8001582:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 8001586:	2bc0      	cmp	r3, #192	@ 0xc0
 8001588:	d001      	beq.n	800158e <MX_BlueNRG_MS_Init+0x6a>
    PRINTF("Static Random address not well formed.\n");
    while(1);
 800158a:	bf00      	nop
 800158c:	e7fd      	b.n	800158a <MX_BlueNRG_MS_Init+0x66>
  }

  /* GATT Init */
  ret = aci_gatt_init();
 800158e:	f006 ff17 	bl	80083c0 <aci_gatt_init>
 8001592:	4603      	mov	r3, r0
 8001594:	613b      	str	r3, [r7, #16]
  if(ret){
    PRINTF("GATT_Init failed.\n");
  }

  /* GAP Init */
  if (bnrg_expansion_board == IDB05A1) {
 8001596:	4b36      	ldr	r3, [pc, #216]	@ (8001670 <MX_BlueNRG_MS_Init+0x14c>)
 8001598:	781b      	ldrb	r3, [r3, #0]
 800159a:	2b01      	cmp	r3, #1
 800159c:	d110      	bne.n	80015c0 <MX_BlueNRG_MS_Init+0x9c>
    ret = aci_gap_init_IDB05A1(GAP_PERIPHERAL_ROLE_IDB05A1, 0, 0x07, &service_handle, &dev_name_char_handle, &appearance_char_handle);
 800159e:	f107 020e 	add.w	r2, r7, #14
 80015a2:	f107 030a 	add.w	r3, r7, #10
 80015a6:	9301      	str	r3, [sp, #4]
 80015a8:	f107 030c 	add.w	r3, r7, #12
 80015ac:	9300      	str	r3, [sp, #0]
 80015ae:	4613      	mov	r3, r2
 80015b0:	2207      	movs	r2, #7
 80015b2:	2100      	movs	r1, #0
 80015b4:	2001      	movs	r0, #1
 80015b6:	f006 fcd7 	bl	8007f68 <aci_gap_init_IDB05A1>
 80015ba:	4603      	mov	r3, r0
 80015bc:	613b      	str	r3, [r7, #16]
 80015be:	e00a      	b.n	80015d6 <MX_BlueNRG_MS_Init+0xb2>
  }
  else {
    ret = aci_gap_init_IDB04A1(GAP_PERIPHERAL_ROLE_IDB04A1, &service_handle, &dev_name_char_handle, &appearance_char_handle);
 80015c0:	f107 030a 	add.w	r3, r7, #10
 80015c4:	f107 020c 	add.w	r2, r7, #12
 80015c8:	f107 010e 	add.w	r1, r7, #14
 80015cc:	2001      	movs	r0, #1
 80015ce:	f006 fd1b 	bl	8008008 <aci_gap_init_IDB04A1>
 80015d2:	4603      	mov	r3, r0
 80015d4:	613b      	str	r3, [r7, #16]
  if (ret != BLE_STATUS_SUCCESS) {
    PRINTF("GAP_Init failed.\n");
  }

  /* Update device name */
  ret = aci_gatt_update_char_value(service_handle, dev_name_char_handle, 0,
 80015d6:	89fc      	ldrh	r4, [r7, #14]
 80015d8:	89bd      	ldrh	r5, [r7, #12]
                                   strlen(name), (uint8_t *)name);
 80015da:	6978      	ldr	r0, [r7, #20]
 80015dc:	f7fe fdd0 	bl	8000180 <strlen>
 80015e0:	4603      	mov	r3, r0
  ret = aci_gatt_update_char_value(service_handle, dev_name_char_handle, 0,
 80015e2:	b2da      	uxtb	r2, r3
 80015e4:	697b      	ldr	r3, [r7, #20]
 80015e6:	9300      	str	r3, [sp, #0]
 80015e8:	4613      	mov	r3, r2
 80015ea:	2200      	movs	r2, #0
 80015ec:	4629      	mov	r1, r5
 80015ee:	4620      	mov	r0, r4
 80015f0:	f007 f85d 	bl	80086ae <aci_gatt_update_char_value>
 80015f4:	4603      	mov	r3, r0
 80015f6:	613b      	str	r3, [r7, #16]
  if (ret) {
 80015f8:	693b      	ldr	r3, [r7, #16]
 80015fa:	2b00      	cmp	r3, #0
 80015fc:	d001      	beq.n	8001602 <MX_BlueNRG_MS_Init+0xde>
    PRINTF("aci_gatt_update_char_value failed.\n");
    while(1);
 80015fe:	bf00      	nop
 8001600:	e7fd      	b.n	80015fe <MX_BlueNRG_MS_Init+0xda>
  }

  ret = aci_gap_set_auth_requirement(MITM_PROTECTION_REQUIRED,
 8001602:	2301      	movs	r3, #1
 8001604:	9303      	str	r3, [sp, #12]
 8001606:	4b1c      	ldr	r3, [pc, #112]	@ (8001678 <MX_BlueNRG_MS_Init+0x154>)
 8001608:	9302      	str	r3, [sp, #8]
 800160a:	2300      	movs	r3, #0
 800160c:	9301      	str	r3, [sp, #4]
 800160e:	2310      	movs	r3, #16
 8001610:	9300      	str	r3, [sp, #0]
 8001612:	2307      	movs	r3, #7
 8001614:	2200      	movs	r2, #0
 8001616:	2100      	movs	r1, #0
 8001618:	2001      	movs	r0, #1
 800161a:	f006 fe29 	bl	8008270 <aci_gap_set_auth_requirement>
 800161e:	4603      	mov	r3, r0
 8001620:	613b      	str	r3, [r7, #16]
                                     7,
                                     16,
                                     USE_FIXED_PIN_FOR_PAIRING,
                                     123456,
                                     BONDING);
  if (ret) {
 8001622:	693b      	ldr	r3, [r7, #16]
 8001624:	2b00      	cmp	r3, #0
 8001626:	d001      	beq.n	800162c <MX_BlueNRG_MS_Init+0x108>
    PRINTF("aci_gap_set_authentication_requirement failed.\n");
    while(1);
 8001628:	bf00      	nop
 800162a:	e7fd      	b.n	8001628 <MX_BlueNRG_MS_Init+0x104>
  }

  PRINTF("BLE Stack Initialized\n");

  ret = Add_HWServW2ST_Service();
 800162c:	f001 fa38 	bl	8002aa0 <Add_HWServW2ST_Service>
 8001630:	4603      	mov	r3, r0
 8001632:	613b      	str	r3, [r7, #16]
  if(ret == BLE_STATUS_SUCCESS) {
 8001634:	693b      	ldr	r3, [r7, #16]
 8001636:	2b00      	cmp	r3, #0
 8001638:	d001      	beq.n	800163e <MX_BlueNRG_MS_Init+0x11a>
    PRINTF("BlueMS HW service added successfully.\n");
  } else {
    PRINTF("Error while adding BlueMS HW service: 0x%02x\r\n", ret);
    while(1);
 800163a:	bf00      	nop
 800163c:	e7fd      	b.n	800163a <MX_BlueNRG_MS_Init+0x116>
  }

  ret = Add_SWServW2ST_Service();
 800163e:	f001 fb01 	bl	8002c44 <Add_SWServW2ST_Service>
 8001642:	4603      	mov	r3, r0
 8001644:	613b      	str	r3, [r7, #16]
  if(ret == BLE_STATUS_SUCCESS) {
 8001646:	693b      	ldr	r3, [r7, #16]
 8001648:	2b00      	cmp	r3, #0
 800164a:	d001      	beq.n	8001650 <MX_BlueNRG_MS_Init+0x12c>
     PRINTF("BlueMS SW service added successfully.\n");
  } else {
     PRINTF("Error while adding BlueMS HW service: 0x%02x\r\n", ret);
     while(1);
 800164c:	bf00      	nop
 800164e:	e7fd      	b.n	800164c <MX_BlueNRG_MS_Init+0x128>
  }

  /* Set output power level */
  ret = aci_hal_set_tx_power_level(1,4);
 8001650:	2104      	movs	r1, #4
 8001652:	2001      	movs	r0, #1
 8001654:	f007 f93d 	bl	80088d2 <aci_hal_set_tx_power_level>
 8001658:	4603      	mov	r3, r0
 800165a:	613b      	str	r3, [r7, #16]

  /* USER CODE BEGIN BlueNRG_MS_Init_PostTreatment */

  /* USER CODE END BlueNRG_MS_Init_PostTreatment */
}
 800165c:	bf00      	nop
 800165e:	3718      	adds	r7, #24
 8001660:	46bd      	mov	sp, r7
 8001662:	bdb0      	pop	{r4, r5, r7, pc}
 8001664:	0800db18 	.word	0x0800db18
 8001668:	20000000 	.word	0x20000000
 800166c:	08003209 	.word	0x08003209
 8001670:	2000020c 	.word	0x2000020c
 8001674:	20000210 	.word	0x20000210
 8001678:	0001e240 	.word	0x0001e240

0800167c <MX_BlueNRG_MS_Process>:

/*
 * BlueNRG-MS background task
 */
void MX_BlueNRG_MS_Process(void)
{
 800167c:	b580      	push	{r7, lr}
 800167e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BlueNRG_MS_Process_PreTreatment */

  /* USER CODE END BlueNRG_MS_Process_PreTreatment */

  User_Process();
 8001680:	f000 f812 	bl	80016a8 <User_Process>
  hci_user_evt_proc();
 8001684:	f007 fc5a 	bl	8008f3c <hci_user_evt_proc>

  /* USER CODE BEGIN BlueNRG_MS_Process_PostTreatment */

  /* USER CODE END BlueNRG_MS_Process_PostTreatment */
}
 8001688:	bf00      	nop
 800168a:	bd80      	pop	{r7, pc}

0800168c <User_Init>:
 *
 * @param  None
 * @retval None
 */
static void User_Init(void)
{
 800168c:	b580      	push	{r7, lr}
 800168e:	af00      	add	r7, sp, #0
  BSP_PB_Init(BUTTON_KEY, BUTTON_MODE_EXTI);
 8001690:	2101      	movs	r1, #1
 8001692:	2000      	movs	r0, #0
 8001694:	f002 fe66 	bl	8004364 <BSP_PB_Init>
  BSP_LED_Init(LED2);
 8001698:	2000      	movs	r0, #0
 800169a:	f002 fdfd 	bl	8004298 <BSP_LED_Init>

  BSP_COM_Init(COM1);
 800169e:	2000      	movs	r0, #0
 80016a0:	f002 ff12 	bl	80044c8 <BSP_COM_Init>
}
 80016a4:	bf00      	nop
 80016a6:	bd80      	pop	{r7, pc}

080016a8 <User_Process>:
 *
 * @param  None
 * @retval None
 */
static void User_Process(void)
{
 80016a8:	b580      	push	{r7, lr}
 80016aa:	b082      	sub	sp, #8
 80016ac:	af00      	add	r7, sp, #0
  float data_t;
  float data_p;
  static uint32_t counter = 0;

  if (set_connectable)
 80016ae:	4b2c      	ldr	r3, [pc, #176]	@ (8001760 <User_Process+0xb8>)
 80016b0:	781b      	ldrb	r3, [r3, #0]
 80016b2:	b2db      	uxtb	r3, r3
 80016b4:	2b00      	cmp	r3, #0
 80016b6:	d004      	beq.n	80016c2 <User_Process+0x1a>
  {
    Set_DeviceConnectable();
 80016b8:	f001 fd32 	bl	8003120 <Set_DeviceConnectable>
    set_connectable = FALSE;
 80016bc:	4b28      	ldr	r3, [pc, #160]	@ (8001760 <User_Process+0xb8>)
 80016be:	2200      	movs	r2, #0
 80016c0:	701a      	strb	r2, [r3, #0]
    while (BSP_PB_GetState(BUTTON_KEY) == !user_button_init_state);

    /* Debouncing */
    HAL_Delay(50);
#endif
    BSP_LED_Toggle(LED2);
 80016c2:	2000      	movs	r0, #0
 80016c4:	f002 fdfa 	bl	80042bc <BSP_LED_Toggle>

    if (connected)
 80016c8:	4b26      	ldr	r3, [pc, #152]	@ (8001764 <User_Process+0xbc>)
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	2b00      	cmp	r3, #0
 80016ce:	d042      	beq.n	8001756 <User_Process+0xae>
    {
      /* Set a random seed */
      srand(HAL_GetTick());
 80016d0:	f003 f82a 	bl	8004728 <HAL_GetTick>
 80016d4:	4603      	mov	r3, r0
 80016d6:	4618      	mov	r0, r3
 80016d8:	f007 fdba 	bl	8009250 <srand>

      /* Update emulated Environmental data */
      //Set_Random_Environmental_Values(&data_t, &data_p);
      int32_t pressure = (int16_t)luxVal*100;
 80016dc:	4b22      	ldr	r3, [pc, #136]	@ (8001768 <User_Process+0xc0>)
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	4618      	mov	r0, r3
 80016e2:	f7ff fd2d 	bl	8001140 <__aeabi_f2iz>
 80016e6:	4603      	mov	r3, r0
 80016e8:	b21b      	sxth	r3, r3
 80016ea:	461a      	mov	r2, r3
 80016ec:	2364      	movs	r3, #100	@ 0x64
 80016ee:	fb02 f303 	mul.w	r3, r2, r3
 80016f2:	607b      	str	r3, [r7, #4]
      int16_t temp_int = (int16_t)(temperature);
 80016f4:	4b1d      	ldr	r3, [pc, #116]	@ (800176c <User_Process+0xc4>)
 80016f6:	681b      	ldr	r3, [r3, #0]
 80016f8:	4618      	mov	r0, r3
 80016fa:	f7ff fd21 	bl	8001140 <__aeabi_f2iz>
 80016fe:	4603      	mov	r3, r0
 8001700:	807b      	strh	r3, [r7, #2]
      BlueMS_Environmental_Update(pressure, temperature);
 8001702:	4b1a      	ldr	r3, [pc, #104]	@ (800176c <User_Process+0xc4>)
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	4618      	mov	r0, r3
 8001708:	f7ff fd1a 	bl	8001140 <__aeabi_f2iz>
 800170c:	4603      	mov	r3, r0
 800170e:	b21b      	sxth	r3, r3
 8001710:	4619      	mov	r1, r3
 8001712:	6878      	ldr	r0, [r7, #4]
 8001714:	f001 fcbe 	bl	8003094 <BlueMS_Environmental_Update>

      /* Update emulated Acceleration, Gyroscope and Sensor Fusion data */
      Set_Random_Motion_Values(counter);
 8001718:	4b15      	ldr	r3, [pc, #84]	@ (8001770 <User_Process+0xc8>)
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	4618      	mov	r0, r3
 800171e:	f000 f831 	bl	8001784 <Set_Random_Motion_Values>
      Acc_Update(&x_axes, &g_axes, &m_axes);
 8001722:	4a14      	ldr	r2, [pc, #80]	@ (8001774 <User_Process+0xcc>)
 8001724:	4914      	ldr	r1, [pc, #80]	@ (8001778 <User_Process+0xd0>)
 8001726:	4815      	ldr	r0, [pc, #84]	@ (800177c <User_Process+0xd4>)
 8001728:	f001 fb1c 	bl	8002d64 <Acc_Update>
      Quat_Update(&q_axes);
 800172c:	4814      	ldr	r0, [pc, #80]	@ (8001780 <User_Process+0xd8>)
 800172e:	f001 fba3 	bl	8002e78 <Quat_Update>

      counter ++;
 8001732:	4b0f      	ldr	r3, [pc, #60]	@ (8001770 <User_Process+0xc8>)
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	3301      	adds	r3, #1
 8001738:	4a0d      	ldr	r2, [pc, #52]	@ (8001770 <User_Process+0xc8>)
 800173a:	6013      	str	r3, [r2, #0]
      if (counter == 40) {
 800173c:	4b0c      	ldr	r3, [pc, #48]	@ (8001770 <User_Process+0xc8>)
 800173e:	681b      	ldr	r3, [r3, #0]
 8001740:	2b28      	cmp	r3, #40	@ 0x28
 8001742:	d104      	bne.n	800174e <User_Process+0xa6>
        counter = 0;
 8001744:	4b0a      	ldr	r3, [pc, #40]	@ (8001770 <User_Process+0xc8>)
 8001746:	2200      	movs	r2, #0
 8001748:	601a      	str	r2, [r3, #0]
        Reset_Motion_Values();
 800174a:	f001 f8b1 	bl	80028b0 <Reset_Motion_Values>
      }
#if !USE_BUTTON
      HAL_Delay(1000); /* wait 1 sec before sending new data */
 800174e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001752:	f002 fff3 	bl	800473c <HAL_Delay>
#if USE_BUTTON
    /* Reset the User Button flag */
    user_button_pressed = 0;
  }
#endif
}
 8001756:	bf00      	nop
 8001758:	3708      	adds	r7, #8
 800175a:	46bd      	mov	sp, r7
 800175c:	bd80      	pop	{r7, pc}
 800175e:	bf00      	nop
 8001760:	20000001 	.word	0x20000001
 8001764:	2000024c 	.word	0x2000024c
 8001768:	20000388 	.word	0x20000388
 800176c:	20000004 	.word	0x20000004
 8001770:	20000218 	.word	0x20000218
 8001774:	20000268 	.word	0x20000268
 8001778:	2000025c 	.word	0x2000025c
 800177c:	20000250 	.word	0x20000250
 8001780:	20000274 	.word	0x20000274

08001784 <Set_Random_Motion_Values>:
 * @brief  Set random values for all motion sensor data
 * @param  uint32_t counter for changing the rotation direction
 * @retval None
 */
static void Set_Random_Motion_Values(uint32_t cnt)
{
 8001784:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001788:	f5ad 7d7a 	sub.w	sp, sp, #1000	@ 0x3e8
 800178c:	af00      	add	r7, sp, #0
 800178e:	f8c7 03e4 	str.w	r0, [r7, #996]	@ 0x3e4
  /* Update Acceleration, Gyroscope and Sensor Fusion data */
  if (cnt < 20) {
 8001792:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001796:	2b13      	cmp	r3, #19
 8001798:	f200 843a 	bhi.w	8002010 <Set_Random_Motion_Values+0x88c>
    x_axes.AXIS_X +=  (10  + ((uint64_t)rand()*3*cnt)/RAND_MAX);
 800179c:	f007 fd86 	bl	80092ac <rand>
 80017a0:	4603      	mov	r3, r0
 80017a2:	17da      	asrs	r2, r3, #31
 80017a4:	f8c7 3328 	str.w	r3, [r7, #808]	@ 0x328
 80017a8:	f8c7 232c 	str.w	r2, [r7, #812]	@ 0x32c
 80017ac:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 80017b0:	2200      	movs	r2, #0
 80017b2:	f8c7 3320 	str.w	r3, [r7, #800]	@ 0x320
 80017b6:	f8c7 2324 	str.w	r2, [r7, #804]	@ 0x324
 80017ba:	e9d7 34ca 	ldrd	r3, r4, [r7, #808]	@ 0x328
 80017be:	4622      	mov	r2, r4
 80017c0:	e9d7 abc8 	ldrd	sl, fp, [r7, #800]	@ 0x320
 80017c4:	4651      	mov	r1, sl
 80017c6:	fb01 f202 	mul.w	r2, r1, r2
 80017ca:	465d      	mov	r5, fp
 80017cc:	4618      	mov	r0, r3
 80017ce:	4621      	mov	r1, r4
 80017d0:	4603      	mov	r3, r0
 80017d2:	fb03 f305 	mul.w	r3, r3, r5
 80017d6:	4413      	add	r3, r2
 80017d8:	4602      	mov	r2, r0
 80017da:	4651      	mov	r1, sl
 80017dc:	fba2 8901 	umull	r8, r9, r2, r1
 80017e0:	444b      	add	r3, r9
 80017e2:	4699      	mov	r9, r3
 80017e4:	4642      	mov	r2, r8
 80017e6:	464b      	mov	r3, r9
 80017e8:	1891      	adds	r1, r2, r2
 80017ea:	66b9      	str	r1, [r7, #104]	@ 0x68
 80017ec:	415b      	adcs	r3, r3
 80017ee:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80017f0:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 80017f4:	eb12 0108 	adds.w	r1, r2, r8
 80017f8:	f8c7 1318 	str.w	r1, [r7, #792]	@ 0x318
 80017fc:	eb43 0309 	adc.w	r3, r3, r9
 8001800:	f8c7 331c 	str.w	r3, [r7, #796]	@ 0x31c
 8001804:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001808:	f04f 0300 	mov.w	r3, #0
 800180c:	e9d7 01c6 	ldrd	r0, r1, [r7, #792]	@ 0x318
 8001810:	f7ff fcdc 	bl	80011cc <__aeabi_uldivmod>
 8001814:	4602      	mov	r2, r0
 8001816:	460b      	mov	r3, r1
 8001818:	f112 010a 	adds.w	r1, r2, #10
 800181c:	f8c7 10c8 	str.w	r1, [r7, #200]	@ 0xc8
 8001820:	f143 0300 	adc.w	r3, r3, #0
 8001824:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8001828:	4bd9      	ldr	r3, [pc, #868]	@ (8001b90 <Set_Random_Motion_Values+0x40c>)
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	461a      	mov	r2, r3
 800182e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8001832:	4413      	add	r3, r2
 8001834:	461a      	mov	r2, r3
 8001836:	4bd6      	ldr	r3, [pc, #856]	@ (8001b90 <Set_Random_Motion_Values+0x40c>)
 8001838:	601a      	str	r2, [r3, #0]
    x_axes.AXIS_Y += -(10  + ((uint64_t)rand()*5*cnt)/RAND_MAX);
 800183a:	f007 fd37 	bl	80092ac <rand>
 800183e:	4603      	mov	r3, r0
 8001840:	17da      	asrs	r2, r3, #31
 8001842:	f8c7 3310 	str.w	r3, [r7, #784]	@ 0x310
 8001846:	f8c7 2314 	str.w	r2, [r7, #788]	@ 0x314
 800184a:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 800184e:	2200      	movs	r2, #0
 8001850:	f8c7 3308 	str.w	r3, [r7, #776]	@ 0x308
 8001854:	f8c7 230c 	str.w	r2, [r7, #780]	@ 0x30c
 8001858:	e9d7 34c4 	ldrd	r3, r4, [r7, #784]	@ 0x310
 800185c:	4622      	mov	r2, r4
 800185e:	e9d7 89c2 	ldrd	r8, r9, [r7, #776]	@ 0x308
 8001862:	4641      	mov	r1, r8
 8001864:	fb01 f202 	mul.w	r2, r1, r2
 8001868:	464d      	mov	r5, r9
 800186a:	4618      	mov	r0, r3
 800186c:	4621      	mov	r1, r4
 800186e:	4603      	mov	r3, r0
 8001870:	fb03 f305 	mul.w	r3, r3, r5
 8001874:	4413      	add	r3, r2
 8001876:	4602      	mov	r2, r0
 8001878:	4641      	mov	r1, r8
 800187a:	fba2 2101 	umull	r2, r1, r2, r1
 800187e:	f8c7 13dc 	str.w	r1, [r7, #988]	@ 0x3dc
 8001882:	f8c7 23d8 	str.w	r2, [r7, #984]	@ 0x3d8
 8001886:	f8d7 23dc 	ldr.w	r2, [r7, #988]	@ 0x3dc
 800188a:	4413      	add	r3, r2
 800188c:	f8c7 33dc 	str.w	r3, [r7, #988]	@ 0x3dc
 8001890:	e9d7 45f6 	ldrd	r4, r5, [r7, #984]	@ 0x3d8
 8001894:	4622      	mov	r2, r4
 8001896:	462b      	mov	r3, r5
 8001898:	f04f 0000 	mov.w	r0, #0
 800189c:	f04f 0100 	mov.w	r1, #0
 80018a0:	0099      	lsls	r1, r3, #2
 80018a2:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 80018a6:	0090      	lsls	r0, r2, #2
 80018a8:	4602      	mov	r2, r0
 80018aa:	460b      	mov	r3, r1
 80018ac:	4621      	mov	r1, r4
 80018ae:	1851      	adds	r1, r2, r1
 80018b0:	f8c7 1300 	str.w	r1, [r7, #768]	@ 0x300
 80018b4:	4629      	mov	r1, r5
 80018b6:	eb43 0101 	adc.w	r1, r3, r1
 80018ba:	f8c7 1304 	str.w	r1, [r7, #772]	@ 0x304
 80018be:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 80018c2:	f04f 0300 	mov.w	r3, #0
 80018c6:	e9d7 01c0 	ldrd	r0, r1, [r7, #768]	@ 0x300
 80018ca:	f7ff fc7f 	bl	80011cc <__aeabi_uldivmod>
 80018ce:	4602      	mov	r2, r0
 80018d0:	460b      	mov	r3, r1
 80018d2:	f06f 0009 	mvn.w	r0, #9
 80018d6:	f04f 31ff 	mov.w	r1, #4294967295
 80018da:	1a80      	subs	r0, r0, r2
 80018dc:	f8c7 00c0 	str.w	r0, [r7, #192]	@ 0xc0
 80018e0:	eb61 0303 	sbc.w	r3, r1, r3
 80018e4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80018e8:	4ba9      	ldr	r3, [pc, #676]	@ (8001b90 <Set_Random_Motion_Values+0x40c>)
 80018ea:	685b      	ldr	r3, [r3, #4]
 80018ec:	461a      	mov	r2, r3
 80018ee:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80018f2:	4413      	add	r3, r2
 80018f4:	461a      	mov	r2, r3
 80018f6:	4ba6      	ldr	r3, [pc, #664]	@ (8001b90 <Set_Random_Motion_Values+0x40c>)
 80018f8:	605a      	str	r2, [r3, #4]
    x_axes.AXIS_Z +=  (10  + ((uint64_t)rand()*7*cnt)/RAND_MAX);
 80018fa:	f007 fcd7 	bl	80092ac <rand>
 80018fe:	4603      	mov	r3, r0
 8001900:	17da      	asrs	r2, r3, #31
 8001902:	f8c7 32f8 	str.w	r3, [r7, #760]	@ 0x2f8
 8001906:	f8c7 22fc 	str.w	r2, [r7, #764]	@ 0x2fc
 800190a:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 800190e:	2200      	movs	r2, #0
 8001910:	f8c7 32f0 	str.w	r3, [r7, #752]	@ 0x2f0
 8001914:	f8c7 22f4 	str.w	r2, [r7, #756]	@ 0x2f4
 8001918:	e9d7 34be 	ldrd	r3, r4, [r7, #760]	@ 0x2f8
 800191c:	4622      	mov	r2, r4
 800191e:	e9d7 89bc 	ldrd	r8, r9, [r7, #752]	@ 0x2f0
 8001922:	4641      	mov	r1, r8
 8001924:	fb01 f202 	mul.w	r2, r1, r2
 8001928:	464d      	mov	r5, r9
 800192a:	4618      	mov	r0, r3
 800192c:	4621      	mov	r1, r4
 800192e:	4603      	mov	r3, r0
 8001930:	fb03 f305 	mul.w	r3, r3, r5
 8001934:	4413      	add	r3, r2
 8001936:	4602      	mov	r2, r0
 8001938:	4641      	mov	r1, r8
 800193a:	fba2 2101 	umull	r2, r1, r2, r1
 800193e:	f8c7 13d4 	str.w	r1, [r7, #980]	@ 0x3d4
 8001942:	f8c7 23d0 	str.w	r2, [r7, #976]	@ 0x3d0
 8001946:	f8d7 23d4 	ldr.w	r2, [r7, #980]	@ 0x3d4
 800194a:	4413      	add	r3, r2
 800194c:	f8c7 33d4 	str.w	r3, [r7, #980]	@ 0x3d4
 8001950:	e9d7 45f4 	ldrd	r4, r5, [r7, #976]	@ 0x3d0
 8001954:	4622      	mov	r2, r4
 8001956:	462b      	mov	r3, r5
 8001958:	f04f 0000 	mov.w	r0, #0
 800195c:	f04f 0100 	mov.w	r1, #0
 8001960:	00d9      	lsls	r1, r3, #3
 8001962:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8001966:	00d0      	lsls	r0, r2, #3
 8001968:	4602      	mov	r2, r0
 800196a:	460b      	mov	r3, r1
 800196c:	4620      	mov	r0, r4
 800196e:	4629      	mov	r1, r5
 8001970:	4604      	mov	r4, r0
 8001972:	1b14      	subs	r4, r2, r4
 8001974:	f8c7 42e8 	str.w	r4, [r7, #744]	@ 0x2e8
 8001978:	eb63 0301 	sbc.w	r3, r3, r1
 800197c:	f8c7 32ec 	str.w	r3, [r7, #748]	@ 0x2ec
 8001980:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001984:	f04f 0300 	mov.w	r3, #0
 8001988:	e9d7 01ba 	ldrd	r0, r1, [r7, #744]	@ 0x2e8
 800198c:	f7ff fc1e 	bl	80011cc <__aeabi_uldivmod>
 8001990:	4602      	mov	r2, r0
 8001992:	460b      	mov	r3, r1
 8001994:	f112 010a 	adds.w	r1, r2, #10
 8001998:	f8c7 10b8 	str.w	r1, [r7, #184]	@ 0xb8
 800199c:	f143 0300 	adc.w	r3, r3, #0
 80019a0:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 80019a4:	4b7a      	ldr	r3, [pc, #488]	@ (8001b90 <Set_Random_Motion_Values+0x40c>)
 80019a6:	689b      	ldr	r3, [r3, #8]
 80019a8:	461a      	mov	r2, r3
 80019aa:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80019ae:	4413      	add	r3, r2
 80019b0:	461a      	mov	r2, r3
 80019b2:	4b77      	ldr	r3, [pc, #476]	@ (8001b90 <Set_Random_Motion_Values+0x40c>)
 80019b4:	609a      	str	r2, [r3, #8]
    g_axes.AXIS_X +=  (100 + ((uint64_t)rand()*2*cnt)/RAND_MAX);
 80019b6:	f007 fc79 	bl	80092ac <rand>
 80019ba:	4603      	mov	r3, r0
 80019bc:	17da      	asrs	r2, r3, #31
 80019be:	f8c7 32e0 	str.w	r3, [r7, #736]	@ 0x2e0
 80019c2:	f8c7 22e4 	str.w	r2, [r7, #740]	@ 0x2e4
 80019c6:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 80019ca:	2200      	movs	r2, #0
 80019cc:	f8c7 32d8 	str.w	r3, [r7, #728]	@ 0x2d8
 80019d0:	f8c7 22dc 	str.w	r2, [r7, #732]	@ 0x2dc
 80019d4:	e9d7 34b8 	ldrd	r3, r4, [r7, #736]	@ 0x2e0
 80019d8:	4622      	mov	r2, r4
 80019da:	e9d7 89b6 	ldrd	r8, r9, [r7, #728]	@ 0x2d8
 80019de:	4641      	mov	r1, r8
 80019e0:	fb01 f202 	mul.w	r2, r1, r2
 80019e4:	464d      	mov	r5, r9
 80019e6:	4618      	mov	r0, r3
 80019e8:	4621      	mov	r1, r4
 80019ea:	4603      	mov	r3, r0
 80019ec:	fb03 f305 	mul.w	r3, r3, r5
 80019f0:	4413      	add	r3, r2
 80019f2:	4602      	mov	r2, r0
 80019f4:	4641      	mov	r1, r8
 80019f6:	fba2 2101 	umull	r2, r1, r2, r1
 80019fa:	f8c7 13cc 	str.w	r1, [r7, #972]	@ 0x3cc
 80019fe:	f8c7 23c8 	str.w	r2, [r7, #968]	@ 0x3c8
 8001a02:	f8d7 23cc 	ldr.w	r2, [r7, #972]	@ 0x3cc
 8001a06:	4413      	add	r3, r2
 8001a08:	f8c7 33cc 	str.w	r3, [r7, #972]	@ 0x3cc
 8001a0c:	e9d7 12f2 	ldrd	r1, r2, [r7, #968]	@ 0x3c8
 8001a10:	460b      	mov	r3, r1
 8001a12:	18db      	adds	r3, r3, r3
 8001a14:	663b      	str	r3, [r7, #96]	@ 0x60
 8001a16:	4613      	mov	r3, r2
 8001a18:	eb42 0303 	adc.w	r3, r2, r3
 8001a1c:	667b      	str	r3, [r7, #100]	@ 0x64
 8001a1e:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8001a22:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001a26:	f04f 0300 	mov.w	r3, #0
 8001a2a:	f7ff fbcf 	bl	80011cc <__aeabi_uldivmod>
 8001a2e:	4602      	mov	r2, r0
 8001a30:	460b      	mov	r3, r1
 8001a32:	f112 0164 	adds.w	r1, r2, #100	@ 0x64
 8001a36:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8001a3a:	f143 0300 	adc.w	r3, r3, #0
 8001a3e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8001a42:	4b54      	ldr	r3, [pc, #336]	@ (8001b94 <Set_Random_Motion_Values+0x410>)
 8001a44:	681b      	ldr	r3, [r3, #0]
 8001a46:	461a      	mov	r2, r3
 8001a48:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8001a4c:	4413      	add	r3, r2
 8001a4e:	461a      	mov	r2, r3
 8001a50:	4b50      	ldr	r3, [pc, #320]	@ (8001b94 <Set_Random_Motion_Values+0x410>)
 8001a52:	601a      	str	r2, [r3, #0]
    g_axes.AXIS_Y += -(100 + ((uint64_t)rand()*4*cnt)/RAND_MAX);
 8001a54:	f007 fc2a 	bl	80092ac <rand>
 8001a58:	4603      	mov	r3, r0
 8001a5a:	17da      	asrs	r2, r3, #31
 8001a5c:	f8c7 32d0 	str.w	r3, [r7, #720]	@ 0x2d0
 8001a60:	f8c7 22d4 	str.w	r2, [r7, #724]	@ 0x2d4
 8001a64:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001a68:	2200      	movs	r2, #0
 8001a6a:	f8c7 32c8 	str.w	r3, [r7, #712]	@ 0x2c8
 8001a6e:	f8c7 22cc 	str.w	r2, [r7, #716]	@ 0x2cc
 8001a72:	e9d7 34b4 	ldrd	r3, r4, [r7, #720]	@ 0x2d0
 8001a76:	4622      	mov	r2, r4
 8001a78:	e9d7 89b2 	ldrd	r8, r9, [r7, #712]	@ 0x2c8
 8001a7c:	4641      	mov	r1, r8
 8001a7e:	fb01 f202 	mul.w	r2, r1, r2
 8001a82:	464d      	mov	r5, r9
 8001a84:	4618      	mov	r0, r3
 8001a86:	4621      	mov	r1, r4
 8001a88:	4603      	mov	r3, r0
 8001a8a:	fb03 f305 	mul.w	r3, r3, r5
 8001a8e:	4413      	add	r3, r2
 8001a90:	4602      	mov	r2, r0
 8001a92:	4641      	mov	r1, r8
 8001a94:	fba2 2101 	umull	r2, r1, r2, r1
 8001a98:	f8c7 13c4 	str.w	r1, [r7, #964]	@ 0x3c4
 8001a9c:	f8c7 23c0 	str.w	r2, [r7, #960]	@ 0x3c0
 8001aa0:	f8d7 23c4 	ldr.w	r2, [r7, #964]	@ 0x3c4
 8001aa4:	4413      	add	r3, r2
 8001aa6:	f8c7 33c4 	str.w	r3, [r7, #964]	@ 0x3c4
 8001aaa:	f04f 0000 	mov.w	r0, #0
 8001aae:	f04f 0100 	mov.w	r1, #0
 8001ab2:	e9d7 45f0 	ldrd	r4, r5, [r7, #960]	@ 0x3c0
 8001ab6:	462b      	mov	r3, r5
 8001ab8:	0099      	lsls	r1, r3, #2
 8001aba:	4622      	mov	r2, r4
 8001abc:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8001ac0:	4623      	mov	r3, r4
 8001ac2:	0098      	lsls	r0, r3, #2
 8001ac4:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001ac8:	f04f 0300 	mov.w	r3, #0
 8001acc:	f7ff fb7e 	bl	80011cc <__aeabi_uldivmod>
 8001ad0:	4602      	mov	r2, r0
 8001ad2:	460b      	mov	r3, r1
 8001ad4:	f06f 0063 	mvn.w	r0, #99	@ 0x63
 8001ad8:	f04f 31ff 	mov.w	r1, #4294967295
 8001adc:	1a80      	subs	r0, r0, r2
 8001ade:	f8c7 00a8 	str.w	r0, [r7, #168]	@ 0xa8
 8001ae2:	eb61 0303 	sbc.w	r3, r1, r3
 8001ae6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8001aea:	4b2a      	ldr	r3, [pc, #168]	@ (8001b94 <Set_Random_Motion_Values+0x410>)
 8001aec:	685b      	ldr	r3, [r3, #4]
 8001aee:	461a      	mov	r2, r3
 8001af0:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8001af4:	4413      	add	r3, r2
 8001af6:	461a      	mov	r2, r3
 8001af8:	4b26      	ldr	r3, [pc, #152]	@ (8001b94 <Set_Random_Motion_Values+0x410>)
 8001afa:	605a      	str	r2, [r3, #4]
    g_axes.AXIS_Z +=  (100 + ((uint64_t)rand()*6*cnt)/RAND_MAX);
 8001afc:	f007 fbd6 	bl	80092ac <rand>
 8001b00:	4603      	mov	r3, r0
 8001b02:	17da      	asrs	r2, r3, #31
 8001b04:	f8c7 32c0 	str.w	r3, [r7, #704]	@ 0x2c0
 8001b08:	f8c7 22c4 	str.w	r2, [r7, #708]	@ 0x2c4
 8001b0c:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001b10:	2200      	movs	r2, #0
 8001b12:	f8c7 32b8 	str.w	r3, [r7, #696]	@ 0x2b8
 8001b16:	f8c7 22bc 	str.w	r2, [r7, #700]	@ 0x2bc
 8001b1a:	e9d7 34b0 	ldrd	r3, r4, [r7, #704]	@ 0x2c0
 8001b1e:	4622      	mov	r2, r4
 8001b20:	e9d7 89ae 	ldrd	r8, r9, [r7, #696]	@ 0x2b8
 8001b24:	4641      	mov	r1, r8
 8001b26:	fb01 f202 	mul.w	r2, r1, r2
 8001b2a:	464d      	mov	r5, r9
 8001b2c:	4618      	mov	r0, r3
 8001b2e:	4621      	mov	r1, r4
 8001b30:	4603      	mov	r3, r0
 8001b32:	fb03 f305 	mul.w	r3, r3, r5
 8001b36:	4413      	add	r3, r2
 8001b38:	4602      	mov	r2, r0
 8001b3a:	4641      	mov	r1, r8
 8001b3c:	fba2 2101 	umull	r2, r1, r2, r1
 8001b40:	f8c7 13bc 	str.w	r1, [r7, #956]	@ 0x3bc
 8001b44:	f8c7 23b8 	str.w	r2, [r7, #952]	@ 0x3b8
 8001b48:	f8d7 23bc 	ldr.w	r2, [r7, #956]	@ 0x3bc
 8001b4c:	4413      	add	r3, r2
 8001b4e:	f8c7 33bc 	str.w	r3, [r7, #956]	@ 0x3bc
 8001b52:	e9d7 45ee 	ldrd	r4, r5, [r7, #952]	@ 0x3b8
 8001b56:	4622      	mov	r2, r4
 8001b58:	462b      	mov	r3, r5
 8001b5a:	1891      	adds	r1, r2, r2
 8001b5c:	65b9      	str	r1, [r7, #88]	@ 0x58
 8001b5e:	415b      	adcs	r3, r3
 8001b60:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8001b62:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8001b66:	4621      	mov	r1, r4
 8001b68:	1851      	adds	r1, r2, r1
 8001b6a:	6539      	str	r1, [r7, #80]	@ 0x50
 8001b6c:	4629      	mov	r1, r5
 8001b6e:	eb43 0101 	adc.w	r1, r3, r1
 8001b72:	6579      	str	r1, [r7, #84]	@ 0x54
 8001b74:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 8001b78:	460b      	mov	r3, r1
 8001b7a:	18db      	adds	r3, r3, r3
 8001b7c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001b7e:	4613      	mov	r3, r2
 8001b80:	eb42 0303 	adc.w	r3, r2, r3
 8001b84:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001b86:	e9d7 3412 	ldrd	r3, r4, [r7, #72]	@ 0x48
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	e004      	b.n	8001b98 <Set_Random_Motion_Values+0x414>
 8001b8e:	bf00      	nop
 8001b90:	20000250 	.word	0x20000250
 8001b94:	2000025c 	.word	0x2000025c
 8001b98:	4621      	mov	r1, r4
 8001b9a:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001b9e:	f04f 0300 	mov.w	r3, #0
 8001ba2:	f7ff fb13 	bl	80011cc <__aeabi_uldivmod>
 8001ba6:	4602      	mov	r2, r0
 8001ba8:	460b      	mov	r3, r1
 8001baa:	f112 0164 	adds.w	r1, r2, #100	@ 0x64
 8001bae:	f8c7 10a0 	str.w	r1, [r7, #160]	@ 0xa0
 8001bb2:	f143 0300 	adc.w	r3, r3, #0
 8001bb6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8001bba:	4bdb      	ldr	r3, [pc, #876]	@ (8001f28 <Set_Random_Motion_Values+0x7a4>)
 8001bbc:	689b      	ldr	r3, [r3, #8]
 8001bbe:	461a      	mov	r2, r3
 8001bc0:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8001bc4:	4413      	add	r3, r2
 8001bc6:	461a      	mov	r2, r3
 8001bc8:	4bd7      	ldr	r3, [pc, #860]	@ (8001f28 <Set_Random_Motion_Values+0x7a4>)
 8001bca:	609a      	str	r2, [r3, #8]
    m_axes.AXIS_X +=  (3  + ((uint64_t)rand()*3*cnt)/RAND_MAX);
 8001bcc:	f007 fb6e 	bl	80092ac <rand>
 8001bd0:	4603      	mov	r3, r0
 8001bd2:	17da      	asrs	r2, r3, #31
 8001bd4:	f8c7 32b0 	str.w	r3, [r7, #688]	@ 0x2b0
 8001bd8:	f8c7 22b4 	str.w	r2, [r7, #692]	@ 0x2b4
 8001bdc:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001be0:	2200      	movs	r2, #0
 8001be2:	f8c7 32a8 	str.w	r3, [r7, #680]	@ 0x2a8
 8001be6:	f8c7 22ac 	str.w	r2, [r7, #684]	@ 0x2ac
 8001bea:	e9d7 34ac 	ldrd	r3, r4, [r7, #688]	@ 0x2b0
 8001bee:	4622      	mov	r2, r4
 8001bf0:	e9d7 89aa 	ldrd	r8, r9, [r7, #680]	@ 0x2a8
 8001bf4:	4641      	mov	r1, r8
 8001bf6:	fb01 f202 	mul.w	r2, r1, r2
 8001bfa:	464d      	mov	r5, r9
 8001bfc:	4618      	mov	r0, r3
 8001bfe:	4621      	mov	r1, r4
 8001c00:	4603      	mov	r3, r0
 8001c02:	fb03 f305 	mul.w	r3, r3, r5
 8001c06:	4413      	add	r3, r2
 8001c08:	4602      	mov	r2, r0
 8001c0a:	4641      	mov	r1, r8
 8001c0c:	fba2 2101 	umull	r2, r1, r2, r1
 8001c10:	f8c7 13b4 	str.w	r1, [r7, #948]	@ 0x3b4
 8001c14:	f8c7 23b0 	str.w	r2, [r7, #944]	@ 0x3b0
 8001c18:	f8d7 23b4 	ldr.w	r2, [r7, #948]	@ 0x3b4
 8001c1c:	4413      	add	r3, r2
 8001c1e:	f8c7 33b4 	str.w	r3, [r7, #948]	@ 0x3b4
 8001c22:	e9d7 45ec 	ldrd	r4, r5, [r7, #944]	@ 0x3b0
 8001c26:	4622      	mov	r2, r4
 8001c28:	462b      	mov	r3, r5
 8001c2a:	1891      	adds	r1, r2, r2
 8001c2c:	6439      	str	r1, [r7, #64]	@ 0x40
 8001c2e:	415b      	adcs	r3, r3
 8001c30:	647b      	str	r3, [r7, #68]	@ 0x44
 8001c32:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8001c36:	4621      	mov	r1, r4
 8001c38:	1851      	adds	r1, r2, r1
 8001c3a:	f8c7 12a0 	str.w	r1, [r7, #672]	@ 0x2a0
 8001c3e:	4629      	mov	r1, r5
 8001c40:	eb43 0101 	adc.w	r1, r3, r1
 8001c44:	f8c7 12a4 	str.w	r1, [r7, #676]	@ 0x2a4
 8001c48:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001c4c:	f04f 0300 	mov.w	r3, #0
 8001c50:	e9d7 01a8 	ldrd	r0, r1, [r7, #672]	@ 0x2a0
 8001c54:	f7ff faba 	bl	80011cc <__aeabi_uldivmod>
 8001c58:	4602      	mov	r2, r0
 8001c5a:	460b      	mov	r3, r1
 8001c5c:	1cd1      	adds	r1, r2, #3
 8001c5e:	f8c7 1098 	str.w	r1, [r7, #152]	@ 0x98
 8001c62:	f143 0300 	adc.w	r3, r3, #0
 8001c66:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8001c6a:	4bb0      	ldr	r3, [pc, #704]	@ (8001f2c <Set_Random_Motion_Values+0x7a8>)
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	461a      	mov	r2, r3
 8001c70:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8001c74:	4413      	add	r3, r2
 8001c76:	461a      	mov	r2, r3
 8001c78:	4bac      	ldr	r3, [pc, #688]	@ (8001f2c <Set_Random_Motion_Values+0x7a8>)
 8001c7a:	601a      	str	r2, [r3, #0]
    m_axes.AXIS_Y += -(3  + ((uint64_t)rand()*4*cnt)/RAND_MAX);
 8001c7c:	f007 fb16 	bl	80092ac <rand>
 8001c80:	4603      	mov	r3, r0
 8001c82:	17da      	asrs	r2, r3, #31
 8001c84:	f8c7 3298 	str.w	r3, [r7, #664]	@ 0x298
 8001c88:	f8c7 229c 	str.w	r2, [r7, #668]	@ 0x29c
 8001c8c:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001c90:	2200      	movs	r2, #0
 8001c92:	f8c7 3290 	str.w	r3, [r7, #656]	@ 0x290
 8001c96:	f8c7 2294 	str.w	r2, [r7, #660]	@ 0x294
 8001c9a:	e9d7 34a6 	ldrd	r3, r4, [r7, #664]	@ 0x298
 8001c9e:	4622      	mov	r2, r4
 8001ca0:	e9d7 89a4 	ldrd	r8, r9, [r7, #656]	@ 0x290
 8001ca4:	4641      	mov	r1, r8
 8001ca6:	fb01 f202 	mul.w	r2, r1, r2
 8001caa:	464d      	mov	r5, r9
 8001cac:	4618      	mov	r0, r3
 8001cae:	4621      	mov	r1, r4
 8001cb0:	4603      	mov	r3, r0
 8001cb2:	fb03 f305 	mul.w	r3, r3, r5
 8001cb6:	4413      	add	r3, r2
 8001cb8:	4602      	mov	r2, r0
 8001cba:	4641      	mov	r1, r8
 8001cbc:	fba2 2101 	umull	r2, r1, r2, r1
 8001cc0:	f8c7 13ac 	str.w	r1, [r7, #940]	@ 0x3ac
 8001cc4:	f8c7 23a8 	str.w	r2, [r7, #936]	@ 0x3a8
 8001cc8:	f8d7 23ac 	ldr.w	r2, [r7, #940]	@ 0x3ac
 8001ccc:	4413      	add	r3, r2
 8001cce:	f8c7 33ac 	str.w	r3, [r7, #940]	@ 0x3ac
 8001cd2:	f04f 0000 	mov.w	r0, #0
 8001cd6:	f04f 0100 	mov.w	r1, #0
 8001cda:	e9d7 45ea 	ldrd	r4, r5, [r7, #936]	@ 0x3a8
 8001cde:	462b      	mov	r3, r5
 8001ce0:	0099      	lsls	r1, r3, #2
 8001ce2:	4622      	mov	r2, r4
 8001ce4:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8001ce8:	4623      	mov	r3, r4
 8001cea:	0098      	lsls	r0, r3, #2
 8001cec:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001cf0:	f04f 0300 	mov.w	r3, #0
 8001cf4:	f7ff fa6a 	bl	80011cc <__aeabi_uldivmod>
 8001cf8:	4602      	mov	r2, r0
 8001cfa:	460b      	mov	r3, r1
 8001cfc:	f06f 0002 	mvn.w	r0, #2
 8001d00:	f04f 31ff 	mov.w	r1, #4294967295
 8001d04:	1a80      	subs	r0, r0, r2
 8001d06:	f8c7 0090 	str.w	r0, [r7, #144]	@ 0x90
 8001d0a:	eb61 0303 	sbc.w	r3, r1, r3
 8001d0e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8001d12:	4b86      	ldr	r3, [pc, #536]	@ (8001f2c <Set_Random_Motion_Values+0x7a8>)
 8001d14:	685b      	ldr	r3, [r3, #4]
 8001d16:	461a      	mov	r2, r3
 8001d18:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8001d1c:	4413      	add	r3, r2
 8001d1e:	461a      	mov	r2, r3
 8001d20:	4b82      	ldr	r3, [pc, #520]	@ (8001f2c <Set_Random_Motion_Values+0x7a8>)
 8001d22:	605a      	str	r2, [r3, #4]
    m_axes.AXIS_Z +=  (3  + ((uint64_t)rand()*5*cnt)/RAND_MAX);
 8001d24:	f007 fac2 	bl	80092ac <rand>
 8001d28:	4603      	mov	r3, r0
 8001d2a:	17da      	asrs	r2, r3, #31
 8001d2c:	f8c7 3288 	str.w	r3, [r7, #648]	@ 0x288
 8001d30:	f8c7 228c 	str.w	r2, [r7, #652]	@ 0x28c
 8001d34:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001d38:	2200      	movs	r2, #0
 8001d3a:	f8c7 3280 	str.w	r3, [r7, #640]	@ 0x280
 8001d3e:	f8c7 2284 	str.w	r2, [r7, #644]	@ 0x284
 8001d42:	e9d7 34a2 	ldrd	r3, r4, [r7, #648]	@ 0x288
 8001d46:	4622      	mov	r2, r4
 8001d48:	e9d7 89a0 	ldrd	r8, r9, [r7, #640]	@ 0x280
 8001d4c:	4641      	mov	r1, r8
 8001d4e:	fb01 f202 	mul.w	r2, r1, r2
 8001d52:	464d      	mov	r5, r9
 8001d54:	4618      	mov	r0, r3
 8001d56:	4621      	mov	r1, r4
 8001d58:	4603      	mov	r3, r0
 8001d5a:	fb03 f305 	mul.w	r3, r3, r5
 8001d5e:	4413      	add	r3, r2
 8001d60:	4602      	mov	r2, r0
 8001d62:	4641      	mov	r1, r8
 8001d64:	fba2 2101 	umull	r2, r1, r2, r1
 8001d68:	f8c7 13a4 	str.w	r1, [r7, #932]	@ 0x3a4
 8001d6c:	f8c7 23a0 	str.w	r2, [r7, #928]	@ 0x3a0
 8001d70:	f8d7 23a4 	ldr.w	r2, [r7, #932]	@ 0x3a4
 8001d74:	4413      	add	r3, r2
 8001d76:	f8c7 33a4 	str.w	r3, [r7, #932]	@ 0x3a4
 8001d7a:	e9d7 45e8 	ldrd	r4, r5, [r7, #928]	@ 0x3a0
 8001d7e:	4622      	mov	r2, r4
 8001d80:	462b      	mov	r3, r5
 8001d82:	f04f 0000 	mov.w	r0, #0
 8001d86:	f04f 0100 	mov.w	r1, #0
 8001d8a:	0099      	lsls	r1, r3, #2
 8001d8c:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8001d90:	0090      	lsls	r0, r2, #2
 8001d92:	4602      	mov	r2, r0
 8001d94:	460b      	mov	r3, r1
 8001d96:	4621      	mov	r1, r4
 8001d98:	1851      	adds	r1, r2, r1
 8001d9a:	f8c7 1278 	str.w	r1, [r7, #632]	@ 0x278
 8001d9e:	4629      	mov	r1, r5
 8001da0:	eb43 0101 	adc.w	r1, r3, r1
 8001da4:	f8c7 127c 	str.w	r1, [r7, #636]	@ 0x27c
 8001da8:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001dac:	f04f 0300 	mov.w	r3, #0
 8001db0:	e9d7 019e 	ldrd	r0, r1, [r7, #632]	@ 0x278
 8001db4:	f7ff fa0a 	bl	80011cc <__aeabi_uldivmod>
 8001db8:	4602      	mov	r2, r0
 8001dba:	460b      	mov	r3, r1
 8001dbc:	1cd1      	adds	r1, r2, #3
 8001dbe:	f8c7 1088 	str.w	r1, [r7, #136]	@ 0x88
 8001dc2:	f143 0300 	adc.w	r3, r3, #0
 8001dc6:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8001dca:	4b58      	ldr	r3, [pc, #352]	@ (8001f2c <Set_Random_Motion_Values+0x7a8>)
 8001dcc:	689b      	ldr	r3, [r3, #8]
 8001dce:	461a      	mov	r2, r3
 8001dd0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8001dd4:	4413      	add	r3, r2
 8001dd6:	461a      	mov	r2, r3
 8001dd8:	4b54      	ldr	r3, [pc, #336]	@ (8001f2c <Set_Random_Motion_Values+0x7a8>)
 8001dda:	609a      	str	r2, [r3, #8]

    q_axes.AXIS_X -= (100  + ((uint64_t)rand()*3*cnt)/RAND_MAX);
 8001ddc:	f007 fa66 	bl	80092ac <rand>
 8001de0:	4603      	mov	r3, r0
 8001de2:	17da      	asrs	r2, r3, #31
 8001de4:	f8c7 3270 	str.w	r3, [r7, #624]	@ 0x270
 8001de8:	f8c7 2274 	str.w	r2, [r7, #628]	@ 0x274
 8001dec:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001df0:	2200      	movs	r2, #0
 8001df2:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
 8001df6:	f8c7 226c 	str.w	r2, [r7, #620]	@ 0x26c
 8001dfa:	e9d7 349c 	ldrd	r3, r4, [r7, #624]	@ 0x270
 8001dfe:	4622      	mov	r2, r4
 8001e00:	e9d7 899a 	ldrd	r8, r9, [r7, #616]	@ 0x268
 8001e04:	4641      	mov	r1, r8
 8001e06:	fb01 f202 	mul.w	r2, r1, r2
 8001e0a:	464d      	mov	r5, r9
 8001e0c:	4618      	mov	r0, r3
 8001e0e:	4621      	mov	r1, r4
 8001e10:	4603      	mov	r3, r0
 8001e12:	fb03 f305 	mul.w	r3, r3, r5
 8001e16:	4413      	add	r3, r2
 8001e18:	4602      	mov	r2, r0
 8001e1a:	4641      	mov	r1, r8
 8001e1c:	fba2 2101 	umull	r2, r1, r2, r1
 8001e20:	f8c7 139c 	str.w	r1, [r7, #924]	@ 0x39c
 8001e24:	f8c7 2398 	str.w	r2, [r7, #920]	@ 0x398
 8001e28:	f8d7 239c 	ldr.w	r2, [r7, #924]	@ 0x39c
 8001e2c:	4413      	add	r3, r2
 8001e2e:	f8c7 339c 	str.w	r3, [r7, #924]	@ 0x39c
 8001e32:	e9d7 45e6 	ldrd	r4, r5, [r7, #920]	@ 0x398
 8001e36:	4622      	mov	r2, r4
 8001e38:	462b      	mov	r3, r5
 8001e3a:	1891      	adds	r1, r2, r2
 8001e3c:	63b9      	str	r1, [r7, #56]	@ 0x38
 8001e3e:	415b      	adcs	r3, r3
 8001e40:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001e42:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8001e46:	4621      	mov	r1, r4
 8001e48:	1851      	adds	r1, r2, r1
 8001e4a:	f8c7 1260 	str.w	r1, [r7, #608]	@ 0x260
 8001e4e:	4629      	mov	r1, r5
 8001e50:	eb43 0101 	adc.w	r1, r3, r1
 8001e54:	f8c7 1264 	str.w	r1, [r7, #612]	@ 0x264
 8001e58:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001e5c:	f04f 0300 	mov.w	r3, #0
 8001e60:	e9d7 0198 	ldrd	r0, r1, [r7, #608]	@ 0x260
 8001e64:	f7ff f9b2 	bl	80011cc <__aeabi_uldivmod>
 8001e68:	4602      	mov	r2, r0
 8001e6a:	460b      	mov	r3, r1
 8001e6c:	f112 0164 	adds.w	r1, r2, #100	@ 0x64
 8001e70:	f8c7 1080 	str.w	r1, [r7, #128]	@ 0x80
 8001e74:	f143 0300 	adc.w	r3, r3, #0
 8001e78:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8001e7c:	4b2c      	ldr	r3, [pc, #176]	@ (8001f30 <Set_Random_Motion_Values+0x7ac>)
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	461a      	mov	r2, r3
 8001e82:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8001e86:	1ad3      	subs	r3, r2, r3
 8001e88:	461a      	mov	r2, r3
 8001e8a:	4b29      	ldr	r3, [pc, #164]	@ (8001f30 <Set_Random_Motion_Values+0x7ac>)
 8001e8c:	601a      	str	r2, [r3, #0]
    q_axes.AXIS_Y += (100  + ((uint64_t)rand()*5*cnt)/RAND_MAX);
 8001e8e:	f007 fa0d 	bl	80092ac <rand>
 8001e92:	4603      	mov	r3, r0
 8001e94:	17da      	asrs	r2, r3, #31
 8001e96:	f8c7 3258 	str.w	r3, [r7, #600]	@ 0x258
 8001e9a:	f8c7 225c 	str.w	r2, [r7, #604]	@ 0x25c
 8001e9e:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001ea2:	2200      	movs	r2, #0
 8001ea4:	f8c7 3250 	str.w	r3, [r7, #592]	@ 0x250
 8001ea8:	f8c7 2254 	str.w	r2, [r7, #596]	@ 0x254
 8001eac:	e9d7 3496 	ldrd	r3, r4, [r7, #600]	@ 0x258
 8001eb0:	4622      	mov	r2, r4
 8001eb2:	e9d7 8994 	ldrd	r8, r9, [r7, #592]	@ 0x250
 8001eb6:	4641      	mov	r1, r8
 8001eb8:	fb01 f202 	mul.w	r2, r1, r2
 8001ebc:	464d      	mov	r5, r9
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	4621      	mov	r1, r4
 8001ec2:	4603      	mov	r3, r0
 8001ec4:	fb03 f305 	mul.w	r3, r3, r5
 8001ec8:	4413      	add	r3, r2
 8001eca:	4602      	mov	r2, r0
 8001ecc:	4641      	mov	r1, r8
 8001ece:	fba2 2101 	umull	r2, r1, r2, r1
 8001ed2:	f8c7 1394 	str.w	r1, [r7, #916]	@ 0x394
 8001ed6:	f8c7 2390 	str.w	r2, [r7, #912]	@ 0x390
 8001eda:	f8d7 2394 	ldr.w	r2, [r7, #916]	@ 0x394
 8001ede:	4413      	add	r3, r2
 8001ee0:	f8c7 3394 	str.w	r3, [r7, #916]	@ 0x394
 8001ee4:	e9d7 45e4 	ldrd	r4, r5, [r7, #912]	@ 0x390
 8001ee8:	4622      	mov	r2, r4
 8001eea:	462b      	mov	r3, r5
 8001eec:	f04f 0000 	mov.w	r0, #0
 8001ef0:	f04f 0100 	mov.w	r1, #0
 8001ef4:	0099      	lsls	r1, r3, #2
 8001ef6:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8001efa:	0090      	lsls	r0, r2, #2
 8001efc:	4602      	mov	r2, r0
 8001efe:	460b      	mov	r3, r1
 8001f00:	4621      	mov	r1, r4
 8001f02:	1851      	adds	r1, r2, r1
 8001f04:	f8c7 1248 	str.w	r1, [r7, #584]	@ 0x248
 8001f08:	4629      	mov	r1, r5
 8001f0a:	eb43 0101 	adc.w	r1, r3, r1
 8001f0e:	f8c7 124c 	str.w	r1, [r7, #588]	@ 0x24c
 8001f12:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001f16:	f04f 0300 	mov.w	r3, #0
 8001f1a:	e9d7 0192 	ldrd	r0, r1, [r7, #584]	@ 0x248
 8001f1e:	f7ff f955 	bl	80011cc <__aeabi_uldivmod>
 8001f22:	4602      	mov	r2, r0
 8001f24:	460b      	mov	r3, r1
 8001f26:	e005      	b.n	8001f34 <Set_Random_Motion_Values+0x7b0>
 8001f28:	2000025c 	.word	0x2000025c
 8001f2c:	20000268 	.word	0x20000268
 8001f30:	20000274 	.word	0x20000274
 8001f34:	f112 0164 	adds.w	r1, r2, #100	@ 0x64
 8001f38:	67b9      	str	r1, [r7, #120]	@ 0x78
 8001f3a:	f143 0300 	adc.w	r3, r3, #0
 8001f3e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8001f40:	4b32      	ldr	r3, [pc, #200]	@ (800200c <Set_Random_Motion_Values+0x888>)
 8001f42:	685b      	ldr	r3, [r3, #4]
 8001f44:	461a      	mov	r2, r3
 8001f46:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8001f48:	4413      	add	r3, r2
 8001f4a:	461a      	mov	r2, r3
 8001f4c:	4b2f      	ldr	r3, [pc, #188]	@ (800200c <Set_Random_Motion_Values+0x888>)
 8001f4e:	605a      	str	r2, [r3, #4]
    q_axes.AXIS_Z -= (100  + ((uint64_t)rand()*7*cnt)/RAND_MAX);
 8001f50:	f007 f9ac 	bl	80092ac <rand>
 8001f54:	4603      	mov	r3, r0
 8001f56:	17da      	asrs	r2, r3, #31
 8001f58:	f8c7 3240 	str.w	r3, [r7, #576]	@ 0x240
 8001f5c:	f8c7 2244 	str.w	r2, [r7, #580]	@ 0x244
 8001f60:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8001f64:	2200      	movs	r2, #0
 8001f66:	f8c7 3238 	str.w	r3, [r7, #568]	@ 0x238
 8001f6a:	f8c7 223c 	str.w	r2, [r7, #572]	@ 0x23c
 8001f6e:	e9d7 3490 	ldrd	r3, r4, [r7, #576]	@ 0x240
 8001f72:	4622      	mov	r2, r4
 8001f74:	e9d7 898e 	ldrd	r8, r9, [r7, #568]	@ 0x238
 8001f78:	4641      	mov	r1, r8
 8001f7a:	fb01 f202 	mul.w	r2, r1, r2
 8001f7e:	464d      	mov	r5, r9
 8001f80:	4618      	mov	r0, r3
 8001f82:	4621      	mov	r1, r4
 8001f84:	4603      	mov	r3, r0
 8001f86:	fb03 f305 	mul.w	r3, r3, r5
 8001f8a:	4413      	add	r3, r2
 8001f8c:	4602      	mov	r2, r0
 8001f8e:	4641      	mov	r1, r8
 8001f90:	fba2 2101 	umull	r2, r1, r2, r1
 8001f94:	f8c7 138c 	str.w	r1, [r7, #908]	@ 0x38c
 8001f98:	f8c7 2388 	str.w	r2, [r7, #904]	@ 0x388
 8001f9c:	f8d7 238c 	ldr.w	r2, [r7, #908]	@ 0x38c
 8001fa0:	4413      	add	r3, r2
 8001fa2:	f8c7 338c 	str.w	r3, [r7, #908]	@ 0x38c
 8001fa6:	e9d7 45e2 	ldrd	r4, r5, [r7, #904]	@ 0x388
 8001faa:	4622      	mov	r2, r4
 8001fac:	462b      	mov	r3, r5
 8001fae:	f04f 0000 	mov.w	r0, #0
 8001fb2:	f04f 0100 	mov.w	r1, #0
 8001fb6:	00d9      	lsls	r1, r3, #3
 8001fb8:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8001fbc:	00d0      	lsls	r0, r2, #3
 8001fbe:	4602      	mov	r2, r0
 8001fc0:	460b      	mov	r3, r1
 8001fc2:	4620      	mov	r0, r4
 8001fc4:	4629      	mov	r1, r5
 8001fc6:	4604      	mov	r4, r0
 8001fc8:	1b14      	subs	r4, r2, r4
 8001fca:	f8c7 4230 	str.w	r4, [r7, #560]	@ 0x230
 8001fce:	eb63 0301 	sbc.w	r3, r3, r1
 8001fd2:	f8c7 3234 	str.w	r3, [r7, #564]	@ 0x234
 8001fd6:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8001fda:	f04f 0300 	mov.w	r3, #0
 8001fde:	e9d7 018c 	ldrd	r0, r1, [r7, #560]	@ 0x230
 8001fe2:	f7ff f8f3 	bl	80011cc <__aeabi_uldivmod>
 8001fe6:	4602      	mov	r2, r0
 8001fe8:	460b      	mov	r3, r1
 8001fea:	f112 0164 	adds.w	r1, r2, #100	@ 0x64
 8001fee:	6739      	str	r1, [r7, #112]	@ 0x70
 8001ff0:	f143 0300 	adc.w	r3, r3, #0
 8001ff4:	677b      	str	r3, [r7, #116]	@ 0x74
 8001ff6:	4b05      	ldr	r3, [pc, #20]	@ (800200c <Set_Random_Motion_Values+0x888>)
 8001ff8:	689b      	ldr	r3, [r3, #8]
 8001ffa:	461a      	mov	r2, r3
 8001ffc:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8001ffe:	1ad3      	subs	r3, r2, r3
 8002000:	461a      	mov	r2, r3
 8002002:	4b02      	ldr	r3, [pc, #8]	@ (800200c <Set_Random_Motion_Values+0x888>)
 8002004:	609a      	str	r2, [r3, #8]
    q_axes.AXIS_X += (200 + ((uint64_t)rand()*7*cnt)/RAND_MAX);
    q_axes.AXIS_Y -= (150 + ((uint64_t)rand()*3*cnt)/RAND_MAX);
    q_axes.AXIS_Z += (10  + ((uint64_t)rand()*5*cnt)/RAND_MAX);
  }

}
 8002006:	f000 bc4a 	b.w	800289e <Set_Random_Motion_Values+0x111a>
 800200a:	bf00      	nop
 800200c:	20000274 	.word	0x20000274
    x_axes.AXIS_X += -(10  + ((uint64_t)rand()*3*cnt)/RAND_MAX);
 8002010:	f007 f94c 	bl	80092ac <rand>
 8002014:	4603      	mov	r3, r0
 8002016:	17da      	asrs	r2, r3, #31
 8002018:	f8c7 3228 	str.w	r3, [r7, #552]	@ 0x228
 800201c:	f8c7 222c 	str.w	r2, [r7, #556]	@ 0x22c
 8002020:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8002024:	2200      	movs	r2, #0
 8002026:	469a      	mov	sl, r3
 8002028:	4693      	mov	fp, r2
 800202a:	e9d7 018a 	ldrd	r0, r1, [r7, #552]	@ 0x228
 800202e:	460b      	mov	r3, r1
 8002030:	fb0a f203 	mul.w	r2, sl, r3
 8002034:	4603      	mov	r3, r0
 8002036:	fb03 f30b 	mul.w	r3, r3, fp
 800203a:	4413      	add	r3, r2
 800203c:	4602      	mov	r2, r0
 800203e:	fba2 450a 	umull	r4, r5, r2, sl
 8002042:	442b      	add	r3, r5
 8002044:	461d      	mov	r5, r3
 8002046:	4622      	mov	r2, r4
 8002048:	462b      	mov	r3, r5
 800204a:	1891      	adds	r1, r2, r2
 800204c:	6339      	str	r1, [r7, #48]	@ 0x30
 800204e:	415b      	adcs	r3, r3
 8002050:	637b      	str	r3, [r7, #52]	@ 0x34
 8002052:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8002056:	1911      	adds	r1, r2, r4
 8002058:	f8c7 1220 	str.w	r1, [r7, #544]	@ 0x220
 800205c:	416b      	adcs	r3, r5
 800205e:	f8c7 3224 	str.w	r3, [r7, #548]	@ 0x224
 8002062:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002066:	f04f 0300 	mov.w	r3, #0
 800206a:	e9d7 0188 	ldrd	r0, r1, [r7, #544]	@ 0x220
 800206e:	f7ff f8ad 	bl	80011cc <__aeabi_uldivmod>
 8002072:	4602      	mov	r2, r0
 8002074:	460b      	mov	r3, r1
 8002076:	f06f 0009 	mvn.w	r0, #9
 800207a:	f04f 31ff 	mov.w	r1, #4294967295
 800207e:	1a80      	subs	r0, r0, r2
 8002080:	f8c7 0128 	str.w	r0, [r7, #296]	@ 0x128
 8002084:	eb61 0303 	sbc.w	r3, r1, r3
 8002088:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
 800208c:	4bd9      	ldr	r3, [pc, #868]	@ (80023f4 <Set_Random_Motion_Values+0xc70>)
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	461a      	mov	r2, r3
 8002092:	f8d7 3128 	ldr.w	r3, [r7, #296]	@ 0x128
 8002096:	4413      	add	r3, r2
 8002098:	461a      	mov	r2, r3
 800209a:	4bd6      	ldr	r3, [pc, #856]	@ (80023f4 <Set_Random_Motion_Values+0xc70>)
 800209c:	601a      	str	r2, [r3, #0]
    x_axes.AXIS_Y +=  (10  + ((uint64_t)rand()*5*cnt)/RAND_MAX);
 800209e:	f007 f905 	bl	80092ac <rand>
 80020a2:	4603      	mov	r3, r0
 80020a4:	17da      	asrs	r2, r3, #31
 80020a6:	f8c7 3218 	str.w	r3, [r7, #536]	@ 0x218
 80020aa:	f8c7 221c 	str.w	r2, [r7, #540]	@ 0x21c
 80020ae:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 80020b2:	2200      	movs	r2, #0
 80020b4:	f8c7 3210 	str.w	r3, [r7, #528]	@ 0x210
 80020b8:	f8c7 2214 	str.w	r2, [r7, #532]	@ 0x214
 80020bc:	e9d7 3486 	ldrd	r3, r4, [r7, #536]	@ 0x218
 80020c0:	4622      	mov	r2, r4
 80020c2:	e9d7 8984 	ldrd	r8, r9, [r7, #528]	@ 0x210
 80020c6:	4641      	mov	r1, r8
 80020c8:	fb01 f202 	mul.w	r2, r1, r2
 80020cc:	464d      	mov	r5, r9
 80020ce:	4618      	mov	r0, r3
 80020d0:	4621      	mov	r1, r4
 80020d2:	4603      	mov	r3, r0
 80020d4:	fb03 f305 	mul.w	r3, r3, r5
 80020d8:	4413      	add	r3, r2
 80020da:	4602      	mov	r2, r0
 80020dc:	4641      	mov	r1, r8
 80020de:	fba2 2101 	umull	r2, r1, r2, r1
 80020e2:	f8c7 1384 	str.w	r1, [r7, #900]	@ 0x384
 80020e6:	f8c7 2380 	str.w	r2, [r7, #896]	@ 0x380
 80020ea:	f8d7 2384 	ldr.w	r2, [r7, #900]	@ 0x384
 80020ee:	4413      	add	r3, r2
 80020f0:	f8c7 3384 	str.w	r3, [r7, #900]	@ 0x384
 80020f4:	e9d7 45e0 	ldrd	r4, r5, [r7, #896]	@ 0x380
 80020f8:	4622      	mov	r2, r4
 80020fa:	462b      	mov	r3, r5
 80020fc:	f04f 0000 	mov.w	r0, #0
 8002100:	f04f 0100 	mov.w	r1, #0
 8002104:	0099      	lsls	r1, r3, #2
 8002106:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 800210a:	0090      	lsls	r0, r2, #2
 800210c:	4602      	mov	r2, r0
 800210e:	460b      	mov	r3, r1
 8002110:	4621      	mov	r1, r4
 8002112:	1851      	adds	r1, r2, r1
 8002114:	f8c7 1208 	str.w	r1, [r7, #520]	@ 0x208
 8002118:	4629      	mov	r1, r5
 800211a:	eb43 0101 	adc.w	r1, r3, r1
 800211e:	f8c7 120c 	str.w	r1, [r7, #524]	@ 0x20c
 8002122:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002126:	f04f 0300 	mov.w	r3, #0
 800212a:	e9d7 0182 	ldrd	r0, r1, [r7, #520]	@ 0x208
 800212e:	f7ff f84d 	bl	80011cc <__aeabi_uldivmod>
 8002132:	4602      	mov	r2, r0
 8002134:	460b      	mov	r3, r1
 8002136:	f112 010a 	adds.w	r1, r2, #10
 800213a:	f8c7 1120 	str.w	r1, [r7, #288]	@ 0x120
 800213e:	f143 0300 	adc.w	r3, r3, #0
 8002142:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
 8002146:	4bab      	ldr	r3, [pc, #684]	@ (80023f4 <Set_Random_Motion_Values+0xc70>)
 8002148:	685b      	ldr	r3, [r3, #4]
 800214a:	461a      	mov	r2, r3
 800214c:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 8002150:	4413      	add	r3, r2
 8002152:	461a      	mov	r2, r3
 8002154:	4ba7      	ldr	r3, [pc, #668]	@ (80023f4 <Set_Random_Motion_Values+0xc70>)
 8002156:	605a      	str	r2, [r3, #4]
    x_axes.AXIS_Z += -(10  + ((uint64_t)rand()*7*cnt)/RAND_MAX);
 8002158:	f007 f8a8 	bl	80092ac <rand>
 800215c:	4603      	mov	r3, r0
 800215e:	17da      	asrs	r2, r3, #31
 8002160:	f8c7 3200 	str.w	r3, [r7, #512]	@ 0x200
 8002164:	f8c7 2204 	str.w	r2, [r7, #516]	@ 0x204
 8002168:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 800216c:	2200      	movs	r2, #0
 800216e:	f8c7 31f8 	str.w	r3, [r7, #504]	@ 0x1f8
 8002172:	f8c7 21fc 	str.w	r2, [r7, #508]	@ 0x1fc
 8002176:	e9d7 3480 	ldrd	r3, r4, [r7, #512]	@ 0x200
 800217a:	4622      	mov	r2, r4
 800217c:	e9d7 897e 	ldrd	r8, r9, [r7, #504]	@ 0x1f8
 8002180:	4641      	mov	r1, r8
 8002182:	fb01 f202 	mul.w	r2, r1, r2
 8002186:	464d      	mov	r5, r9
 8002188:	4618      	mov	r0, r3
 800218a:	4621      	mov	r1, r4
 800218c:	4603      	mov	r3, r0
 800218e:	fb03 f305 	mul.w	r3, r3, r5
 8002192:	4413      	add	r3, r2
 8002194:	4602      	mov	r2, r0
 8002196:	4641      	mov	r1, r8
 8002198:	fba2 2101 	umull	r2, r1, r2, r1
 800219c:	f8c7 137c 	str.w	r1, [r7, #892]	@ 0x37c
 80021a0:	f8c7 2378 	str.w	r2, [r7, #888]	@ 0x378
 80021a4:	f8d7 237c 	ldr.w	r2, [r7, #892]	@ 0x37c
 80021a8:	4413      	add	r3, r2
 80021aa:	f8c7 337c 	str.w	r3, [r7, #892]	@ 0x37c
 80021ae:	e9d7 45de 	ldrd	r4, r5, [r7, #888]	@ 0x378
 80021b2:	4622      	mov	r2, r4
 80021b4:	462b      	mov	r3, r5
 80021b6:	f04f 0000 	mov.w	r0, #0
 80021ba:	f04f 0100 	mov.w	r1, #0
 80021be:	00d9      	lsls	r1, r3, #3
 80021c0:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80021c4:	00d0      	lsls	r0, r2, #3
 80021c6:	4602      	mov	r2, r0
 80021c8:	460b      	mov	r3, r1
 80021ca:	4620      	mov	r0, r4
 80021cc:	4629      	mov	r1, r5
 80021ce:	4604      	mov	r4, r0
 80021d0:	1b14      	subs	r4, r2, r4
 80021d2:	f8c7 41f0 	str.w	r4, [r7, #496]	@ 0x1f0
 80021d6:	eb63 0301 	sbc.w	r3, r3, r1
 80021da:	f8c7 31f4 	str.w	r3, [r7, #500]	@ 0x1f4
 80021de:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 80021e2:	f04f 0300 	mov.w	r3, #0
 80021e6:	e9d7 017c 	ldrd	r0, r1, [r7, #496]	@ 0x1f0
 80021ea:	f7fe ffef 	bl	80011cc <__aeabi_uldivmod>
 80021ee:	4602      	mov	r2, r0
 80021f0:	460b      	mov	r3, r1
 80021f2:	f06f 0009 	mvn.w	r0, #9
 80021f6:	f04f 31ff 	mov.w	r1, #4294967295
 80021fa:	1a80      	subs	r0, r0, r2
 80021fc:	f8c7 0118 	str.w	r0, [r7, #280]	@ 0x118
 8002200:	eb61 0303 	sbc.w	r3, r1, r3
 8002204:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 8002208:	4b7a      	ldr	r3, [pc, #488]	@ (80023f4 <Set_Random_Motion_Values+0xc70>)
 800220a:	689b      	ldr	r3, [r3, #8]
 800220c:	461a      	mov	r2, r3
 800220e:	f8d7 3118 	ldr.w	r3, [r7, #280]	@ 0x118
 8002212:	4413      	add	r3, r2
 8002214:	461a      	mov	r2, r3
 8002216:	4b77      	ldr	r3, [pc, #476]	@ (80023f4 <Set_Random_Motion_Values+0xc70>)
 8002218:	609a      	str	r2, [r3, #8]
    g_axes.AXIS_X += -(100 + ((uint64_t)rand()*2*cnt)/RAND_MAX);
 800221a:	f007 f847 	bl	80092ac <rand>
 800221e:	4603      	mov	r3, r0
 8002220:	17da      	asrs	r2, r3, #31
 8002222:	f8c7 31e8 	str.w	r3, [r7, #488]	@ 0x1e8
 8002226:	f8c7 21ec 	str.w	r2, [r7, #492]	@ 0x1ec
 800222a:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 800222e:	2200      	movs	r2, #0
 8002230:	f8c7 31e0 	str.w	r3, [r7, #480]	@ 0x1e0
 8002234:	f8c7 21e4 	str.w	r2, [r7, #484]	@ 0x1e4
 8002238:	e9d7 347a 	ldrd	r3, r4, [r7, #488]	@ 0x1e8
 800223c:	4622      	mov	r2, r4
 800223e:	e9d7 8978 	ldrd	r8, r9, [r7, #480]	@ 0x1e0
 8002242:	4641      	mov	r1, r8
 8002244:	fb01 f202 	mul.w	r2, r1, r2
 8002248:	464d      	mov	r5, r9
 800224a:	4618      	mov	r0, r3
 800224c:	4621      	mov	r1, r4
 800224e:	4603      	mov	r3, r0
 8002250:	fb03 f305 	mul.w	r3, r3, r5
 8002254:	4413      	add	r3, r2
 8002256:	4602      	mov	r2, r0
 8002258:	4641      	mov	r1, r8
 800225a:	fba2 2101 	umull	r2, r1, r2, r1
 800225e:	f8c7 1374 	str.w	r1, [r7, #884]	@ 0x374
 8002262:	f8c7 2370 	str.w	r2, [r7, #880]	@ 0x370
 8002266:	f8d7 2374 	ldr.w	r2, [r7, #884]	@ 0x374
 800226a:	4413      	add	r3, r2
 800226c:	f8c7 3374 	str.w	r3, [r7, #884]	@ 0x374
 8002270:	e9d7 12dc 	ldrd	r1, r2, [r7, #880]	@ 0x370
 8002274:	460b      	mov	r3, r1
 8002276:	18db      	adds	r3, r3, r3
 8002278:	62bb      	str	r3, [r7, #40]	@ 0x28
 800227a:	4613      	mov	r3, r2
 800227c:	eb42 0303 	adc.w	r3, r2, r3
 8002280:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002282:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8002286:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 800228a:	f04f 0300 	mov.w	r3, #0
 800228e:	f7fe ff9d 	bl	80011cc <__aeabi_uldivmod>
 8002292:	4602      	mov	r2, r0
 8002294:	460b      	mov	r3, r1
 8002296:	f06f 0063 	mvn.w	r0, #99	@ 0x63
 800229a:	f04f 31ff 	mov.w	r1, #4294967295
 800229e:	1a80      	subs	r0, r0, r2
 80022a0:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110
 80022a4:	eb61 0303 	sbc.w	r3, r1, r3
 80022a8:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
 80022ac:	4b52      	ldr	r3, [pc, #328]	@ (80023f8 <Set_Random_Motion_Values+0xc74>)
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	461a      	mov	r2, r3
 80022b2:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80022b6:	4413      	add	r3, r2
 80022b8:	461a      	mov	r2, r3
 80022ba:	4b4f      	ldr	r3, [pc, #316]	@ (80023f8 <Set_Random_Motion_Values+0xc74>)
 80022bc:	601a      	str	r2, [r3, #0]
    g_axes.AXIS_Y +=  (100 + ((uint64_t)rand()*4*cnt)/RAND_MAX);
 80022be:	f006 fff5 	bl	80092ac <rand>
 80022c2:	4603      	mov	r3, r0
 80022c4:	17da      	asrs	r2, r3, #31
 80022c6:	f8c7 31d8 	str.w	r3, [r7, #472]	@ 0x1d8
 80022ca:	f8c7 21dc 	str.w	r2, [r7, #476]	@ 0x1dc
 80022ce:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 80022d2:	2200      	movs	r2, #0
 80022d4:	f8c7 31d0 	str.w	r3, [r7, #464]	@ 0x1d0
 80022d8:	f8c7 21d4 	str.w	r2, [r7, #468]	@ 0x1d4
 80022dc:	e9d7 3476 	ldrd	r3, r4, [r7, #472]	@ 0x1d8
 80022e0:	4622      	mov	r2, r4
 80022e2:	e9d7 8974 	ldrd	r8, r9, [r7, #464]	@ 0x1d0
 80022e6:	4641      	mov	r1, r8
 80022e8:	fb01 f202 	mul.w	r2, r1, r2
 80022ec:	464d      	mov	r5, r9
 80022ee:	4618      	mov	r0, r3
 80022f0:	4621      	mov	r1, r4
 80022f2:	4603      	mov	r3, r0
 80022f4:	fb03 f305 	mul.w	r3, r3, r5
 80022f8:	4413      	add	r3, r2
 80022fa:	4602      	mov	r2, r0
 80022fc:	4641      	mov	r1, r8
 80022fe:	fba2 2101 	umull	r2, r1, r2, r1
 8002302:	f8c7 136c 	str.w	r1, [r7, #876]	@ 0x36c
 8002306:	f8c7 2368 	str.w	r2, [r7, #872]	@ 0x368
 800230a:	f8d7 236c 	ldr.w	r2, [r7, #876]	@ 0x36c
 800230e:	4413      	add	r3, r2
 8002310:	f8c7 336c 	str.w	r3, [r7, #876]	@ 0x36c
 8002314:	f04f 0000 	mov.w	r0, #0
 8002318:	f04f 0100 	mov.w	r1, #0
 800231c:	e9d7 45da 	ldrd	r4, r5, [r7, #872]	@ 0x368
 8002320:	462b      	mov	r3, r5
 8002322:	0099      	lsls	r1, r3, #2
 8002324:	4622      	mov	r2, r4
 8002326:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 800232a:	4623      	mov	r3, r4
 800232c:	0098      	lsls	r0, r3, #2
 800232e:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002332:	f04f 0300 	mov.w	r3, #0
 8002336:	f7fe ff49 	bl	80011cc <__aeabi_uldivmod>
 800233a:	4602      	mov	r2, r0
 800233c:	460b      	mov	r3, r1
 800233e:	f112 0164 	adds.w	r1, r2, #100	@ 0x64
 8002342:	f8c7 1108 	str.w	r1, [r7, #264]	@ 0x108
 8002346:	f143 0300 	adc.w	r3, r3, #0
 800234a:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 800234e:	4b2a      	ldr	r3, [pc, #168]	@ (80023f8 <Set_Random_Motion_Values+0xc74>)
 8002350:	685b      	ldr	r3, [r3, #4]
 8002352:	461a      	mov	r2, r3
 8002354:	f8d7 3108 	ldr.w	r3, [r7, #264]	@ 0x108
 8002358:	4413      	add	r3, r2
 800235a:	461a      	mov	r2, r3
 800235c:	4b26      	ldr	r3, [pc, #152]	@ (80023f8 <Set_Random_Motion_Values+0xc74>)
 800235e:	605a      	str	r2, [r3, #4]
    g_axes.AXIS_Z += -(100 + ((uint64_t)rand()*6*cnt)/RAND_MAX);
 8002360:	f006 ffa4 	bl	80092ac <rand>
 8002364:	4603      	mov	r3, r0
 8002366:	17da      	asrs	r2, r3, #31
 8002368:	f8c7 31c8 	str.w	r3, [r7, #456]	@ 0x1c8
 800236c:	f8c7 21cc 	str.w	r2, [r7, #460]	@ 0x1cc
 8002370:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8002374:	2200      	movs	r2, #0
 8002376:	f8c7 31c0 	str.w	r3, [r7, #448]	@ 0x1c0
 800237a:	f8c7 21c4 	str.w	r2, [r7, #452]	@ 0x1c4
 800237e:	e9d7 3472 	ldrd	r3, r4, [r7, #456]	@ 0x1c8
 8002382:	4622      	mov	r2, r4
 8002384:	e9d7 8970 	ldrd	r8, r9, [r7, #448]	@ 0x1c0
 8002388:	4641      	mov	r1, r8
 800238a:	fb01 f202 	mul.w	r2, r1, r2
 800238e:	464d      	mov	r5, r9
 8002390:	4618      	mov	r0, r3
 8002392:	4621      	mov	r1, r4
 8002394:	4603      	mov	r3, r0
 8002396:	fb03 f305 	mul.w	r3, r3, r5
 800239a:	4413      	add	r3, r2
 800239c:	4602      	mov	r2, r0
 800239e:	4641      	mov	r1, r8
 80023a0:	fba2 2101 	umull	r2, r1, r2, r1
 80023a4:	f8c7 1364 	str.w	r1, [r7, #868]	@ 0x364
 80023a8:	f8c7 2360 	str.w	r2, [r7, #864]	@ 0x360
 80023ac:	f8d7 2364 	ldr.w	r2, [r7, #868]	@ 0x364
 80023b0:	4413      	add	r3, r2
 80023b2:	f8c7 3364 	str.w	r3, [r7, #868]	@ 0x364
 80023b6:	e9d7 45d8 	ldrd	r4, r5, [r7, #864]	@ 0x360
 80023ba:	4622      	mov	r2, r4
 80023bc:	462b      	mov	r3, r5
 80023be:	1891      	adds	r1, r2, r2
 80023c0:	6239      	str	r1, [r7, #32]
 80023c2:	415b      	adcs	r3, r3
 80023c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80023c6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80023ca:	4621      	mov	r1, r4
 80023cc:	1851      	adds	r1, r2, r1
 80023ce:	61b9      	str	r1, [r7, #24]
 80023d0:	4629      	mov	r1, r5
 80023d2:	eb43 0101 	adc.w	r1, r3, r1
 80023d6:	61f9      	str	r1, [r7, #28]
 80023d8:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 80023dc:	460b      	mov	r3, r1
 80023de:	18db      	adds	r3, r3, r3
 80023e0:	613b      	str	r3, [r7, #16]
 80023e2:	4613      	mov	r3, r2
 80023e4:	eb42 0303 	adc.w	r3, r2, r3
 80023e8:	617b      	str	r3, [r7, #20]
 80023ea:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 80023ee:	4618      	mov	r0, r3
 80023f0:	e004      	b.n	80023fc <Set_Random_Motion_Values+0xc78>
 80023f2:	bf00      	nop
 80023f4:	20000250 	.word	0x20000250
 80023f8:	2000025c 	.word	0x2000025c
 80023fc:	4621      	mov	r1, r4
 80023fe:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002402:	f04f 0300 	mov.w	r3, #0
 8002406:	f7fe fee1 	bl	80011cc <__aeabi_uldivmod>
 800240a:	4602      	mov	r2, r0
 800240c:	460b      	mov	r3, r1
 800240e:	f06f 0063 	mvn.w	r0, #99	@ 0x63
 8002412:	f04f 31ff 	mov.w	r1, #4294967295
 8002416:	1a80      	subs	r0, r0, r2
 8002418:	f8c7 0100 	str.w	r0, [r7, #256]	@ 0x100
 800241c:	eb61 0303 	sbc.w	r3, r1, r3
 8002420:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8002424:	4bd9      	ldr	r3, [pc, #868]	@ (800278c <Set_Random_Motion_Values+0x1008>)
 8002426:	689b      	ldr	r3, [r3, #8]
 8002428:	461a      	mov	r2, r3
 800242a:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 800242e:	4413      	add	r3, r2
 8002430:	461a      	mov	r2, r3
 8002432:	4bd6      	ldr	r3, [pc, #856]	@ (800278c <Set_Random_Motion_Values+0x1008>)
 8002434:	609a      	str	r2, [r3, #8]
    m_axes.AXIS_X += -(3  + ((uint64_t)rand()*7*cnt)/RAND_MAX);
 8002436:	f006 ff39 	bl	80092ac <rand>
 800243a:	4603      	mov	r3, r0
 800243c:	17da      	asrs	r2, r3, #31
 800243e:	f8c7 31b8 	str.w	r3, [r7, #440]	@ 0x1b8
 8002442:	f8c7 21bc 	str.w	r2, [r7, #444]	@ 0x1bc
 8002446:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 800244a:	2200      	movs	r2, #0
 800244c:	f8c7 31b0 	str.w	r3, [r7, #432]	@ 0x1b0
 8002450:	f8c7 21b4 	str.w	r2, [r7, #436]	@ 0x1b4
 8002454:	e9d7 346e 	ldrd	r3, r4, [r7, #440]	@ 0x1b8
 8002458:	4622      	mov	r2, r4
 800245a:	e9d7 896c 	ldrd	r8, r9, [r7, #432]	@ 0x1b0
 800245e:	4641      	mov	r1, r8
 8002460:	fb01 f202 	mul.w	r2, r1, r2
 8002464:	464d      	mov	r5, r9
 8002466:	4618      	mov	r0, r3
 8002468:	4621      	mov	r1, r4
 800246a:	4603      	mov	r3, r0
 800246c:	fb03 f305 	mul.w	r3, r3, r5
 8002470:	4413      	add	r3, r2
 8002472:	4602      	mov	r2, r0
 8002474:	4641      	mov	r1, r8
 8002476:	fba2 2101 	umull	r2, r1, r2, r1
 800247a:	f8c7 135c 	str.w	r1, [r7, #860]	@ 0x35c
 800247e:	f8c7 2358 	str.w	r2, [r7, #856]	@ 0x358
 8002482:	f8d7 235c 	ldr.w	r2, [r7, #860]	@ 0x35c
 8002486:	4413      	add	r3, r2
 8002488:	f8c7 335c 	str.w	r3, [r7, #860]	@ 0x35c
 800248c:	e9d7 45d6 	ldrd	r4, r5, [r7, #856]	@ 0x358
 8002490:	4622      	mov	r2, r4
 8002492:	462b      	mov	r3, r5
 8002494:	f04f 0000 	mov.w	r0, #0
 8002498:	f04f 0100 	mov.w	r1, #0
 800249c:	00d9      	lsls	r1, r3, #3
 800249e:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80024a2:	00d0      	lsls	r0, r2, #3
 80024a4:	4602      	mov	r2, r0
 80024a6:	460b      	mov	r3, r1
 80024a8:	4620      	mov	r0, r4
 80024aa:	4629      	mov	r1, r5
 80024ac:	4604      	mov	r4, r0
 80024ae:	1b14      	subs	r4, r2, r4
 80024b0:	f8c7 41a8 	str.w	r4, [r7, #424]	@ 0x1a8
 80024b4:	eb63 0301 	sbc.w	r3, r3, r1
 80024b8:	f8c7 31ac 	str.w	r3, [r7, #428]	@ 0x1ac
 80024bc:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 80024c0:	f04f 0300 	mov.w	r3, #0
 80024c4:	e9d7 016a 	ldrd	r0, r1, [r7, #424]	@ 0x1a8
 80024c8:	f7fe fe80 	bl	80011cc <__aeabi_uldivmod>
 80024cc:	4602      	mov	r2, r0
 80024ce:	460b      	mov	r3, r1
 80024d0:	f06f 0002 	mvn.w	r0, #2
 80024d4:	f04f 31ff 	mov.w	r1, #4294967295
 80024d8:	1a80      	subs	r0, r0, r2
 80024da:	f8c7 00f8 	str.w	r0, [r7, #248]	@ 0xf8
 80024de:	eb61 0303 	sbc.w	r3, r1, r3
 80024e2:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80024e6:	4baa      	ldr	r3, [pc, #680]	@ (8002790 <Set_Random_Motion_Values+0x100c>)
 80024e8:	681b      	ldr	r3, [r3, #0]
 80024ea:	461a      	mov	r2, r3
 80024ec:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80024f0:	4413      	add	r3, r2
 80024f2:	461a      	mov	r2, r3
 80024f4:	4ba6      	ldr	r3, [pc, #664]	@ (8002790 <Set_Random_Motion_Values+0x100c>)
 80024f6:	601a      	str	r2, [r3, #0]
    m_axes.AXIS_Y +=  (3  + ((uint64_t)rand()*9*cnt)/RAND_MAX);
 80024f8:	f006 fed8 	bl	80092ac <rand>
 80024fc:	4603      	mov	r3, r0
 80024fe:	17da      	asrs	r2, r3, #31
 8002500:	f8c7 31a0 	str.w	r3, [r7, #416]	@ 0x1a0
 8002504:	f8c7 21a4 	str.w	r2, [r7, #420]	@ 0x1a4
 8002508:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 800250c:	2200      	movs	r2, #0
 800250e:	f8c7 3198 	str.w	r3, [r7, #408]	@ 0x198
 8002512:	f8c7 219c 	str.w	r2, [r7, #412]	@ 0x19c
 8002516:	e9d7 3468 	ldrd	r3, r4, [r7, #416]	@ 0x1a0
 800251a:	4622      	mov	r2, r4
 800251c:	e9d7 8966 	ldrd	r8, r9, [r7, #408]	@ 0x198
 8002520:	4641      	mov	r1, r8
 8002522:	fb01 f202 	mul.w	r2, r1, r2
 8002526:	464d      	mov	r5, r9
 8002528:	4618      	mov	r0, r3
 800252a:	4621      	mov	r1, r4
 800252c:	4603      	mov	r3, r0
 800252e:	fb03 f305 	mul.w	r3, r3, r5
 8002532:	4413      	add	r3, r2
 8002534:	4602      	mov	r2, r0
 8002536:	4641      	mov	r1, r8
 8002538:	fba2 2101 	umull	r2, r1, r2, r1
 800253c:	f8c7 1354 	str.w	r1, [r7, #852]	@ 0x354
 8002540:	f8c7 2350 	str.w	r2, [r7, #848]	@ 0x350
 8002544:	f8d7 2354 	ldr.w	r2, [r7, #852]	@ 0x354
 8002548:	4413      	add	r3, r2
 800254a:	f8c7 3354 	str.w	r3, [r7, #852]	@ 0x354
 800254e:	e9d7 45d4 	ldrd	r4, r5, [r7, #848]	@ 0x350
 8002552:	4622      	mov	r2, r4
 8002554:	462b      	mov	r3, r5
 8002556:	f04f 0000 	mov.w	r0, #0
 800255a:	f04f 0100 	mov.w	r1, #0
 800255e:	00d9      	lsls	r1, r3, #3
 8002560:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8002564:	00d0      	lsls	r0, r2, #3
 8002566:	4602      	mov	r2, r0
 8002568:	460b      	mov	r3, r1
 800256a:	4621      	mov	r1, r4
 800256c:	1851      	adds	r1, r2, r1
 800256e:	f8c7 1190 	str.w	r1, [r7, #400]	@ 0x190
 8002572:	4629      	mov	r1, r5
 8002574:	eb43 0101 	adc.w	r1, r3, r1
 8002578:	f8c7 1194 	str.w	r1, [r7, #404]	@ 0x194
 800257c:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002580:	f04f 0300 	mov.w	r3, #0
 8002584:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	@ 0x190
 8002588:	f7fe fe20 	bl	80011cc <__aeabi_uldivmod>
 800258c:	4602      	mov	r2, r0
 800258e:	460b      	mov	r3, r1
 8002590:	1cd1      	adds	r1, r2, #3
 8002592:	f8c7 10f0 	str.w	r1, [r7, #240]	@ 0xf0
 8002596:	f143 0300 	adc.w	r3, r3, #0
 800259a:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 800259e:	4b7c      	ldr	r3, [pc, #496]	@ (8002790 <Set_Random_Motion_Values+0x100c>)
 80025a0:	685b      	ldr	r3, [r3, #4]
 80025a2:	461a      	mov	r2, r3
 80025a4:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 80025a8:	4413      	add	r3, r2
 80025aa:	461a      	mov	r2, r3
 80025ac:	4b78      	ldr	r3, [pc, #480]	@ (8002790 <Set_Random_Motion_Values+0x100c>)
 80025ae:	605a      	str	r2, [r3, #4]
    m_axes.AXIS_Z += -(3  + ((uint64_t)rand()*3*cnt)/RAND_MAX);
 80025b0:	f006 fe7c 	bl	80092ac <rand>
 80025b4:	4603      	mov	r3, r0
 80025b6:	17da      	asrs	r2, r3, #31
 80025b8:	f8c7 3188 	str.w	r3, [r7, #392]	@ 0x188
 80025bc:	f8c7 218c 	str.w	r2, [r7, #396]	@ 0x18c
 80025c0:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 80025c4:	2200      	movs	r2, #0
 80025c6:	f8c7 3180 	str.w	r3, [r7, #384]	@ 0x180
 80025ca:	f8c7 2184 	str.w	r2, [r7, #388]	@ 0x184
 80025ce:	e9d7 3462 	ldrd	r3, r4, [r7, #392]	@ 0x188
 80025d2:	4622      	mov	r2, r4
 80025d4:	e9d7 8960 	ldrd	r8, r9, [r7, #384]	@ 0x180
 80025d8:	4641      	mov	r1, r8
 80025da:	fb01 f202 	mul.w	r2, r1, r2
 80025de:	464d      	mov	r5, r9
 80025e0:	4618      	mov	r0, r3
 80025e2:	4621      	mov	r1, r4
 80025e4:	4603      	mov	r3, r0
 80025e6:	fb03 f305 	mul.w	r3, r3, r5
 80025ea:	4413      	add	r3, r2
 80025ec:	4602      	mov	r2, r0
 80025ee:	4641      	mov	r1, r8
 80025f0:	fba2 2101 	umull	r2, r1, r2, r1
 80025f4:	f8c7 134c 	str.w	r1, [r7, #844]	@ 0x34c
 80025f8:	f8c7 2348 	str.w	r2, [r7, #840]	@ 0x348
 80025fc:	f8d7 234c 	ldr.w	r2, [r7, #844]	@ 0x34c
 8002600:	4413      	add	r3, r2
 8002602:	f8c7 334c 	str.w	r3, [r7, #844]	@ 0x34c
 8002606:	e9d7 45d2 	ldrd	r4, r5, [r7, #840]	@ 0x348
 800260a:	4622      	mov	r2, r4
 800260c:	462b      	mov	r3, r5
 800260e:	1891      	adds	r1, r2, r2
 8002610:	60b9      	str	r1, [r7, #8]
 8002612:	415b      	adcs	r3, r3
 8002614:	60fb      	str	r3, [r7, #12]
 8002616:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800261a:	4621      	mov	r1, r4
 800261c:	1851      	adds	r1, r2, r1
 800261e:	f8c7 1178 	str.w	r1, [r7, #376]	@ 0x178
 8002622:	4629      	mov	r1, r5
 8002624:	eb43 0101 	adc.w	r1, r3, r1
 8002628:	f8c7 117c 	str.w	r1, [r7, #380]	@ 0x17c
 800262c:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002630:	f04f 0300 	mov.w	r3, #0
 8002634:	e9d7 015e 	ldrd	r0, r1, [r7, #376]	@ 0x178
 8002638:	f7fe fdc8 	bl	80011cc <__aeabi_uldivmod>
 800263c:	4602      	mov	r2, r0
 800263e:	460b      	mov	r3, r1
 8002640:	f06f 0002 	mvn.w	r0, #2
 8002644:	f04f 31ff 	mov.w	r1, #4294967295
 8002648:	1a80      	subs	r0, r0, r2
 800264a:	f8c7 00e8 	str.w	r0, [r7, #232]	@ 0xe8
 800264e:	eb61 0303 	sbc.w	r3, r1, r3
 8002652:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8002656:	4b4e      	ldr	r3, [pc, #312]	@ (8002790 <Set_Random_Motion_Values+0x100c>)
 8002658:	689b      	ldr	r3, [r3, #8]
 800265a:	461a      	mov	r2, r3
 800265c:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8002660:	4413      	add	r3, r2
 8002662:	461a      	mov	r2, r3
 8002664:	4b4a      	ldr	r3, [pc, #296]	@ (8002790 <Set_Random_Motion_Values+0x100c>)
 8002666:	609a      	str	r2, [r3, #8]
    q_axes.AXIS_X += (200 + ((uint64_t)rand()*7*cnt)/RAND_MAX);
 8002668:	f006 fe20 	bl	80092ac <rand>
 800266c:	4603      	mov	r3, r0
 800266e:	17da      	asrs	r2, r3, #31
 8002670:	f8c7 3170 	str.w	r3, [r7, #368]	@ 0x170
 8002674:	f8c7 2174 	str.w	r2, [r7, #372]	@ 0x174
 8002678:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 800267c:	2200      	movs	r2, #0
 800267e:	f8c7 3168 	str.w	r3, [r7, #360]	@ 0x168
 8002682:	f8c7 216c 	str.w	r2, [r7, #364]	@ 0x16c
 8002686:	e9d7 345c 	ldrd	r3, r4, [r7, #368]	@ 0x170
 800268a:	4622      	mov	r2, r4
 800268c:	e9d7 895a 	ldrd	r8, r9, [r7, #360]	@ 0x168
 8002690:	4641      	mov	r1, r8
 8002692:	fb01 f202 	mul.w	r2, r1, r2
 8002696:	464d      	mov	r5, r9
 8002698:	4618      	mov	r0, r3
 800269a:	4621      	mov	r1, r4
 800269c:	4603      	mov	r3, r0
 800269e:	fb03 f305 	mul.w	r3, r3, r5
 80026a2:	4413      	add	r3, r2
 80026a4:	4602      	mov	r2, r0
 80026a6:	4641      	mov	r1, r8
 80026a8:	fba2 2101 	umull	r2, r1, r2, r1
 80026ac:	f8c7 1344 	str.w	r1, [r7, #836]	@ 0x344
 80026b0:	f8c7 2340 	str.w	r2, [r7, #832]	@ 0x340
 80026b4:	f8d7 2344 	ldr.w	r2, [r7, #836]	@ 0x344
 80026b8:	4413      	add	r3, r2
 80026ba:	f8c7 3344 	str.w	r3, [r7, #836]	@ 0x344
 80026be:	e9d7 45d0 	ldrd	r4, r5, [r7, #832]	@ 0x340
 80026c2:	4622      	mov	r2, r4
 80026c4:	462b      	mov	r3, r5
 80026c6:	f04f 0000 	mov.w	r0, #0
 80026ca:	f04f 0100 	mov.w	r1, #0
 80026ce:	00d9      	lsls	r1, r3, #3
 80026d0:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80026d4:	00d0      	lsls	r0, r2, #3
 80026d6:	4602      	mov	r2, r0
 80026d8:	460b      	mov	r3, r1
 80026da:	4620      	mov	r0, r4
 80026dc:	4629      	mov	r1, r5
 80026de:	4604      	mov	r4, r0
 80026e0:	1b14      	subs	r4, r2, r4
 80026e2:	f8c7 4160 	str.w	r4, [r7, #352]	@ 0x160
 80026e6:	eb63 0301 	sbc.w	r3, r3, r1
 80026ea:	f8c7 3164 	str.w	r3, [r7, #356]	@ 0x164
 80026ee:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 80026f2:	f04f 0300 	mov.w	r3, #0
 80026f6:	e9d7 0158 	ldrd	r0, r1, [r7, #352]	@ 0x160
 80026fa:	f7fe fd67 	bl	80011cc <__aeabi_uldivmod>
 80026fe:	4602      	mov	r2, r0
 8002700:	460b      	mov	r3, r1
 8002702:	f112 01c8 	adds.w	r1, r2, #200	@ 0xc8
 8002706:	f8c7 10e0 	str.w	r1, [r7, #224]	@ 0xe0
 800270a:	f143 0300 	adc.w	r3, r3, #0
 800270e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8002712:	4b20      	ldr	r3, [pc, #128]	@ (8002794 <Set_Random_Motion_Values+0x1010>)
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	461a      	mov	r2, r3
 8002718:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800271c:	4413      	add	r3, r2
 800271e:	461a      	mov	r2, r3
 8002720:	4b1c      	ldr	r3, [pc, #112]	@ (8002794 <Set_Random_Motion_Values+0x1010>)
 8002722:	601a      	str	r2, [r3, #0]
    q_axes.AXIS_Y -= (150 + ((uint64_t)rand()*3*cnt)/RAND_MAX);
 8002724:	f006 fdc2 	bl	80092ac <rand>
 8002728:	4603      	mov	r3, r0
 800272a:	17da      	asrs	r2, r3, #31
 800272c:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 8002730:	f8c7 215c 	str.w	r2, [r7, #348]	@ 0x15c
 8002734:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 8002738:	2200      	movs	r2, #0
 800273a:	f8c7 3150 	str.w	r3, [r7, #336]	@ 0x150
 800273e:	f8c7 2154 	str.w	r2, [r7, #340]	@ 0x154
 8002742:	e9d7 3456 	ldrd	r3, r4, [r7, #344]	@ 0x158
 8002746:	4622      	mov	r2, r4
 8002748:	e9d7 8954 	ldrd	r8, r9, [r7, #336]	@ 0x150
 800274c:	4641      	mov	r1, r8
 800274e:	fb01 f202 	mul.w	r2, r1, r2
 8002752:	464d      	mov	r5, r9
 8002754:	4618      	mov	r0, r3
 8002756:	4621      	mov	r1, r4
 8002758:	4603      	mov	r3, r0
 800275a:	fb03 f305 	mul.w	r3, r3, r5
 800275e:	4413      	add	r3, r2
 8002760:	4602      	mov	r2, r0
 8002762:	4641      	mov	r1, r8
 8002764:	fba2 2101 	umull	r2, r1, r2, r1
 8002768:	f8c7 133c 	str.w	r1, [r7, #828]	@ 0x33c
 800276c:	f8c7 2338 	str.w	r2, [r7, #824]	@ 0x338
 8002770:	f8d7 233c 	ldr.w	r2, [r7, #828]	@ 0x33c
 8002774:	4413      	add	r3, r2
 8002776:	f8c7 333c 	str.w	r3, [r7, #828]	@ 0x33c
 800277a:	e9d7 45ce 	ldrd	r4, r5, [r7, #824]	@ 0x338
 800277e:	4622      	mov	r2, r4
 8002780:	462b      	mov	r3, r5
 8002782:	1891      	adds	r1, r2, r2
 8002784:	6039      	str	r1, [r7, #0]
 8002786:	415b      	adcs	r3, r3
 8002788:	607b      	str	r3, [r7, #4]
 800278a:	e005      	b.n	8002798 <Set_Random_Motion_Values+0x1014>
 800278c:	2000025c 	.word	0x2000025c
 8002790:	20000268 	.word	0x20000268
 8002794:	20000274 	.word	0x20000274
 8002798:	e9d7 2300 	ldrd	r2, r3, [r7]
 800279c:	4621      	mov	r1, r4
 800279e:	1851      	adds	r1, r2, r1
 80027a0:	f8c7 1148 	str.w	r1, [r7, #328]	@ 0x148
 80027a4:	4629      	mov	r1, r5
 80027a6:	eb43 0101 	adc.w	r1, r3, r1
 80027aa:	f8c7 114c 	str.w	r1, [r7, #332]	@ 0x14c
 80027ae:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 80027b2:	f04f 0300 	mov.w	r3, #0
 80027b6:	e9d7 0152 	ldrd	r0, r1, [r7, #328]	@ 0x148
 80027ba:	f7fe fd07 	bl	80011cc <__aeabi_uldivmod>
 80027be:	4602      	mov	r2, r0
 80027c0:	460b      	mov	r3, r1
 80027c2:	f112 0196 	adds.w	r1, r2, #150	@ 0x96
 80027c6:	f8c7 10d8 	str.w	r1, [r7, #216]	@ 0xd8
 80027ca:	f143 0300 	adc.w	r3, r3, #0
 80027ce:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80027d2:	4b36      	ldr	r3, [pc, #216]	@ (80028ac <Set_Random_Motion_Values+0x1128>)
 80027d4:	685b      	ldr	r3, [r3, #4]
 80027d6:	461a      	mov	r2, r3
 80027d8:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80027dc:	1ad3      	subs	r3, r2, r3
 80027de:	461a      	mov	r2, r3
 80027e0:	4b32      	ldr	r3, [pc, #200]	@ (80028ac <Set_Random_Motion_Values+0x1128>)
 80027e2:	605a      	str	r2, [r3, #4]
    q_axes.AXIS_Z += (10  + ((uint64_t)rand()*5*cnt)/RAND_MAX);
 80027e4:	f006 fd62 	bl	80092ac <rand>
 80027e8:	4603      	mov	r3, r0
 80027ea:	17da      	asrs	r2, r3, #31
 80027ec:	f8c7 3140 	str.w	r3, [r7, #320]	@ 0x140
 80027f0:	f8c7 2144 	str.w	r2, [r7, #324]	@ 0x144
 80027f4:	f8d7 33e4 	ldr.w	r3, [r7, #996]	@ 0x3e4
 80027f8:	2200      	movs	r2, #0
 80027fa:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 80027fe:	f8c7 213c 	str.w	r2, [r7, #316]	@ 0x13c
 8002802:	e9d7 3450 	ldrd	r3, r4, [r7, #320]	@ 0x140
 8002806:	4622      	mov	r2, r4
 8002808:	e9d7 894e 	ldrd	r8, r9, [r7, #312]	@ 0x138
 800280c:	4641      	mov	r1, r8
 800280e:	fb01 f202 	mul.w	r2, r1, r2
 8002812:	464d      	mov	r5, r9
 8002814:	4618      	mov	r0, r3
 8002816:	4621      	mov	r1, r4
 8002818:	4603      	mov	r3, r0
 800281a:	fb03 f305 	mul.w	r3, r3, r5
 800281e:	4413      	add	r3, r2
 8002820:	4602      	mov	r2, r0
 8002822:	4641      	mov	r1, r8
 8002824:	fba2 2101 	umull	r2, r1, r2, r1
 8002828:	f8c7 1334 	str.w	r1, [r7, #820]	@ 0x334
 800282c:	f8c7 2330 	str.w	r2, [r7, #816]	@ 0x330
 8002830:	f8d7 2334 	ldr.w	r2, [r7, #820]	@ 0x334
 8002834:	4413      	add	r3, r2
 8002836:	f8c7 3334 	str.w	r3, [r7, #820]	@ 0x334
 800283a:	e9d7 45cc 	ldrd	r4, r5, [r7, #816]	@ 0x330
 800283e:	4622      	mov	r2, r4
 8002840:	462b      	mov	r3, r5
 8002842:	f04f 0000 	mov.w	r0, #0
 8002846:	f04f 0100 	mov.w	r1, #0
 800284a:	0099      	lsls	r1, r3, #2
 800284c:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8002850:	0090      	lsls	r0, r2, #2
 8002852:	4602      	mov	r2, r0
 8002854:	460b      	mov	r3, r1
 8002856:	4621      	mov	r1, r4
 8002858:	1851      	adds	r1, r2, r1
 800285a:	f8c7 1130 	str.w	r1, [r7, #304]	@ 0x130
 800285e:	4629      	mov	r1, r5
 8002860:	eb43 0101 	adc.w	r1, r3, r1
 8002864:	f8c7 1134 	str.w	r1, [r7, #308]	@ 0x134
 8002868:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 800286c:	f04f 0300 	mov.w	r3, #0
 8002870:	e9d7 014c 	ldrd	r0, r1, [r7, #304]	@ 0x130
 8002874:	f7fe fcaa 	bl	80011cc <__aeabi_uldivmod>
 8002878:	4602      	mov	r2, r0
 800287a:	460b      	mov	r3, r1
 800287c:	f112 010a 	adds.w	r1, r2, #10
 8002880:	f8c7 10d0 	str.w	r1, [r7, #208]	@ 0xd0
 8002884:	f143 0300 	adc.w	r3, r3, #0
 8002888:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800288c:	4b07      	ldr	r3, [pc, #28]	@ (80028ac <Set_Random_Motion_Values+0x1128>)
 800288e:	689b      	ldr	r3, [r3, #8]
 8002890:	461a      	mov	r2, r3
 8002892:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8002896:	4413      	add	r3, r2
 8002898:	461a      	mov	r2, r3
 800289a:	4b04      	ldr	r3, [pc, #16]	@ (80028ac <Set_Random_Motion_Values+0x1128>)
 800289c:	609a      	str	r2, [r3, #8]
}
 800289e:	bf00      	nop
 80028a0:	f507 777a 	add.w	r7, r7, #1000	@ 0x3e8
 80028a4:	46bd      	mov	sp, r7
 80028a6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80028aa:	bf00      	nop
 80028ac:	20000274 	.word	0x20000274

080028b0 <Reset_Motion_Values>:
 * @brief  Reset values for all motion sensor data
 * @param  None
 * @retval None
 */
static void Reset_Motion_Values(void)
{
 80028b0:	b480      	push	{r7}
 80028b2:	af00      	add	r7, sp, #0
  x_axes.AXIS_X = (x_axes.AXIS_X)%2000 == 0 ? -x_axes.AXIS_X : 10;
 80028b4:	4b6d      	ldr	r3, [pc, #436]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 80028b6:	681a      	ldr	r2, [r3, #0]
 80028b8:	4b6d      	ldr	r3, [pc, #436]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 80028ba:	fb83 1302 	smull	r1, r3, r3, r2
 80028be:	11d9      	asrs	r1, r3, #7
 80028c0:	17d3      	asrs	r3, r2, #31
 80028c2:	1acb      	subs	r3, r1, r3
 80028c4:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 80028c8:	fb01 f303 	mul.w	r3, r1, r3
 80028cc:	1ad3      	subs	r3, r2, r3
 80028ce:	2b00      	cmp	r3, #0
 80028d0:	d103      	bne.n	80028da <Reset_Motion_Values+0x2a>
 80028d2:	4b66      	ldr	r3, [pc, #408]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	425b      	negs	r3, r3
 80028d8:	e000      	b.n	80028dc <Reset_Motion_Values+0x2c>
 80028da:	230a      	movs	r3, #10
 80028dc:	4a63      	ldr	r2, [pc, #396]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 80028de:	6013      	str	r3, [r2, #0]
  x_axes.AXIS_Y = (x_axes.AXIS_Y)%2000 == 0 ? -x_axes.AXIS_Y : -10;
 80028e0:	4b62      	ldr	r3, [pc, #392]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 80028e2:	685a      	ldr	r2, [r3, #4]
 80028e4:	4b62      	ldr	r3, [pc, #392]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 80028e6:	fb83 1302 	smull	r1, r3, r3, r2
 80028ea:	11d9      	asrs	r1, r3, #7
 80028ec:	17d3      	asrs	r3, r2, #31
 80028ee:	1acb      	subs	r3, r1, r3
 80028f0:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 80028f4:	fb01 f303 	mul.w	r3, r1, r3
 80028f8:	1ad3      	subs	r3, r2, r3
 80028fa:	2b00      	cmp	r3, #0
 80028fc:	d103      	bne.n	8002906 <Reset_Motion_Values+0x56>
 80028fe:	4b5b      	ldr	r3, [pc, #364]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 8002900:	685b      	ldr	r3, [r3, #4]
 8002902:	425b      	negs	r3, r3
 8002904:	e001      	b.n	800290a <Reset_Motion_Values+0x5a>
 8002906:	f06f 0309 	mvn.w	r3, #9
 800290a:	4a58      	ldr	r2, [pc, #352]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 800290c:	6053      	str	r3, [r2, #4]
  x_axes.AXIS_Z = (x_axes.AXIS_Z)%2000 == 0 ? -x_axes.AXIS_Z : 10;
 800290e:	4b57      	ldr	r3, [pc, #348]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 8002910:	689a      	ldr	r2, [r3, #8]
 8002912:	4b57      	ldr	r3, [pc, #348]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 8002914:	fb83 1302 	smull	r1, r3, r3, r2
 8002918:	11d9      	asrs	r1, r3, #7
 800291a:	17d3      	asrs	r3, r2, #31
 800291c:	1acb      	subs	r3, r1, r3
 800291e:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 8002922:	fb01 f303 	mul.w	r3, r1, r3
 8002926:	1ad3      	subs	r3, r2, r3
 8002928:	2b00      	cmp	r3, #0
 800292a:	d103      	bne.n	8002934 <Reset_Motion_Values+0x84>
 800292c:	4b4f      	ldr	r3, [pc, #316]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 800292e:	689b      	ldr	r3, [r3, #8]
 8002930:	425b      	negs	r3, r3
 8002932:	e000      	b.n	8002936 <Reset_Motion_Values+0x86>
 8002934:	230a      	movs	r3, #10
 8002936:	4a4d      	ldr	r2, [pc, #308]	@ (8002a6c <Reset_Motion_Values+0x1bc>)
 8002938:	6093      	str	r3, [r2, #8]
  g_axes.AXIS_X = (g_axes.AXIS_X)%2000 == 0 ? -g_axes.AXIS_X : 100;
 800293a:	4b4e      	ldr	r3, [pc, #312]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 800293c:	681a      	ldr	r2, [r3, #0]
 800293e:	4b4c      	ldr	r3, [pc, #304]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 8002940:	fb83 1302 	smull	r1, r3, r3, r2
 8002944:	11d9      	asrs	r1, r3, #7
 8002946:	17d3      	asrs	r3, r2, #31
 8002948:	1acb      	subs	r3, r1, r3
 800294a:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 800294e:	fb01 f303 	mul.w	r3, r1, r3
 8002952:	1ad3      	subs	r3, r2, r3
 8002954:	2b00      	cmp	r3, #0
 8002956:	d103      	bne.n	8002960 <Reset_Motion_Values+0xb0>
 8002958:	4b46      	ldr	r3, [pc, #280]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 800295a:	681b      	ldr	r3, [r3, #0]
 800295c:	425b      	negs	r3, r3
 800295e:	e000      	b.n	8002962 <Reset_Motion_Values+0xb2>
 8002960:	2364      	movs	r3, #100	@ 0x64
 8002962:	4a44      	ldr	r2, [pc, #272]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 8002964:	6013      	str	r3, [r2, #0]
  g_axes.AXIS_Y = (g_axes.AXIS_Y)%2000 == 0 ? -g_axes.AXIS_Y : -100;
 8002966:	4b43      	ldr	r3, [pc, #268]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 8002968:	685a      	ldr	r2, [r3, #4]
 800296a:	4b41      	ldr	r3, [pc, #260]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 800296c:	fb83 1302 	smull	r1, r3, r3, r2
 8002970:	11d9      	asrs	r1, r3, #7
 8002972:	17d3      	asrs	r3, r2, #31
 8002974:	1acb      	subs	r3, r1, r3
 8002976:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 800297a:	fb01 f303 	mul.w	r3, r1, r3
 800297e:	1ad3      	subs	r3, r2, r3
 8002980:	2b00      	cmp	r3, #0
 8002982:	d103      	bne.n	800298c <Reset_Motion_Values+0xdc>
 8002984:	4b3b      	ldr	r3, [pc, #236]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 8002986:	685b      	ldr	r3, [r3, #4]
 8002988:	425b      	negs	r3, r3
 800298a:	e001      	b.n	8002990 <Reset_Motion_Values+0xe0>
 800298c:	f06f 0363 	mvn.w	r3, #99	@ 0x63
 8002990:	4a38      	ldr	r2, [pc, #224]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 8002992:	6053      	str	r3, [r2, #4]
  g_axes.AXIS_Z = (g_axes.AXIS_Z)%2000 == 0 ? -g_axes.AXIS_Z : 100;
 8002994:	4b37      	ldr	r3, [pc, #220]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 8002996:	689a      	ldr	r2, [r3, #8]
 8002998:	4b35      	ldr	r3, [pc, #212]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 800299a:	fb83 1302 	smull	r1, r3, r3, r2
 800299e:	11d9      	asrs	r1, r3, #7
 80029a0:	17d3      	asrs	r3, r2, #31
 80029a2:	1acb      	subs	r3, r1, r3
 80029a4:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 80029a8:	fb01 f303 	mul.w	r3, r1, r3
 80029ac:	1ad3      	subs	r3, r2, r3
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d103      	bne.n	80029ba <Reset_Motion_Values+0x10a>
 80029b2:	4b30      	ldr	r3, [pc, #192]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 80029b4:	689b      	ldr	r3, [r3, #8]
 80029b6:	425b      	negs	r3, r3
 80029b8:	e000      	b.n	80029bc <Reset_Motion_Values+0x10c>
 80029ba:	2364      	movs	r3, #100	@ 0x64
 80029bc:	4a2d      	ldr	r2, [pc, #180]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 80029be:	6093      	str	r3, [r2, #8]
  m_axes.AXIS_X = (g_axes.AXIS_X)%2000 == 0 ? -m_axes.AXIS_X : 3;
 80029c0:	4b2c      	ldr	r3, [pc, #176]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 80029c2:	681a      	ldr	r2, [r3, #0]
 80029c4:	4b2a      	ldr	r3, [pc, #168]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 80029c6:	fb83 1302 	smull	r1, r3, r3, r2
 80029ca:	11d9      	asrs	r1, r3, #7
 80029cc:	17d3      	asrs	r3, r2, #31
 80029ce:	1acb      	subs	r3, r1, r3
 80029d0:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 80029d4:	fb01 f303 	mul.w	r3, r1, r3
 80029d8:	1ad3      	subs	r3, r2, r3
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d103      	bne.n	80029e6 <Reset_Motion_Values+0x136>
 80029de:	4b26      	ldr	r3, [pc, #152]	@ (8002a78 <Reset_Motion_Values+0x1c8>)
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	425b      	negs	r3, r3
 80029e4:	e000      	b.n	80029e8 <Reset_Motion_Values+0x138>
 80029e6:	2303      	movs	r3, #3
 80029e8:	4a23      	ldr	r2, [pc, #140]	@ (8002a78 <Reset_Motion_Values+0x1c8>)
 80029ea:	6013      	str	r3, [r2, #0]
  m_axes.AXIS_Y = (g_axes.AXIS_Y)%2000 == 0 ? -m_axes.AXIS_Y : -3;
 80029ec:	4b21      	ldr	r3, [pc, #132]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 80029ee:	685a      	ldr	r2, [r3, #4]
 80029f0:	4b1f      	ldr	r3, [pc, #124]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 80029f2:	fb83 1302 	smull	r1, r3, r3, r2
 80029f6:	11d9      	asrs	r1, r3, #7
 80029f8:	17d3      	asrs	r3, r2, #31
 80029fa:	1acb      	subs	r3, r1, r3
 80029fc:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 8002a00:	fb01 f303 	mul.w	r3, r1, r3
 8002a04:	1ad3      	subs	r3, r2, r3
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	d103      	bne.n	8002a12 <Reset_Motion_Values+0x162>
 8002a0a:	4b1b      	ldr	r3, [pc, #108]	@ (8002a78 <Reset_Motion_Values+0x1c8>)
 8002a0c:	685b      	ldr	r3, [r3, #4]
 8002a0e:	425b      	negs	r3, r3
 8002a10:	e001      	b.n	8002a16 <Reset_Motion_Values+0x166>
 8002a12:	f06f 0302 	mvn.w	r3, #2
 8002a16:	4a18      	ldr	r2, [pc, #96]	@ (8002a78 <Reset_Motion_Values+0x1c8>)
 8002a18:	6053      	str	r3, [r2, #4]
  m_axes.AXIS_Z = (g_axes.AXIS_Z)%2000 == 0 ? -m_axes.AXIS_Z : 3;
 8002a1a:	4b16      	ldr	r3, [pc, #88]	@ (8002a74 <Reset_Motion_Values+0x1c4>)
 8002a1c:	689a      	ldr	r2, [r3, #8]
 8002a1e:	4b14      	ldr	r3, [pc, #80]	@ (8002a70 <Reset_Motion_Values+0x1c0>)
 8002a20:	fb83 1302 	smull	r1, r3, r3, r2
 8002a24:	11d9      	asrs	r1, r3, #7
 8002a26:	17d3      	asrs	r3, r2, #31
 8002a28:	1acb      	subs	r3, r1, r3
 8002a2a:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 8002a2e:	fb01 f303 	mul.w	r3, r1, r3
 8002a32:	1ad3      	subs	r3, r2, r3
 8002a34:	2b00      	cmp	r3, #0
 8002a36:	d103      	bne.n	8002a40 <Reset_Motion_Values+0x190>
 8002a38:	4b0f      	ldr	r3, [pc, #60]	@ (8002a78 <Reset_Motion_Values+0x1c8>)
 8002a3a:	689b      	ldr	r3, [r3, #8]
 8002a3c:	425b      	negs	r3, r3
 8002a3e:	e000      	b.n	8002a42 <Reset_Motion_Values+0x192>
 8002a40:	2303      	movs	r3, #3
 8002a42:	4a0d      	ldr	r2, [pc, #52]	@ (8002a78 <Reset_Motion_Values+0x1c8>)
 8002a44:	6093      	str	r3, [r2, #8]
  q_axes.AXIS_X = -q_axes.AXIS_X;
 8002a46:	4b0d      	ldr	r3, [pc, #52]	@ (8002a7c <Reset_Motion_Values+0x1cc>)
 8002a48:	681b      	ldr	r3, [r3, #0]
 8002a4a:	425b      	negs	r3, r3
 8002a4c:	4a0b      	ldr	r2, [pc, #44]	@ (8002a7c <Reset_Motion_Values+0x1cc>)
 8002a4e:	6013      	str	r3, [r2, #0]
  q_axes.AXIS_Y = -q_axes.AXIS_Y;
 8002a50:	4b0a      	ldr	r3, [pc, #40]	@ (8002a7c <Reset_Motion_Values+0x1cc>)
 8002a52:	685b      	ldr	r3, [r3, #4]
 8002a54:	425b      	negs	r3, r3
 8002a56:	4a09      	ldr	r2, [pc, #36]	@ (8002a7c <Reset_Motion_Values+0x1cc>)
 8002a58:	6053      	str	r3, [r2, #4]
  q_axes.AXIS_Z = -q_axes.AXIS_Z;
 8002a5a:	4b08      	ldr	r3, [pc, #32]	@ (8002a7c <Reset_Motion_Values+0x1cc>)
 8002a5c:	689b      	ldr	r3, [r3, #8]
 8002a5e:	425b      	negs	r3, r3
 8002a60:	4a06      	ldr	r2, [pc, #24]	@ (8002a7c <Reset_Motion_Values+0x1cc>)
 8002a62:	6093      	str	r3, [r2, #8]
}
 8002a64:	bf00      	nop
 8002a66:	46bd      	mov	sp, r7
 8002a68:	bc80      	pop	{r7}
 8002a6a:	4770      	bx	lr
 8002a6c:	20000250 	.word	0x20000250
 8002a70:	10624dd3 	.word	0x10624dd3
 8002a74:	2000025c 	.word	0x2000025c
 8002a78:	20000268 	.word	0x20000268
 8002a7c:	20000274 	.word	0x20000274

08002a80 <BSP_PB_Callback>:
  * @brief  BSP Push Button callback
  * @param  Button Specifies the pin connected EXTI line
  * @retval None.
  */
void BSP_PB_Callback(Button_TypeDef Button)
{
 8002a80:	b480      	push	{r7}
 8002a82:	b083      	sub	sp, #12
 8002a84:	af00      	add	r7, sp, #0
 8002a86:	4603      	mov	r3, r0
 8002a88:	71fb      	strb	r3, [r7, #7]
  /* Set the User Button flag */
  user_button_pressed = 1;
 8002a8a:	4b04      	ldr	r3, [pc, #16]	@ (8002a9c <BSP_PB_Callback+0x1c>)
 8002a8c:	2201      	movs	r2, #1
 8002a8e:	701a      	strb	r2, [r3, #0]
}
 8002a90:	bf00      	nop
 8002a92:	370c      	adds	r7, #12
 8002a94:	46bd      	mov	sp, r7
 8002a96:	bc80      	pop	{r7}
 8002a98:	4770      	bx	lr
 8002a9a:	bf00      	nop
 8002a9c:	20000216 	.word	0x20000216

08002aa0 <Add_HWServW2ST_Service>:
 * @brief  Add the 'HW' service (and the Environmental and AccGyr characteristics).
 * @param  None
 * @retval tBleStatus Status
 */
tBleStatus Add_HWServW2ST_Service(void)
{
 8002aa0:	b590      	push	{r4, r7, lr}
 8002aa2:	b08d      	sub	sp, #52	@ 0x34
 8002aa4:	af06      	add	r7, sp, #24
  tBleStatus ret;
  uint8_t uuid[16];

  /* Add_HWServW2ST_Service */
  COPY_HW_SENS_W2ST_SERVICE_UUID(uuid);
 8002aa6:	231b      	movs	r3, #27
 8002aa8:	713b      	strb	r3, [r7, #4]
 8002aaa:	23c5      	movs	r3, #197	@ 0xc5
 8002aac:	717b      	strb	r3, [r7, #5]
 8002aae:	23d5      	movs	r3, #213	@ 0xd5
 8002ab0:	71bb      	strb	r3, [r7, #6]
 8002ab2:	23a5      	movs	r3, #165	@ 0xa5
 8002ab4:	71fb      	strb	r3, [r7, #7]
 8002ab6:	2302      	movs	r3, #2
 8002ab8:	723b      	strb	r3, [r7, #8]
 8002aba:	2300      	movs	r3, #0
 8002abc:	727b      	strb	r3, [r7, #9]
 8002abe:	23b4      	movs	r3, #180	@ 0xb4
 8002ac0:	72bb      	strb	r3, [r7, #10]
 8002ac2:	239a      	movs	r3, #154	@ 0x9a
 8002ac4:	72fb      	strb	r3, [r7, #11]
 8002ac6:	23e1      	movs	r3, #225	@ 0xe1
 8002ac8:	733b      	strb	r3, [r7, #12]
 8002aca:	2311      	movs	r3, #17
 8002acc:	737b      	strb	r3, [r7, #13]
 8002ace:	2301      	movs	r3, #1
 8002ad0:	73bb      	strb	r3, [r7, #14]
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	73fb      	strb	r3, [r7, #15]
 8002ad6:	2300      	movs	r3, #0
 8002ad8:	743b      	strb	r3, [r7, #16]
 8002ada:	2300      	movs	r3, #0
 8002adc:	747b      	strb	r3, [r7, #17]
 8002ade:	2300      	movs	r3, #0
 8002ae0:	74bb      	strb	r3, [r7, #18]
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	74fb      	strb	r3, [r7, #19]
  BLUENRG_memcpy(&service_uuid.Service_UUID_128, uuid, 16);
 8002ae6:	4b52      	ldr	r3, [pc, #328]	@ (8002c30 <Add_HWServW2ST_Service+0x190>)
 8002ae8:	461c      	mov	r4, r3
 8002aea:	1d3b      	adds	r3, r7, #4
 8002aec:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002aee:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  ret = aci_gatt_add_serv(UUID_TYPE_128, service_uuid.Service_UUID_128, PRIMARY_SERVICE,
 8002af2:	4b50      	ldr	r3, [pc, #320]	@ (8002c34 <Add_HWServW2ST_Service+0x194>)
 8002af4:	9300      	str	r3, [sp, #0]
 8002af6:	2310      	movs	r3, #16
 8002af8:	2201      	movs	r2, #1
 8002afa:	494d      	ldr	r1, [pc, #308]	@ (8002c30 <Add_HWServW2ST_Service+0x190>)
 8002afc:	2002      	movs	r0, #2
 8002afe:	f005 fc82 	bl	8008406 <aci_gatt_add_serv>
 8002b02:	4603      	mov	r3, r0
 8002b04:	75fb      	strb	r3, [r7, #23]
                          1+3*5, &HWServW2STHandle);
  if (ret != BLE_STATUS_SUCCESS)
 8002b06:	7dfb      	ldrb	r3, [r7, #23]
 8002b08:	2b00      	cmp	r3, #0
 8002b0a:	d001      	beq.n	8002b10 <Add_HWServW2ST_Service+0x70>
    return BLE_STATUS_ERROR;
 8002b0c:	2347      	movs	r3, #71	@ 0x47
 8002b0e:	e08a      	b.n	8002c26 <Add_HWServW2ST_Service+0x186>

  /* Fill the Environmental BLE Characteristc */
  COPY_ENVIRONMENTAL_W2ST_CHAR_UUID(uuid);
 8002b10:	231b      	movs	r3, #27
 8002b12:	713b      	strb	r3, [r7, #4]
 8002b14:	23c5      	movs	r3, #197	@ 0xc5
 8002b16:	717b      	strb	r3, [r7, #5]
 8002b18:	23d5      	movs	r3, #213	@ 0xd5
 8002b1a:	71bb      	strb	r3, [r7, #6]
 8002b1c:	23a5      	movs	r3, #165	@ 0xa5
 8002b1e:	71fb      	strb	r3, [r7, #7]
 8002b20:	2302      	movs	r3, #2
 8002b22:	723b      	strb	r3, [r7, #8]
 8002b24:	2300      	movs	r3, #0
 8002b26:	727b      	strb	r3, [r7, #9]
 8002b28:	2336      	movs	r3, #54	@ 0x36
 8002b2a:	72bb      	strb	r3, [r7, #10]
 8002b2c:	23ac      	movs	r3, #172	@ 0xac
 8002b2e:	72fb      	strb	r3, [r7, #11]
 8002b30:	23e1      	movs	r3, #225	@ 0xe1
 8002b32:	733b      	strb	r3, [r7, #12]
 8002b34:	2311      	movs	r3, #17
 8002b36:	737b      	strb	r3, [r7, #13]
 8002b38:	2301      	movs	r3, #1
 8002b3a:	73bb      	strb	r3, [r7, #14]
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	73fb      	strb	r3, [r7, #15]
 8002b40:	2300      	movs	r3, #0
 8002b42:	743b      	strb	r3, [r7, #16]
 8002b44:	2300      	movs	r3, #0
 8002b46:	747b      	strb	r3, [r7, #17]
 8002b48:	2300      	movs	r3, #0
 8002b4a:	74bb      	strb	r3, [r7, #18]
 8002b4c:	2300      	movs	r3, #0
 8002b4e:	74fb      	strb	r3, [r7, #19]
  uuid[14] |= 0x04; /* One Temperature value*/
 8002b50:	7cbb      	ldrb	r3, [r7, #18]
 8002b52:	f043 0304 	orr.w	r3, r3, #4
 8002b56:	b2db      	uxtb	r3, r3
 8002b58:	74bb      	strb	r3, [r7, #18]
  uuid[14] |= 0x10; /* Pressure value*/
 8002b5a:	7cbb      	ldrb	r3, [r7, #18]
 8002b5c:	f043 0310 	orr.w	r3, r3, #16
 8002b60:	b2db      	uxtb	r3, r3
 8002b62:	74bb      	strb	r3, [r7, #18]
  BLUENRG_memcpy(&char_uuid.Char_UUID_128, uuid, 16);
 8002b64:	4b34      	ldr	r3, [pc, #208]	@ (8002c38 <Add_HWServW2ST_Service+0x198>)
 8002b66:	461c      	mov	r4, r3
 8002b68:	1d3b      	adds	r3, r7, #4
 8002b6a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002b6c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  ret =  aci_gatt_add_char(HWServW2STHandle, UUID_TYPE_128, char_uuid.Char_UUID_128,
 8002b70:	4b30      	ldr	r3, [pc, #192]	@ (8002c34 <Add_HWServW2ST_Service+0x194>)
 8002b72:	8818      	ldrh	r0, [r3, #0]
 8002b74:	4b31      	ldr	r3, [pc, #196]	@ (8002c3c <Add_HWServW2ST_Service+0x19c>)
 8002b76:	9305      	str	r3, [sp, #20]
 8002b78:	2300      	movs	r3, #0
 8002b7a:	9304      	str	r3, [sp, #16]
 8002b7c:	2310      	movs	r3, #16
 8002b7e:	9303      	str	r3, [sp, #12]
 8002b80:	2304      	movs	r3, #4
 8002b82:	9302      	str	r3, [sp, #8]
 8002b84:	2300      	movs	r3, #0
 8002b86:	9301      	str	r3, [sp, #4]
 8002b88:	2312      	movs	r3, #18
 8002b8a:	9300      	str	r3, [sp, #0]
 8002b8c:	2308      	movs	r3, #8
 8002b8e:	4a2a      	ldr	r2, [pc, #168]	@ (8002c38 <Add_HWServW2ST_Service+0x198>)
 8002b90:	2102      	movs	r1, #2
 8002b92:	f005 fcc1 	bl	8008518 <aci_gatt_add_char>
 8002b96:	4603      	mov	r3, r0
 8002b98:	75fb      	strb	r3, [r7, #23]
                           2+2+4,
                           CHAR_PROP_NOTIFY|CHAR_PROP_READ,
                           ATTR_PERMISSION_NONE,
                           GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
                           16, 0, &EnvironmentalCharHandle);
  if (ret != BLE_STATUS_SUCCESS)
 8002b9a:	7dfb      	ldrb	r3, [r7, #23]
 8002b9c:	2b00      	cmp	r3, #0
 8002b9e:	d001      	beq.n	8002ba4 <Add_HWServW2ST_Service+0x104>
    return BLE_STATUS_ERROR;
 8002ba0:	2347      	movs	r3, #71	@ 0x47
 8002ba2:	e040      	b.n	8002c26 <Add_HWServW2ST_Service+0x186>

  /* Fill the AccGyroMag BLE Characteristc */
  COPY_ACC_GYRO_MAG_W2ST_CHAR_UUID(uuid);
 8002ba4:	231b      	movs	r3, #27
 8002ba6:	713b      	strb	r3, [r7, #4]
 8002ba8:	23c5      	movs	r3, #197	@ 0xc5
 8002baa:	717b      	strb	r3, [r7, #5]
 8002bac:	23d5      	movs	r3, #213	@ 0xd5
 8002bae:	71bb      	strb	r3, [r7, #6]
 8002bb0:	23a5      	movs	r3, #165	@ 0xa5
 8002bb2:	71fb      	strb	r3, [r7, #7]
 8002bb4:	2302      	movs	r3, #2
 8002bb6:	723b      	strb	r3, [r7, #8]
 8002bb8:	2300      	movs	r3, #0
 8002bba:	727b      	strb	r3, [r7, #9]
 8002bbc:	2336      	movs	r3, #54	@ 0x36
 8002bbe:	72bb      	strb	r3, [r7, #10]
 8002bc0:	23ac      	movs	r3, #172	@ 0xac
 8002bc2:	72fb      	strb	r3, [r7, #11]
 8002bc4:	23e1      	movs	r3, #225	@ 0xe1
 8002bc6:	733b      	strb	r3, [r7, #12]
 8002bc8:	2311      	movs	r3, #17
 8002bca:	737b      	strb	r3, [r7, #13]
 8002bcc:	2301      	movs	r3, #1
 8002bce:	73bb      	strb	r3, [r7, #14]
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	73fb      	strb	r3, [r7, #15]
 8002bd4:	2300      	movs	r3, #0
 8002bd6:	743b      	strb	r3, [r7, #16]
 8002bd8:	2300      	movs	r3, #0
 8002bda:	747b      	strb	r3, [r7, #17]
 8002bdc:	23e0      	movs	r3, #224	@ 0xe0
 8002bde:	74bb      	strb	r3, [r7, #18]
 8002be0:	2300      	movs	r3, #0
 8002be2:	74fb      	strb	r3, [r7, #19]
  BLUENRG_memcpy(&char_uuid.Char_UUID_128, uuid, 16);
 8002be4:	4b14      	ldr	r3, [pc, #80]	@ (8002c38 <Add_HWServW2ST_Service+0x198>)
 8002be6:	461c      	mov	r4, r3
 8002be8:	1d3b      	adds	r3, r7, #4
 8002bea:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002bec:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  ret =  aci_gatt_add_char(HWServW2STHandle, UUID_TYPE_128, char_uuid.Char_UUID_128,
 8002bf0:	4b10      	ldr	r3, [pc, #64]	@ (8002c34 <Add_HWServW2ST_Service+0x194>)
 8002bf2:	8818      	ldrh	r0, [r3, #0]
 8002bf4:	4b12      	ldr	r3, [pc, #72]	@ (8002c40 <Add_HWServW2ST_Service+0x1a0>)
 8002bf6:	9305      	str	r3, [sp, #20]
 8002bf8:	2300      	movs	r3, #0
 8002bfa:	9304      	str	r3, [sp, #16]
 8002bfc:	2310      	movs	r3, #16
 8002bfe:	9303      	str	r3, [sp, #12]
 8002c00:	2304      	movs	r3, #4
 8002c02:	9302      	str	r3, [sp, #8]
 8002c04:	2300      	movs	r3, #0
 8002c06:	9301      	str	r3, [sp, #4]
 8002c08:	2310      	movs	r3, #16
 8002c0a:	9300      	str	r3, [sp, #0]
 8002c0c:	2314      	movs	r3, #20
 8002c0e:	4a0a      	ldr	r2, [pc, #40]	@ (8002c38 <Add_HWServW2ST_Service+0x198>)
 8002c10:	2102      	movs	r1, #2
 8002c12:	f005 fc81 	bl	8008518 <aci_gatt_add_char>
 8002c16:	4603      	mov	r3, r0
 8002c18:	75fb      	strb	r3, [r7, #23]
                           2+3*3*2,
                           CHAR_PROP_NOTIFY,
                           ATTR_PERMISSION_NONE,
                           GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
                           16, 0, &AccGyroMagCharHandle);
  if (ret != BLE_STATUS_SUCCESS)
 8002c1a:	7dfb      	ldrb	r3, [r7, #23]
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d001      	beq.n	8002c24 <Add_HWServW2ST_Service+0x184>
    return BLE_STATUS_ERROR;
 8002c20:	2347      	movs	r3, #71	@ 0x47
 8002c22:	e000      	b.n	8002c26 <Add_HWServW2ST_Service+0x186>

  return BLE_STATUS_SUCCESS;
 8002c24:	2300      	movs	r3, #0
}
 8002c26:	4618      	mov	r0, r3
 8002c28:	371c      	adds	r7, #28
 8002c2a:	46bd      	mov	sp, r7
 8002c2c:	bd90      	pop	{r4, r7, pc}
 8002c2e:	bf00      	nop
 8002c30:	20000228 	.word	0x20000228
 8002c34:	2000021c 	.word	0x2000021c
 8002c38:	20000238 	.word	0x20000238
 8002c3c:	2000021e 	.word	0x2000021e
 8002c40:	20000220 	.word	0x20000220

08002c44 <Add_SWServW2ST_Service>:
 * @brief  Add the SW Feature service using a vendor specific profile
 * @param  None
 * @retval tBleStatus Status
 */
tBleStatus Add_SWServW2ST_Service(void)
{
 8002c44:	b590      	push	{r4, r7, lr}
 8002c46:	b08d      	sub	sp, #52	@ 0x34
 8002c48:	af06      	add	r7, sp, #24
  tBleStatus ret;
  int32_t NumberOfRecords=1;
 8002c4a:	2301      	movs	r3, #1
 8002c4c:	617b      	str	r3, [r7, #20]
  uint8_t uuid[16];

  COPY_SW_SENS_W2ST_SERVICE_UUID(uuid);
 8002c4e:	231b      	movs	r3, #27
 8002c50:	703b      	strb	r3, [r7, #0]
 8002c52:	23c5      	movs	r3, #197	@ 0xc5
 8002c54:	707b      	strb	r3, [r7, #1]
 8002c56:	23d5      	movs	r3, #213	@ 0xd5
 8002c58:	70bb      	strb	r3, [r7, #2]
 8002c5a:	23a5      	movs	r3, #165	@ 0xa5
 8002c5c:	70fb      	strb	r3, [r7, #3]
 8002c5e:	2302      	movs	r3, #2
 8002c60:	713b      	strb	r3, [r7, #4]
 8002c62:	2300      	movs	r3, #0
 8002c64:	717b      	strb	r3, [r7, #5]
 8002c66:	23b4      	movs	r3, #180	@ 0xb4
 8002c68:	71bb      	strb	r3, [r7, #6]
 8002c6a:	239a      	movs	r3, #154	@ 0x9a
 8002c6c:	71fb      	strb	r3, [r7, #7]
 8002c6e:	23e1      	movs	r3, #225	@ 0xe1
 8002c70:	723b      	strb	r3, [r7, #8]
 8002c72:	2311      	movs	r3, #17
 8002c74:	727b      	strb	r3, [r7, #9]
 8002c76:	2302      	movs	r3, #2
 8002c78:	72bb      	strb	r3, [r7, #10]
 8002c7a:	2300      	movs	r3, #0
 8002c7c:	72fb      	strb	r3, [r7, #11]
 8002c7e:	2300      	movs	r3, #0
 8002c80:	733b      	strb	r3, [r7, #12]
 8002c82:	2300      	movs	r3, #0
 8002c84:	737b      	strb	r3, [r7, #13]
 8002c86:	2300      	movs	r3, #0
 8002c88:	73bb      	strb	r3, [r7, #14]
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	73fb      	strb	r3, [r7, #15]
  BLUENRG_memcpy(&service_uuid.Service_UUID_128, uuid, 16);
 8002c8e:	4b31      	ldr	r3, [pc, #196]	@ (8002d54 <Add_SWServW2ST_Service+0x110>)
 8002c90:	461c      	mov	r4, r3
 8002c92:	463b      	mov	r3, r7
 8002c94:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002c96:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  ret = aci_gatt_add_serv(UUID_TYPE_128, service_uuid.Service_UUID_128, PRIMARY_SERVICE,
 8002c9a:	697b      	ldr	r3, [r7, #20]
 8002c9c:	b2db      	uxtb	r3, r3
 8002c9e:	461a      	mov	r2, r3
 8002ca0:	0052      	lsls	r2, r2, #1
 8002ca2:	4413      	add	r3, r2
 8002ca4:	b2db      	uxtb	r3, r3
 8002ca6:	3301      	adds	r3, #1
 8002ca8:	b2db      	uxtb	r3, r3
 8002caa:	4a2b      	ldr	r2, [pc, #172]	@ (8002d58 <Add_SWServW2ST_Service+0x114>)
 8002cac:	9200      	str	r2, [sp, #0]
 8002cae:	2201      	movs	r2, #1
 8002cb0:	4928      	ldr	r1, [pc, #160]	@ (8002d54 <Add_SWServW2ST_Service+0x110>)
 8002cb2:	2002      	movs	r0, #2
 8002cb4:	f005 fba7 	bl	8008406 <aci_gatt_add_serv>
 8002cb8:	4603      	mov	r3, r0
 8002cba:	74fb      	strb	r3, [r7, #19]
                          1+3*NumberOfRecords, &SWServW2STHandle);

  if (ret != BLE_STATUS_SUCCESS) {
 8002cbc:	7cfb      	ldrb	r3, [r7, #19]
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d13f      	bne.n	8002d42 <Add_SWServW2ST_Service+0xfe>
    goto fail;
  }

  COPY_QUATERNIONS_W2ST_CHAR_UUID(uuid);
 8002cc2:	231b      	movs	r3, #27
 8002cc4:	703b      	strb	r3, [r7, #0]
 8002cc6:	23c5      	movs	r3, #197	@ 0xc5
 8002cc8:	707b      	strb	r3, [r7, #1]
 8002cca:	23d5      	movs	r3, #213	@ 0xd5
 8002ccc:	70bb      	strb	r3, [r7, #2]
 8002cce:	23a5      	movs	r3, #165	@ 0xa5
 8002cd0:	70fb      	strb	r3, [r7, #3]
 8002cd2:	2302      	movs	r3, #2
 8002cd4:	713b      	strb	r3, [r7, #4]
 8002cd6:	2300      	movs	r3, #0
 8002cd8:	717b      	strb	r3, [r7, #5]
 8002cda:	2336      	movs	r3, #54	@ 0x36
 8002cdc:	71bb      	strb	r3, [r7, #6]
 8002cde:	23ac      	movs	r3, #172	@ 0xac
 8002ce0:	71fb      	strb	r3, [r7, #7]
 8002ce2:	23e1      	movs	r3, #225	@ 0xe1
 8002ce4:	723b      	strb	r3, [r7, #8]
 8002ce6:	2311      	movs	r3, #17
 8002ce8:	727b      	strb	r3, [r7, #9]
 8002cea:	2301      	movs	r3, #1
 8002cec:	72bb      	strb	r3, [r7, #10]
 8002cee:	2300      	movs	r3, #0
 8002cf0:	72fb      	strb	r3, [r7, #11]
 8002cf2:	2300      	movs	r3, #0
 8002cf4:	733b      	strb	r3, [r7, #12]
 8002cf6:	2301      	movs	r3, #1
 8002cf8:	737b      	strb	r3, [r7, #13]
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	73bb      	strb	r3, [r7, #14]
 8002cfe:	2300      	movs	r3, #0
 8002d00:	73fb      	strb	r3, [r7, #15]
  BLUENRG_memcpy(&char_uuid.Char_UUID_128, uuid, 16);
 8002d02:	4b16      	ldr	r3, [pc, #88]	@ (8002d5c <Add_SWServW2ST_Service+0x118>)
 8002d04:	461c      	mov	r4, r3
 8002d06:	463b      	mov	r3, r7
 8002d08:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002d0a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  ret =  aci_gatt_add_char(SWServW2STHandle, UUID_TYPE_128, char_uuid.Char_UUID_128,
 8002d0e:	4b12      	ldr	r3, [pc, #72]	@ (8002d58 <Add_SWServW2ST_Service+0x114>)
 8002d10:	8818      	ldrh	r0, [r3, #0]
 8002d12:	4b13      	ldr	r3, [pc, #76]	@ (8002d60 <Add_SWServW2ST_Service+0x11c>)
 8002d14:	9305      	str	r3, [sp, #20]
 8002d16:	2300      	movs	r3, #0
 8002d18:	9304      	str	r3, [sp, #16]
 8002d1a:	2310      	movs	r3, #16
 8002d1c:	9303      	str	r3, [sp, #12]
 8002d1e:	2304      	movs	r3, #4
 8002d20:	9302      	str	r3, [sp, #8]
 8002d22:	2300      	movs	r3, #0
 8002d24:	9301      	str	r3, [sp, #4]
 8002d26:	2310      	movs	r3, #16
 8002d28:	9300      	str	r3, [sp, #0]
 8002d2a:	2308      	movs	r3, #8
 8002d2c:	4a0b      	ldr	r2, [pc, #44]	@ (8002d5c <Add_SWServW2ST_Service+0x118>)
 8002d2e:	2102      	movs	r1, #2
 8002d30:	f005 fbf2 	bl	8008518 <aci_gatt_add_char>
 8002d34:	4603      	mov	r3, r0
 8002d36:	74fb      	strb	r3, [r7, #19]
                           CHAR_PROP_NOTIFY,
                           ATTR_PERMISSION_NONE,
                           GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
                           16, 0, &QuaternionsCharHandle);

  if (ret != BLE_STATUS_SUCCESS) {
 8002d38:	7cfb      	ldrb	r3, [r7, #19]
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d103      	bne.n	8002d46 <Add_SWServW2ST_Service+0x102>
    goto fail;
  }

  return BLE_STATUS_SUCCESS;
 8002d3e:	2300      	movs	r3, #0
 8002d40:	e003      	b.n	8002d4a <Add_SWServW2ST_Service+0x106>
    goto fail;
 8002d42:	bf00      	nop
 8002d44:	e000      	b.n	8002d48 <Add_SWServW2ST_Service+0x104>
    goto fail;
 8002d46:	bf00      	nop

fail:
  return BLE_STATUS_ERROR;
 8002d48:	2347      	movs	r3, #71	@ 0x47
}
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	371c      	adds	r7, #28
 8002d4e:	46bd      	mov	sp, r7
 8002d50:	bd90      	pop	{r4, r7, pc}
 8002d52:	bf00      	nop
 8002d54:	20000228 	.word	0x20000228
 8002d58:	20000222 	.word	0x20000222
 8002d5c:	20000238 	.word	0x20000238
 8002d60:	20000224 	.word	0x20000224

08002d64 <Acc_Update>:
 * @brief  Update acceleration characteristic value
 * @param  AxesRaw_t structure containing acceleration value in mg.
 * @retval tBleStatus Status
 */
tBleStatus Acc_Update(AxesRaw_t *x_axes, AxesRaw_t *g_axes, AxesRaw_t *m_axes)
{
 8002d64:	b580      	push	{r7, lr}
 8002d66:	b08c      	sub	sp, #48	@ 0x30
 8002d68:	af02      	add	r7, sp, #8
 8002d6a:	60f8      	str	r0, [r7, #12]
 8002d6c:	60b9      	str	r1, [r7, #8]
 8002d6e:	607a      	str	r2, [r7, #4]
  uint8_t buff[2+2*3*3];
  tBleStatus ret;

  HOST_TO_LE_16(buff,(HAL_GetTick()>>3));
 8002d70:	f001 fcda 	bl	8004728 <HAL_GetTick>
 8002d74:	4603      	mov	r3, r0
 8002d76:	08db      	lsrs	r3, r3, #3
 8002d78:	b2db      	uxtb	r3, r3
 8002d7a:	743b      	strb	r3, [r7, #16]
 8002d7c:	f001 fcd4 	bl	8004728 <HAL_GetTick>
 8002d80:	4603      	mov	r3, r0
 8002d82:	0adb      	lsrs	r3, r3, #11
 8002d84:	b2db      	uxtb	r3, r3
 8002d86:	747b      	strb	r3, [r7, #17]

  HOST_TO_LE_16(buff+2,-x_axes->AXIS_Y);
 8002d88:	68fb      	ldr	r3, [r7, #12]
 8002d8a:	685b      	ldr	r3, [r3, #4]
 8002d8c:	b2db      	uxtb	r3, r3
 8002d8e:	425b      	negs	r3, r3
 8002d90:	b2db      	uxtb	r3, r3
 8002d92:	74bb      	strb	r3, [r7, #18]
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	685b      	ldr	r3, [r3, #4]
 8002d98:	425b      	negs	r3, r3
 8002d9a:	121b      	asrs	r3, r3, #8
 8002d9c:	b2db      	uxtb	r3, r3
 8002d9e:	74fb      	strb	r3, [r7, #19]
  HOST_TO_LE_16(buff+4, x_axes->AXIS_X);
 8002da0:	68fb      	ldr	r3, [r7, #12]
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	b2db      	uxtb	r3, r3
 8002da6:	753b      	strb	r3, [r7, #20]
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	121b      	asrs	r3, r3, #8
 8002dae:	b2db      	uxtb	r3, r3
 8002db0:	757b      	strb	r3, [r7, #21]
  HOST_TO_LE_16(buff+6,-x_axes->AXIS_Z);
 8002db2:	68fb      	ldr	r3, [r7, #12]
 8002db4:	689b      	ldr	r3, [r3, #8]
 8002db6:	b2db      	uxtb	r3, r3
 8002db8:	425b      	negs	r3, r3
 8002dba:	b2db      	uxtb	r3, r3
 8002dbc:	75bb      	strb	r3, [r7, #22]
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	689b      	ldr	r3, [r3, #8]
 8002dc2:	425b      	negs	r3, r3
 8002dc4:	121b      	asrs	r3, r3, #8
 8002dc6:	b2db      	uxtb	r3, r3
 8002dc8:	75fb      	strb	r3, [r7, #23]

  HOST_TO_LE_16(buff+8,g_axes->AXIS_Y);
 8002dca:	68bb      	ldr	r3, [r7, #8]
 8002dcc:	685b      	ldr	r3, [r3, #4]
 8002dce:	b2db      	uxtb	r3, r3
 8002dd0:	763b      	strb	r3, [r7, #24]
 8002dd2:	68bb      	ldr	r3, [r7, #8]
 8002dd4:	685b      	ldr	r3, [r3, #4]
 8002dd6:	121b      	asrs	r3, r3, #8
 8002dd8:	b2db      	uxtb	r3, r3
 8002dda:	767b      	strb	r3, [r7, #25]
  HOST_TO_LE_16(buff+10,g_axes->AXIS_X);
 8002ddc:	68bb      	ldr	r3, [r7, #8]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	b2db      	uxtb	r3, r3
 8002de2:	76bb      	strb	r3, [r7, #26]
 8002de4:	68bb      	ldr	r3, [r7, #8]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	121b      	asrs	r3, r3, #8
 8002dea:	b2db      	uxtb	r3, r3
 8002dec:	76fb      	strb	r3, [r7, #27]
  HOST_TO_LE_16(buff+12,g_axes->AXIS_Z);
 8002dee:	68bb      	ldr	r3, [r7, #8]
 8002df0:	689b      	ldr	r3, [r3, #8]
 8002df2:	b2db      	uxtb	r3, r3
 8002df4:	773b      	strb	r3, [r7, #28]
 8002df6:	68bb      	ldr	r3, [r7, #8]
 8002df8:	689b      	ldr	r3, [r3, #8]
 8002dfa:	121b      	asrs	r3, r3, #8
 8002dfc:	b2db      	uxtb	r3, r3
 8002dfe:	777b      	strb	r3, [r7, #29]

  HOST_TO_LE_16(buff+14,m_axes->AXIS_Y);
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	685b      	ldr	r3, [r3, #4]
 8002e04:	b2db      	uxtb	r3, r3
 8002e06:	77bb      	strb	r3, [r7, #30]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	685b      	ldr	r3, [r3, #4]
 8002e0c:	121b      	asrs	r3, r3, #8
 8002e0e:	b2db      	uxtb	r3, r3
 8002e10:	77fb      	strb	r3, [r7, #31]
  HOST_TO_LE_16(buff+16,m_axes->AXIS_X);
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	b2db      	uxtb	r3, r3
 8002e18:	f887 3020 	strb.w	r3, [r7, #32]
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	121b      	asrs	r3, r3, #8
 8002e22:	b2db      	uxtb	r3, r3
 8002e24:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
  HOST_TO_LE_16(buff+18,m_axes->AXIS_Z);
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	689b      	ldr	r3, [r3, #8]
 8002e2c:	b2db      	uxtb	r3, r3
 8002e2e:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	689b      	ldr	r3, [r3, #8]
 8002e36:	121b      	asrs	r3, r3, #8
 8002e38:	b2db      	uxtb	r3, r3
 8002e3a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23

  ret = aci_gatt_update_char_value(HWServW2STHandle, AccGyroMagCharHandle,
 8002e3e:	4b0c      	ldr	r3, [pc, #48]	@ (8002e70 <Acc_Update+0x10c>)
 8002e40:	8818      	ldrh	r0, [r3, #0]
 8002e42:	4b0c      	ldr	r3, [pc, #48]	@ (8002e74 <Acc_Update+0x110>)
 8002e44:	8819      	ldrh	r1, [r3, #0]
 8002e46:	f107 0310 	add.w	r3, r7, #16
 8002e4a:	9300      	str	r3, [sp, #0]
 8002e4c:	2314      	movs	r3, #20
 8002e4e:	2200      	movs	r2, #0
 8002e50:	f005 fc2d 	bl	80086ae <aci_gatt_update_char_value>
 8002e54:	4603      	mov	r3, r0
 8002e56:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
				   0, 2+2*3*3, buff);
  if (ret != BLE_STATUS_SUCCESS){
 8002e5a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d001      	beq.n	8002e66 <Acc_Update+0x102>
    PRINTF("Error while updating Acceleration characteristic: 0x%02X\n",ret) ;
    return BLE_STATUS_ERROR ;
 8002e62:	2347      	movs	r3, #71	@ 0x47
 8002e64:	e000      	b.n	8002e68 <Acc_Update+0x104>
  }

  return BLE_STATUS_SUCCESS;
 8002e66:	2300      	movs	r3, #0
}
 8002e68:	4618      	mov	r0, r3
 8002e6a:	3728      	adds	r7, #40	@ 0x28
 8002e6c:	46bd      	mov	sp, r7
 8002e6e:	bd80      	pop	{r7, pc}
 8002e70:	2000021c 	.word	0x2000021c
 8002e74:	20000220 	.word	0x20000220

08002e78 <Quat_Update>:
 * @brief  Update quaternions characteristic value
 * @param  SensorAxes_t *data Structure containing the quaterions
 * @retval tBleStatus      Status
 */
tBleStatus Quat_Update(AxesRaw_t *data)
{
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	b088      	sub	sp, #32
 8002e7c:	af02      	add	r7, sp, #8
 8002e7e:	6078      	str	r0, [r7, #4]
  tBleStatus ret;
  uint8_t buff[2+6*SEND_N_QUATERNIONS];

  HOST_TO_LE_16(buff,(HAL_GetTick()>>3));
 8002e80:	f001 fc52 	bl	8004728 <HAL_GetTick>
 8002e84:	4603      	mov	r3, r0
 8002e86:	08db      	lsrs	r3, r3, #3
 8002e88:	b2db      	uxtb	r3, r3
 8002e8a:	733b      	strb	r3, [r7, #12]
 8002e8c:	f001 fc4c 	bl	8004728 <HAL_GetTick>
 8002e90:	4603      	mov	r3, r0
 8002e92:	0adb      	lsrs	r3, r3, #11
 8002e94:	b2db      	uxtb	r3, r3
 8002e96:	737b      	strb	r3, [r7, #13]

#if SEND_N_QUATERNIONS == 1
  HOST_TO_LE_16(buff+2,data[0].AXIS_X);
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	b2db      	uxtb	r3, r3
 8002e9e:	73bb      	strb	r3, [r7, #14]
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	121b      	asrs	r3, r3, #8
 8002ea6:	b2db      	uxtb	r3, r3
 8002ea8:	73fb      	strb	r3, [r7, #15]
  HOST_TO_LE_16(buff+4,data[0].AXIS_Y);
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	685b      	ldr	r3, [r3, #4]
 8002eae:	b2db      	uxtb	r3, r3
 8002eb0:	743b      	strb	r3, [r7, #16]
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	685b      	ldr	r3, [r3, #4]
 8002eb6:	121b      	asrs	r3, r3, #8
 8002eb8:	b2db      	uxtb	r3, r3
 8002eba:	747b      	strb	r3, [r7, #17]
  HOST_TO_LE_16(buff+6,data[0].AXIS_Z);
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	689b      	ldr	r3, [r3, #8]
 8002ec0:	b2db      	uxtb	r3, r3
 8002ec2:	74bb      	strb	r3, [r7, #18]
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	689b      	ldr	r3, [r3, #8]
 8002ec8:	121b      	asrs	r3, r3, #8
 8002eca:	b2db      	uxtb	r3, r3
 8002ecc:	74fb      	strb	r3, [r7, #19]
  HOST_TO_LE_16(buff+18,data[2].AXIS_Z);
#else
#error SEND_N_QUATERNIONS could be only 1,2,3
#endif

  ret = aci_gatt_update_char_value(SWServW2STHandle, QuaternionsCharHandle,
 8002ece:	4b0b      	ldr	r3, [pc, #44]	@ (8002efc <Quat_Update+0x84>)
 8002ed0:	8818      	ldrh	r0, [r3, #0]
 8002ed2:	4b0b      	ldr	r3, [pc, #44]	@ (8002f00 <Quat_Update+0x88>)
 8002ed4:	8819      	ldrh	r1, [r3, #0]
 8002ed6:	f107 030c 	add.w	r3, r7, #12
 8002eda:	9300      	str	r3, [sp, #0]
 8002edc:	2308      	movs	r3, #8
 8002ede:	2200      	movs	r2, #0
 8002ee0:	f005 fbe5 	bl	80086ae <aci_gatt_update_char_value>
 8002ee4:	4603      	mov	r3, r0
 8002ee6:	75fb      	strb	r3, [r7, #23]
				   0, 2+6*SEND_N_QUATERNIONS, buff);
  if (ret != BLE_STATUS_SUCCESS){
 8002ee8:	7dfb      	ldrb	r3, [r7, #23]
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d001      	beq.n	8002ef2 <Quat_Update+0x7a>
    PRINTF("Error while updating Sensor Fusion characteristic: 0x%02X\n",ret) ;
    return BLE_STATUS_ERROR ;
 8002eee:	2347      	movs	r3, #71	@ 0x47
 8002ef0:	e000      	b.n	8002ef4 <Quat_Update+0x7c>
  }

  return BLE_STATUS_SUCCESS;
 8002ef2:	2300      	movs	r3, #0
}
 8002ef4:	4618      	mov	r0, r3
 8002ef6:	3718      	adds	r7, #24
 8002ef8:	46bd      	mov	sp, r7
 8002efa:	bd80      	pop	{r7, pc}
 8002efc:	20000222 	.word	0x20000222
 8002f00:	20000224 	.word	0x20000224

08002f04 <Read_Request_CB>:
* Description    : Update the sensor values.
* Input          : Handle of the characteristic to update.
* Return         : None.
*******************************************************************************/
void Read_Request_CB(uint16_t handle)
{
 8002f04:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002f08:	b08e      	sub	sp, #56	@ 0x38
 8002f0a:	af00      	add	r7, sp, #0
 8002f0c:	4603      	mov	r3, r0
 8002f0e:	84fb      	strh	r3, [r7, #38]	@ 0x26
  tBleStatus ret;

  if(handle == AccGyroMagCharHandle + 1)
 8002f10:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8002f12:	4b56      	ldr	r3, [pc, #344]	@ (800306c <Read_Request_CB+0x168>)
 8002f14:	881b      	ldrh	r3, [r3, #0]
 8002f16:	3301      	adds	r3, #1
 8002f18:	429a      	cmp	r2, r3
 8002f1a:	d105      	bne.n	8002f28 <Read_Request_CB+0x24>
  {
    Acc_Update(&x_axes, &g_axes, &m_axes);
 8002f1c:	4a54      	ldr	r2, [pc, #336]	@ (8003070 <Read_Request_CB+0x16c>)
 8002f1e:	4955      	ldr	r1, [pc, #340]	@ (8003074 <Read_Request_CB+0x170>)
 8002f20:	4855      	ldr	r0, [pc, #340]	@ (8003078 <Read_Request_CB+0x174>)
 8002f22:	f7ff ff1f 	bl	8002d64 <Acc_Update>
 8002f26:	e090      	b.n	800304a <Read_Request_CB+0x146>
  }
  else if (handle == EnvironmentalCharHandle + 1)
 8002f28:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8002f2a:	4b54      	ldr	r3, [pc, #336]	@ (800307c <Read_Request_CB+0x178>)
 8002f2c:	881b      	ldrh	r3, [r3, #0]
 8002f2e:	3301      	adds	r3, #1
 8002f30:	429a      	cmp	r2, r3
 8002f32:	f040 808a 	bne.w	800304a <Read_Request_CB+0x146>
  {
    float data_t, data_p;
    data_t = 27.0 + ((uint64_t)rand()*5)/RAND_MAX; //T sensor emulation
 8002f36:	f006 f9b9 	bl	80092ac <rand>
 8002f3a:	4603      	mov	r3, r0
 8002f3c:	17da      	asrs	r2, r3, #31
 8002f3e:	61bb      	str	r3, [r7, #24]
 8002f40:	61fa      	str	r2, [r7, #28]
 8002f42:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002f46:	f04f 0000 	mov.w	r0, #0
 8002f4a:	f04f 0100 	mov.w	r1, #0
 8002f4e:	0099      	lsls	r1, r3, #2
 8002f50:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 8002f54:	0090      	lsls	r0, r2, #2
 8002f56:	4602      	mov	r2, r0
 8002f58:	460b      	mov	r3, r1
 8002f5a:	69b9      	ldr	r1, [r7, #24]
 8002f5c:	1851      	adds	r1, r2, r1
 8002f5e:	6139      	str	r1, [r7, #16]
 8002f60:	69f9      	ldr	r1, [r7, #28]
 8002f62:	eb43 0101 	adc.w	r1, r3, r1
 8002f66:	6179      	str	r1, [r7, #20]
 8002f68:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002f6c:	f04f 0300 	mov.w	r3, #0
 8002f70:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002f74:	f7fe f92a 	bl	80011cc <__aeabi_uldivmod>
 8002f78:	4602      	mov	r2, r0
 8002f7a:	460b      	mov	r3, r1
 8002f7c:	4610      	mov	r0, r2
 8002f7e:	4619      	mov	r1, r3
 8002f80:	f7fd fa8c 	bl	800049c <__aeabi_ul2d>
 8002f84:	f04f 0200 	mov.w	r2, #0
 8002f88:	4b3d      	ldr	r3, [pc, #244]	@ (8003080 <Read_Request_CB+0x17c>)
 8002f8a:	f7fd f907 	bl	800019c <__adddf3>
 8002f8e:	4602      	mov	r2, r0
 8002f90:	460b      	mov	r3, r1
 8002f92:	4610      	mov	r0, r2
 8002f94:	4619      	mov	r1, r3
 8002f96:	f7fd fdaf 	bl	8000af8 <__aeabi_d2f>
 8002f9a:	4603      	mov	r3, r0
 8002f9c:	637b      	str	r3, [r7, #52]	@ 0x34
    data_p = 1000.0 + ((uint64_t)rand()*100)/RAND_MAX; //P sensor emulation
 8002f9e:	f006 f985 	bl	80092ac <rand>
 8002fa2:	4603      	mov	r3, r0
 8002fa4:	17da      	asrs	r2, r3, #31
 8002fa6:	4698      	mov	r8, r3
 8002fa8:	4691      	mov	r9, r2
 8002faa:	4642      	mov	r2, r8
 8002fac:	464b      	mov	r3, r9
 8002fae:	1891      	adds	r1, r2, r2
 8002fb0:	6039      	str	r1, [r7, #0]
 8002fb2:	415b      	adcs	r3, r3
 8002fb4:	607b      	str	r3, [r7, #4]
 8002fb6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002fba:	eb12 0408 	adds.w	r4, r2, r8
 8002fbe:	eb43 0509 	adc.w	r5, r3, r9
 8002fc2:	f04f 0200 	mov.w	r2, #0
 8002fc6:	f04f 0300 	mov.w	r3, #0
 8002fca:	016b      	lsls	r3, r5, #5
 8002fcc:	ea43 63d4 	orr.w	r3, r3, r4, lsr #27
 8002fd0:	0162      	lsls	r2, r4, #5
 8002fd2:	eb14 0a02 	adds.w	sl, r4, r2
 8002fd6:	eb45 0b03 	adc.w	fp, r5, r3
 8002fda:	eb1a 0308 	adds.w	r3, sl, r8
 8002fde:	60bb      	str	r3, [r7, #8]
 8002fe0:	eb4b 0309 	adc.w	r3, fp, r9
 8002fe4:	60fb      	str	r3, [r7, #12]
 8002fe6:	f06f 4200 	mvn.w	r2, #2147483648	@ 0x80000000
 8002fea:	f04f 0300 	mov.w	r3, #0
 8002fee:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002ff2:	f7fe f8eb 	bl	80011cc <__aeabi_uldivmod>
 8002ff6:	4602      	mov	r2, r0
 8002ff8:	460b      	mov	r3, r1
 8002ffa:	4610      	mov	r0, r2
 8002ffc:	4619      	mov	r1, r3
 8002ffe:	f7fd fa4d 	bl	800049c <__aeabi_ul2d>
 8003002:	f04f 0200 	mov.w	r2, #0
 8003006:	4b1f      	ldr	r3, [pc, #124]	@ (8003084 <Read_Request_CB+0x180>)
 8003008:	f7fd f8c8 	bl	800019c <__adddf3>
 800300c:	4602      	mov	r2, r0
 800300e:	460b      	mov	r3, r1
 8003010:	4610      	mov	r0, r2
 8003012:	4619      	mov	r1, r3
 8003014:	f7fd fd70 	bl	8000af8 <__aeabi_d2f>
 8003018:	4603      	mov	r3, r0
 800301a:	633b      	str	r3, [r7, #48]	@ 0x30
    BlueMS_Environmental_Update((int32_t)(data_p *100), (int16_t)(data_t * 10));
 800301c:	491a      	ldr	r1, [pc, #104]	@ (8003088 <Read_Request_CB+0x184>)
 800301e:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8003020:	f7fd fec8 	bl	8000db4 <__aeabi_fmul>
 8003024:	4603      	mov	r3, r0
 8003026:	4618      	mov	r0, r3
 8003028:	f7fe f88a 	bl	8001140 <__aeabi_f2iz>
 800302c:	4604      	mov	r4, r0
 800302e:	4917      	ldr	r1, [pc, #92]	@ (800308c <Read_Request_CB+0x188>)
 8003030:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8003032:	f7fd febf 	bl	8000db4 <__aeabi_fmul>
 8003036:	4603      	mov	r3, r0
 8003038:	4618      	mov	r0, r3
 800303a:	f7fe f881 	bl	8001140 <__aeabi_f2iz>
 800303e:	4603      	mov	r3, r0
 8003040:	b21b      	sxth	r3, r3
 8003042:	4619      	mov	r1, r3
 8003044:	4620      	mov	r0, r4
 8003046:	f000 f825 	bl	8003094 <BlueMS_Environmental_Update>
  }

  if(connection_handle !=0)
 800304a:	4b11      	ldr	r3, [pc, #68]	@ (8003090 <Read_Request_CB+0x18c>)
 800304c:	881b      	ldrh	r3, [r3, #0]
 800304e:	2b00      	cmp	r3, #0
 8003050:	d007      	beq.n	8003062 <Read_Request_CB+0x15e>
  {
    ret = aci_gatt_allow_read(connection_handle);
 8003052:	4b0f      	ldr	r3, [pc, #60]	@ (8003090 <Read_Request_CB+0x18c>)
 8003054:	881b      	ldrh	r3, [r3, #0]
 8003056:	4618      	mov	r0, r3
 8003058:	f005 fbb9 	bl	80087ce <aci_gatt_allow_read>
 800305c:	4603      	mov	r3, r0
 800305e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
    if (ret != BLE_STATUS_SUCCESS)
    {
      PRINTF("aci_gatt_allow_read() failed: 0x%02x\r\n", ret);
    }
  }
}
 8003062:	bf00      	nop
 8003064:	3738      	adds	r7, #56	@ 0x38
 8003066:	46bd      	mov	sp, r7
 8003068:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800306c:	20000220 	.word	0x20000220
 8003070:	20000268 	.word	0x20000268
 8003074:	2000025c 	.word	0x2000025c
 8003078:	20000250 	.word	0x20000250
 800307c:	2000021e 	.word	0x2000021e
 8003080:	403b0000 	.word	0x403b0000
 8003084:	408f4000 	.word	0x408f4000
 8003088:	42c80000 	.word	0x42c80000
 800308c:	41200000 	.word	0x41200000
 8003090:	20000248 	.word	0x20000248

08003094 <BlueMS_Environmental_Update>:

tBleStatus BlueMS_Environmental_Update(int32_t press, int16_t temp)
{
 8003094:	b580      	push	{r7, lr}
 8003096:	b088      	sub	sp, #32
 8003098:	af02      	add	r7, sp, #8
 800309a:	6078      	str	r0, [r7, #4]
 800309c:	460b      	mov	r3, r1
 800309e:	807b      	strh	r3, [r7, #2]
  tBleStatus ret;
  uint8_t buff[8];
  HOST_TO_LE_16(buff, HAL_GetTick()>>3);
 80030a0:	f001 fb42 	bl	8004728 <HAL_GetTick>
 80030a4:	4603      	mov	r3, r0
 80030a6:	08db      	lsrs	r3, r3, #3
 80030a8:	b2db      	uxtb	r3, r3
 80030aa:	733b      	strb	r3, [r7, #12]
 80030ac:	f001 fb3c 	bl	8004728 <HAL_GetTick>
 80030b0:	4603      	mov	r3, r0
 80030b2:	0adb      	lsrs	r3, r3, #11
 80030b4:	b2db      	uxtb	r3, r3
 80030b6:	737b      	strb	r3, [r7, #13]

  HOST_TO_LE_32(buff+2,press);
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	b2db      	uxtb	r3, r3
 80030bc:	73bb      	strb	r3, [r7, #14]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	121b      	asrs	r3, r3, #8
 80030c2:	b2db      	uxtb	r3, r3
 80030c4:	73fb      	strb	r3, [r7, #15]
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	141b      	asrs	r3, r3, #16
 80030ca:	b2db      	uxtb	r3, r3
 80030cc:	743b      	strb	r3, [r7, #16]
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	161b      	asrs	r3, r3, #24
 80030d2:	b2db      	uxtb	r3, r3
 80030d4:	747b      	strb	r3, [r7, #17]
  HOST_TO_LE_16(buff+6,temp);
 80030d6:	887b      	ldrh	r3, [r7, #2]
 80030d8:	b2db      	uxtb	r3, r3
 80030da:	74bb      	strb	r3, [r7, #18]
 80030dc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80030e0:	121b      	asrs	r3, r3, #8
 80030e2:	b21b      	sxth	r3, r3
 80030e4:	b2db      	uxtb	r3, r3
 80030e6:	74fb      	strb	r3, [r7, #19]

  ret = aci_gatt_update_char_value(HWServW2STHandle, EnvironmentalCharHandle,
 80030e8:	4b0b      	ldr	r3, [pc, #44]	@ (8003118 <BlueMS_Environmental_Update+0x84>)
 80030ea:	8818      	ldrh	r0, [r3, #0]
 80030ec:	4b0b      	ldr	r3, [pc, #44]	@ (800311c <BlueMS_Environmental_Update+0x88>)
 80030ee:	8819      	ldrh	r1, [r3, #0]
 80030f0:	f107 030c 	add.w	r3, r7, #12
 80030f4:	9300      	str	r3, [sp, #0]
 80030f6:	2308      	movs	r3, #8
 80030f8:	2200      	movs	r2, #0
 80030fa:	f005 fad8 	bl	80086ae <aci_gatt_update_char_value>
 80030fe:	4603      	mov	r3, r0
 8003100:	75fb      	strb	r3, [r7, #23]
                                   0, 8, buff);

  if (ret != BLE_STATUS_SUCCESS){
 8003102:	7dfb      	ldrb	r3, [r7, #23]
 8003104:	2b00      	cmp	r3, #0
 8003106:	d001      	beq.n	800310c <BlueMS_Environmental_Update+0x78>
    PRINTF("Error while updating TEMP characteristic: 0x%04X\n",ret) ;
    return BLE_STATUS_ERROR ;
 8003108:	2347      	movs	r3, #71	@ 0x47
 800310a:	e000      	b.n	800310e <BlueMS_Environmental_Update+0x7a>
  }

  return BLE_STATUS_SUCCESS;
 800310c:	2300      	movs	r3, #0
}
 800310e:	4618      	mov	r0, r3
 8003110:	3718      	adds	r7, #24
 8003112:	46bd      	mov	sp, r7
 8003114:	bd80      	pop	{r7, pc}
 8003116:	bf00      	nop
 8003118:	2000021c 	.word	0x2000021c
 800311c:	2000021e 	.word	0x2000021e

08003120 <Set_DeviceConnectable>:
 8003120:	b580      	push	{r7, lr}
 8003122:	b092      	sub	sp, #72	@ 0x48
 8003124:	af08      	add	r7, sp, #32
 8003126:	4a36      	ldr	r2, [pc, #216]	@ (8003200 <Set_DeviceConnectable+0xe0>)
 8003128:	f107 031c 	add.w	r3, r7, #28
 800312c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003130:	e883 0003 	stmia.w	r3, {r0, r1}
 8003134:	2302      	movs	r3, #2
 8003136:	703b      	strb	r3, [r7, #0]
 8003138:	230a      	movs	r3, #10
 800313a:	707b      	strb	r3, [r7, #1]
 800313c:	2300      	movs	r3, #0
 800313e:	70bb      	strb	r3, [r7, #2]
 8003140:	2308      	movs	r3, #8
 8003142:	70fb      	strb	r3, [r7, #3]
 8003144:	2309      	movs	r3, #9
 8003146:	713b      	strb	r3, [r7, #4]
 8003148:	2342      	movs	r3, #66	@ 0x42
 800314a:	717b      	strb	r3, [r7, #5]
 800314c:	236c      	movs	r3, #108	@ 0x6c
 800314e:	71bb      	strb	r3, [r7, #6]
 8003150:	2375      	movs	r3, #117	@ 0x75
 8003152:	71fb      	strb	r3, [r7, #7]
 8003154:	2365      	movs	r3, #101	@ 0x65
 8003156:	723b      	strb	r3, [r7, #8]
 8003158:	234e      	movs	r3, #78	@ 0x4e
 800315a:	727b      	strb	r3, [r7, #9]
 800315c:	2352      	movs	r3, #82	@ 0x52
 800315e:	72bb      	strb	r3, [r7, #10]
 8003160:	2347      	movs	r3, #71	@ 0x47
 8003162:	72fb      	strb	r3, [r7, #11]
 8003164:	230d      	movs	r3, #13
 8003166:	733b      	strb	r3, [r7, #12]
 8003168:	23ff      	movs	r3, #255	@ 0xff
 800316a:	737b      	strb	r3, [r7, #13]
 800316c:	2301      	movs	r3, #1
 800316e:	73bb      	strb	r3, [r7, #14]
 8003170:	2380      	movs	r3, #128	@ 0x80
 8003172:	73fb      	strb	r3, [r7, #15]
 8003174:	2300      	movs	r3, #0
 8003176:	743b      	strb	r3, [r7, #16]
 8003178:	23f4      	movs	r3, #244	@ 0xf4
 800317a:	747b      	strb	r3, [r7, #17]
 800317c:	2300      	movs	r3, #0
 800317e:	74bb      	strb	r3, [r7, #18]
 8003180:	2300      	movs	r3, #0
 8003182:	74fb      	strb	r3, [r7, #19]
 8003184:	4b1f      	ldr	r3, [pc, #124]	@ (8003204 <Set_DeviceConnectable+0xe4>)
 8003186:	795b      	ldrb	r3, [r3, #5]
 8003188:	753b      	strb	r3, [r7, #20]
 800318a:	4b1e      	ldr	r3, [pc, #120]	@ (8003204 <Set_DeviceConnectable+0xe4>)
 800318c:	791b      	ldrb	r3, [r3, #4]
 800318e:	757b      	strb	r3, [r7, #21]
 8003190:	4b1c      	ldr	r3, [pc, #112]	@ (8003204 <Set_DeviceConnectable+0xe4>)
 8003192:	78db      	ldrb	r3, [r3, #3]
 8003194:	75bb      	strb	r3, [r7, #22]
 8003196:	4b1b      	ldr	r3, [pc, #108]	@ (8003204 <Set_DeviceConnectable+0xe4>)
 8003198:	789b      	ldrb	r3, [r3, #2]
 800319a:	75fb      	strb	r3, [r7, #23]
 800319c:	4b19      	ldr	r3, [pc, #100]	@ (8003204 <Set_DeviceConnectable+0xe4>)
 800319e:	785b      	ldrb	r3, [r3, #1]
 80031a0:	763b      	strb	r3, [r7, #24]
 80031a2:	4b18      	ldr	r3, [pc, #96]	@ (8003204 <Set_DeviceConnectable+0xe4>)
 80031a4:	781b      	ldrb	r3, [r3, #0]
 80031a6:	767b      	strb	r3, [r7, #25]
 80031a8:	7cbb      	ldrb	r3, [r7, #18]
 80031aa:	f043 0301 	orr.w	r3, r3, #1
 80031ae:	b2db      	uxtb	r3, r3
 80031b0:	74bb      	strb	r3, [r7, #18]
 80031b2:	2100      	movs	r1, #0
 80031b4:	2000      	movs	r0, #0
 80031b6:	f005 fc6d 	bl	8008a94 <hci_le_set_scan_resp_data>
 80031ba:	2300      	movs	r3, #0
 80031bc:	9306      	str	r3, [sp, #24]
 80031be:	2300      	movs	r3, #0
 80031c0:	9305      	str	r3, [sp, #20]
 80031c2:	2300      	movs	r3, #0
 80031c4:	9304      	str	r3, [sp, #16]
 80031c6:	2300      	movs	r3, #0
 80031c8:	9303      	str	r3, [sp, #12]
 80031ca:	f107 031c 	add.w	r3, r7, #28
 80031ce:	9302      	str	r3, [sp, #8]
 80031d0:	2308      	movs	r3, #8
 80031d2:	9301      	str	r3, [sp, #4]
 80031d4:	2300      	movs	r3, #0
 80031d6:	9300      	str	r3, [sp, #0]
 80031d8:	2301      	movs	r3, #1
 80031da:	f44f 62f0 	mov.w	r2, #1920	@ 0x780
 80031de:	f44f 61c8 	mov.w	r1, #1600	@ 0x640
 80031e2:	2000      	movs	r0, #0
 80031e4:	f004 ff5a 	bl	800809c <aci_gap_set_discoverable>
 80031e8:	4603      	mov	r3, r0
 80031ea:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80031ee:	463b      	mov	r3, r7
 80031f0:	4619      	mov	r1, r3
 80031f2:	201a      	movs	r0, #26
 80031f4:	f005 f893 	bl	800831e <aci_gap_update_adv_data>
 80031f8:	bf00      	nop
 80031fa:	3728      	adds	r7, #40	@ 0x28
 80031fc:	46bd      	mov	sp, r7
 80031fe:	bd80      	pop	{r7, pc}
 8003200:	0800db20 	.word	0x0800db20
 8003204:	20000210 	.word	0x20000210

08003208 <user_notify>:
 8003208:	b580      	push	{r7, lr}
 800320a:	b088      	sub	sp, #32
 800320c:	af00      	add	r7, sp, #0
 800320e:	6078      	str	r0, [r7, #4]
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	61fb      	str	r3, [r7, #28]
 8003214:	69fb      	ldr	r3, [r7, #28]
 8003216:	3301      	adds	r3, #1
 8003218:	61bb      	str	r3, [r7, #24]
 800321a:	69fb      	ldr	r3, [r7, #28]
 800321c:	781b      	ldrb	r3, [r3, #0]
 800321e:	2b04      	cmp	r3, #4
 8003220:	d139      	bne.n	8003296 <user_notify+0x8e>
 8003222:	69bb      	ldr	r3, [r7, #24]
 8003224:	781b      	ldrb	r3, [r3, #0]
 8003226:	2bff      	cmp	r3, #255	@ 0xff
 8003228:	d01f      	beq.n	800326a <user_notify+0x62>
 800322a:	2bff      	cmp	r3, #255	@ 0xff
 800322c:	dc38      	bgt.n	80032a0 <user_notify+0x98>
 800322e:	2b05      	cmp	r3, #5
 8003230:	d002      	beq.n	8003238 <user_notify+0x30>
 8003232:	2b3e      	cmp	r3, #62	@ 0x3e
 8003234:	d003      	beq.n	800323e <user_notify+0x36>
 8003236:	e033      	b.n	80032a0 <user_notify+0x98>
 8003238:	f000 f836 	bl	80032a8 <GAP_DisconnectionComplete_CB>
 800323c:	e030      	b.n	80032a0 <user_notify+0x98>
 800323e:	69bb      	ldr	r3, [r7, #24]
 8003240:	3302      	adds	r3, #2
 8003242:	60fb      	str	r3, [r7, #12]
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	781b      	ldrb	r3, [r3, #0]
 8003248:	2b01      	cmp	r3, #1
 800324a:	d126      	bne.n	800329a <user_notify+0x92>
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	3301      	adds	r3, #1
 8003250:	60bb      	str	r3, [r7, #8]
 8003252:	68bb      	ldr	r3, [r7, #8]
 8003254:	1d5a      	adds	r2, r3, #5
 8003256:	68bb      	ldr	r3, [r7, #8]
 8003258:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 800325c:	b29b      	uxth	r3, r3
 800325e:	4619      	mov	r1, r3
 8003260:	4610      	mov	r0, r2
 8003262:	f000 f837 	bl	80032d4 <GAP_ConnectionComplete_CB>
 8003266:	bf00      	nop
 8003268:	e017      	b.n	800329a <user_notify+0x92>
 800326a:	69bb      	ldr	r3, [r7, #24]
 800326c:	3302      	adds	r3, #2
 800326e:	617b      	str	r3, [r7, #20]
 8003270:	697b      	ldr	r3, [r7, #20]
 8003272:	881b      	ldrh	r3, [r3, #0]
 8003274:	b29b      	uxth	r3, r3
 8003276:	461a      	mov	r2, r3
 8003278:	f640 4314 	movw	r3, #3092	@ 0xc14
 800327c:	429a      	cmp	r2, r3
 800327e:	d10e      	bne.n	800329e <user_notify+0x96>
 8003280:	697b      	ldr	r3, [r7, #20]
 8003282:	3302      	adds	r3, #2
 8003284:	613b      	str	r3, [r7, #16]
 8003286:	693b      	ldr	r3, [r7, #16]
 8003288:	885b      	ldrh	r3, [r3, #2]
 800328a:	b29b      	uxth	r3, r3
 800328c:	4618      	mov	r0, r3
 800328e:	f7ff fe39 	bl	8002f04 <Read_Request_CB>
 8003292:	bf00      	nop
 8003294:	e003      	b.n	800329e <user_notify+0x96>
 8003296:	bf00      	nop
 8003298:	e002      	b.n	80032a0 <user_notify+0x98>
 800329a:	bf00      	nop
 800329c:	e000      	b.n	80032a0 <user_notify+0x98>
 800329e:	bf00      	nop
 80032a0:	3720      	adds	r7, #32
 80032a2:	46bd      	mov	sp, r7
 80032a4:	bd80      	pop	{r7, pc}
	...

080032a8 <GAP_DisconnectionComplete_CB>:
 80032a8:	b480      	push	{r7}
 80032aa:	af00      	add	r7, sp, #0
 80032ac:	4b06      	ldr	r3, [pc, #24]	@ (80032c8 <GAP_DisconnectionComplete_CB+0x20>)
 80032ae:	2200      	movs	r2, #0
 80032b0:	601a      	str	r2, [r3, #0]
 80032b2:	4b06      	ldr	r3, [pc, #24]	@ (80032cc <GAP_DisconnectionComplete_CB+0x24>)
 80032b4:	2201      	movs	r2, #1
 80032b6:	701a      	strb	r2, [r3, #0]
 80032b8:	4b05      	ldr	r3, [pc, #20]	@ (80032d0 <GAP_DisconnectionComplete_CB+0x28>)
 80032ba:	2200      	movs	r2, #0
 80032bc:	701a      	strb	r2, [r3, #0]
 80032be:	bf00      	nop
 80032c0:	46bd      	mov	sp, r7
 80032c2:	bc80      	pop	{r7}
 80032c4:	4770      	bx	lr
 80032c6:	bf00      	nop
 80032c8:	2000024c 	.word	0x2000024c
 80032cc:	20000001 	.word	0x20000001
 80032d0:	2000024a 	.word	0x2000024a

080032d4 <GAP_ConnectionComplete_CB>:
 80032d4:	b480      	push	{r7}
 80032d6:	b085      	sub	sp, #20
 80032d8:	af00      	add	r7, sp, #0
 80032da:	6078      	str	r0, [r7, #4]
 80032dc:	460b      	mov	r3, r1
 80032de:	807b      	strh	r3, [r7, #2]
 80032e0:	4b0a      	ldr	r3, [pc, #40]	@ (800330c <GAP_ConnectionComplete_CB+0x38>)
 80032e2:	2201      	movs	r2, #1
 80032e4:	601a      	str	r2, [r3, #0]
 80032e6:	4a0a      	ldr	r2, [pc, #40]	@ (8003310 <GAP_ConnectionComplete_CB+0x3c>)
 80032e8:	887b      	ldrh	r3, [r7, #2]
 80032ea:	8013      	strh	r3, [r2, #0]
 80032ec:	2305      	movs	r3, #5
 80032ee:	60fb      	str	r3, [r7, #12]
 80032f0:	e002      	b.n	80032f8 <GAP_ConnectionComplete_CB+0x24>
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	3b01      	subs	r3, #1
 80032f6:	60fb      	str	r3, [r7, #12]
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	d1f9      	bne.n	80032f2 <GAP_ConnectionComplete_CB+0x1e>
 80032fe:	bf00      	nop
 8003300:	bf00      	nop
 8003302:	3714      	adds	r7, #20
 8003304:	46bd      	mov	sp, r7
 8003306:	bc80      	pop	{r7}
 8003308:	4770      	bx	lr
 800330a:	bf00      	nop
 800330c:	2000024c 	.word	0x2000024c
 8003310:	20000248 	.word	0x20000248

08003314 <HCI_TL_SPI_Init>:
 8003314:	b580      	push	{r7, lr}
 8003316:	b088      	sub	sp, #32
 8003318:	af00      	add	r7, sp, #0
 800331a:	6078      	str	r0, [r7, #4]
 800331c:	4b1e      	ldr	r3, [pc, #120]	@ (8003398 <HCI_TL_SPI_Init+0x84>)
 800331e:	69db      	ldr	r3, [r3, #28]
 8003320:	4a1d      	ldr	r2, [pc, #116]	@ (8003398 <HCI_TL_SPI_Init+0x84>)
 8003322:	f043 0301 	orr.w	r3, r3, #1
 8003326:	61d3      	str	r3, [r2, #28]
 8003328:	4b1b      	ldr	r3, [pc, #108]	@ (8003398 <HCI_TL_SPI_Init+0x84>)
 800332a:	69db      	ldr	r3, [r3, #28]
 800332c:	f003 0301 	and.w	r3, r3, #1
 8003330:	60bb      	str	r3, [r7, #8]
 8003332:	68bb      	ldr	r3, [r7, #8]
 8003334:	2301      	movs	r3, #1
 8003336:	60fb      	str	r3, [r7, #12]
 8003338:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 800333c:	613b      	str	r3, [r7, #16]
 800333e:	2300      	movs	r3, #0
 8003340:	617b      	str	r3, [r7, #20]
 8003342:	f107 030c 	add.w	r3, r7, #12
 8003346:	4619      	mov	r1, r3
 8003348:	4814      	ldr	r0, [pc, #80]	@ (800339c <HCI_TL_SPI_Init+0x88>)
 800334a:	f001 fb77 	bl	8004a3c <HAL_GPIO_Init>
 800334e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003352:	60fb      	str	r3, [r7, #12]
 8003354:	2301      	movs	r3, #1
 8003356:	613b      	str	r3, [r7, #16]
 8003358:	2300      	movs	r3, #0
 800335a:	617b      	str	r3, [r7, #20]
 800335c:	2300      	movs	r3, #0
 800335e:	61bb      	str	r3, [r7, #24]
 8003360:	f107 030c 	add.w	r3, r7, #12
 8003364:	4619      	mov	r1, r3
 8003366:	480d      	ldr	r0, [pc, #52]	@ (800339c <HCI_TL_SPI_Init+0x88>)
 8003368:	f001 fb68 	bl	8004a3c <HAL_GPIO_Init>
 800336c:	2302      	movs	r3, #2
 800336e:	60fb      	str	r3, [r7, #12]
 8003370:	2301      	movs	r3, #1
 8003372:	613b      	str	r3, [r7, #16]
 8003374:	2300      	movs	r3, #0
 8003376:	617b      	str	r3, [r7, #20]
 8003378:	2300      	movs	r3, #0
 800337a:	61bb      	str	r3, [r7, #24]
 800337c:	f107 030c 	add.w	r3, r7, #12
 8003380:	4619      	mov	r1, r3
 8003382:	4806      	ldr	r0, [pc, #24]	@ (800339c <HCI_TL_SPI_Init+0x88>)
 8003384:	f001 fb5a 	bl	8004a3c <HAL_GPIO_Init>
 8003388:	f000 fda2 	bl	8003ed0 <BSP_SPI1_Init>
 800338c:	4603      	mov	r3, r0
 800338e:	4618      	mov	r0, r3
 8003390:	3720      	adds	r7, #32
 8003392:	46bd      	mov	sp, r7
 8003394:	bd80      	pop	{r7, pc}
 8003396:	bf00      	nop
 8003398:	40023800 	.word	0x40023800
 800339c:	40020000 	.word	0x40020000

080033a0 <HCI_TL_SPI_DeInit>:
 80033a0:	b580      	push	{r7, lr}
 80033a2:	af00      	add	r7, sp, #0
 80033a4:	2101      	movs	r1, #1
 80033a6:	4807      	ldr	r0, [pc, #28]	@ (80033c4 <HCI_TL_SPI_DeInit+0x24>)
 80033a8:	f001 fcd8 	bl	8004d5c <HAL_GPIO_DeInit>
 80033ac:	2102      	movs	r1, #2
 80033ae:	4805      	ldr	r0, [pc, #20]	@ (80033c4 <HCI_TL_SPI_DeInit+0x24>)
 80033b0:	f001 fcd4 	bl	8004d5c <HAL_GPIO_DeInit>
 80033b4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80033b8:	4802      	ldr	r0, [pc, #8]	@ (80033c4 <HCI_TL_SPI_DeInit+0x24>)
 80033ba:	f001 fccf 	bl	8004d5c <HAL_GPIO_DeInit>
 80033be:	2300      	movs	r3, #0
 80033c0:	4618      	mov	r0, r3
 80033c2:	bd80      	pop	{r7, pc}
 80033c4:	40020000 	.word	0x40020000

080033c8 <HCI_TL_SPI_Reset>:
 80033c8:	b580      	push	{r7, lr}
 80033ca:	af00      	add	r7, sp, #0
 80033cc:	2201      	movs	r2, #1
 80033ce:	2102      	movs	r1, #2
 80033d0:	480b      	ldr	r0, [pc, #44]	@ (8003400 <HCI_TL_SPI_Reset+0x38>)
 80033d2:	f001 fdca 	bl	8004f6a <HAL_GPIO_WritePin>
 80033d6:	2200      	movs	r2, #0
 80033d8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80033dc:	4808      	ldr	r0, [pc, #32]	@ (8003400 <HCI_TL_SPI_Reset+0x38>)
 80033de:	f001 fdc4 	bl	8004f6a <HAL_GPIO_WritePin>
 80033e2:	2005      	movs	r0, #5
 80033e4:	f001 f9aa 	bl	800473c <HAL_Delay>
 80033e8:	2201      	movs	r2, #1
 80033ea:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80033ee:	4804      	ldr	r0, [pc, #16]	@ (8003400 <HCI_TL_SPI_Reset+0x38>)
 80033f0:	f001 fdbb 	bl	8004f6a <HAL_GPIO_WritePin>
 80033f4:	2005      	movs	r0, #5
 80033f6:	f001 f9a1 	bl	800473c <HAL_Delay>
 80033fa:	2300      	movs	r3, #0
 80033fc:	4618      	mov	r0, r3
 80033fe:	bd80      	pop	{r7, pc}
 8003400:	40020000 	.word	0x40020000

08003404 <HCI_TL_SPI_Receive>:
 8003404:	b580      	push	{r7, lr}
 8003406:	b088      	sub	sp, #32
 8003408:	af00      	add	r7, sp, #0
 800340a:	6078      	str	r0, [r7, #4]
 800340c:	460b      	mov	r3, r1
 800340e:	807b      	strh	r3, [r7, #2]
 8003410:	2300      	movs	r3, #0
 8003412:	777b      	strb	r3, [r7, #29]
 8003414:	23ff      	movs	r3, #255	@ 0xff
 8003416:	773b      	strb	r3, [r7, #28]
 8003418:	4a25      	ldr	r2, [pc, #148]	@ (80034b0 <HCI_TL_SPI_Receive+0xac>)
 800341a:	f107 0314 	add.w	r3, r7, #20
 800341e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003422:	6018      	str	r0, [r3, #0]
 8003424:	3304      	adds	r3, #4
 8003426:	7019      	strb	r1, [r3, #0]
 8003428:	2200      	movs	r2, #0
 800342a:	2102      	movs	r1, #2
 800342c:	4821      	ldr	r0, [pc, #132]	@ (80034b4 <HCI_TL_SPI_Receive+0xb0>)
 800342e:	f001 fd9c 	bl	8004f6a <HAL_GPIO_WritePin>
 8003432:	f107 010c 	add.w	r1, r7, #12
 8003436:	f107 0314 	add.w	r3, r7, #20
 800343a:	2205      	movs	r2, #5
 800343c:	4618      	mov	r0, r3
 800343e:	f000 fd77 	bl	8003f30 <BSP_SPI1_SendRecv>
 8003442:	7b3b      	ldrb	r3, [r7, #12]
 8003444:	2b02      	cmp	r3, #2
 8003446:	d129      	bne.n	800349c <HCI_TL_SPI_Receive+0x98>
 8003448:	7c3b      	ldrb	r3, [r7, #16]
 800344a:	021b      	lsls	r3, r3, #8
 800344c:	b21a      	sxth	r2, r3
 800344e:	7bfb      	ldrb	r3, [r7, #15]
 8003450:	b21b      	sxth	r3, r3
 8003452:	4313      	orrs	r3, r2
 8003454:	b21b      	sxth	r3, r3
 8003456:	83fb      	strh	r3, [r7, #30]
 8003458:	8bfb      	ldrh	r3, [r7, #30]
 800345a:	2b00      	cmp	r3, #0
 800345c:	d01e      	beq.n	800349c <HCI_TL_SPI_Receive+0x98>
 800345e:	8bfa      	ldrh	r2, [r7, #30]
 8003460:	887b      	ldrh	r3, [r7, #2]
 8003462:	429a      	cmp	r2, r3
 8003464:	d901      	bls.n	800346a <HCI_TL_SPI_Receive+0x66>
 8003466:	887b      	ldrh	r3, [r7, #2]
 8003468:	83fb      	strh	r3, [r7, #30]
 800346a:	2300      	movs	r3, #0
 800346c:	777b      	strb	r3, [r7, #29]
 800346e:	e010      	b.n	8003492 <HCI_TL_SPI_Receive+0x8e>
 8003470:	f107 011b 	add.w	r1, r7, #27
 8003474:	f107 031c 	add.w	r3, r7, #28
 8003478:	2201      	movs	r2, #1
 800347a:	4618      	mov	r0, r3
 800347c:	f000 fd58 	bl	8003f30 <BSP_SPI1_SendRecv>
 8003480:	7f7b      	ldrb	r3, [r7, #29]
 8003482:	687a      	ldr	r2, [r7, #4]
 8003484:	4413      	add	r3, r2
 8003486:	7efa      	ldrb	r2, [r7, #27]
 8003488:	b2d2      	uxtb	r2, r2
 800348a:	701a      	strb	r2, [r3, #0]
 800348c:	7f7b      	ldrb	r3, [r7, #29]
 800348e:	3301      	adds	r3, #1
 8003490:	777b      	strb	r3, [r7, #29]
 8003492:	7f7b      	ldrb	r3, [r7, #29]
 8003494:	b29b      	uxth	r3, r3
 8003496:	8bfa      	ldrh	r2, [r7, #30]
 8003498:	429a      	cmp	r2, r3
 800349a:	d8e9      	bhi.n	8003470 <HCI_TL_SPI_Receive+0x6c>
 800349c:	2201      	movs	r2, #1
 800349e:	2102      	movs	r1, #2
 80034a0:	4804      	ldr	r0, [pc, #16]	@ (80034b4 <HCI_TL_SPI_Receive+0xb0>)
 80034a2:	f001 fd62 	bl	8004f6a <HAL_GPIO_WritePin>
 80034a6:	7f7b      	ldrb	r3, [r7, #29]
 80034a8:	4618      	mov	r0, r3
 80034aa:	3720      	adds	r7, #32
 80034ac:	46bd      	mov	sp, r7
 80034ae:	bd80      	pop	{r7, pc}
 80034b0:	0800db28 	.word	0x0800db28
 80034b4:	40020000 	.word	0x40020000

080034b8 <HCI_TL_SPI_Send>:
 80034b8:	b580      	push	{r7, lr}
 80034ba:	b088      	sub	sp, #32
 80034bc:	af00      	add	r7, sp, #0
 80034be:	6078      	str	r0, [r7, #4]
 80034c0:	460b      	mov	r3, r1
 80034c2:	807b      	strh	r3, [r7, #2]
 80034c4:	4a23      	ldr	r2, [pc, #140]	@ (8003554 <HCI_TL_SPI_Send+0x9c>)
 80034c6:	f107 0310 	add.w	r3, r7, #16
 80034ca:	e892 0003 	ldmia.w	r2, {r0, r1}
 80034ce:	6018      	str	r0, [r3, #0]
 80034d0:	3304      	adds	r3, #4
 80034d2:	7019      	strb	r1, [r3, #0]
 80034d4:	f001 f928 	bl	8004728 <HAL_GetTick>
 80034d8:	61b8      	str	r0, [r7, #24]
 80034da:	2300      	movs	r3, #0
 80034dc:	61fb      	str	r3, [r7, #28]
 80034de:	2200      	movs	r2, #0
 80034e0:	2102      	movs	r1, #2
 80034e2:	481d      	ldr	r0, [pc, #116]	@ (8003558 <HCI_TL_SPI_Send+0xa0>)
 80034e4:	f001 fd41 	bl	8004f6a <HAL_GPIO_WritePin>
 80034e8:	f107 0108 	add.w	r1, r7, #8
 80034ec:	f107 0310 	add.w	r3, r7, #16
 80034f0:	2205      	movs	r2, #5
 80034f2:	4618      	mov	r0, r3
 80034f4:	f000 fd1c 	bl	8003f30 <BSP_SPI1_SendRecv>
 80034f8:	7a3b      	ldrb	r3, [r7, #8]
 80034fa:	2b02      	cmp	r3, #2
 80034fc:	d10f      	bne.n	800351e <HCI_TL_SPI_Send+0x66>
 80034fe:	7a7b      	ldrb	r3, [r7, #9]
 8003500:	461a      	mov	r2, r3
 8003502:	887b      	ldrh	r3, [r7, #2]
 8003504:	4293      	cmp	r3, r2
 8003506:	d806      	bhi.n	8003516 <HCI_TL_SPI_Send+0x5e>
 8003508:	887b      	ldrh	r3, [r7, #2]
 800350a:	461a      	mov	r2, r3
 800350c:	4913      	ldr	r1, [pc, #76]	@ (800355c <HCI_TL_SPI_Send+0xa4>)
 800350e:	6878      	ldr	r0, [r7, #4]
 8003510:	f000 fd0e 	bl	8003f30 <BSP_SPI1_SendRecv>
 8003514:	e006      	b.n	8003524 <HCI_TL_SPI_Send+0x6c>
 8003516:	f06f 0301 	mvn.w	r3, #1
 800351a:	61fb      	str	r3, [r7, #28]
 800351c:	e002      	b.n	8003524 <HCI_TL_SPI_Send+0x6c>
 800351e:	f04f 33ff 	mov.w	r3, #4294967295
 8003522:	61fb      	str	r3, [r7, #28]
 8003524:	2201      	movs	r2, #1
 8003526:	2102      	movs	r1, #2
 8003528:	480b      	ldr	r0, [pc, #44]	@ (8003558 <HCI_TL_SPI_Send+0xa0>)
 800352a:	f001 fd1e 	bl	8004f6a <HAL_GPIO_WritePin>
 800352e:	f001 f8fb 	bl	8004728 <HAL_GetTick>
 8003532:	4602      	mov	r2, r0
 8003534:	69bb      	ldr	r3, [r7, #24]
 8003536:	1ad3      	subs	r3, r2, r3
 8003538:	2b0f      	cmp	r3, #15
 800353a:	d903      	bls.n	8003544 <HCI_TL_SPI_Send+0x8c>
 800353c:	f06f 0302 	mvn.w	r3, #2
 8003540:	61fb      	str	r3, [r7, #28]
 8003542:	e002      	b.n	800354a <HCI_TL_SPI_Send+0x92>
 8003544:	69fb      	ldr	r3, [r7, #28]
 8003546:	2b00      	cmp	r3, #0
 8003548:	dbc7      	blt.n	80034da <HCI_TL_SPI_Send+0x22>
 800354a:	69fb      	ldr	r3, [r7, #28]
 800354c:	4618      	mov	r0, r3
 800354e:	3720      	adds	r7, #32
 8003550:	46bd      	mov	sp, r7
 8003552:	bd80      	pop	{r7, pc}
 8003554:	0800db30 	.word	0x0800db30
 8003558:	40020000 	.word	0x40020000
 800355c:	20000288 	.word	0x20000288

08003560 <IsDataAvailable>:
 8003560:	b580      	push	{r7, lr}
 8003562:	af00      	add	r7, sp, #0
 8003564:	2101      	movs	r1, #1
 8003566:	4805      	ldr	r0, [pc, #20]	@ (800357c <IsDataAvailable+0x1c>)
 8003568:	f001 fce8 	bl	8004f3c <HAL_GPIO_ReadPin>
 800356c:	4603      	mov	r3, r0
 800356e:	2b01      	cmp	r3, #1
 8003570:	bf0c      	ite	eq
 8003572:	2301      	moveq	r3, #1
 8003574:	2300      	movne	r3, #0
 8003576:	b2db      	uxtb	r3, r3
 8003578:	4618      	mov	r0, r3
 800357a:	bd80      	pop	{r7, pc}
 800357c:	40020000 	.word	0x40020000

08003580 <hci_tl_lowlevel_init>:
 8003580:	b580      	push	{r7, lr}
 8003582:	b088      	sub	sp, #32
 8003584:	af00      	add	r7, sp, #0
 8003586:	4b13      	ldr	r3, [pc, #76]	@ (80035d4 <hci_tl_lowlevel_init+0x54>)
 8003588:	607b      	str	r3, [r7, #4]
 800358a:	4b13      	ldr	r3, [pc, #76]	@ (80035d8 <hci_tl_lowlevel_init+0x58>)
 800358c:	60bb      	str	r3, [r7, #8]
 800358e:	4b13      	ldr	r3, [pc, #76]	@ (80035dc <hci_tl_lowlevel_init+0x5c>)
 8003590:	617b      	str	r3, [r7, #20]
 8003592:	4b13      	ldr	r3, [pc, #76]	@ (80035e0 <hci_tl_lowlevel_init+0x60>)
 8003594:	613b      	str	r3, [r7, #16]
 8003596:	4b13      	ldr	r3, [pc, #76]	@ (80035e4 <hci_tl_lowlevel_init+0x64>)
 8003598:	60fb      	str	r3, [r7, #12]
 800359a:	4b13      	ldr	r3, [pc, #76]	@ (80035e8 <hci_tl_lowlevel_init+0x68>)
 800359c:	61fb      	str	r3, [r7, #28]
 800359e:	1d3b      	adds	r3, r7, #4
 80035a0:	4618      	mov	r0, r3
 80035a2:	f005 fb93 	bl	8008ccc <hci_register_io_bus>
 80035a6:	f04f 61c0 	mov.w	r1, #100663296	@ 0x6000000
 80035aa:	4810      	ldr	r0, [pc, #64]	@ (80035ec <hci_tl_lowlevel_init+0x6c>)
 80035ac:	f001 fa0e 	bl	80049cc <HAL_EXTI_GetHandle>
 80035b0:	4a0f      	ldr	r2, [pc, #60]	@ (80035f0 <hci_tl_lowlevel_init+0x70>)
 80035b2:	2100      	movs	r1, #0
 80035b4:	480d      	ldr	r0, [pc, #52]	@ (80035ec <hci_tl_lowlevel_init+0x6c>)
 80035b6:	f001 f9f0 	bl	800499a <HAL_EXTI_RegisterCallback>
 80035ba:	2200      	movs	r2, #0
 80035bc:	2100      	movs	r1, #0
 80035be:	2006      	movs	r0, #6
 80035c0:	f001 f9b5 	bl	800492e <HAL_NVIC_SetPriority>
 80035c4:	2006      	movs	r0, #6
 80035c6:	f001 f9ce 	bl	8004966 <HAL_NVIC_EnableIRQ>
 80035ca:	bf00      	nop
 80035cc:	3720      	adds	r7, #32
 80035ce:	46bd      	mov	sp, r7
 80035d0:	bd80      	pop	{r7, pc}
 80035d2:	bf00      	nop
 80035d4:	08003315 	.word	0x08003315
 80035d8:	080033a1 	.word	0x080033a1
 80035dc:	080034b9 	.word	0x080034b9
 80035e0:	08003405 	.word	0x08003405
 80035e4:	080033c9 	.word	0x080033c9
 80035e8:	08003f71 	.word	0x08003f71
 80035ec:	20000280 	.word	0x20000280
 80035f0:	080035f5 	.word	0x080035f5

080035f4 <hci_tl_lowlevel_isr>:
 80035f4:	b580      	push	{r7, lr}
 80035f6:	af00      	add	r7, sp, #0
 80035f8:	e005      	b.n	8003606 <hci_tl_lowlevel_isr+0x12>
 80035fa:	2000      	movs	r0, #0
 80035fc:	f005 fcca 	bl	8008f94 <hci_notify_asynch_evt>
 8003600:	4603      	mov	r3, r0
 8003602:	2b00      	cmp	r3, #0
 8003604:	d105      	bne.n	8003612 <hci_tl_lowlevel_isr+0x1e>
 8003606:	f7ff ffab 	bl	8003560 <IsDataAvailable>
 800360a:	4603      	mov	r3, r0
 800360c:	2b00      	cmp	r3, #0
 800360e:	d1f4      	bne.n	80035fa <hci_tl_lowlevel_isr+0x6>
 8003610:	e000      	b.n	8003614 <hci_tl_lowlevel_isr+0x20>
 8003612:	bf00      	nop
 8003614:	bd80      	pop	{r7, pc}

08003616 <TSL2572_Init>:
#include "TSL2572.h"

HAL_StatusTypeDef TSL2572_Init(TSL2572 *tsl, I2C_HandleTypeDef *userHandle,
		uint8_t sensorAddress) {
 8003616:	b580      	push	{r7, lr}
 8003618:	b086      	sub	sp, #24
 800361a:	af00      	add	r7, sp, #0
 800361c:	60f8      	str	r0, [r7, #12]
 800361e:	60b9      	str	r1, [r7, #8]
 8003620:	4613      	mov	r3, r2
 8003622:	71fb      	strb	r3, [r7, #7]
	tsl->i2cHandle = userHandle;
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	68ba      	ldr	r2, [r7, #8]
 8003628:	601a      	str	r2, [r3, #0]
	tsl->address = sensorAddress;
 800362a:	68fb      	ldr	r3, [r7, #12]
 800362c:	79fa      	ldrb	r2, [r7, #7]
 800362e:	711a      	strb	r2, [r3, #4]

	//enable sensor
	HAL_StatusTypeDef status = TSL2572_WriteByte(tsl,
 8003630:	2203      	movs	r2, #3
 8003632:	21a0      	movs	r1, #160	@ 0xa0
 8003634:	68f8      	ldr	r0, [r7, #12]
 8003636:	f000 f8f0 	bl	800381a <TSL2572_WriteByte>
 800363a:	4603      	mov	r3, r0
 800363c:	75fb      	strb	r3, [r7, #23]
			TSL2572_COMMAND_BIT | TSL2572_REG_ENABLE, TSL2572_POWER_ON);
	if (status != HAL_OK)
 800363e:	7dfb      	ldrb	r3, [r7, #23]
 8003640:	2b00      	cmp	r3, #0
 8003642:	d001      	beq.n	8003648 <TSL2572_Init+0x32>
		return status;
 8003644:	7dfb      	ldrb	r3, [r7, #23]
 8003646:	e011      	b.n	800366c <TSL2572_Init+0x56>

	//set integration time
	status =  TSL2572_WriteByte(tsl, TSL2572_COMMAND_BIT | TSL2572_REG_ATIME, 0xDB); //101 ms integration time, figure 24 z datasheet
 8003648:	22db      	movs	r2, #219	@ 0xdb
 800364a:	21a1      	movs	r1, #161	@ 0xa1
 800364c:	68f8      	ldr	r0, [r7, #12]
 800364e:	f000 f8e4 	bl	800381a <TSL2572_WriteByte>
 8003652:	4603      	mov	r3, r0
 8003654:	75fb      	strb	r3, [r7, #23]
	if (status != HAL_OK) return status;
 8003656:	7dfb      	ldrb	r3, [r7, #23]
 8003658:	2b00      	cmp	r3, #0
 800365a:	d001      	beq.n	8003660 <TSL2572_Init+0x4a>
 800365c:	7dfb      	ldrb	r3, [r7, #23]
 800365e:	e005      	b.n	800366c <TSL2572_Init+0x56>
	 *      00        |           1x gain
	 *      01        |           2x gain
	 *      10		  |           8x gain
	 *      11		  |           120x gain
	 */
	return TSL2572_WriteByte(tsl, TSL2572_COMMAND_BIT | TSL2572_REG_CONTROL, 0x00); // 1x gain. w datasheet pisze że field value=00 to gain=1
 8003660:	2200      	movs	r2, #0
 8003662:	21af      	movs	r1, #175	@ 0xaf
 8003664:	68f8      	ldr	r0, [r7, #12]
 8003666:	f000 f8d8 	bl	800381a <TSL2572_WriteByte>
 800366a:	4603      	mov	r3, r0
}
 800366c:	4618      	mov	r0, r3
 800366e:	3718      	adds	r7, #24
 8003670:	46bd      	mov	sp, r7
 8003672:	bd80      	pop	{r7, pc}
 8003674:	0000      	movs	r0, r0
	...

08003678 <TSL2572_GetLux>:

HAL_StatusTypeDef TSL2572_GetLux(TSL2572 *tsl, float *luxValue) {
 8003678:	b5b0      	push	{r4, r5, r7, lr}
 800367a:	b088      	sub	sp, #32
 800367c:	af00      	add	r7, sp, #0
 800367e:	6078      	str	r0, [r7, #4]
 8003680:	6039      	str	r1, [r7, #0]
	uint16_t data0, data1;
	HAL_StatusTypeDef status = TSL2572_ReadData(tsl, &data0, &data1);
 8003682:	f107 020c 	add.w	r2, r7, #12
 8003686:	f107 030e 	add.w	r3, r7, #14
 800368a:	4619      	mov	r1, r3
 800368c:	6878      	ldr	r0, [r7, #4]
 800368e:	f000 f889 	bl	80037a4 <TSL2572_ReadData>
 8003692:	4603      	mov	r3, r0
 8003694:	77fb      	strb	r3, [r7, #31]
	if (status != HAL_OK)
 8003696:	7ffb      	ldrb	r3, [r7, #31]
 8003698:	2b00      	cmp	r3, #0
 800369a:	d001      	beq.n	80036a0 <TSL2572_GetLux+0x28>
		return status;
 800369c:	7ffb      	ldrb	r3, [r7, #31]
 800369e:	e071      	b.n	8003784 <TSL2572_GetLux+0x10c>

    float cpl = 1.67; //int time*gain/60
 80036a0:	4b3f      	ldr	r3, [pc, #252]	@ (80037a0 <TSL2572_GetLux+0x128>)
 80036a2:	61bb      	str	r3, [r7, #24]
    float lux;

    //lux calc
    if (cpl == 0) {
 80036a4:	f04f 0100 	mov.w	r1, #0
 80036a8:	69b8      	ldr	r0, [r7, #24]
 80036aa:	f7fd fd17 	bl	80010dc <__aeabi_fcmpeq>
 80036ae:	4603      	mov	r3, r0
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	d003      	beq.n	80036bc <TSL2572_GetLux+0x44>
        *luxValue = 0;
 80036b4:	683b      	ldr	r3, [r7, #0]
 80036b6:	f04f 0200 	mov.w	r2, #0
 80036ba:	601a      	str	r2, [r3, #0]
    }

    //z datasheet to nie ma co tlumaczyc chyba
    float Lux1 = (1.0 * data0 - 1.87 * data1) / cpl;
 80036bc:	89fb      	ldrh	r3, [r7, #14]
 80036be:	4618      	mov	r0, r3
 80036c0:	f7fc feb8 	bl	8000434 <__aeabi_i2d>
 80036c4:	4604      	mov	r4, r0
 80036c6:	460d      	mov	r5, r1
 80036c8:	89bb      	ldrh	r3, [r7, #12]
 80036ca:	4618      	mov	r0, r3
 80036cc:	f7fc feb2 	bl	8000434 <__aeabi_i2d>
 80036d0:	a32f      	add	r3, pc, #188	@ (adr r3, 8003790 <TSL2572_GetLux+0x118>)
 80036d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036d6:	f7fc ff17 	bl	8000508 <__aeabi_dmul>
 80036da:	4602      	mov	r2, r0
 80036dc:	460b      	mov	r3, r1
 80036de:	4620      	mov	r0, r4
 80036e0:	4629      	mov	r1, r5
 80036e2:	f7fc fd59 	bl	8000198 <__aeabi_dsub>
 80036e6:	4602      	mov	r2, r0
 80036e8:	460b      	mov	r3, r1
 80036ea:	4614      	mov	r4, r2
 80036ec:	461d      	mov	r5, r3
 80036ee:	69b8      	ldr	r0, [r7, #24]
 80036f0:	f7fc feb2 	bl	8000458 <__aeabi_f2d>
 80036f4:	4602      	mov	r2, r0
 80036f6:	460b      	mov	r3, r1
 80036f8:	4620      	mov	r0, r4
 80036fa:	4629      	mov	r1, r5
 80036fc:	f7fd f82e 	bl	800075c <__aeabi_ddiv>
 8003700:	4602      	mov	r2, r0
 8003702:	460b      	mov	r3, r1
 8003704:	4610      	mov	r0, r2
 8003706:	4619      	mov	r1, r3
 8003708:	f7fd f9f6 	bl	8000af8 <__aeabi_d2f>
 800370c:	4603      	mov	r3, r0
 800370e:	617b      	str	r3, [r7, #20]
    float Lux2 = (0.63 * data0 - 1.0 * data1) / cpl;
 8003710:	89fb      	ldrh	r3, [r7, #14]
 8003712:	4618      	mov	r0, r3
 8003714:	f7fc fe8e 	bl	8000434 <__aeabi_i2d>
 8003718:	a31f      	add	r3, pc, #124	@ (adr r3, 8003798 <TSL2572_GetLux+0x120>)
 800371a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800371e:	f7fc fef3 	bl	8000508 <__aeabi_dmul>
 8003722:	4602      	mov	r2, r0
 8003724:	460b      	mov	r3, r1
 8003726:	4614      	mov	r4, r2
 8003728:	461d      	mov	r5, r3
 800372a:	89bb      	ldrh	r3, [r7, #12]
 800372c:	4618      	mov	r0, r3
 800372e:	f7fc fe81 	bl	8000434 <__aeabi_i2d>
 8003732:	4602      	mov	r2, r0
 8003734:	460b      	mov	r3, r1
 8003736:	4620      	mov	r0, r4
 8003738:	4629      	mov	r1, r5
 800373a:	f7fc fd2d 	bl	8000198 <__aeabi_dsub>
 800373e:	4602      	mov	r2, r0
 8003740:	460b      	mov	r3, r1
 8003742:	4614      	mov	r4, r2
 8003744:	461d      	mov	r5, r3
 8003746:	69b8      	ldr	r0, [r7, #24]
 8003748:	f7fc fe86 	bl	8000458 <__aeabi_f2d>
 800374c:	4602      	mov	r2, r0
 800374e:	460b      	mov	r3, r1
 8003750:	4620      	mov	r0, r4
 8003752:	4629      	mov	r1, r5
 8003754:	f7fd f802 	bl	800075c <__aeabi_ddiv>
 8003758:	4602      	mov	r2, r0
 800375a:	460b      	mov	r3, r1
 800375c:	4610      	mov	r0, r2
 800375e:	4619      	mov	r1, r3
 8003760:	f7fd f9ca 	bl	8000af8 <__aeabi_d2f>
 8003764:	4603      	mov	r3, r0
 8003766:	613b      	str	r3, [r7, #16]

    *luxValue = fmaxf(fmaxf(Lux1, Lux2), 0);
 8003768:	6939      	ldr	r1, [r7, #16]
 800376a:	6978      	ldr	r0, [r7, #20]
 800376c:	f00a f998 	bl	800daa0 <fmaxf>
 8003770:	4603      	mov	r3, r0
 8003772:	f04f 0100 	mov.w	r1, #0
 8003776:	4618      	mov	r0, r3
 8003778:	f00a f992 	bl	800daa0 <fmaxf>
 800377c:	4602      	mov	r2, r0
 800377e:	683b      	ldr	r3, [r7, #0]
 8003780:	601a      	str	r2, [r3, #0]

	return HAL_OK;
 8003782:	2300      	movs	r3, #0
}
 8003784:	4618      	mov	r0, r3
 8003786:	3720      	adds	r7, #32
 8003788:	46bd      	mov	sp, r7
 800378a:	bdb0      	pop	{r4, r5, r7, pc}
 800378c:	f3af 8000 	nop.w
 8003790:	1eb851ec 	.word	0x1eb851ec
 8003794:	3ffdeb85 	.word	0x3ffdeb85
 8003798:	c28f5c29 	.word	0xc28f5c29
 800379c:	3fe428f5 	.word	0x3fe428f5
 80037a0:	3fd5c28f 	.word	0x3fd5c28f

080037a4 <TSL2572_ReadData>:

HAL_StatusTypeDef TSL2572_ReadData(TSL2572 *tsl, uint16_t *data0Val,
		uint16_t *data1Val) {
 80037a4:	b580      	push	{r7, lr}
 80037a6:	b086      	sub	sp, #24
 80037a8:	af00      	add	r7, sp, #0
 80037aa:	60f8      	str	r0, [r7, #12]
 80037ac:	60b9      	str	r1, [r7, #8]
 80037ae:	607a      	str	r2, [r7, #4]
	uint8_t data0Low, data0High, data1Low, data1High;

	TSL2572_ReadByte(tsl, TSL2572_COMMAND_BIT | TSL2572_REG_DATA0LOW,
 80037b0:	f107 0317 	add.w	r3, r7, #23
 80037b4:	461a      	mov	r2, r3
 80037b6:	21b4      	movs	r1, #180	@ 0xb4
 80037b8:	68f8      	ldr	r0, [r7, #12]
 80037ba:	f000 f84c 	bl	8003856 <TSL2572_ReadByte>
			&data0Low);
	TSL2572_ReadByte(tsl, TSL2572_COMMAND_BIT | TSL2572_REG_DATA0HIGH,
 80037be:	f107 0316 	add.w	r3, r7, #22
 80037c2:	461a      	mov	r2, r3
 80037c4:	21b5      	movs	r1, #181	@ 0xb5
 80037c6:	68f8      	ldr	r0, [r7, #12]
 80037c8:	f000 f845 	bl	8003856 <TSL2572_ReadByte>
			&data0High);
	TSL2572_ReadByte(tsl, TSL2572_COMMAND_BIT | TSL2572_REG_DATA1LOW,
 80037cc:	f107 0315 	add.w	r3, r7, #21
 80037d0:	461a      	mov	r2, r3
 80037d2:	21b6      	movs	r1, #182	@ 0xb6
 80037d4:	68f8      	ldr	r0, [r7, #12]
 80037d6:	f000 f83e 	bl	8003856 <TSL2572_ReadByte>
			&data1Low);
	TSL2572_ReadByte(tsl, TSL2572_COMMAND_BIT | TSL2572_REG_DATA1HIGH,
 80037da:	f107 0314 	add.w	r3, r7, #20
 80037de:	461a      	mov	r2, r3
 80037e0:	21b7      	movs	r1, #183	@ 0xb7
 80037e2:	68f8      	ldr	r0, [r7, #12]
 80037e4:	f000 f837 	bl	8003856 <TSL2572_ReadByte>
			&data1High);

	*data0Val = (data0High << 8) | data0Low; //figure 17 w datasheet
 80037e8:	7dbb      	ldrb	r3, [r7, #22]
 80037ea:	021b      	lsls	r3, r3, #8
 80037ec:	b21a      	sxth	r2, r3
 80037ee:	7dfb      	ldrb	r3, [r7, #23]
 80037f0:	b21b      	sxth	r3, r3
 80037f2:	4313      	orrs	r3, r2
 80037f4:	b21b      	sxth	r3, r3
 80037f6:	b29a      	uxth	r2, r3
 80037f8:	68bb      	ldr	r3, [r7, #8]
 80037fa:	801a      	strh	r2, [r3, #0]
	*data1Val = (data1High << 8) | data1Low; //data high przed datalow
 80037fc:	7d3b      	ldrb	r3, [r7, #20]
 80037fe:	021b      	lsls	r3, r3, #8
 8003800:	b21a      	sxth	r2, r3
 8003802:	7d7b      	ldrb	r3, [r7, #21]
 8003804:	b21b      	sxth	r3, r3
 8003806:	4313      	orrs	r3, r2
 8003808:	b21b      	sxth	r3, r3
 800380a:	b29a      	uxth	r2, r3
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	801a      	strh	r2, [r3, #0]

	return HAL_OK;
 8003810:	2300      	movs	r3, #0
}
 8003812:	4618      	mov	r0, r3
 8003814:	3718      	adds	r7, #24
 8003816:	46bd      	mov	sp, r7
 8003818:	bd80      	pop	{r7, pc}

0800381a <TSL2572_WriteByte>:

HAL_StatusTypeDef TSL2572_WriteByte(TSL2572 *tsl, uint8_t reg, uint8_t value) {
 800381a:	b580      	push	{r7, lr}
 800381c:	b086      	sub	sp, #24
 800381e:	af04      	add	r7, sp, #16
 8003820:	6078      	str	r0, [r7, #4]
 8003822:	460b      	mov	r3, r1
 8003824:	70fb      	strb	r3, [r7, #3]
 8003826:	4613      	mov	r3, r2
 8003828:	70bb      	strb	r3, [r7, #2]
	return HAL_I2C_Mem_Write(tsl->i2cHandle, tsl->address, reg, 1, &value, 1,
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	6818      	ldr	r0, [r3, #0]
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	791b      	ldrb	r3, [r3, #4]
 8003832:	4619      	mov	r1, r3
 8003834:	78fb      	ldrb	r3, [r7, #3]
 8003836:	b29a      	uxth	r2, r3
 8003838:	f04f 33ff 	mov.w	r3, #4294967295
 800383c:	9302      	str	r3, [sp, #8]
 800383e:	2301      	movs	r3, #1
 8003840:	9301      	str	r3, [sp, #4]
 8003842:	1cbb      	adds	r3, r7, #2
 8003844:	9300      	str	r3, [sp, #0]
 8003846:	2301      	movs	r3, #1
 8003848:	f002 f834 	bl	80058b4 <HAL_I2C_Mem_Write>
 800384c:	4603      	mov	r3, r0
			TSL2572_MAX_DELAY);
}
 800384e:	4618      	mov	r0, r3
 8003850:	3708      	adds	r7, #8
 8003852:	46bd      	mov	sp, r7
 8003854:	bd80      	pop	{r7, pc}

08003856 <TSL2572_ReadByte>:

HAL_StatusTypeDef TSL2572_ReadByte(TSL2572 *tsl, uint8_t reg, uint8_t *value) {
 8003856:	b580      	push	{r7, lr}
 8003858:	b088      	sub	sp, #32
 800385a:	af04      	add	r7, sp, #16
 800385c:	60f8      	str	r0, [r7, #12]
 800385e:	460b      	mov	r3, r1
 8003860:	607a      	str	r2, [r7, #4]
 8003862:	72fb      	strb	r3, [r7, #11]
	return HAL_I2C_Mem_Read(tsl->i2cHandle, tsl->address, reg, 1, value, 1,
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	6818      	ldr	r0, [r3, #0]
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	791b      	ldrb	r3, [r3, #4]
 800386c:	4619      	mov	r1, r3
 800386e:	7afb      	ldrb	r3, [r7, #11]
 8003870:	b29a      	uxth	r2, r3
 8003872:	f04f 33ff 	mov.w	r3, #4294967295
 8003876:	9302      	str	r3, [sp, #8]
 8003878:	2301      	movs	r3, #1
 800387a:	9301      	str	r3, [sp, #4]
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	9300      	str	r3, [sp, #0]
 8003880:	2301      	movs	r3, #1
 8003882:	f002 f911 	bl	8005aa8 <HAL_I2C_Mem_Read>
 8003886:	4603      	mov	r3, r0
			TSL2572_MAX_DELAY);
}
 8003888:	4618      	mov	r0, r3
 800388a:	3710      	adds	r7, #16
 800388c:	46bd      	mov	sp, r7
 800388e:	bd80      	pop	{r7, pc}

08003890 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8003890:	b590      	push	{r4, r7, lr}
 8003892:	b0ad      	sub	sp, #180	@ 0xb4
 8003894:	af02      	add	r7, sp, #8
	int16_t val;
	float temp_c;
	float lux;

	//initialize tsl2572
	if (TSL2572_Init(&tsl2572_sensor, &hi2c1, TSL2572_ADDR) == HAL_OK) {
 8003896:	2372      	movs	r3, #114	@ 0x72
 8003898:	461a      	mov	r2, r3
 800389a:	4973      	ldr	r1, [pc, #460]	@ (8003a68 <main+0x1d8>)
 800389c:	4873      	ldr	r0, [pc, #460]	@ (8003a6c <main+0x1dc>)
 800389e:	f7ff feba 	bl	8003616 <TSL2572_Init>
 80038a2:	4603      	mov	r3, r0
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	d103      	bne.n	80038b0 <main+0x20>
		printf("TSL2572 initialized successfully!\n");
 80038a8:	4871      	ldr	r0, [pc, #452]	@ (8003a70 <main+0x1e0>)
 80038aa:	f006 fcc1 	bl	800a230 <puts>
 80038ae:	e002      	b.n	80038b6 <main+0x26>
	} else {
		printf("TSL2572 initialization failed!\n");
 80038b0:	4870      	ldr	r0, [pc, #448]	@ (8003a74 <main+0x1e4>)
 80038b2:	f006 fcbd 	bl	800a230 <puts>
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 80038b6:	f000 fed3 	bl	8004660 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80038ba:	f000 f8ef 	bl	8003a9c <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 80038be:	f000 f993 	bl	8003be8 <MX_GPIO_Init>
	MX_I2C1_Init();
 80038c2:	f000 f939 	bl	8003b38 <MX_I2C1_Init>
	MX_USART1_UART_Init();
 80038c6:	f000 f965 	bl	8003b94 <MX_USART1_UART_Init>
	MX_BlueNRG_MS_Init();
 80038ca:	f7fd fe2b 	bl	8001524 <MX_BlueNRG_MS_Init>

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1) {
		/* USER CODE END WHILE */
		buff[0] = REG_ADDR;
 80038ce:	2300      	movs	r3, #0
 80038d0:	f887 306c 	strb.w	r3, [r7, #108]	@ 0x6c
		//lux
		  if (TSL2572_GetLux(&tsl2572_sensor, &lux) == HAL_OK)
 80038d4:	463b      	mov	r3, r7
 80038d6:	4619      	mov	r1, r3
 80038d8:	4864      	ldr	r0, [pc, #400]	@ (8003a6c <main+0x1dc>)
 80038da:	f7ff fecd 	bl	8003678 <TSL2572_GetLux>
 80038de:	4603      	mov	r3, r0
 80038e0:	2b00      	cmp	r3, #0
 80038e2:	d115      	bne.n	8003910 <main+0x80>
		  {
		        //Display the value
		        sprintf(displayBuffer, "Light: %0.2f lux\r\n", lux);
 80038e4:	683b      	ldr	r3, [r7, #0]
 80038e6:	4618      	mov	r0, r3
 80038e8:	f7fc fdb6 	bl	8000458 <__aeabi_f2d>
 80038ec:	4602      	mov	r2, r0
 80038ee:	460b      	mov	r3, r1
 80038f0:	1d38      	adds	r0, r7, #4
 80038f2:	4961      	ldr	r1, [pc, #388]	@ (8003a78 <main+0x1e8>)
 80038f4:	f006 fca4 	bl	800a240 <siprintf>
		        HAL_UART_Transmit(&huart2, (uint8_t*)displayBuffer, strlen(displayBuffer), HAL_MAX_DELAY);
 80038f8:	1d3b      	adds	r3, r7, #4
 80038fa:	4618      	mov	r0, r3
 80038fc:	f7fc fc40 	bl	8000180 <strlen>
 8003900:	4603      	mov	r3, r0
 8003902:	b29a      	uxth	r2, r3
 8003904:	1d39      	adds	r1, r7, #4
 8003906:	f04f 33ff 	mov.w	r3, #4294967295
 800390a:	485c      	ldr	r0, [pc, #368]	@ (8003a7c <main+0x1ec>)
 800390c:	f004 f956 	bl	8007bbc <HAL_UART_Transmit>
		  }
		  HAL_Delay(1000);
 8003910:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8003914:	f000 ff12 	bl	800473c <HAL_Delay>

		//temperature
		ret = HAL_I2C_Master_Transmit(&hi2c1, TMP_ADDR, buff, 1, HAL_MAX_DELAY);
 8003918:	2390      	movs	r3, #144	@ 0x90
 800391a:	4619      	mov	r1, r3
 800391c:	f107 026c 	add.w	r2, r7, #108	@ 0x6c
 8003920:	f04f 33ff 	mov.w	r3, #4294967295
 8003924:	9300      	str	r3, [sp, #0]
 8003926:	2301      	movs	r3, #1
 8003928:	484f      	ldr	r0, [pc, #316]	@ (8003a68 <main+0x1d8>)
 800392a:	f001 fc93 	bl	8005254 <HAL_I2C_Master_Transmit>
 800392e:	4603      	mov	r3, r0
 8003930:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
		if (ret != HAL_OK) {
 8003934:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 8003938:	2b00      	cmp	r3, #0
 800393a:	d009      	beq.n	8003950 <main+0xc0>
			strcpy((char*) buff, "Error Tx\r\n");
 800393c:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 8003940:	4a4f      	ldr	r2, [pc, #316]	@ (8003a80 <main+0x1f0>)
 8003942:	ca07      	ldmia	r2, {r0, r1, r2}
 8003944:	c303      	stmia	r3!, {r0, r1}
 8003946:	801a      	strh	r2, [r3, #0]
 8003948:	3302      	adds	r3, #2
 800394a:	0c12      	lsrs	r2, r2, #16
 800394c:	701a      	strb	r2, [r3, #0]
 800394e:	e00d      	b.n	800396c <main+0xdc>
		} else {
			ret = HAL_I2C_Master_Receive(&hi2c1, TMP_ADDR, buff, 2,
 8003950:	2390      	movs	r3, #144	@ 0x90
 8003952:	4619      	mov	r1, r3
 8003954:	f107 026c 	add.w	r2, r7, #108	@ 0x6c
 8003958:	f04f 33ff 	mov.w	r3, #4294967295
 800395c:	9300      	str	r3, [sp, #0]
 800395e:	2302      	movs	r3, #2
 8003960:	4841      	ldr	r0, [pc, #260]	@ (8003a68 <main+0x1d8>)
 8003962:	f001 fd75 	bl	8005450 <HAL_I2C_Master_Receive>
 8003966:	4603      	mov	r3, r0
 8003968:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
					HAL_MAX_DELAY);
		}
		if (ret != HAL_OK) {
 800396c:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 8003970:	2b00      	cmp	r3, #0
 8003972:	d009      	beq.n	8003988 <main+0xf8>
			strcpy((char*) buff, "Error Tx\r\n");
 8003974:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 8003978:	4a41      	ldr	r2, [pc, #260]	@ (8003a80 <main+0x1f0>)
 800397a:	ca07      	ldmia	r2, {r0, r1, r2}
 800397c:	c303      	stmia	r3!, {r0, r1}
 800397e:	801a      	strh	r2, [r3, #0]
 8003980:	3302      	adds	r3, #2
 8003982:	0c12      	lsrs	r2, r2, #16
 8003984:	701a      	strb	r2, [r3, #0]
 8003986:	e00b      	b.n	80039a0 <main+0x110>
		} else {
			val = ((int16_t)(buff[0]& 0xFF) << 1) | (buff[1] >> 7);
 8003988:	f897 306c 	ldrb.w	r3, [r7, #108]	@ 0x6c
 800398c:	005b      	lsls	r3, r3, #1
 800398e:	b21a      	sxth	r2, r3
 8003990:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 8003994:	09db      	lsrs	r3, r3, #7
 8003996:	b2db      	uxtb	r3, r3
 8003998:	b21b      	sxth	r3, r3
 800399a:	4313      	orrs	r3, r2
 800399c:	f8a7 30a4 	strh.w	r3, [r7, #164]	@ 0xa4
		}
		if (val & 0x0100){
 80039a0:	f8b7 30a4 	ldrh.w	r3, [r7, #164]	@ 0xa4
 80039a4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d007      	beq.n	80039bc <main+0x12c>
			val |= 0xFE00;
 80039ac:	f8b7 30a4 	ldrh.w	r3, [r7, #164]	@ 0xa4
 80039b0:	ea6f 53c3 	mvn.w	r3, r3, lsl #23
 80039b4:	ea6f 53d3 	mvn.w	r3, r3, lsr #23
 80039b8:	f8a7 30a4 	strh.w	r3, [r7, #164]	@ 0xa4
		}
		temp_c = (float) val * 0.5f;
 80039bc:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	@ 0xa4
 80039c0:	4618      	mov	r0, r3
 80039c2:	f7fd f9a3 	bl	8000d0c <__aeabi_i2f>
 80039c6:	4603      	mov	r3, r0
 80039c8:	f04f 517c 	mov.w	r1, #1056964608	@ 0x3f000000
 80039cc:	4618      	mov	r0, r3
 80039ce:	f7fd f9f1 	bl	8000db4 <__aeabi_fmul>
 80039d2:	4603      	mov	r3, r0
 80039d4:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
		temp_c *= 100;
 80039d8:	492a      	ldr	r1, [pc, #168]	@ (8003a84 <main+0x1f4>)
 80039da:	f8d7 00a0 	ldr.w	r0, [r7, #160]	@ 0xa0
 80039de:	f7fd f9e9 	bl	8000db4 <__aeabi_fmul>
 80039e2:	4603      	mov	r3, r0
 80039e4:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
		sprintf((char*) buff, "%d.%02d C \r\n",
				((int) temp_c / 100), ((unsigned int) temp_c % 100));
 80039e8:	f8d7 00a0 	ldr.w	r0, [r7, #160]	@ 0xa0
 80039ec:	f7fd fba8 	bl	8001140 <__aeabi_f2iz>
 80039f0:	4603      	mov	r3, r0
		sprintf((char*) buff, "%d.%02d C \r\n",
 80039f2:	4a25      	ldr	r2, [pc, #148]	@ (8003a88 <main+0x1f8>)
 80039f4:	fb82 1203 	smull	r1, r2, r2, r3
 80039f8:	1152      	asrs	r2, r2, #5
 80039fa:	17db      	asrs	r3, r3, #31
 80039fc:	1ad4      	subs	r4, r2, r3
				((int) temp_c / 100), ((unsigned int) temp_c % 100));
 80039fe:	f8d7 00a0 	ldr.w	r0, [r7, #160]	@ 0xa0
 8003a02:	f7fd fbc3 	bl	800118c <__aeabi_f2uiz>
 8003a06:	4602      	mov	r2, r0
		sprintf((char*) buff, "%d.%02d C \r\n",
 8003a08:	4b1f      	ldr	r3, [pc, #124]	@ (8003a88 <main+0x1f8>)
 8003a0a:	fba3 1302 	umull	r1, r3, r3, r2
 8003a0e:	095b      	lsrs	r3, r3, #5
 8003a10:	2164      	movs	r1, #100	@ 0x64
 8003a12:	fb01 f303 	mul.w	r3, r1, r3
 8003a16:	1ad3      	subs	r3, r2, r3
 8003a18:	f107 006c 	add.w	r0, r7, #108	@ 0x6c
 8003a1c:	4622      	mov	r2, r4
 8003a1e:	491b      	ldr	r1, [pc, #108]	@ (8003a8c <main+0x1fc>)
 8003a20:	f006 fc0e 	bl	800a240 <siprintf>
		luxVal = lux;
 8003a24:	683b      	ldr	r3, [r7, #0]
 8003a26:	4a1a      	ldr	r2, [pc, #104]	@ (8003a90 <main+0x200>)
 8003a28:	6013      	str	r3, [r2, #0]

		HAL_UART_Transmit(&huart2, buff, strlen((char*)buff), HAL_MAX_DELAY);
 8003a2a:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 8003a2e:	4618      	mov	r0, r3
 8003a30:	f7fc fba6 	bl	8000180 <strlen>
 8003a34:	4603      	mov	r3, r0
 8003a36:	b29a      	uxth	r2, r3
 8003a38:	f107 016c 	add.w	r1, r7, #108	@ 0x6c
 8003a3c:	f04f 33ff 	mov.w	r3, #4294967295
 8003a40:	480e      	ldr	r0, [pc, #56]	@ (8003a7c <main+0x1ec>)
 8003a42:	f004 f8bb 	bl	8007bbc <HAL_UART_Transmit>
		HAL_Delay(1000);
 8003a46:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8003a4a:	f000 fe77 	bl	800473c <HAL_Delay>
		temperature = temp_c / 10.0f;
 8003a4e:	4911      	ldr	r1, [pc, #68]	@ (8003a94 <main+0x204>)
 8003a50:	f8d7 00a0 	ldr.w	r0, [r7, #160]	@ 0xa0
 8003a54:	f7fd fa62 	bl	8000f1c <__aeabi_fdiv>
 8003a58:	4603      	mov	r3, r0
 8003a5a:	461a      	mov	r2, r3
 8003a5c:	4b0e      	ldr	r3, [pc, #56]	@ (8003a98 <main+0x208>)
 8003a5e:	601a      	str	r2, [r3, #0]
		MX_BlueNRG_MS_Process();
 8003a60:	f7fd fe0c 	bl	800167c <MX_BlueNRG_MS_Process>
		buff[0] = REG_ADDR;
 8003a64:	e733      	b.n	80038ce <main+0x3e>
 8003a66:	bf00      	nop
 8003a68:	2000038c 	.word	0x2000038c
 8003a6c:	20000428 	.word	0x20000428
 8003a70:	0800db38 	.word	0x0800db38
 8003a74:	0800db5c 	.word	0x0800db5c
 8003a78:	0800db7c 	.word	0x0800db7c
 8003a7c:	20000490 	.word	0x20000490
 8003a80:	0800db90 	.word	0x0800db90
 8003a84:	42c80000 	.word	0x42c80000
 8003a88:	51eb851f 	.word	0x51eb851f
 8003a8c:	0800db9c 	.word	0x0800db9c
 8003a90:	20000388 	.word	0x20000388
 8003a94:	41200000 	.word	0x41200000
 8003a98:	20000004 	.word	0x20000004

08003a9c <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8003a9c:	b580      	push	{r7, lr}
 8003a9e:	b092      	sub	sp, #72	@ 0x48
 8003aa0:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8003aa2:	f107 0314 	add.w	r3, r7, #20
 8003aa6:	2234      	movs	r2, #52	@ 0x34
 8003aa8:	2100      	movs	r1, #0
 8003aaa:	4618      	mov	r0, r3
 8003aac:	f006 fcc0 	bl	800a430 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8003ab0:	463b      	mov	r3, r7
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	601a      	str	r2, [r3, #0]
 8003ab6:	605a      	str	r2, [r3, #4]
 8003ab8:	609a      	str	r2, [r3, #8]
 8003aba:	60da      	str	r2, [r3, #12]
 8003abc:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003abe:	4b1d      	ldr	r3, [pc, #116]	@ (8003b34 <SystemClock_Config+0x98>)
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	f423 53c0 	bic.w	r3, r3, #6144	@ 0x1800
 8003ac6:	4a1b      	ldr	r2, [pc, #108]	@ (8003b34 <SystemClock_Config+0x98>)
 8003ac8:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8003acc:	6013      	str	r3, [r2, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003ace:	2302      	movs	r3, #2
 8003ad0:	617b      	str	r3, [r7, #20]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003ad2:	2301      	movs	r3, #1
 8003ad4:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003ad6:	2310      	movs	r3, #16
 8003ad8:	627b      	str	r3, [r7, #36]	@ 0x24
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003ada:	2302      	movs	r3, #2
 8003adc:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003ade:	2300      	movs	r3, #0
 8003ae0:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 8003ae2:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8003ae6:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 8003ae8:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
 8003aec:	647b      	str	r3, [r7, #68]	@ 0x44
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8003aee:	f107 0314 	add.w	r3, r7, #20
 8003af2:	4618      	mov	r0, r3
 8003af4:	f002 ff02 	bl	80068fc <HAL_RCC_OscConfig>
 8003af8:	4603      	mov	r3, r0
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	d001      	beq.n	8003b02 <SystemClock_Config+0x66>
		Error_Handler();
 8003afe:	f000 f8e9 	bl	8003cd4 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8003b02:	230f      	movs	r3, #15
 8003b04:	603b      	str	r3, [r7, #0]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003b06:	2303      	movs	r3, #3
 8003b08:	607b      	str	r3, [r7, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003b0a:	2300      	movs	r3, #0
 8003b0c:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003b0e:	2300      	movs	r3, #0
 8003b10:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003b12:	2300      	movs	r3, #0
 8003b14:	613b      	str	r3, [r7, #16]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 8003b16:	463b      	mov	r3, r7
 8003b18:	2101      	movs	r1, #1
 8003b1a:	4618      	mov	r0, r3
 8003b1c:	f003 fa1e 	bl	8006f5c <HAL_RCC_ClockConfig>
 8003b20:	4603      	mov	r3, r0
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	d001      	beq.n	8003b2a <SystemClock_Config+0x8e>
		Error_Handler();
 8003b26:	f000 f8d5 	bl	8003cd4 <Error_Handler>
	}
}
 8003b2a:	bf00      	nop
 8003b2c:	3748      	adds	r7, #72	@ 0x48
 8003b2e:	46bd      	mov	sp, r7
 8003b30:	bd80      	pop	{r7, pc}
 8003b32:	bf00      	nop
 8003b34:	40007000 	.word	0x40007000

08003b38 <MX_I2C1_Init>:
/**
 * @brief I2C1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_I2C1_Init(void) {
 8003b38:	b580      	push	{r7, lr}
 8003b3a:	af00      	add	r7, sp, #0
	/* USER CODE END I2C1_Init 0 */

	/* USER CODE BEGIN I2C1_Init 1 */

	/* USER CODE END I2C1_Init 1 */
	hi2c1.Instance = I2C1;
 8003b3c:	4b12      	ldr	r3, [pc, #72]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b3e:	4a13      	ldr	r2, [pc, #76]	@ (8003b8c <MX_I2C1_Init+0x54>)
 8003b40:	601a      	str	r2, [r3, #0]
	hi2c1.Init.ClockSpeed = 100000;
 8003b42:	4b11      	ldr	r3, [pc, #68]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b44:	4a12      	ldr	r2, [pc, #72]	@ (8003b90 <MX_I2C1_Init+0x58>)
 8003b46:	605a      	str	r2, [r3, #4]
	hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8003b48:	4b0f      	ldr	r3, [pc, #60]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b4a:	2200      	movs	r2, #0
 8003b4c:	609a      	str	r2, [r3, #8]
	hi2c1.Init.OwnAddress1 = 0;
 8003b4e:	4b0e      	ldr	r3, [pc, #56]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b50:	2200      	movs	r2, #0
 8003b52:	60da      	str	r2, [r3, #12]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003b54:	4b0c      	ldr	r3, [pc, #48]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b56:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8003b5a:	611a      	str	r2, [r3, #16]
	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003b5c:	4b0a      	ldr	r3, [pc, #40]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b5e:	2200      	movs	r2, #0
 8003b60:	615a      	str	r2, [r3, #20]
	hi2c1.Init.OwnAddress2 = 0;
 8003b62:	4b09      	ldr	r3, [pc, #36]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b64:	2200      	movs	r2, #0
 8003b66:	619a      	str	r2, [r3, #24]
	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003b68:	4b07      	ldr	r3, [pc, #28]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b6a:	2200      	movs	r2, #0
 8003b6c:	61da      	str	r2, [r3, #28]
	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003b6e:	4b06      	ldr	r3, [pc, #24]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b70:	2200      	movs	r2, #0
 8003b72:	621a      	str	r2, [r3, #32]
	if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 8003b74:	4804      	ldr	r0, [pc, #16]	@ (8003b88 <MX_I2C1_Init+0x50>)
 8003b76:	f001 fa29 	bl	8004fcc <HAL_I2C_Init>
 8003b7a:	4603      	mov	r3, r0
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d001      	beq.n	8003b84 <MX_I2C1_Init+0x4c>
		Error_Handler();
 8003b80:	f000 f8a8 	bl	8003cd4 <Error_Handler>
	}
	/* USER CODE BEGIN I2C1_Init 2 */

	/* USER CODE END I2C1_Init 2 */

}
 8003b84:	bf00      	nop
 8003b86:	bd80      	pop	{r7, pc}
 8003b88:	2000038c 	.word	0x2000038c
 8003b8c:	40005400 	.word	0x40005400
 8003b90:	000186a0 	.word	0x000186a0

08003b94 <MX_USART1_UART_Init>:
/**
 * @brief USART1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART1_UART_Init(void) {
 8003b94:	b580      	push	{r7, lr}
 8003b96:	af00      	add	r7, sp, #0
	/* USER CODE END USART1_Init 0 */

	/* USER CODE BEGIN USART1_Init 1 */

	/* USER CODE END USART1_Init 1 */
	huart1.Instance = USART1;
 8003b98:	4b11      	ldr	r3, [pc, #68]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003b9a:	4a12      	ldr	r2, [pc, #72]	@ (8003be4 <MX_USART1_UART_Init+0x50>)
 8003b9c:	601a      	str	r2, [r3, #0]
	huart1.Init.BaudRate = 115200;
 8003b9e:	4b10      	ldr	r3, [pc, #64]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003ba0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8003ba4:	605a      	str	r2, [r3, #4]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003ba6:	4b0e      	ldr	r3, [pc, #56]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003ba8:	2200      	movs	r2, #0
 8003baa:	609a      	str	r2, [r3, #8]
	huart1.Init.StopBits = UART_STOPBITS_1;
 8003bac:	4b0c      	ldr	r3, [pc, #48]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003bae:	2200      	movs	r2, #0
 8003bb0:	60da      	str	r2, [r3, #12]
	huart1.Init.Parity = UART_PARITY_NONE;
 8003bb2:	4b0b      	ldr	r3, [pc, #44]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003bb4:	2200      	movs	r2, #0
 8003bb6:	611a      	str	r2, [r3, #16]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8003bb8:	4b09      	ldr	r3, [pc, #36]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003bba:	220c      	movs	r2, #12
 8003bbc:	615a      	str	r2, [r3, #20]
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003bbe:	4b08      	ldr	r3, [pc, #32]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003bc0:	2200      	movs	r2, #0
 8003bc2:	619a      	str	r2, [r3, #24]
	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8003bc4:	4b06      	ldr	r3, [pc, #24]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart1) != HAL_OK) {
 8003bca:	4805      	ldr	r0, [pc, #20]	@ (8003be0 <MX_USART1_UART_Init+0x4c>)
 8003bcc:	f003 ffa6 	bl	8007b1c <HAL_UART_Init>
 8003bd0:	4603      	mov	r3, r0
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	d001      	beq.n	8003bda <MX_USART1_UART_Init+0x46>
		Error_Handler();
 8003bd6:	f000 f87d 	bl	8003cd4 <Error_Handler>
	}
	/* USER CODE BEGIN USART1_Init 2 */

	/* USER CODE END USART1_Init 2 */

}
 8003bda:	bf00      	nop
 8003bdc:	bd80      	pop	{r7, pc}
 8003bde:	bf00      	nop
 8003be0:	200003e0 	.word	0x200003e0
 8003be4:	40013800 	.word	0x40013800

08003be8 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 8003be8:	b580      	push	{r7, lr}
 8003bea:	b08a      	sub	sp, #40	@ 0x28
 8003bec:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8003bee:	f107 0314 	add.w	r3, r7, #20
 8003bf2:	2200      	movs	r2, #0
 8003bf4:	601a      	str	r2, [r3, #0]
 8003bf6:	605a      	str	r2, [r3, #4]
 8003bf8:	609a      	str	r2, [r3, #8]
 8003bfa:	60da      	str	r2, [r3, #12]
 8003bfc:	611a      	str	r2, [r3, #16]
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8003bfe:	4b33      	ldr	r3, [pc, #204]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c00:	69db      	ldr	r3, [r3, #28]
 8003c02:	4a32      	ldr	r2, [pc, #200]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c04:	f043 0304 	orr.w	r3, r3, #4
 8003c08:	61d3      	str	r3, [r2, #28]
 8003c0a:	4b30      	ldr	r3, [pc, #192]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c0c:	69db      	ldr	r3, [r3, #28]
 8003c0e:	f003 0304 	and.w	r3, r3, #4
 8003c12:	613b      	str	r3, [r7, #16]
 8003c14:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8003c16:	4b2d      	ldr	r3, [pc, #180]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c18:	69db      	ldr	r3, [r3, #28]
 8003c1a:	4a2c      	ldr	r2, [pc, #176]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c1c:	f043 0320 	orr.w	r3, r3, #32
 8003c20:	61d3      	str	r3, [r2, #28]
 8003c22:	4b2a      	ldr	r3, [pc, #168]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c24:	69db      	ldr	r3, [r3, #28]
 8003c26:	f003 0320 	and.w	r3, r3, #32
 8003c2a:	60fb      	str	r3, [r7, #12]
 8003c2c:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8003c2e:	4b27      	ldr	r3, [pc, #156]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c30:	69db      	ldr	r3, [r3, #28]
 8003c32:	4a26      	ldr	r2, [pc, #152]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c34:	f043 0301 	orr.w	r3, r3, #1
 8003c38:	61d3      	str	r3, [r2, #28]
 8003c3a:	4b24      	ldr	r3, [pc, #144]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c3c:	69db      	ldr	r3, [r3, #28]
 8003c3e:	f003 0301 	and.w	r3, r3, #1
 8003c42:	60bb      	str	r3, [r7, #8]
 8003c44:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8003c46:	4b21      	ldr	r3, [pc, #132]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c48:	69db      	ldr	r3, [r3, #28]
 8003c4a:	4a20      	ldr	r2, [pc, #128]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c4c:	f043 0302 	orr.w	r3, r3, #2
 8003c50:	61d3      	str	r3, [r2, #28]
 8003c52:	4b1e      	ldr	r3, [pc, #120]	@ (8003ccc <MX_GPIO_Init+0xe4>)
 8003c54:	69db      	ldr	r3, [r3, #28]
 8003c56:	f003 0302 	and.w	r3, r3, #2
 8003c5a:	607b      	str	r3, [r7, #4]
 8003c5c:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1 | GPIO_PIN_8, GPIO_PIN_RESET);
 8003c5e:	2200      	movs	r2, #0
 8003c60:	f44f 7181 	mov.w	r1, #258	@ 0x102
 8003c64:	481a      	ldr	r0, [pc, #104]	@ (8003cd0 <MX_GPIO_Init+0xe8>)
 8003c66:	f001 f980 	bl	8004f6a <HAL_GPIO_WritePin>

	/*Configure GPIO pin : PA0 */
	GPIO_InitStruct.Pin = GPIO_PIN_0;
 8003c6a:	2301      	movs	r3, #1
 8003c6c:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8003c6e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8003c72:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003c74:	2300      	movs	r3, #0
 8003c76:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003c78:	f107 0314 	add.w	r3, r7, #20
 8003c7c:	4619      	mov	r1, r3
 8003c7e:	4814      	ldr	r0, [pc, #80]	@ (8003cd0 <MX_GPIO_Init+0xe8>)
 8003c80:	f000 fedc 	bl	8004a3c <HAL_GPIO_Init>

	/*Configure GPIO pins : PA1 PA8 */
	GPIO_InitStruct.Pin = GPIO_PIN_1 | GPIO_PIN_8;
 8003c84:	f44f 7381 	mov.w	r3, #258	@ 0x102
 8003c88:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003c8a:	2301      	movs	r3, #1
 8003c8c:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003c8e:	2300      	movs	r3, #0
 8003c90:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003c92:	2300      	movs	r3, #0
 8003c94:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003c96:	f107 0314 	add.w	r3, r7, #20
 8003c9a:	4619      	mov	r1, r3
 8003c9c:	480c      	ldr	r0, [pc, #48]	@ (8003cd0 <MX_GPIO_Init+0xe8>)
 8003c9e:	f000 fecd 	bl	8004a3c <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8003ca2:	2200      	movs	r2, #0
 8003ca4:	2100      	movs	r1, #0
 8003ca6:	2006      	movs	r0, #6
 8003ca8:	f000 fe41 	bl	800492e <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8003cac:	2006      	movs	r0, #6
 8003cae:	f000 fe5a 	bl	8004966 <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8003cb2:	2200      	movs	r2, #0
 8003cb4:	2100      	movs	r1, #0
 8003cb6:	2028      	movs	r0, #40	@ 0x28
 8003cb8:	f000 fe39 	bl	800492e <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8003cbc:	2028      	movs	r0, #40	@ 0x28
 8003cbe:	f000 fe52 	bl	8004966 <HAL_NVIC_EnableIRQ>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 8003cc2:	bf00      	nop
 8003cc4:	3728      	adds	r7, #40	@ 0x28
 8003cc6:	46bd      	mov	sp, r7
 8003cc8:	bd80      	pop	{r7, pc}
 8003cca:	bf00      	nop
 8003ccc:	40023800 	.word	0x40023800
 8003cd0:	40020000 	.word	0x40020000

08003cd4 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8003cd4:	b480      	push	{r7}
 8003cd6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003cd8:	b672      	cpsid	i
}
 8003cda:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8003cdc:	bf00      	nop
 8003cde:	e7fd      	b.n	8003cdc <Error_Handler+0x8>

08003ce0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003ce0:	b580      	push	{r7, lr}
 8003ce2:	b084      	sub	sp, #16
 8003ce4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_COMP_CLK_ENABLE();
 8003ce6:	4b15      	ldr	r3, [pc, #84]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003ce8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003cea:	4a14      	ldr	r2, [pc, #80]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003cec:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8003cf0:	6253      	str	r3, [r2, #36]	@ 0x24
 8003cf2:	4b12      	ldr	r3, [pc, #72]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003cf4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003cf6:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8003cfa:	60fb      	str	r3, [r7, #12]
 8003cfc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003cfe:	4b0f      	ldr	r3, [pc, #60]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003d00:	6a1b      	ldr	r3, [r3, #32]
 8003d02:	4a0e      	ldr	r2, [pc, #56]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003d04:	f043 0301 	orr.w	r3, r3, #1
 8003d08:	6213      	str	r3, [r2, #32]
 8003d0a:	4b0c      	ldr	r3, [pc, #48]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003d0c:	6a1b      	ldr	r3, [r3, #32]
 8003d0e:	f003 0301 	and.w	r3, r3, #1
 8003d12:	60bb      	str	r3, [r7, #8]
 8003d14:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8003d16:	4b09      	ldr	r3, [pc, #36]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003d18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d1a:	4a08      	ldr	r2, [pc, #32]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003d1c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003d20:	6253      	str	r3, [r2, #36]	@ 0x24
 8003d22:	4b06      	ldr	r3, [pc, #24]	@ (8003d3c <HAL_MspInit+0x5c>)
 8003d24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d26:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003d2a:	607b      	str	r3, [r7, #4]
 8003d2c:	687b      	ldr	r3, [r7, #4]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8003d2e:	2007      	movs	r0, #7
 8003d30:	f000 fdf2 	bl	8004918 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003d34:	bf00      	nop
 8003d36:	3710      	adds	r7, #16
 8003d38:	46bd      	mov	sp, r7
 8003d3a:	bd80      	pop	{r7, pc}
 8003d3c:	40023800 	.word	0x40023800

08003d40 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8003d40:	b580      	push	{r7, lr}
 8003d42:	b08a      	sub	sp, #40	@ 0x28
 8003d44:	af00      	add	r7, sp, #0
 8003d46:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003d48:	f107 0314 	add.w	r3, r7, #20
 8003d4c:	2200      	movs	r2, #0
 8003d4e:	601a      	str	r2, [r3, #0]
 8003d50:	605a      	str	r2, [r3, #4]
 8003d52:	609a      	str	r2, [r3, #8]
 8003d54:	60da      	str	r2, [r3, #12]
 8003d56:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	4a17      	ldr	r2, [pc, #92]	@ (8003dbc <HAL_I2C_MspInit+0x7c>)
 8003d5e:	4293      	cmp	r3, r2
 8003d60:	d128      	bne.n	8003db4 <HAL_I2C_MspInit+0x74>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003d62:	4b17      	ldr	r3, [pc, #92]	@ (8003dc0 <HAL_I2C_MspInit+0x80>)
 8003d64:	69db      	ldr	r3, [r3, #28]
 8003d66:	4a16      	ldr	r2, [pc, #88]	@ (8003dc0 <HAL_I2C_MspInit+0x80>)
 8003d68:	f043 0302 	orr.w	r3, r3, #2
 8003d6c:	61d3      	str	r3, [r2, #28]
 8003d6e:	4b14      	ldr	r3, [pc, #80]	@ (8003dc0 <HAL_I2C_MspInit+0x80>)
 8003d70:	69db      	ldr	r3, [r3, #28]
 8003d72:	f003 0302 	and.w	r3, r3, #2
 8003d76:	613b      	str	r3, [r7, #16]
 8003d78:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8003d7a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8003d7e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8003d80:	2312      	movs	r3, #18
 8003d82:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003d84:	2300      	movs	r3, #0
 8003d86:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003d88:	2303      	movs	r3, #3
 8003d8a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8003d8c:	2304      	movs	r3, #4
 8003d8e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003d90:	f107 0314 	add.w	r3, r7, #20
 8003d94:	4619      	mov	r1, r3
 8003d96:	480b      	ldr	r0, [pc, #44]	@ (8003dc4 <HAL_I2C_MspInit+0x84>)
 8003d98:	f000 fe50 	bl	8004a3c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8003d9c:	4b08      	ldr	r3, [pc, #32]	@ (8003dc0 <HAL_I2C_MspInit+0x80>)
 8003d9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003da0:	4a07      	ldr	r2, [pc, #28]	@ (8003dc0 <HAL_I2C_MspInit+0x80>)
 8003da2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8003da6:	6253      	str	r3, [r2, #36]	@ 0x24
 8003da8:	4b05      	ldr	r3, [pc, #20]	@ (8003dc0 <HAL_I2C_MspInit+0x80>)
 8003daa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dac:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003db0:	60fb      	str	r3, [r7, #12]
 8003db2:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8003db4:	bf00      	nop
 8003db6:	3728      	adds	r7, #40	@ 0x28
 8003db8:	46bd      	mov	sp, r7
 8003dba:	bd80      	pop	{r7, pc}
 8003dbc:	40005400 	.word	0x40005400
 8003dc0:	40023800 	.word	0x40023800
 8003dc4:	40020400 	.word	0x40020400

08003dc8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003dc8:	b580      	push	{r7, lr}
 8003dca:	b08a      	sub	sp, #40	@ 0x28
 8003dcc:	af00      	add	r7, sp, #0
 8003dce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003dd0:	f107 0314 	add.w	r3, r7, #20
 8003dd4:	2200      	movs	r2, #0
 8003dd6:	601a      	str	r2, [r3, #0]
 8003dd8:	605a      	str	r2, [r3, #4]
 8003dda:	609a      	str	r2, [r3, #8]
 8003ddc:	60da      	str	r2, [r3, #12]
 8003dde:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	4a17      	ldr	r2, [pc, #92]	@ (8003e44 <HAL_UART_MspInit+0x7c>)
 8003de6:	4293      	cmp	r3, r2
 8003de8:	d128      	bne.n	8003e3c <HAL_UART_MspInit+0x74>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8003dea:	4b17      	ldr	r3, [pc, #92]	@ (8003e48 <HAL_UART_MspInit+0x80>)
 8003dec:	6a1b      	ldr	r3, [r3, #32]
 8003dee:	4a16      	ldr	r2, [pc, #88]	@ (8003e48 <HAL_UART_MspInit+0x80>)
 8003df0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003df4:	6213      	str	r3, [r2, #32]
 8003df6:	4b14      	ldr	r3, [pc, #80]	@ (8003e48 <HAL_UART_MspInit+0x80>)
 8003df8:	6a1b      	ldr	r3, [r3, #32]
 8003dfa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003dfe:	613b      	str	r3, [r7, #16]
 8003e00:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003e02:	4b11      	ldr	r3, [pc, #68]	@ (8003e48 <HAL_UART_MspInit+0x80>)
 8003e04:	69db      	ldr	r3, [r3, #28]
 8003e06:	4a10      	ldr	r2, [pc, #64]	@ (8003e48 <HAL_UART_MspInit+0x80>)
 8003e08:	f043 0301 	orr.w	r3, r3, #1
 8003e0c:	61d3      	str	r3, [r2, #28]
 8003e0e:	4b0e      	ldr	r3, [pc, #56]	@ (8003e48 <HAL_UART_MspInit+0x80>)
 8003e10:	69db      	ldr	r3, [r3, #28]
 8003e12:	f003 0301 	and.w	r3, r3, #1
 8003e16:	60fb      	str	r3, [r7, #12]
 8003e18:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8003e1a:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8003e1e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003e20:	2302      	movs	r3, #2
 8003e22:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003e24:	2300      	movs	r3, #0
 8003e26:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003e28:	2303      	movs	r3, #3
 8003e2a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8003e2c:	2307      	movs	r3, #7
 8003e2e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003e30:	f107 0314 	add.w	r3, r7, #20
 8003e34:	4619      	mov	r1, r3
 8003e36:	4805      	ldr	r0, [pc, #20]	@ (8003e4c <HAL_UART_MspInit+0x84>)
 8003e38:	f000 fe00 	bl	8004a3c <HAL_GPIO_Init>

  /* USER CODE END USART1_MspInit 1 */

  }

}
 8003e3c:	bf00      	nop
 8003e3e:	3728      	adds	r7, #40	@ 0x28
 8003e40:	46bd      	mov	sp, r7
 8003e42:	bd80      	pop	{r7, pc}
 8003e44:	40013800 	.word	0x40013800
 8003e48:	40023800 	.word	0x40023800
 8003e4c:	40020000 	.word	0x40020000

08003e50 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003e50:	b480      	push	{r7}
 8003e52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8003e54:	bf00      	nop
 8003e56:	e7fd      	b.n	8003e54 <NMI_Handler+0x4>

08003e58 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003e58:	b480      	push	{r7}
 8003e5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003e5c:	bf00      	nop
 8003e5e:	e7fd      	b.n	8003e5c <HardFault_Handler+0x4>

08003e60 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003e60:	b480      	push	{r7}
 8003e62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003e64:	bf00      	nop
 8003e66:	e7fd      	b.n	8003e64 <MemManage_Handler+0x4>

08003e68 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003e68:	b480      	push	{r7}
 8003e6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003e6c:	bf00      	nop
 8003e6e:	e7fd      	b.n	8003e6c <BusFault_Handler+0x4>

08003e70 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003e70:	b480      	push	{r7}
 8003e72:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003e74:	bf00      	nop
 8003e76:	e7fd      	b.n	8003e74 <UsageFault_Handler+0x4>

08003e78 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003e78:	b480      	push	{r7}
 8003e7a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8003e7c:	bf00      	nop
 8003e7e:	46bd      	mov	sp, r7
 8003e80:	bc80      	pop	{r7}
 8003e82:	4770      	bx	lr

08003e84 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003e84:	b480      	push	{r7}
 8003e86:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003e88:	bf00      	nop
 8003e8a:	46bd      	mov	sp, r7
 8003e8c:	bc80      	pop	{r7}
 8003e8e:	4770      	bx	lr

08003e90 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003e90:	b480      	push	{r7}
 8003e92:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003e94:	bf00      	nop
 8003e96:	46bd      	mov	sp, r7
 8003e98:	bc80      	pop	{r7}
 8003e9a:	4770      	bx	lr

08003e9c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003e9c:	b580      	push	{r7, lr}
 8003e9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003ea0:	f000 fc30 	bl	8004704 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003ea4:	bf00      	nop
 8003ea6:	bd80      	pop	{r7, pc}

08003ea8 <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8003ea8:	b580      	push	{r7, lr}
 8003eaa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_EXTI_IRQHandler(&H_EXTI_0);
 8003eac:	4802      	ldr	r0, [pc, #8]	@ (8003eb8 <EXTI0_IRQHandler+0x10>)
 8003eae:	f000 fda1 	bl	80049f4 <HAL_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8003eb2:	bf00      	nop
 8003eb4:	bd80      	pop	{r7, pc}
 8003eb6:	bf00      	nop
 8003eb8:	20000280 	.word	0x20000280

08003ebc <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8003ebc:	b580      	push	{r7, lr}
 8003ebe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_EXTI_IRQHandler(&H_EXTI_13);
 8003ec0:	4802      	ldr	r0, [pc, #8]	@ (8003ecc <EXTI15_10_IRQHandler+0x10>)
 8003ec2:	f000 fd97 	bl	80049f4 <HAL_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8003ec6:	bf00      	nop
 8003ec8:	bd80      	pop	{r7, pc}
 8003eca:	bf00      	nop
 8003ecc:	20000014 	.word	0x20000014

08003ed0 <BSP_SPI1_Init>:
/**
  * @brief  Initializes SPI HAL.
  * @retval BSP status
  */
int32_t BSP_SPI1_Init(void)
{
 8003ed0:	b580      	push	{r7, lr}
 8003ed2:	b082      	sub	sp, #8
 8003ed4:	af00      	add	r7, sp, #0
  int32_t ret = BSP_ERROR_NONE;
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	607b      	str	r3, [r7, #4]

  hspi1.Instance  = SPI1;
 8003eda:	4b12      	ldr	r3, [pc, #72]	@ (8003f24 <BSP_SPI1_Init+0x54>)
 8003edc:	4a12      	ldr	r2, [pc, #72]	@ (8003f28 <BSP_SPI1_Init+0x58>)
 8003ede:	601a      	str	r2, [r3, #0]

  if(SPI1InitCounter++ == 0)
 8003ee0:	4b12      	ldr	r3, [pc, #72]	@ (8003f2c <BSP_SPI1_Init+0x5c>)
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	1c5a      	adds	r2, r3, #1
 8003ee6:	4911      	ldr	r1, [pc, #68]	@ (8003f2c <BSP_SPI1_Init+0x5c>)
 8003ee8:	600a      	str	r2, [r1, #0]
 8003eea:	2b00      	cmp	r3, #0
 8003eec:	d114      	bne.n	8003f18 <BSP_SPI1_Init+0x48>
  {
    if (HAL_SPI_GetState(&hspi1) == HAL_SPI_STATE_RESET)
 8003eee:	480d      	ldr	r0, [pc, #52]	@ (8003f24 <BSP_SPI1_Init+0x54>)
 8003ef0:	f003 fd3c 	bl	800796c <HAL_SPI_GetState>
 8003ef4:	4603      	mov	r3, r0
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d10e      	bne.n	8003f18 <BSP_SPI1_Init+0x48>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 0U)
        /* Init the SPI Msp */
        SPI1_MspInit(&hspi1);
 8003efa:	480a      	ldr	r0, [pc, #40]	@ (8003f24 <BSP_SPI1_Init+0x54>)
 8003efc:	f000 f87c 	bl	8003ff8 <SPI1_MspInit>
            {
                return BSP_ERROR_MSP_FAILURE;
            }
        }
#endif
        if(ret == BSP_ERROR_NONE)
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d108      	bne.n	8003f18 <BSP_SPI1_Init+0x48>
        {
            /* Init the SPI */
            if (MX_SPI1_Init(&hspi1) != HAL_OK)
 8003f06:	4807      	ldr	r0, [pc, #28]	@ (8003f24 <BSP_SPI1_Init+0x54>)
 8003f08:	f000 f83a 	bl	8003f80 <MX_SPI1_Init>
 8003f0c:	4603      	mov	r3, r0
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d002      	beq.n	8003f18 <BSP_SPI1_Init+0x48>
            {
                ret = BSP_ERROR_BUS_FAILURE;
 8003f12:	f06f 0307 	mvn.w	r3, #7
 8003f16:	607b      	str	r3, [r7, #4]
            }
        }
    }
  }

  return ret;
 8003f18:	687b      	ldr	r3, [r7, #4]
}
 8003f1a:	4618      	mov	r0, r3
 8003f1c:	3708      	adds	r7, #8
 8003f1e:	46bd      	mov	sp, r7
 8003f20:	bd80      	pop	{r7, pc}
 8003f22:	bf00      	nop
 8003f24:	20000430 	.word	0x20000430
 8003f28:	40013000 	.word	0x40013000
 8003f2c:	20000488 	.word	0x20000488

08003f30 <BSP_SPI1_SendRecv>:
  * @param  pData: Pointer to data buffer to send/receive
  * @param  Length: Length of data in byte
  * @retval BSP status
  */
int32_t BSP_SPI1_SendRecv(uint8_t *pTxData, uint8_t *pRxData, uint16_t Length)
{
 8003f30:	b580      	push	{r7, lr}
 8003f32:	b088      	sub	sp, #32
 8003f34:	af02      	add	r7, sp, #8
 8003f36:	60f8      	str	r0, [r7, #12]
 8003f38:	60b9      	str	r1, [r7, #8]
 8003f3a:	4613      	mov	r3, r2
 8003f3c:	80fb      	strh	r3, [r7, #6]
  int32_t ret = BSP_ERROR_NONE;
 8003f3e:	2300      	movs	r3, #0
 8003f40:	617b      	str	r3, [r7, #20]

  if(HAL_SPI_TransmitReceive(&hspi1, pTxData, pRxData, Length, BUS_SPI1_POLL_TIMEOUT) != HAL_OK)
 8003f42:	88fb      	ldrh	r3, [r7, #6]
 8003f44:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8003f48:	9200      	str	r2, [sp, #0]
 8003f4a:	68ba      	ldr	r2, [r7, #8]
 8003f4c:	68f9      	ldr	r1, [r7, #12]
 8003f4e:	4807      	ldr	r0, [pc, #28]	@ (8003f6c <BSP_SPI1_SendRecv+0x3c>)
 8003f50:	f003 fb5c 	bl	800760c <HAL_SPI_TransmitReceive>
 8003f54:	4603      	mov	r3, r0
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d002      	beq.n	8003f60 <BSP_SPI1_SendRecv+0x30>
  {
      ret = BSP_ERROR_UNKNOWN_FAILURE;
 8003f5a:	f06f 0305 	mvn.w	r3, #5
 8003f5e:	617b      	str	r3, [r7, #20]
  }
  return ret;
 8003f60:	697b      	ldr	r3, [r7, #20]
}
 8003f62:	4618      	mov	r0, r3
 8003f64:	3718      	adds	r7, #24
 8003f66:	46bd      	mov	sp, r7
 8003f68:	bd80      	pop	{r7, pc}
 8003f6a:	bf00      	nop
 8003f6c:	20000430 	.word	0x20000430

08003f70 <BSP_GetTick>:

/**
  * @brief  Return system tick in ms
  * @retval Current HAL time base time stamp
  */
int32_t BSP_GetTick(void) {
 8003f70:	b580      	push	{r7, lr}
 8003f72:	af00      	add	r7, sp, #0
  return HAL_GetTick();
 8003f74:	f000 fbd8 	bl	8004728 <HAL_GetTick>
 8003f78:	4603      	mov	r3, r0
}
 8003f7a:	4618      	mov	r0, r3
 8003f7c:	bd80      	pop	{r7, pc}
	...

08003f80 <MX_SPI1_Init>:

/* SPI1 init function */

__weak HAL_StatusTypeDef MX_SPI1_Init(SPI_HandleTypeDef* hspi)
{
 8003f80:	b580      	push	{r7, lr}
 8003f82:	b084      	sub	sp, #16
 8003f84:	af00      	add	r7, sp, #0
 8003f86:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef ret = HAL_OK;
 8003f88:	2300      	movs	r3, #0
 8003f8a:	73fb      	strb	r3, [r7, #15]

  hspi->Instance = SPI1;
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	4a19      	ldr	r2, [pc, #100]	@ (8003ff4 <MX_SPI1_Init+0x74>)
 8003f90:	601a      	str	r2, [r3, #0]
  hspi->Init.Mode = SPI_MODE_MASTER;
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8003f98:	605a      	str	r2, [r3, #4]
  hspi->Init.Direction = SPI_DIRECTION_2LINES;
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	2200      	movs	r2, #0
 8003f9e:	609a      	str	r2, [r3, #8]
  hspi->Init.DataSize = SPI_DATASIZE_8BIT;
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	2200      	movs	r2, #0
 8003fa4:	60da      	str	r2, [r3, #12]
  hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	2200      	movs	r2, #0
 8003faa:	611a      	str	r2, [r3, #16]
  hspi->Init.CLKPhase = SPI_PHASE_1EDGE;
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	2200      	movs	r2, #0
 8003fb0:	615a      	str	r2, [r3, #20]
  hspi->Init.NSS = SPI_NSS_SOFT;
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003fb8:	619a      	str	r2, [r3, #24]
  hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	2218      	movs	r2, #24
 8003fbe:	61da      	str	r2, [r3, #28]
  hspi->Init.FirstBit = SPI_FIRSTBIT_MSB;
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	2200      	movs	r2, #0
 8003fc4:	621a      	str	r2, [r3, #32]
  hspi->Init.TIMode = SPI_TIMODE_DISABLE;
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	2200      	movs	r2, #0
 8003fca:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	2200      	movs	r2, #0
 8003fd0:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi->Init.CRCPolynomial = 10;
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	220a      	movs	r2, #10
 8003fd6:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(hspi) != HAL_OK)
 8003fd8:	6878      	ldr	r0, [r7, #4]
 8003fda:	f003 fa85 	bl	80074e8 <HAL_SPI_Init>
 8003fde:	4603      	mov	r3, r0
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d001      	beq.n	8003fe8 <MX_SPI1_Init+0x68>
  {
    ret = HAL_ERROR;
 8003fe4:	2301      	movs	r3, #1
 8003fe6:	73fb      	strb	r3, [r7, #15]
  }

  return ret;
 8003fe8:	7bfb      	ldrb	r3, [r7, #15]
}
 8003fea:	4618      	mov	r0, r3
 8003fec:	3710      	adds	r7, #16
 8003fee:	46bd      	mov	sp, r7
 8003ff0:	bd80      	pop	{r7, pc}
 8003ff2:	bf00      	nop
 8003ff4:	40013000 	.word	0x40013000

08003ff8 <SPI1_MspInit>:

static void SPI1_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8003ff8:	b580      	push	{r7, lr}
 8003ffa:	b08a      	sub	sp, #40	@ 0x28
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct;
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Enable Peripheral clock */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8004000:	4b2b      	ldr	r3, [pc, #172]	@ (80040b0 <SPI1_MspInit+0xb8>)
 8004002:	6a1b      	ldr	r3, [r3, #32]
 8004004:	4a2a      	ldr	r2, [pc, #168]	@ (80040b0 <SPI1_MspInit+0xb8>)
 8004006:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800400a:	6213      	str	r3, [r2, #32]
 800400c:	4b28      	ldr	r3, [pc, #160]	@ (80040b0 <SPI1_MspInit+0xb8>)
 800400e:	6a1b      	ldr	r3, [r3, #32]
 8004010:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004014:	613b      	str	r3, [r7, #16]
 8004016:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004018:	4b25      	ldr	r3, [pc, #148]	@ (80040b0 <SPI1_MspInit+0xb8>)
 800401a:	69db      	ldr	r3, [r3, #28]
 800401c:	4a24      	ldr	r2, [pc, #144]	@ (80040b0 <SPI1_MspInit+0xb8>)
 800401e:	f043 0301 	orr.w	r3, r3, #1
 8004022:	61d3      	str	r3, [r2, #28]
 8004024:	4b22      	ldr	r3, [pc, #136]	@ (80040b0 <SPI1_MspInit+0xb8>)
 8004026:	69db      	ldr	r3, [r3, #28]
 8004028:	f003 0301 	and.w	r3, r3, #1
 800402c:	60fb      	str	r3, [r7, #12]
 800402e:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004030:	4b1f      	ldr	r3, [pc, #124]	@ (80040b0 <SPI1_MspInit+0xb8>)
 8004032:	69db      	ldr	r3, [r3, #28]
 8004034:	4a1e      	ldr	r2, [pc, #120]	@ (80040b0 <SPI1_MspInit+0xb8>)
 8004036:	f043 0302 	orr.w	r3, r3, #2
 800403a:	61d3      	str	r3, [r2, #28]
 800403c:	4b1c      	ldr	r3, [pc, #112]	@ (80040b0 <SPI1_MspInit+0xb8>)
 800403e:	69db      	ldr	r3, [r3, #28]
 8004040:	f003 0302 	and.w	r3, r3, #2
 8004044:	60bb      	str	r3, [r7, #8]
 8004046:	68bb      	ldr	r3, [r7, #8]
    /**SPI1 GPIO Configuration
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    PB3     ------> SPI1_SCK
    */
    GPIO_InitStruct.Pin = BUS_SPI1_MISO_GPIO_PIN;
 8004048:	2340      	movs	r3, #64	@ 0x40
 800404a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800404c:	2302      	movs	r3, #2
 800404e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004050:	2300      	movs	r3, #0
 8004052:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004054:	2303      	movs	r3, #3
 8004056:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = BUS_SPI1_MISO_GPIO_AF;
 8004058:	2305      	movs	r3, #5
 800405a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(BUS_SPI1_MISO_GPIO_PORT, &GPIO_InitStruct);
 800405c:	f107 0314 	add.w	r3, r7, #20
 8004060:	4619      	mov	r1, r3
 8004062:	4814      	ldr	r0, [pc, #80]	@ (80040b4 <SPI1_MspInit+0xbc>)
 8004064:	f000 fcea 	bl	8004a3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = BUS_SPI1_MOSI_GPIO_PIN;
 8004068:	2380      	movs	r3, #128	@ 0x80
 800406a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800406c:	2302      	movs	r3, #2
 800406e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004070:	2300      	movs	r3, #0
 8004072:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004074:	2303      	movs	r3, #3
 8004076:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = BUS_SPI1_MOSI_GPIO_AF;
 8004078:	2305      	movs	r3, #5
 800407a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(BUS_SPI1_MOSI_GPIO_PORT, &GPIO_InitStruct);
 800407c:	f107 0314 	add.w	r3, r7, #20
 8004080:	4619      	mov	r1, r3
 8004082:	480c      	ldr	r0, [pc, #48]	@ (80040b4 <SPI1_MspInit+0xbc>)
 8004084:	f000 fcda 	bl	8004a3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = BUS_SPI1_SCK_GPIO_PIN;
 8004088:	2308      	movs	r3, #8
 800408a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800408c:	2302      	movs	r3, #2
 800408e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004090:	2300      	movs	r3, #0
 8004092:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004094:	2303      	movs	r3, #3
 8004096:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = BUS_SPI1_SCK_GPIO_AF;
 8004098:	2305      	movs	r3, #5
 800409a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(BUS_SPI1_SCK_GPIO_PORT, &GPIO_InitStruct);
 800409c:	f107 0314 	add.w	r3, r7, #20
 80040a0:	4619      	mov	r1, r3
 80040a2:	4805      	ldr	r0, [pc, #20]	@ (80040b8 <SPI1_MspInit+0xc0>)
 80040a4:	f000 fcca 	bl	8004a3c <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
}
 80040a8:	bf00      	nop
 80040aa:	3728      	adds	r7, #40	@ 0x28
 80040ac:	46bd      	mov	sp, r7
 80040ae:	bd80      	pop	{r7, pc}
 80040b0:	40023800 	.word	0x40023800
 80040b4:	40020000 	.word	0x40020000
 80040b8:	40020400 	.word	0x40020400

080040bc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80040bc:	b480      	push	{r7}
 80040be:	af00      	add	r7, sp, #0
  return 1;
 80040c0:	2301      	movs	r3, #1
}
 80040c2:	4618      	mov	r0, r3
 80040c4:	46bd      	mov	sp, r7
 80040c6:	bc80      	pop	{r7}
 80040c8:	4770      	bx	lr

080040ca <_kill>:

int _kill(int pid, int sig)
{
 80040ca:	b580      	push	{r7, lr}
 80040cc:	b082      	sub	sp, #8
 80040ce:	af00      	add	r7, sp, #0
 80040d0:	6078      	str	r0, [r7, #4]
 80040d2:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80040d4:	f006 f9fe 	bl	800a4d4 <__errno>
 80040d8:	4603      	mov	r3, r0
 80040da:	2216      	movs	r2, #22
 80040dc:	601a      	str	r2, [r3, #0]
  return -1;
 80040de:	f04f 33ff 	mov.w	r3, #4294967295
}
 80040e2:	4618      	mov	r0, r3
 80040e4:	3708      	adds	r7, #8
 80040e6:	46bd      	mov	sp, r7
 80040e8:	bd80      	pop	{r7, pc}

080040ea <_exit>:

void _exit (int status)
{
 80040ea:	b580      	push	{r7, lr}
 80040ec:	b082      	sub	sp, #8
 80040ee:	af00      	add	r7, sp, #0
 80040f0:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80040f2:	f04f 31ff 	mov.w	r1, #4294967295
 80040f6:	6878      	ldr	r0, [r7, #4]
 80040f8:	f7ff ffe7 	bl	80040ca <_kill>
  while (1) {}    /* Make sure we hang here */
 80040fc:	bf00      	nop
 80040fe:	e7fd      	b.n	80040fc <_exit+0x12>

08004100 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004100:	b580      	push	{r7, lr}
 8004102:	b086      	sub	sp, #24
 8004104:	af00      	add	r7, sp, #0
 8004106:	60f8      	str	r0, [r7, #12]
 8004108:	60b9      	str	r1, [r7, #8]
 800410a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800410c:	2300      	movs	r3, #0
 800410e:	617b      	str	r3, [r7, #20]
 8004110:	e00a      	b.n	8004128 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8004112:	f3af 8000 	nop.w
 8004116:	4601      	mov	r1, r0
 8004118:	68bb      	ldr	r3, [r7, #8]
 800411a:	1c5a      	adds	r2, r3, #1
 800411c:	60ba      	str	r2, [r7, #8]
 800411e:	b2ca      	uxtb	r2, r1
 8004120:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004122:	697b      	ldr	r3, [r7, #20]
 8004124:	3301      	adds	r3, #1
 8004126:	617b      	str	r3, [r7, #20]
 8004128:	697a      	ldr	r2, [r7, #20]
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	429a      	cmp	r2, r3
 800412e:	dbf0      	blt.n	8004112 <_read+0x12>
  }

  return len;
 8004130:	687b      	ldr	r3, [r7, #4]
}
 8004132:	4618      	mov	r0, r3
 8004134:	3718      	adds	r7, #24
 8004136:	46bd      	mov	sp, r7
 8004138:	bd80      	pop	{r7, pc}

0800413a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800413a:	b580      	push	{r7, lr}
 800413c:	b086      	sub	sp, #24
 800413e:	af00      	add	r7, sp, #0
 8004140:	60f8      	str	r0, [r7, #12]
 8004142:	60b9      	str	r1, [r7, #8]
 8004144:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004146:	2300      	movs	r3, #0
 8004148:	617b      	str	r3, [r7, #20]
 800414a:	e009      	b.n	8004160 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800414c:	68bb      	ldr	r3, [r7, #8]
 800414e:	1c5a      	adds	r2, r3, #1
 8004150:	60ba      	str	r2, [r7, #8]
 8004152:	781b      	ldrb	r3, [r3, #0]
 8004154:	4618      	mov	r0, r3
 8004156:	f000 fa23 	bl	80045a0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800415a:	697b      	ldr	r3, [r7, #20]
 800415c:	3301      	adds	r3, #1
 800415e:	617b      	str	r3, [r7, #20]
 8004160:	697a      	ldr	r2, [r7, #20]
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	429a      	cmp	r2, r3
 8004166:	dbf1      	blt.n	800414c <_write+0x12>
  }
  return len;
 8004168:	687b      	ldr	r3, [r7, #4]
}
 800416a:	4618      	mov	r0, r3
 800416c:	3718      	adds	r7, #24
 800416e:	46bd      	mov	sp, r7
 8004170:	bd80      	pop	{r7, pc}

08004172 <_close>:

int _close(int file)
{
 8004172:	b480      	push	{r7}
 8004174:	b083      	sub	sp, #12
 8004176:	af00      	add	r7, sp, #0
 8004178:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800417a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800417e:	4618      	mov	r0, r3
 8004180:	370c      	adds	r7, #12
 8004182:	46bd      	mov	sp, r7
 8004184:	bc80      	pop	{r7}
 8004186:	4770      	bx	lr

08004188 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004188:	b480      	push	{r7}
 800418a:	b083      	sub	sp, #12
 800418c:	af00      	add	r7, sp, #0
 800418e:	6078      	str	r0, [r7, #4]
 8004190:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8004192:	683b      	ldr	r3, [r7, #0]
 8004194:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8004198:	605a      	str	r2, [r3, #4]
  return 0;
 800419a:	2300      	movs	r3, #0
}
 800419c:	4618      	mov	r0, r3
 800419e:	370c      	adds	r7, #12
 80041a0:	46bd      	mov	sp, r7
 80041a2:	bc80      	pop	{r7}
 80041a4:	4770      	bx	lr

080041a6 <_isatty>:

int _isatty(int file)
{
 80041a6:	b480      	push	{r7}
 80041a8:	b083      	sub	sp, #12
 80041aa:	af00      	add	r7, sp, #0
 80041ac:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80041ae:	2301      	movs	r3, #1
}
 80041b0:	4618      	mov	r0, r3
 80041b2:	370c      	adds	r7, #12
 80041b4:	46bd      	mov	sp, r7
 80041b6:	bc80      	pop	{r7}
 80041b8:	4770      	bx	lr

080041ba <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80041ba:	b480      	push	{r7}
 80041bc:	b085      	sub	sp, #20
 80041be:	af00      	add	r7, sp, #0
 80041c0:	60f8      	str	r0, [r7, #12]
 80041c2:	60b9      	str	r1, [r7, #8]
 80041c4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80041c6:	2300      	movs	r3, #0
}
 80041c8:	4618      	mov	r0, r3
 80041ca:	3714      	adds	r7, #20
 80041cc:	46bd      	mov	sp, r7
 80041ce:	bc80      	pop	{r7}
 80041d0:	4770      	bx	lr
	...

080041d4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80041d4:	b580      	push	{r7, lr}
 80041d6:	b086      	sub	sp, #24
 80041d8:	af00      	add	r7, sp, #0
 80041da:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80041dc:	4a14      	ldr	r2, [pc, #80]	@ (8004230 <_sbrk+0x5c>)
 80041de:	4b15      	ldr	r3, [pc, #84]	@ (8004234 <_sbrk+0x60>)
 80041e0:	1ad3      	subs	r3, r2, r3
 80041e2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80041e4:	697b      	ldr	r3, [r7, #20]
 80041e6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80041e8:	4b13      	ldr	r3, [pc, #76]	@ (8004238 <_sbrk+0x64>)
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d102      	bne.n	80041f6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80041f0:	4b11      	ldr	r3, [pc, #68]	@ (8004238 <_sbrk+0x64>)
 80041f2:	4a12      	ldr	r2, [pc, #72]	@ (800423c <_sbrk+0x68>)
 80041f4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80041f6:	4b10      	ldr	r3, [pc, #64]	@ (8004238 <_sbrk+0x64>)
 80041f8:	681a      	ldr	r2, [r3, #0]
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	4413      	add	r3, r2
 80041fe:	693a      	ldr	r2, [r7, #16]
 8004200:	429a      	cmp	r2, r3
 8004202:	d207      	bcs.n	8004214 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8004204:	f006 f966 	bl	800a4d4 <__errno>
 8004208:	4603      	mov	r3, r0
 800420a:	220c      	movs	r2, #12
 800420c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800420e:	f04f 33ff 	mov.w	r3, #4294967295
 8004212:	e009      	b.n	8004228 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8004214:	4b08      	ldr	r3, [pc, #32]	@ (8004238 <_sbrk+0x64>)
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800421a:	4b07      	ldr	r3, [pc, #28]	@ (8004238 <_sbrk+0x64>)
 800421c:	681a      	ldr	r2, [r3, #0]
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	4413      	add	r3, r2
 8004222:	4a05      	ldr	r2, [pc, #20]	@ (8004238 <_sbrk+0x64>)
 8004224:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8004226:	68fb      	ldr	r3, [r7, #12]
}
 8004228:	4618      	mov	r0, r3
 800422a:	3718      	adds	r7, #24
 800422c:	46bd      	mov	sp, r7
 800422e:	bd80      	pop	{r7, pc}
 8004230:	20014000 	.word	0x20014000
 8004234:	00000400 	.word	0x00000400
 8004238:	2000048c 	.word	0x2000048c
 800423c:	20000918 	.word	0x20000918

08004240 <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8004240:	b480      	push	{r7}
 8004242:	af00      	add	r7, sp, #0
    
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8004244:	bf00      	nop
 8004246:	46bd      	mov	sp, r7
 8004248:	bc80      	pop	{r7}
 800424a:	4770      	bx	lr

0800424c <Reset_Handler>:
 800424c:	f7ff fff8 	bl	8004240 <SystemInit>
 8004250:	480b      	ldr	r0, [pc, #44]	@ (8004280 <LoopFillZerobss+0xe>)
 8004252:	490c      	ldr	r1, [pc, #48]	@ (8004284 <LoopFillZerobss+0x12>)
 8004254:	4a0c      	ldr	r2, [pc, #48]	@ (8004288 <LoopFillZerobss+0x16>)
 8004256:	2300      	movs	r3, #0
 8004258:	e002      	b.n	8004260 <LoopCopyDataInit>

0800425a <CopyDataInit>:
 800425a:	58d4      	ldr	r4, [r2, r3]
 800425c:	50c4      	str	r4, [r0, r3]
 800425e:	3304      	adds	r3, #4

08004260 <LoopCopyDataInit>:
 8004260:	18c4      	adds	r4, r0, r3
 8004262:	428c      	cmp	r4, r1
 8004264:	d3f9      	bcc.n	800425a <CopyDataInit>
 8004266:	4a09      	ldr	r2, [pc, #36]	@ (800428c <LoopFillZerobss+0x1a>)
 8004268:	4c09      	ldr	r4, [pc, #36]	@ (8004290 <LoopFillZerobss+0x1e>)
 800426a:	2300      	movs	r3, #0
 800426c:	e001      	b.n	8004272 <LoopFillZerobss>

0800426e <FillZerobss>:
 800426e:	6013      	str	r3, [r2, #0]
 8004270:	3204      	adds	r2, #4

08004272 <LoopFillZerobss>:
 8004272:	42a2      	cmp	r2, r4
 8004274:	d3fb      	bcc.n	800426e <FillZerobss>
 8004276:	f006 f933 	bl	800a4e0 <__libc_init_array>
 800427a:	f7ff fb09 	bl	8003890 <main>
 800427e:	4770      	bx	lr
 8004280:	20000000 	.word	0x20000000
 8004284:	200001f0 	.word	0x200001f0
 8004288:	0800e07c 	.word	0x0800e07c
 800428c:	200001f0 	.word	0x200001f0
 8004290:	20000918 	.word	0x20000918

08004294 <ADC1_IRQHandler>:
 8004294:	e7fe      	b.n	8004294 <ADC1_IRQHandler>
	...

08004298 <BSP_LED_Init>:
 8004298:	b580      	push	{r7, lr}
 800429a:	b082      	sub	sp, #8
 800429c:	af00      	add	r7, sp, #0
 800429e:	4603      	mov	r3, r0
 80042a0:	71fb      	strb	r3, [r7, #7]
 80042a2:	79fb      	ldrb	r3, [r7, #7]
 80042a4:	4a04      	ldr	r2, [pc, #16]	@ (80042b8 <BSP_LED_Init+0x20>)
 80042a6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80042aa:	4798      	blx	r3
 80042ac:	2300      	movs	r3, #0
 80042ae:	4618      	mov	r0, r3
 80042b0:	3708      	adds	r7, #8
 80042b2:	46bd      	mov	sp, r7
 80042b4:	bd80      	pop	{r7, pc}
 80042b6:	bf00      	nop
 80042b8:	0800dbd0 	.word	0x0800dbd0

080042bc <BSP_LED_Toggle>:
 80042bc:	b580      	push	{r7, lr}
 80042be:	b082      	sub	sp, #8
 80042c0:	af00      	add	r7, sp, #0
 80042c2:	4603      	mov	r3, r0
 80042c4:	71fb      	strb	r3, [r7, #7]
 80042c6:	79fb      	ldrb	r3, [r7, #7]
 80042c8:	4a06      	ldr	r2, [pc, #24]	@ (80042e4 <BSP_LED_Toggle+0x28>)
 80042ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80042ce:	2220      	movs	r2, #32
 80042d0:	4611      	mov	r1, r2
 80042d2:	4618      	mov	r0, r3
 80042d4:	f000 fe61 	bl	8004f9a <HAL_GPIO_TogglePin>
 80042d8:	2300      	movs	r3, #0
 80042da:	4618      	mov	r0, r3
 80042dc:	3708      	adds	r7, #8
 80042de:	46bd      	mov	sp, r7
 80042e0:	bd80      	pop	{r7, pc}
 80042e2:	bf00      	nop
 80042e4:	2000000c 	.word	0x2000000c

080042e8 <LED_USER_GPIO_Init>:
 80042e8:	b580      	push	{r7, lr}
 80042ea:	b088      	sub	sp, #32
 80042ec:	af00      	add	r7, sp, #0
 80042ee:	4b1b      	ldr	r3, [pc, #108]	@ (800435c <LED_USER_GPIO_Init+0x74>)
 80042f0:	69db      	ldr	r3, [r3, #28]
 80042f2:	4a1a      	ldr	r2, [pc, #104]	@ (800435c <LED_USER_GPIO_Init+0x74>)
 80042f4:	f043 0301 	orr.w	r3, r3, #1
 80042f8:	61d3      	str	r3, [r2, #28]
 80042fa:	4b18      	ldr	r3, [pc, #96]	@ (800435c <LED_USER_GPIO_Init+0x74>)
 80042fc:	69db      	ldr	r3, [r3, #28]
 80042fe:	f003 0301 	and.w	r3, r3, #1
 8004302:	60bb      	str	r3, [r7, #8]
 8004304:	68bb      	ldr	r3, [r7, #8]
 8004306:	f107 030c 	add.w	r3, r7, #12
 800430a:	2200      	movs	r2, #0
 800430c:	601a      	str	r2, [r3, #0]
 800430e:	605a      	str	r2, [r3, #4]
 8004310:	609a      	str	r2, [r3, #8]
 8004312:	60da      	str	r2, [r3, #12]
 8004314:	611a      	str	r2, [r3, #16]
 8004316:	4b11      	ldr	r3, [pc, #68]	@ (800435c <LED_USER_GPIO_Init+0x74>)
 8004318:	69db      	ldr	r3, [r3, #28]
 800431a:	4a10      	ldr	r2, [pc, #64]	@ (800435c <LED_USER_GPIO_Init+0x74>)
 800431c:	f043 0301 	orr.w	r3, r3, #1
 8004320:	61d3      	str	r3, [r2, #28]
 8004322:	4b0e      	ldr	r3, [pc, #56]	@ (800435c <LED_USER_GPIO_Init+0x74>)
 8004324:	69db      	ldr	r3, [r3, #28]
 8004326:	f003 0301 	and.w	r3, r3, #1
 800432a:	607b      	str	r3, [r7, #4]
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	2200      	movs	r2, #0
 8004330:	2120      	movs	r1, #32
 8004332:	480b      	ldr	r0, [pc, #44]	@ (8004360 <LED_USER_GPIO_Init+0x78>)
 8004334:	f000 fe19 	bl	8004f6a <HAL_GPIO_WritePin>
 8004338:	2320      	movs	r3, #32
 800433a:	60fb      	str	r3, [r7, #12]
 800433c:	2301      	movs	r3, #1
 800433e:	613b      	str	r3, [r7, #16]
 8004340:	2300      	movs	r3, #0
 8004342:	617b      	str	r3, [r7, #20]
 8004344:	2300      	movs	r3, #0
 8004346:	61bb      	str	r3, [r7, #24]
 8004348:	f107 030c 	add.w	r3, r7, #12
 800434c:	4619      	mov	r1, r3
 800434e:	4804      	ldr	r0, [pc, #16]	@ (8004360 <LED_USER_GPIO_Init+0x78>)
 8004350:	f000 fb74 	bl	8004a3c <HAL_GPIO_Init>
 8004354:	bf00      	nop
 8004356:	3720      	adds	r7, #32
 8004358:	46bd      	mov	sp, r7
 800435a:	bd80      	pop	{r7, pc}
 800435c:	40023800 	.word	0x40023800
 8004360:	40020000 	.word	0x40020000

08004364 <BSP_PB_Init>:
 8004364:	b580      	push	{r7, lr}
 8004366:	b084      	sub	sp, #16
 8004368:	af00      	add	r7, sp, #0
 800436a:	4603      	mov	r3, r0
 800436c:	460a      	mov	r2, r1
 800436e:	71fb      	strb	r3, [r7, #7]
 8004370:	4613      	mov	r3, r2
 8004372:	71bb      	strb	r3, [r7, #6]
 8004374:	2300      	movs	r3, #0
 8004376:	60fb      	str	r3, [r7, #12]
 8004378:	79fb      	ldrb	r3, [r7, #7]
 800437a:	4a1f      	ldr	r2, [pc, #124]	@ (80043f8 <BSP_PB_Init+0x94>)
 800437c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004380:	4798      	blx	r3
 8004382:	79bb      	ldrb	r3, [r7, #6]
 8004384:	2b01      	cmp	r3, #1
 8004386:	d132      	bne.n	80043ee <BSP_PB_Init+0x8a>
 8004388:	79fb      	ldrb	r3, [r7, #7]
 800438a:	00db      	lsls	r3, r3, #3
 800438c:	4a1b      	ldr	r2, [pc, #108]	@ (80043fc <BSP_PB_Init+0x98>)
 800438e:	441a      	add	r2, r3
 8004390:	79fb      	ldrb	r3, [r7, #7]
 8004392:	491b      	ldr	r1, [pc, #108]	@ (8004400 <BSP_PB_Init+0x9c>)
 8004394:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8004398:	4619      	mov	r1, r3
 800439a:	4610      	mov	r0, r2
 800439c:	f000 fb16 	bl	80049cc <HAL_EXTI_GetHandle>
 80043a0:	4603      	mov	r3, r0
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	d003      	beq.n	80043ae <BSP_PB_Init+0x4a>
 80043a6:	f06f 0303 	mvn.w	r3, #3
 80043aa:	60fb      	str	r3, [r7, #12]
 80043ac:	e01f      	b.n	80043ee <BSP_PB_Init+0x8a>
 80043ae:	79fb      	ldrb	r3, [r7, #7]
 80043b0:	00db      	lsls	r3, r3, #3
 80043b2:	4a12      	ldr	r2, [pc, #72]	@ (80043fc <BSP_PB_Init+0x98>)
 80043b4:	1898      	adds	r0, r3, r2
 80043b6:	79fb      	ldrb	r3, [r7, #7]
 80043b8:	4a12      	ldr	r2, [pc, #72]	@ (8004404 <BSP_PB_Init+0xa0>)
 80043ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80043be:	461a      	mov	r2, r3
 80043c0:	2100      	movs	r1, #0
 80043c2:	f000 faea 	bl	800499a <HAL_EXTI_RegisterCallback>
 80043c6:	4603      	mov	r3, r0
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d003      	beq.n	80043d4 <BSP_PB_Init+0x70>
 80043cc:	f06f 0303 	mvn.w	r3, #3
 80043d0:	60fb      	str	r3, [r7, #12]
 80043d2:	e00c      	b.n	80043ee <BSP_PB_Init+0x8a>
 80043d4:	2028      	movs	r0, #40	@ 0x28
 80043d6:	79fb      	ldrb	r3, [r7, #7]
 80043d8:	4a0b      	ldr	r2, [pc, #44]	@ (8004408 <BSP_PB_Init+0xa4>)
 80043da:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80043de:	2200      	movs	r2, #0
 80043e0:	4619      	mov	r1, r3
 80043e2:	f000 faa4 	bl	800492e <HAL_NVIC_SetPriority>
 80043e6:	2328      	movs	r3, #40	@ 0x28
 80043e8:	4618      	mov	r0, r3
 80043ea:	f000 fabc 	bl	8004966 <HAL_NVIC_EnableIRQ>
 80043ee:	68fb      	ldr	r3, [r7, #12]
 80043f0:	4618      	mov	r0, r3
 80043f2:	3710      	adds	r7, #16
 80043f4:	46bd      	mov	sp, r7
 80043f6:	bd80      	pop	{r7, pc}
 80043f8:	0800dbd4 	.word	0x0800dbd4
 80043fc:	20000014 	.word	0x20000014
 8004400:	0800dbd8 	.word	0x0800dbd8
 8004404:	0800dbdc 	.word	0x0800dbdc
 8004408:	0800dbe0 	.word	0x0800dbe0

0800440c <BSP_PB_GetState>:
 800440c:	b580      	push	{r7, lr}
 800440e:	b082      	sub	sp, #8
 8004410:	af00      	add	r7, sp, #0
 8004412:	4603      	mov	r3, r0
 8004414:	71fb      	strb	r3, [r7, #7]
 8004416:	79fb      	ldrb	r3, [r7, #7]
 8004418:	4a09      	ldr	r2, [pc, #36]	@ (8004440 <BSP_PB_GetState+0x34>)
 800441a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800441e:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8004422:	4611      	mov	r1, r2
 8004424:	4618      	mov	r0, r3
 8004426:	f000 fd89 	bl	8004f3c <HAL_GPIO_ReadPin>
 800442a:	4603      	mov	r3, r0
 800442c:	2b00      	cmp	r3, #0
 800442e:	bf0c      	ite	eq
 8004430:	2301      	moveq	r3, #1
 8004432:	2300      	movne	r3, #0
 8004434:	b2db      	uxtb	r3, r3
 8004436:	4618      	mov	r0, r3
 8004438:	3708      	adds	r7, #8
 800443a:	46bd      	mov	sp, r7
 800443c:	bd80      	pop	{r7, pc}
 800443e:	bf00      	nop
 8004440:	20000010 	.word	0x20000010

08004444 <BUTTON_USER_EXTI_Callback>:
 8004444:	b580      	push	{r7, lr}
 8004446:	af00      	add	r7, sp, #0
 8004448:	2000      	movs	r0, #0
 800444a:	f7fe fb19 	bl	8002a80 <BSP_PB_Callback>
 800444e:	bf00      	nop
 8004450:	bd80      	pop	{r7, pc}
	...

08004454 <BUTTON_USER_GPIO_Init>:
 8004454:	b580      	push	{r7, lr}
 8004456:	b088      	sub	sp, #32
 8004458:	af00      	add	r7, sp, #0
 800445a:	4b19      	ldr	r3, [pc, #100]	@ (80044c0 <BUTTON_USER_GPIO_Init+0x6c>)
 800445c:	69db      	ldr	r3, [r3, #28]
 800445e:	4a18      	ldr	r2, [pc, #96]	@ (80044c0 <BUTTON_USER_GPIO_Init+0x6c>)
 8004460:	f043 0304 	orr.w	r3, r3, #4
 8004464:	61d3      	str	r3, [r2, #28]
 8004466:	4b16      	ldr	r3, [pc, #88]	@ (80044c0 <BUTTON_USER_GPIO_Init+0x6c>)
 8004468:	69db      	ldr	r3, [r3, #28]
 800446a:	f003 0304 	and.w	r3, r3, #4
 800446e:	60bb      	str	r3, [r7, #8]
 8004470:	68bb      	ldr	r3, [r7, #8]
 8004472:	f107 030c 	add.w	r3, r7, #12
 8004476:	2200      	movs	r2, #0
 8004478:	601a      	str	r2, [r3, #0]
 800447a:	605a      	str	r2, [r3, #4]
 800447c:	609a      	str	r2, [r3, #8]
 800447e:	60da      	str	r2, [r3, #12]
 8004480:	611a      	str	r2, [r3, #16]
 8004482:	4b0f      	ldr	r3, [pc, #60]	@ (80044c0 <BUTTON_USER_GPIO_Init+0x6c>)
 8004484:	69db      	ldr	r3, [r3, #28]
 8004486:	4a0e      	ldr	r2, [pc, #56]	@ (80044c0 <BUTTON_USER_GPIO_Init+0x6c>)
 8004488:	f043 0304 	orr.w	r3, r3, #4
 800448c:	61d3      	str	r3, [r2, #28]
 800448e:	4b0c      	ldr	r3, [pc, #48]	@ (80044c0 <BUTTON_USER_GPIO_Init+0x6c>)
 8004490:	69db      	ldr	r3, [r3, #28]
 8004492:	f003 0304 	and.w	r3, r3, #4
 8004496:	607b      	str	r3, [r7, #4]
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800449e:	60fb      	str	r3, [r7, #12]
 80044a0:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 80044a4:	613b      	str	r3, [r7, #16]
 80044a6:	2300      	movs	r3, #0
 80044a8:	617b      	str	r3, [r7, #20]
 80044aa:	f107 030c 	add.w	r3, r7, #12
 80044ae:	4619      	mov	r1, r3
 80044b0:	4804      	ldr	r0, [pc, #16]	@ (80044c4 <BUTTON_USER_GPIO_Init+0x70>)
 80044b2:	f000 fac3 	bl	8004a3c <HAL_GPIO_Init>
 80044b6:	bf00      	nop
 80044b8:	3720      	adds	r7, #32
 80044ba:	46bd      	mov	sp, r7
 80044bc:	bd80      	pop	{r7, pc}
 80044be:	bf00      	nop
 80044c0:	40023800 	.word	0x40023800
 80044c4:	40020800 	.word	0x40020800

080044c8 <BSP_COM_Init>:
 80044c8:	b580      	push	{r7, lr}
 80044ca:	b084      	sub	sp, #16
 80044cc:	af00      	add	r7, sp, #0
 80044ce:	4603      	mov	r3, r0
 80044d0:	71fb      	strb	r3, [r7, #7]
 80044d2:	2300      	movs	r3, #0
 80044d4:	60fb      	str	r3, [r7, #12]
 80044d6:	79fb      	ldrb	r3, [r7, #7]
 80044d8:	2b01      	cmp	r3, #1
 80044da:	d903      	bls.n	80044e4 <BSP_COM_Init+0x1c>
 80044dc:	f06f 0301 	mvn.w	r3, #1
 80044e0:	60fb      	str	r3, [r7, #12]
 80044e2:	e025      	b.n	8004530 <BSP_COM_Init+0x68>
 80044e4:	79fb      	ldrb	r3, [r7, #7]
 80044e6:	79fa      	ldrb	r2, [r7, #7]
 80044e8:	4914      	ldr	r1, [pc, #80]	@ (800453c <BSP_COM_Init+0x74>)
 80044ea:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80044ee:	4814      	ldr	r0, [pc, #80]	@ (8004540 <BSP_COM_Init+0x78>)
 80044f0:	4613      	mov	r3, r2
 80044f2:	00db      	lsls	r3, r3, #3
 80044f4:	4413      	add	r3, r2
 80044f6:	00db      	lsls	r3, r3, #3
 80044f8:	4403      	add	r3, r0
 80044fa:	6019      	str	r1, [r3, #0]
 80044fc:	79fa      	ldrb	r2, [r7, #7]
 80044fe:	4613      	mov	r3, r2
 8004500:	00db      	lsls	r3, r3, #3
 8004502:	4413      	add	r3, r2
 8004504:	00db      	lsls	r3, r3, #3
 8004506:	4a0e      	ldr	r2, [pc, #56]	@ (8004540 <BSP_COM_Init+0x78>)
 8004508:	4413      	add	r3, r2
 800450a:	4618      	mov	r0, r3
 800450c:	f000 f864 	bl	80045d8 <USART2_MspInit>
 8004510:	79fa      	ldrb	r2, [r7, #7]
 8004512:	4613      	mov	r3, r2
 8004514:	00db      	lsls	r3, r3, #3
 8004516:	4413      	add	r3, r2
 8004518:	00db      	lsls	r3, r3, #3
 800451a:	4a09      	ldr	r2, [pc, #36]	@ (8004540 <BSP_COM_Init+0x78>)
 800451c:	4413      	add	r3, r2
 800451e:	4618      	mov	r0, r3
 8004520:	f000 f810 	bl	8004544 <MX_USART2_UART_Init>
 8004524:	4603      	mov	r3, r0
 8004526:	2b00      	cmp	r3, #0
 8004528:	d002      	beq.n	8004530 <BSP_COM_Init+0x68>
 800452a:	f06f 0303 	mvn.w	r3, #3
 800452e:	60fb      	str	r3, [r7, #12]
 8004530:	68fb      	ldr	r3, [r7, #12]
 8004532:	4618      	mov	r0, r3
 8004534:	3710      	adds	r7, #16
 8004536:	46bd      	mov	sp, r7
 8004538:	bd80      	pop	{r7, pc}
 800453a:	bf00      	nop
 800453c:	2000001c 	.word	0x2000001c
 8004540:	20000490 	.word	0x20000490

08004544 <MX_USART2_UART_Init>:
 8004544:	b580      	push	{r7, lr}
 8004546:	b084      	sub	sp, #16
 8004548:	af00      	add	r7, sp, #0
 800454a:	6078      	str	r0, [r7, #4]
 800454c:	2300      	movs	r3, #0
 800454e:	73fb      	strb	r3, [r7, #15]
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	4a12      	ldr	r2, [pc, #72]	@ (800459c <MX_USART2_UART_Init+0x58>)
 8004554:	601a      	str	r2, [r3, #0]
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800455c:	605a      	str	r2, [r3, #4]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	2200      	movs	r2, #0
 8004562:	609a      	str	r2, [r3, #8]
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	2200      	movs	r2, #0
 8004568:	60da      	str	r2, [r3, #12]
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	2200      	movs	r2, #0
 800456e:	611a      	str	r2, [r3, #16]
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	220c      	movs	r2, #12
 8004574:	615a      	str	r2, [r3, #20]
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	2200      	movs	r2, #0
 800457a:	619a      	str	r2, [r3, #24]
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	2200      	movs	r2, #0
 8004580:	61da      	str	r2, [r3, #28]
 8004582:	6878      	ldr	r0, [r7, #4]
 8004584:	f003 faca 	bl	8007b1c <HAL_UART_Init>
 8004588:	4603      	mov	r3, r0
 800458a:	2b00      	cmp	r3, #0
 800458c:	d001      	beq.n	8004592 <MX_USART2_UART_Init+0x4e>
 800458e:	2301      	movs	r3, #1
 8004590:	73fb      	strb	r3, [r7, #15]
 8004592:	7bfb      	ldrb	r3, [r7, #15]
 8004594:	4618      	mov	r0, r3
 8004596:	3710      	adds	r7, #16
 8004598:	46bd      	mov	sp, r7
 800459a:	bd80      	pop	{r7, pc}
 800459c:	40004400 	.word	0x40004400

080045a0 <__io_putchar>:
 80045a0:	b580      	push	{r7, lr}
 80045a2:	b082      	sub	sp, #8
 80045a4:	af00      	add	r7, sp, #0
 80045a6:	6078      	str	r0, [r7, #4]
 80045a8:	4b09      	ldr	r3, [pc, #36]	@ (80045d0 <__io_putchar+0x30>)
 80045aa:	781b      	ldrb	r3, [r3, #0]
 80045ac:	461a      	mov	r2, r3
 80045ae:	4613      	mov	r3, r2
 80045b0:	00db      	lsls	r3, r3, #3
 80045b2:	4413      	add	r3, r2
 80045b4:	00db      	lsls	r3, r3, #3
 80045b6:	4a07      	ldr	r2, [pc, #28]	@ (80045d4 <__io_putchar+0x34>)
 80045b8:	1898      	adds	r0, r3, r2
 80045ba:	1d39      	adds	r1, r7, #4
 80045bc:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80045c0:	2201      	movs	r2, #1
 80045c2:	f003 fafb 	bl	8007bbc <HAL_UART_Transmit>
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	4618      	mov	r0, r3
 80045ca:	3708      	adds	r7, #8
 80045cc:	46bd      	mov	sp, r7
 80045ce:	bd80      	pop	{r7, pc}
 80045d0:	200004d8 	.word	0x200004d8
 80045d4:	20000490 	.word	0x20000490

080045d8 <USART2_MspInit>:
 80045d8:	b580      	push	{r7, lr}
 80045da:	b08a      	sub	sp, #40	@ 0x28
 80045dc:	af00      	add	r7, sp, #0
 80045de:	6078      	str	r0, [r7, #4]
 80045e0:	4b1d      	ldr	r3, [pc, #116]	@ (8004658 <USART2_MspInit+0x80>)
 80045e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045e4:	4a1c      	ldr	r2, [pc, #112]	@ (8004658 <USART2_MspInit+0x80>)
 80045e6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80045ea:	6253      	str	r3, [r2, #36]	@ 0x24
 80045ec:	4b1a      	ldr	r3, [pc, #104]	@ (8004658 <USART2_MspInit+0x80>)
 80045ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80045f4:	613b      	str	r3, [r7, #16]
 80045f6:	693b      	ldr	r3, [r7, #16]
 80045f8:	4b17      	ldr	r3, [pc, #92]	@ (8004658 <USART2_MspInit+0x80>)
 80045fa:	69db      	ldr	r3, [r3, #28]
 80045fc:	4a16      	ldr	r2, [pc, #88]	@ (8004658 <USART2_MspInit+0x80>)
 80045fe:	f043 0301 	orr.w	r3, r3, #1
 8004602:	61d3      	str	r3, [r2, #28]
 8004604:	4b14      	ldr	r3, [pc, #80]	@ (8004658 <USART2_MspInit+0x80>)
 8004606:	69db      	ldr	r3, [r3, #28]
 8004608:	f003 0301 	and.w	r3, r3, #1
 800460c:	60fb      	str	r3, [r7, #12]
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	2304      	movs	r3, #4
 8004612:	617b      	str	r3, [r7, #20]
 8004614:	2302      	movs	r3, #2
 8004616:	61bb      	str	r3, [r7, #24]
 8004618:	2300      	movs	r3, #0
 800461a:	61fb      	str	r3, [r7, #28]
 800461c:	2303      	movs	r3, #3
 800461e:	623b      	str	r3, [r7, #32]
 8004620:	2307      	movs	r3, #7
 8004622:	627b      	str	r3, [r7, #36]	@ 0x24
 8004624:	f107 0314 	add.w	r3, r7, #20
 8004628:	4619      	mov	r1, r3
 800462a:	480c      	ldr	r0, [pc, #48]	@ (800465c <USART2_MspInit+0x84>)
 800462c:	f000 fa06 	bl	8004a3c <HAL_GPIO_Init>
 8004630:	2308      	movs	r3, #8
 8004632:	617b      	str	r3, [r7, #20]
 8004634:	2302      	movs	r3, #2
 8004636:	61bb      	str	r3, [r7, #24]
 8004638:	2300      	movs	r3, #0
 800463a:	61fb      	str	r3, [r7, #28]
 800463c:	2303      	movs	r3, #3
 800463e:	623b      	str	r3, [r7, #32]
 8004640:	2307      	movs	r3, #7
 8004642:	627b      	str	r3, [r7, #36]	@ 0x24
 8004644:	f107 0314 	add.w	r3, r7, #20
 8004648:	4619      	mov	r1, r3
 800464a:	4804      	ldr	r0, [pc, #16]	@ (800465c <USART2_MspInit+0x84>)
 800464c:	f000 f9f6 	bl	8004a3c <HAL_GPIO_Init>
 8004650:	bf00      	nop
 8004652:	3728      	adds	r7, #40	@ 0x28
 8004654:	46bd      	mov	sp, r7
 8004656:	bd80      	pop	{r7, pc}
 8004658:	40023800 	.word	0x40023800
 800465c:	40020000 	.word	0x40020000

08004660 <HAL_Init>:
 8004660:	b580      	push	{r7, lr}
 8004662:	b082      	sub	sp, #8
 8004664:	af00      	add	r7, sp, #0
 8004666:	2300      	movs	r3, #0
 8004668:	71fb      	strb	r3, [r7, #7]
 800466a:	2003      	movs	r0, #3
 800466c:	f000 f954 	bl	8004918 <HAL_NVIC_SetPriorityGrouping>
 8004670:	2000      	movs	r0, #0
 8004672:	f000 f80d 	bl	8004690 <HAL_InitTick>
 8004676:	4603      	mov	r3, r0
 8004678:	2b00      	cmp	r3, #0
 800467a:	d002      	beq.n	8004682 <HAL_Init+0x22>
 800467c:	2301      	movs	r3, #1
 800467e:	71fb      	strb	r3, [r7, #7]
 8004680:	e001      	b.n	8004686 <HAL_Init+0x26>
 8004682:	f7ff fb2d 	bl	8003ce0 <HAL_MspInit>
 8004686:	79fb      	ldrb	r3, [r7, #7]
 8004688:	4618      	mov	r0, r3
 800468a:	3708      	adds	r7, #8
 800468c:	46bd      	mov	sp, r7
 800468e:	bd80      	pop	{r7, pc}

08004690 <HAL_InitTick>:
 8004690:	b580      	push	{r7, lr}
 8004692:	b084      	sub	sp, #16
 8004694:	af00      	add	r7, sp, #0
 8004696:	6078      	str	r0, [r7, #4]
 8004698:	2300      	movs	r3, #0
 800469a:	73fb      	strb	r3, [r7, #15]
 800469c:	4b16      	ldr	r3, [pc, #88]	@ (80046f8 <HAL_InitTick+0x68>)
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	2b00      	cmp	r3, #0
 80046a2:	d022      	beq.n	80046ea <HAL_InitTick+0x5a>
 80046a4:	4b15      	ldr	r3, [pc, #84]	@ (80046fc <HAL_InitTick+0x6c>)
 80046a6:	681a      	ldr	r2, [r3, #0]
 80046a8:	4b13      	ldr	r3, [pc, #76]	@ (80046f8 <HAL_InitTick+0x68>)
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80046b0:	fbb1 f3f3 	udiv	r3, r1, r3
 80046b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80046b8:	4618      	mov	r0, r3
 80046ba:	f000 f962 	bl	8004982 <HAL_SYSTICK_Config>
 80046be:	4603      	mov	r3, r0
 80046c0:	2b00      	cmp	r3, #0
 80046c2:	d10f      	bne.n	80046e4 <HAL_InitTick+0x54>
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	2b0f      	cmp	r3, #15
 80046c8:	d809      	bhi.n	80046de <HAL_InitTick+0x4e>
 80046ca:	2200      	movs	r2, #0
 80046cc:	6879      	ldr	r1, [r7, #4]
 80046ce:	f04f 30ff 	mov.w	r0, #4294967295
 80046d2:	f000 f92c 	bl	800492e <HAL_NVIC_SetPriority>
 80046d6:	4a0a      	ldr	r2, [pc, #40]	@ (8004700 <HAL_InitTick+0x70>)
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	6013      	str	r3, [r2, #0]
 80046dc:	e007      	b.n	80046ee <HAL_InitTick+0x5e>
 80046de:	2301      	movs	r3, #1
 80046e0:	73fb      	strb	r3, [r7, #15]
 80046e2:	e004      	b.n	80046ee <HAL_InitTick+0x5e>
 80046e4:	2301      	movs	r3, #1
 80046e6:	73fb      	strb	r3, [r7, #15]
 80046e8:	e001      	b.n	80046ee <HAL_InitTick+0x5e>
 80046ea:	2301      	movs	r3, #1
 80046ec:	73fb      	strb	r3, [r7, #15]
 80046ee:	7bfb      	ldrb	r3, [r7, #15]
 80046f0:	4618      	mov	r0, r3
 80046f2:	3710      	adds	r7, #16
 80046f4:	46bd      	mov	sp, r7
 80046f6:	bd80      	pop	{r7, pc}
 80046f8:	20000024 	.word	0x20000024
 80046fc:	20000008 	.word	0x20000008
 8004700:	20000020 	.word	0x20000020

08004704 <HAL_IncTick>:
 8004704:	b480      	push	{r7}
 8004706:	af00      	add	r7, sp, #0
 8004708:	4b05      	ldr	r3, [pc, #20]	@ (8004720 <HAL_IncTick+0x1c>)
 800470a:	681a      	ldr	r2, [r3, #0]
 800470c:	4b05      	ldr	r3, [pc, #20]	@ (8004724 <HAL_IncTick+0x20>)
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	4413      	add	r3, r2
 8004712:	4a03      	ldr	r2, [pc, #12]	@ (8004720 <HAL_IncTick+0x1c>)
 8004714:	6013      	str	r3, [r2, #0]
 8004716:	bf00      	nop
 8004718:	46bd      	mov	sp, r7
 800471a:	bc80      	pop	{r7}
 800471c:	4770      	bx	lr
 800471e:	bf00      	nop
 8004720:	200004dc 	.word	0x200004dc
 8004724:	20000024 	.word	0x20000024

08004728 <HAL_GetTick>:
 8004728:	b480      	push	{r7}
 800472a:	af00      	add	r7, sp, #0
 800472c:	4b02      	ldr	r3, [pc, #8]	@ (8004738 <HAL_GetTick+0x10>)
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	4618      	mov	r0, r3
 8004732:	46bd      	mov	sp, r7
 8004734:	bc80      	pop	{r7}
 8004736:	4770      	bx	lr
 8004738:	200004dc 	.word	0x200004dc

0800473c <HAL_Delay>:
 800473c:	b580      	push	{r7, lr}
 800473e:	b084      	sub	sp, #16
 8004740:	af00      	add	r7, sp, #0
 8004742:	6078      	str	r0, [r7, #4]
 8004744:	f7ff fff0 	bl	8004728 <HAL_GetTick>
 8004748:	60b8      	str	r0, [r7, #8]
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	60fb      	str	r3, [r7, #12]
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004754:	d004      	beq.n	8004760 <HAL_Delay+0x24>
 8004756:	4b09      	ldr	r3, [pc, #36]	@ (800477c <HAL_Delay+0x40>)
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	68fa      	ldr	r2, [r7, #12]
 800475c:	4413      	add	r3, r2
 800475e:	60fb      	str	r3, [r7, #12]
 8004760:	bf00      	nop
 8004762:	f7ff ffe1 	bl	8004728 <HAL_GetTick>
 8004766:	4602      	mov	r2, r0
 8004768:	68bb      	ldr	r3, [r7, #8]
 800476a:	1ad3      	subs	r3, r2, r3
 800476c:	68fa      	ldr	r2, [r7, #12]
 800476e:	429a      	cmp	r2, r3
 8004770:	d8f7      	bhi.n	8004762 <HAL_Delay+0x26>
 8004772:	bf00      	nop
 8004774:	bf00      	nop
 8004776:	3710      	adds	r7, #16
 8004778:	46bd      	mov	sp, r7
 800477a:	bd80      	pop	{r7, pc}
 800477c:	20000024 	.word	0x20000024

08004780 <__NVIC_SetPriorityGrouping>:
 8004780:	b480      	push	{r7}
 8004782:	b085      	sub	sp, #20
 8004784:	af00      	add	r7, sp, #0
 8004786:	6078      	str	r0, [r7, #4]
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	f003 0307 	and.w	r3, r3, #7
 800478e:	60fb      	str	r3, [r7, #12]
 8004790:	4b0c      	ldr	r3, [pc, #48]	@ (80047c4 <__NVIC_SetPriorityGrouping+0x44>)
 8004792:	68db      	ldr	r3, [r3, #12]
 8004794:	60bb      	str	r3, [r7, #8]
 8004796:	68ba      	ldr	r2, [r7, #8]
 8004798:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800479c:	4013      	ands	r3, r2
 800479e:	60bb      	str	r3, [r7, #8]
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	021a      	lsls	r2, r3, #8
 80047a4:	68bb      	ldr	r3, [r7, #8]
 80047a6:	4313      	orrs	r3, r2
 80047a8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80047ac:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80047b0:	60bb      	str	r3, [r7, #8]
 80047b2:	4a04      	ldr	r2, [pc, #16]	@ (80047c4 <__NVIC_SetPriorityGrouping+0x44>)
 80047b4:	68bb      	ldr	r3, [r7, #8]
 80047b6:	60d3      	str	r3, [r2, #12]
 80047b8:	bf00      	nop
 80047ba:	3714      	adds	r7, #20
 80047bc:	46bd      	mov	sp, r7
 80047be:	bc80      	pop	{r7}
 80047c0:	4770      	bx	lr
 80047c2:	bf00      	nop
 80047c4:	e000ed00 	.word	0xe000ed00

080047c8 <__NVIC_GetPriorityGrouping>:
 80047c8:	b480      	push	{r7}
 80047ca:	af00      	add	r7, sp, #0
 80047cc:	4b04      	ldr	r3, [pc, #16]	@ (80047e0 <__NVIC_GetPriorityGrouping+0x18>)
 80047ce:	68db      	ldr	r3, [r3, #12]
 80047d0:	0a1b      	lsrs	r3, r3, #8
 80047d2:	f003 0307 	and.w	r3, r3, #7
 80047d6:	4618      	mov	r0, r3
 80047d8:	46bd      	mov	sp, r7
 80047da:	bc80      	pop	{r7}
 80047dc:	4770      	bx	lr
 80047de:	bf00      	nop
 80047e0:	e000ed00 	.word	0xe000ed00

080047e4 <__NVIC_EnableIRQ>:
 80047e4:	b480      	push	{r7}
 80047e6:	b083      	sub	sp, #12
 80047e8:	af00      	add	r7, sp, #0
 80047ea:	4603      	mov	r3, r0
 80047ec:	71fb      	strb	r3, [r7, #7]
 80047ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	db0b      	blt.n	800480e <__NVIC_EnableIRQ+0x2a>
 80047f6:	79fb      	ldrb	r3, [r7, #7]
 80047f8:	f003 021f 	and.w	r2, r3, #31
 80047fc:	4906      	ldr	r1, [pc, #24]	@ (8004818 <__NVIC_EnableIRQ+0x34>)
 80047fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004802:	095b      	lsrs	r3, r3, #5
 8004804:	2001      	movs	r0, #1
 8004806:	fa00 f202 	lsl.w	r2, r0, r2
 800480a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800480e:	bf00      	nop
 8004810:	370c      	adds	r7, #12
 8004812:	46bd      	mov	sp, r7
 8004814:	bc80      	pop	{r7}
 8004816:	4770      	bx	lr
 8004818:	e000e100 	.word	0xe000e100

0800481c <__NVIC_SetPriority>:
 800481c:	b480      	push	{r7}
 800481e:	b083      	sub	sp, #12
 8004820:	af00      	add	r7, sp, #0
 8004822:	4603      	mov	r3, r0
 8004824:	6039      	str	r1, [r7, #0]
 8004826:	71fb      	strb	r3, [r7, #7]
 8004828:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800482c:	2b00      	cmp	r3, #0
 800482e:	db0a      	blt.n	8004846 <__NVIC_SetPriority+0x2a>
 8004830:	683b      	ldr	r3, [r7, #0]
 8004832:	b2da      	uxtb	r2, r3
 8004834:	490c      	ldr	r1, [pc, #48]	@ (8004868 <__NVIC_SetPriority+0x4c>)
 8004836:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800483a:	0112      	lsls	r2, r2, #4
 800483c:	b2d2      	uxtb	r2, r2
 800483e:	440b      	add	r3, r1
 8004840:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004844:	e00a      	b.n	800485c <__NVIC_SetPriority+0x40>
 8004846:	683b      	ldr	r3, [r7, #0]
 8004848:	b2da      	uxtb	r2, r3
 800484a:	4908      	ldr	r1, [pc, #32]	@ (800486c <__NVIC_SetPriority+0x50>)
 800484c:	79fb      	ldrb	r3, [r7, #7]
 800484e:	f003 030f 	and.w	r3, r3, #15
 8004852:	3b04      	subs	r3, #4
 8004854:	0112      	lsls	r2, r2, #4
 8004856:	b2d2      	uxtb	r2, r2
 8004858:	440b      	add	r3, r1
 800485a:	761a      	strb	r2, [r3, #24]
 800485c:	bf00      	nop
 800485e:	370c      	adds	r7, #12
 8004860:	46bd      	mov	sp, r7
 8004862:	bc80      	pop	{r7}
 8004864:	4770      	bx	lr
 8004866:	bf00      	nop
 8004868:	e000e100 	.word	0xe000e100
 800486c:	e000ed00 	.word	0xe000ed00

08004870 <NVIC_EncodePriority>:
 8004870:	b480      	push	{r7}
 8004872:	b089      	sub	sp, #36	@ 0x24
 8004874:	af00      	add	r7, sp, #0
 8004876:	60f8      	str	r0, [r7, #12]
 8004878:	60b9      	str	r1, [r7, #8]
 800487a:	607a      	str	r2, [r7, #4]
 800487c:	68fb      	ldr	r3, [r7, #12]
 800487e:	f003 0307 	and.w	r3, r3, #7
 8004882:	61fb      	str	r3, [r7, #28]
 8004884:	69fb      	ldr	r3, [r7, #28]
 8004886:	f1c3 0307 	rsb	r3, r3, #7
 800488a:	2b04      	cmp	r3, #4
 800488c:	bf28      	it	cs
 800488e:	2304      	movcs	r3, #4
 8004890:	61bb      	str	r3, [r7, #24]
 8004892:	69fb      	ldr	r3, [r7, #28]
 8004894:	3304      	adds	r3, #4
 8004896:	2b06      	cmp	r3, #6
 8004898:	d902      	bls.n	80048a0 <NVIC_EncodePriority+0x30>
 800489a:	69fb      	ldr	r3, [r7, #28]
 800489c:	3b03      	subs	r3, #3
 800489e:	e000      	b.n	80048a2 <NVIC_EncodePriority+0x32>
 80048a0:	2300      	movs	r3, #0
 80048a2:	617b      	str	r3, [r7, #20]
 80048a4:	f04f 32ff 	mov.w	r2, #4294967295
 80048a8:	69bb      	ldr	r3, [r7, #24]
 80048aa:	fa02 f303 	lsl.w	r3, r2, r3
 80048ae:	43da      	mvns	r2, r3
 80048b0:	68bb      	ldr	r3, [r7, #8]
 80048b2:	401a      	ands	r2, r3
 80048b4:	697b      	ldr	r3, [r7, #20]
 80048b6:	409a      	lsls	r2, r3
 80048b8:	f04f 31ff 	mov.w	r1, #4294967295
 80048bc:	697b      	ldr	r3, [r7, #20]
 80048be:	fa01 f303 	lsl.w	r3, r1, r3
 80048c2:	43d9      	mvns	r1, r3
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	400b      	ands	r3, r1
 80048c8:	4313      	orrs	r3, r2
 80048ca:	4618      	mov	r0, r3
 80048cc:	3724      	adds	r7, #36	@ 0x24
 80048ce:	46bd      	mov	sp, r7
 80048d0:	bc80      	pop	{r7}
 80048d2:	4770      	bx	lr

080048d4 <SysTick_Config>:
 80048d4:	b580      	push	{r7, lr}
 80048d6:	b082      	sub	sp, #8
 80048d8:	af00      	add	r7, sp, #0
 80048da:	6078      	str	r0, [r7, #4]
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	3b01      	subs	r3, #1
 80048e0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80048e4:	d301      	bcc.n	80048ea <SysTick_Config+0x16>
 80048e6:	2301      	movs	r3, #1
 80048e8:	e00f      	b.n	800490a <SysTick_Config+0x36>
 80048ea:	4a0a      	ldr	r2, [pc, #40]	@ (8004914 <SysTick_Config+0x40>)
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	3b01      	subs	r3, #1
 80048f0:	6053      	str	r3, [r2, #4]
 80048f2:	210f      	movs	r1, #15
 80048f4:	f04f 30ff 	mov.w	r0, #4294967295
 80048f8:	f7ff ff90 	bl	800481c <__NVIC_SetPriority>
 80048fc:	4b05      	ldr	r3, [pc, #20]	@ (8004914 <SysTick_Config+0x40>)
 80048fe:	2200      	movs	r2, #0
 8004900:	609a      	str	r2, [r3, #8]
 8004902:	4b04      	ldr	r3, [pc, #16]	@ (8004914 <SysTick_Config+0x40>)
 8004904:	2207      	movs	r2, #7
 8004906:	601a      	str	r2, [r3, #0]
 8004908:	2300      	movs	r3, #0
 800490a:	4618      	mov	r0, r3
 800490c:	3708      	adds	r7, #8
 800490e:	46bd      	mov	sp, r7
 8004910:	bd80      	pop	{r7, pc}
 8004912:	bf00      	nop
 8004914:	e000e010 	.word	0xe000e010

08004918 <HAL_NVIC_SetPriorityGrouping>:
 8004918:	b580      	push	{r7, lr}
 800491a:	b082      	sub	sp, #8
 800491c:	af00      	add	r7, sp, #0
 800491e:	6078      	str	r0, [r7, #4]
 8004920:	6878      	ldr	r0, [r7, #4]
 8004922:	f7ff ff2d 	bl	8004780 <__NVIC_SetPriorityGrouping>
 8004926:	bf00      	nop
 8004928:	3708      	adds	r7, #8
 800492a:	46bd      	mov	sp, r7
 800492c:	bd80      	pop	{r7, pc}

0800492e <HAL_NVIC_SetPriority>:
 800492e:	b580      	push	{r7, lr}
 8004930:	b086      	sub	sp, #24
 8004932:	af00      	add	r7, sp, #0
 8004934:	4603      	mov	r3, r0
 8004936:	60b9      	str	r1, [r7, #8]
 8004938:	607a      	str	r2, [r7, #4]
 800493a:	73fb      	strb	r3, [r7, #15]
 800493c:	2300      	movs	r3, #0
 800493e:	617b      	str	r3, [r7, #20]
 8004940:	f7ff ff42 	bl	80047c8 <__NVIC_GetPriorityGrouping>
 8004944:	6178      	str	r0, [r7, #20]
 8004946:	687a      	ldr	r2, [r7, #4]
 8004948:	68b9      	ldr	r1, [r7, #8]
 800494a:	6978      	ldr	r0, [r7, #20]
 800494c:	f7ff ff90 	bl	8004870 <NVIC_EncodePriority>
 8004950:	4602      	mov	r2, r0
 8004952:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004956:	4611      	mov	r1, r2
 8004958:	4618      	mov	r0, r3
 800495a:	f7ff ff5f 	bl	800481c <__NVIC_SetPriority>
 800495e:	bf00      	nop
 8004960:	3718      	adds	r7, #24
 8004962:	46bd      	mov	sp, r7
 8004964:	bd80      	pop	{r7, pc}

08004966 <HAL_NVIC_EnableIRQ>:
 8004966:	b580      	push	{r7, lr}
 8004968:	b082      	sub	sp, #8
 800496a:	af00      	add	r7, sp, #0
 800496c:	4603      	mov	r3, r0
 800496e:	71fb      	strb	r3, [r7, #7]
 8004970:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004974:	4618      	mov	r0, r3
 8004976:	f7ff ff35 	bl	80047e4 <__NVIC_EnableIRQ>
 800497a:	bf00      	nop
 800497c:	3708      	adds	r7, #8
 800497e:	46bd      	mov	sp, r7
 8004980:	bd80      	pop	{r7, pc}

08004982 <HAL_SYSTICK_Config>:
 8004982:	b580      	push	{r7, lr}
 8004984:	b082      	sub	sp, #8
 8004986:	af00      	add	r7, sp, #0
 8004988:	6078      	str	r0, [r7, #4]
 800498a:	6878      	ldr	r0, [r7, #4]
 800498c:	f7ff ffa2 	bl	80048d4 <SysTick_Config>
 8004990:	4603      	mov	r3, r0
 8004992:	4618      	mov	r0, r3
 8004994:	3708      	adds	r7, #8
 8004996:	46bd      	mov	sp, r7
 8004998:	bd80      	pop	{r7, pc}

0800499a <HAL_EXTI_RegisterCallback>:
 800499a:	b480      	push	{r7}
 800499c:	b087      	sub	sp, #28
 800499e:	af00      	add	r7, sp, #0
 80049a0:	60f8      	str	r0, [r7, #12]
 80049a2:	460b      	mov	r3, r1
 80049a4:	607a      	str	r2, [r7, #4]
 80049a6:	72fb      	strb	r3, [r7, #11]
 80049a8:	2300      	movs	r3, #0
 80049aa:	75fb      	strb	r3, [r7, #23]
 80049ac:	7afb      	ldrb	r3, [r7, #11]
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	d103      	bne.n	80049ba <HAL_EXTI_RegisterCallback+0x20>
 80049b2:	68fb      	ldr	r3, [r7, #12]
 80049b4:	687a      	ldr	r2, [r7, #4]
 80049b6:	605a      	str	r2, [r3, #4]
 80049b8:	e002      	b.n	80049c0 <HAL_EXTI_RegisterCallback+0x26>
 80049ba:	2301      	movs	r3, #1
 80049bc:	75fb      	strb	r3, [r7, #23]
 80049be:	bf00      	nop
 80049c0:	7dfb      	ldrb	r3, [r7, #23]
 80049c2:	4618      	mov	r0, r3
 80049c4:	371c      	adds	r7, #28
 80049c6:	46bd      	mov	sp, r7
 80049c8:	bc80      	pop	{r7}
 80049ca:	4770      	bx	lr

080049cc <HAL_EXTI_GetHandle>:
 80049cc:	b480      	push	{r7}
 80049ce:	b083      	sub	sp, #12
 80049d0:	af00      	add	r7, sp, #0
 80049d2:	6078      	str	r0, [r7, #4]
 80049d4:	6039      	str	r1, [r7, #0]
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	2b00      	cmp	r3, #0
 80049da:	d101      	bne.n	80049e0 <HAL_EXTI_GetHandle+0x14>
 80049dc:	2301      	movs	r3, #1
 80049de:	e003      	b.n	80049e8 <HAL_EXTI_GetHandle+0x1c>
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	683a      	ldr	r2, [r7, #0]
 80049e4:	601a      	str	r2, [r3, #0]
 80049e6:	2300      	movs	r3, #0
 80049e8:	4618      	mov	r0, r3
 80049ea:	370c      	adds	r7, #12
 80049ec:	46bd      	mov	sp, r7
 80049ee:	bc80      	pop	{r7}
 80049f0:	4770      	bx	lr
	...

080049f4 <HAL_EXTI_IRQHandler>:
 80049f4:	b580      	push	{r7, lr}
 80049f6:	b084      	sub	sp, #16
 80049f8:	af00      	add	r7, sp, #0
 80049fa:	6078      	str	r0, [r7, #4]
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	f003 031f 	and.w	r3, r3, #31
 8004a04:	2201      	movs	r2, #1
 8004a06:	fa02 f303 	lsl.w	r3, r2, r3
 8004a0a:	60fb      	str	r3, [r7, #12]
 8004a0c:	4b0a      	ldr	r3, [pc, #40]	@ (8004a38 <HAL_EXTI_IRQHandler+0x44>)
 8004a0e:	695b      	ldr	r3, [r3, #20]
 8004a10:	68fa      	ldr	r2, [r7, #12]
 8004a12:	4013      	ands	r3, r2
 8004a14:	60bb      	str	r3, [r7, #8]
 8004a16:	68bb      	ldr	r3, [r7, #8]
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d009      	beq.n	8004a30 <HAL_EXTI_IRQHandler+0x3c>
 8004a1c:	4a06      	ldr	r2, [pc, #24]	@ (8004a38 <HAL_EXTI_IRQHandler+0x44>)
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	6153      	str	r3, [r2, #20]
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	685b      	ldr	r3, [r3, #4]
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d002      	beq.n	8004a30 <HAL_EXTI_IRQHandler+0x3c>
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	685b      	ldr	r3, [r3, #4]
 8004a2e:	4798      	blx	r3
 8004a30:	bf00      	nop
 8004a32:	3710      	adds	r7, #16
 8004a34:	46bd      	mov	sp, r7
 8004a36:	bd80      	pop	{r7, pc}
 8004a38:	40010400 	.word	0x40010400

08004a3c <HAL_GPIO_Init>:
 8004a3c:	b480      	push	{r7}
 8004a3e:	b087      	sub	sp, #28
 8004a40:	af00      	add	r7, sp, #0
 8004a42:	6078      	str	r0, [r7, #4]
 8004a44:	6039      	str	r1, [r7, #0]
 8004a46:	2300      	movs	r3, #0
 8004a48:	617b      	str	r3, [r7, #20]
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	60fb      	str	r3, [r7, #12]
 8004a4e:	2300      	movs	r3, #0
 8004a50:	613b      	str	r3, [r7, #16]
 8004a52:	e160      	b.n	8004d16 <HAL_GPIO_Init+0x2da>
 8004a54:	683b      	ldr	r3, [r7, #0]
 8004a56:	681a      	ldr	r2, [r3, #0]
 8004a58:	2101      	movs	r1, #1
 8004a5a:	697b      	ldr	r3, [r7, #20]
 8004a5c:	fa01 f303 	lsl.w	r3, r1, r3
 8004a60:	4013      	ands	r3, r2
 8004a62:	60fb      	str	r3, [r7, #12]
 8004a64:	68fb      	ldr	r3, [r7, #12]
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	f000 8152 	beq.w	8004d10 <HAL_GPIO_Init+0x2d4>
 8004a6c:	683b      	ldr	r3, [r7, #0]
 8004a6e:	685b      	ldr	r3, [r3, #4]
 8004a70:	f003 0303 	and.w	r3, r3, #3
 8004a74:	2b01      	cmp	r3, #1
 8004a76:	d005      	beq.n	8004a84 <HAL_GPIO_Init+0x48>
 8004a78:	683b      	ldr	r3, [r7, #0]
 8004a7a:	685b      	ldr	r3, [r3, #4]
 8004a7c:	f003 0303 	and.w	r3, r3, #3
 8004a80:	2b02      	cmp	r3, #2
 8004a82:	d130      	bne.n	8004ae6 <HAL_GPIO_Init+0xaa>
 8004a84:	687b      	ldr	r3, [r7, #4]
 8004a86:	689b      	ldr	r3, [r3, #8]
 8004a88:	613b      	str	r3, [r7, #16]
 8004a8a:	697b      	ldr	r3, [r7, #20]
 8004a8c:	005b      	lsls	r3, r3, #1
 8004a8e:	2203      	movs	r2, #3
 8004a90:	fa02 f303 	lsl.w	r3, r2, r3
 8004a94:	43db      	mvns	r3, r3
 8004a96:	693a      	ldr	r2, [r7, #16]
 8004a98:	4013      	ands	r3, r2
 8004a9a:	613b      	str	r3, [r7, #16]
 8004a9c:	683b      	ldr	r3, [r7, #0]
 8004a9e:	68da      	ldr	r2, [r3, #12]
 8004aa0:	697b      	ldr	r3, [r7, #20]
 8004aa2:	005b      	lsls	r3, r3, #1
 8004aa4:	fa02 f303 	lsl.w	r3, r2, r3
 8004aa8:	693a      	ldr	r2, [r7, #16]
 8004aaa:	4313      	orrs	r3, r2
 8004aac:	613b      	str	r3, [r7, #16]
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	693a      	ldr	r2, [r7, #16]
 8004ab2:	609a      	str	r2, [r3, #8]
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	685b      	ldr	r3, [r3, #4]
 8004ab8:	613b      	str	r3, [r7, #16]
 8004aba:	2201      	movs	r2, #1
 8004abc:	697b      	ldr	r3, [r7, #20]
 8004abe:	fa02 f303 	lsl.w	r3, r2, r3
 8004ac2:	43db      	mvns	r3, r3
 8004ac4:	693a      	ldr	r2, [r7, #16]
 8004ac6:	4013      	ands	r3, r2
 8004ac8:	613b      	str	r3, [r7, #16]
 8004aca:	683b      	ldr	r3, [r7, #0]
 8004acc:	685b      	ldr	r3, [r3, #4]
 8004ace:	091b      	lsrs	r3, r3, #4
 8004ad0:	f003 0201 	and.w	r2, r3, #1
 8004ad4:	697b      	ldr	r3, [r7, #20]
 8004ad6:	fa02 f303 	lsl.w	r3, r2, r3
 8004ada:	693a      	ldr	r2, [r7, #16]
 8004adc:	4313      	orrs	r3, r2
 8004ade:	613b      	str	r3, [r7, #16]
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	693a      	ldr	r2, [r7, #16]
 8004ae4:	605a      	str	r2, [r3, #4]
 8004ae6:	683b      	ldr	r3, [r7, #0]
 8004ae8:	685b      	ldr	r3, [r3, #4]
 8004aea:	f003 0303 	and.w	r3, r3, #3
 8004aee:	2b03      	cmp	r3, #3
 8004af0:	d017      	beq.n	8004b22 <HAL_GPIO_Init+0xe6>
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	68db      	ldr	r3, [r3, #12]
 8004af6:	613b      	str	r3, [r7, #16]
 8004af8:	697b      	ldr	r3, [r7, #20]
 8004afa:	005b      	lsls	r3, r3, #1
 8004afc:	2203      	movs	r2, #3
 8004afe:	fa02 f303 	lsl.w	r3, r2, r3
 8004b02:	43db      	mvns	r3, r3
 8004b04:	693a      	ldr	r2, [r7, #16]
 8004b06:	4013      	ands	r3, r2
 8004b08:	613b      	str	r3, [r7, #16]
 8004b0a:	683b      	ldr	r3, [r7, #0]
 8004b0c:	689a      	ldr	r2, [r3, #8]
 8004b0e:	697b      	ldr	r3, [r7, #20]
 8004b10:	005b      	lsls	r3, r3, #1
 8004b12:	fa02 f303 	lsl.w	r3, r2, r3
 8004b16:	693a      	ldr	r2, [r7, #16]
 8004b18:	4313      	orrs	r3, r2
 8004b1a:	613b      	str	r3, [r7, #16]
 8004b1c:	687b      	ldr	r3, [r7, #4]
 8004b1e:	693a      	ldr	r2, [r7, #16]
 8004b20:	60da      	str	r2, [r3, #12]
 8004b22:	683b      	ldr	r3, [r7, #0]
 8004b24:	685b      	ldr	r3, [r3, #4]
 8004b26:	f003 0303 	and.w	r3, r3, #3
 8004b2a:	2b02      	cmp	r3, #2
 8004b2c:	d123      	bne.n	8004b76 <HAL_GPIO_Init+0x13a>
 8004b2e:	697b      	ldr	r3, [r7, #20]
 8004b30:	08da      	lsrs	r2, r3, #3
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	3208      	adds	r2, #8
 8004b36:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004b3a:	613b      	str	r3, [r7, #16]
 8004b3c:	697b      	ldr	r3, [r7, #20]
 8004b3e:	f003 0307 	and.w	r3, r3, #7
 8004b42:	009b      	lsls	r3, r3, #2
 8004b44:	220f      	movs	r2, #15
 8004b46:	fa02 f303 	lsl.w	r3, r2, r3
 8004b4a:	43db      	mvns	r3, r3
 8004b4c:	693a      	ldr	r2, [r7, #16]
 8004b4e:	4013      	ands	r3, r2
 8004b50:	613b      	str	r3, [r7, #16]
 8004b52:	683b      	ldr	r3, [r7, #0]
 8004b54:	691a      	ldr	r2, [r3, #16]
 8004b56:	697b      	ldr	r3, [r7, #20]
 8004b58:	f003 0307 	and.w	r3, r3, #7
 8004b5c:	009b      	lsls	r3, r3, #2
 8004b5e:	fa02 f303 	lsl.w	r3, r2, r3
 8004b62:	693a      	ldr	r2, [r7, #16]
 8004b64:	4313      	orrs	r3, r2
 8004b66:	613b      	str	r3, [r7, #16]
 8004b68:	697b      	ldr	r3, [r7, #20]
 8004b6a:	08da      	lsrs	r2, r3, #3
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	3208      	adds	r2, #8
 8004b70:	6939      	ldr	r1, [r7, #16]
 8004b72:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	681b      	ldr	r3, [r3, #0]
 8004b7a:	613b      	str	r3, [r7, #16]
 8004b7c:	697b      	ldr	r3, [r7, #20]
 8004b7e:	005b      	lsls	r3, r3, #1
 8004b80:	2203      	movs	r2, #3
 8004b82:	fa02 f303 	lsl.w	r3, r2, r3
 8004b86:	43db      	mvns	r3, r3
 8004b88:	693a      	ldr	r2, [r7, #16]
 8004b8a:	4013      	ands	r3, r2
 8004b8c:	613b      	str	r3, [r7, #16]
 8004b8e:	683b      	ldr	r3, [r7, #0]
 8004b90:	685b      	ldr	r3, [r3, #4]
 8004b92:	f003 0203 	and.w	r2, r3, #3
 8004b96:	697b      	ldr	r3, [r7, #20]
 8004b98:	005b      	lsls	r3, r3, #1
 8004b9a:	fa02 f303 	lsl.w	r3, r2, r3
 8004b9e:	693a      	ldr	r2, [r7, #16]
 8004ba0:	4313      	orrs	r3, r2
 8004ba2:	613b      	str	r3, [r7, #16]
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	693a      	ldr	r2, [r7, #16]
 8004ba8:	601a      	str	r2, [r3, #0]
 8004baa:	683b      	ldr	r3, [r7, #0]
 8004bac:	685b      	ldr	r3, [r3, #4]
 8004bae:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	f000 80ac 	beq.w	8004d10 <HAL_GPIO_Init+0x2d4>
 8004bb8:	4b5e      	ldr	r3, [pc, #376]	@ (8004d34 <HAL_GPIO_Init+0x2f8>)
 8004bba:	6a1b      	ldr	r3, [r3, #32]
 8004bbc:	4a5d      	ldr	r2, [pc, #372]	@ (8004d34 <HAL_GPIO_Init+0x2f8>)
 8004bbe:	f043 0301 	orr.w	r3, r3, #1
 8004bc2:	6213      	str	r3, [r2, #32]
 8004bc4:	4b5b      	ldr	r3, [pc, #364]	@ (8004d34 <HAL_GPIO_Init+0x2f8>)
 8004bc6:	6a1b      	ldr	r3, [r3, #32]
 8004bc8:	f003 0301 	and.w	r3, r3, #1
 8004bcc:	60bb      	str	r3, [r7, #8]
 8004bce:	68bb      	ldr	r3, [r7, #8]
 8004bd0:	4a59      	ldr	r2, [pc, #356]	@ (8004d38 <HAL_GPIO_Init+0x2fc>)
 8004bd2:	697b      	ldr	r3, [r7, #20]
 8004bd4:	089b      	lsrs	r3, r3, #2
 8004bd6:	3302      	adds	r3, #2
 8004bd8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004bdc:	613b      	str	r3, [r7, #16]
 8004bde:	697b      	ldr	r3, [r7, #20]
 8004be0:	f003 0303 	and.w	r3, r3, #3
 8004be4:	009b      	lsls	r3, r3, #2
 8004be6:	220f      	movs	r2, #15
 8004be8:	fa02 f303 	lsl.w	r3, r2, r3
 8004bec:	43db      	mvns	r3, r3
 8004bee:	693a      	ldr	r2, [r7, #16]
 8004bf0:	4013      	ands	r3, r2
 8004bf2:	613b      	str	r3, [r7, #16]
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	4a51      	ldr	r2, [pc, #324]	@ (8004d3c <HAL_GPIO_Init+0x300>)
 8004bf8:	4293      	cmp	r3, r2
 8004bfa:	d025      	beq.n	8004c48 <HAL_GPIO_Init+0x20c>
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	4a50      	ldr	r2, [pc, #320]	@ (8004d40 <HAL_GPIO_Init+0x304>)
 8004c00:	4293      	cmp	r3, r2
 8004c02:	d01f      	beq.n	8004c44 <HAL_GPIO_Init+0x208>
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	4a4f      	ldr	r2, [pc, #316]	@ (8004d44 <HAL_GPIO_Init+0x308>)
 8004c08:	4293      	cmp	r3, r2
 8004c0a:	d019      	beq.n	8004c40 <HAL_GPIO_Init+0x204>
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	4a4e      	ldr	r2, [pc, #312]	@ (8004d48 <HAL_GPIO_Init+0x30c>)
 8004c10:	4293      	cmp	r3, r2
 8004c12:	d013      	beq.n	8004c3c <HAL_GPIO_Init+0x200>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	4a4d      	ldr	r2, [pc, #308]	@ (8004d4c <HAL_GPIO_Init+0x310>)
 8004c18:	4293      	cmp	r3, r2
 8004c1a:	d00d      	beq.n	8004c38 <HAL_GPIO_Init+0x1fc>
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	4a4c      	ldr	r2, [pc, #304]	@ (8004d50 <HAL_GPIO_Init+0x314>)
 8004c20:	4293      	cmp	r3, r2
 8004c22:	d007      	beq.n	8004c34 <HAL_GPIO_Init+0x1f8>
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	4a4b      	ldr	r2, [pc, #300]	@ (8004d54 <HAL_GPIO_Init+0x318>)
 8004c28:	4293      	cmp	r3, r2
 8004c2a:	d101      	bne.n	8004c30 <HAL_GPIO_Init+0x1f4>
 8004c2c:	2306      	movs	r3, #6
 8004c2e:	e00c      	b.n	8004c4a <HAL_GPIO_Init+0x20e>
 8004c30:	2307      	movs	r3, #7
 8004c32:	e00a      	b.n	8004c4a <HAL_GPIO_Init+0x20e>
 8004c34:	2305      	movs	r3, #5
 8004c36:	e008      	b.n	8004c4a <HAL_GPIO_Init+0x20e>
 8004c38:	2304      	movs	r3, #4
 8004c3a:	e006      	b.n	8004c4a <HAL_GPIO_Init+0x20e>
 8004c3c:	2303      	movs	r3, #3
 8004c3e:	e004      	b.n	8004c4a <HAL_GPIO_Init+0x20e>
 8004c40:	2302      	movs	r3, #2
 8004c42:	e002      	b.n	8004c4a <HAL_GPIO_Init+0x20e>
 8004c44:	2301      	movs	r3, #1
 8004c46:	e000      	b.n	8004c4a <HAL_GPIO_Init+0x20e>
 8004c48:	2300      	movs	r3, #0
 8004c4a:	697a      	ldr	r2, [r7, #20]
 8004c4c:	f002 0203 	and.w	r2, r2, #3
 8004c50:	0092      	lsls	r2, r2, #2
 8004c52:	4093      	lsls	r3, r2
 8004c54:	693a      	ldr	r2, [r7, #16]
 8004c56:	4313      	orrs	r3, r2
 8004c58:	613b      	str	r3, [r7, #16]
 8004c5a:	4937      	ldr	r1, [pc, #220]	@ (8004d38 <HAL_GPIO_Init+0x2fc>)
 8004c5c:	697b      	ldr	r3, [r7, #20]
 8004c5e:	089b      	lsrs	r3, r3, #2
 8004c60:	3302      	adds	r3, #2
 8004c62:	693a      	ldr	r2, [r7, #16]
 8004c64:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004c68:	4b3b      	ldr	r3, [pc, #236]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004c6a:	689b      	ldr	r3, [r3, #8]
 8004c6c:	613b      	str	r3, [r7, #16]
 8004c6e:	68fb      	ldr	r3, [r7, #12]
 8004c70:	43db      	mvns	r3, r3
 8004c72:	693a      	ldr	r2, [r7, #16]
 8004c74:	4013      	ands	r3, r2
 8004c76:	613b      	str	r3, [r7, #16]
 8004c78:	683b      	ldr	r3, [r7, #0]
 8004c7a:	685b      	ldr	r3, [r3, #4]
 8004c7c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004c80:	2b00      	cmp	r3, #0
 8004c82:	d003      	beq.n	8004c8c <HAL_GPIO_Init+0x250>
 8004c84:	693a      	ldr	r2, [r7, #16]
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	4313      	orrs	r3, r2
 8004c8a:	613b      	str	r3, [r7, #16]
 8004c8c:	4a32      	ldr	r2, [pc, #200]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004c8e:	693b      	ldr	r3, [r7, #16]
 8004c90:	6093      	str	r3, [r2, #8]
 8004c92:	4b31      	ldr	r3, [pc, #196]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004c94:	68db      	ldr	r3, [r3, #12]
 8004c96:	613b      	str	r3, [r7, #16]
 8004c98:	68fb      	ldr	r3, [r7, #12]
 8004c9a:	43db      	mvns	r3, r3
 8004c9c:	693a      	ldr	r2, [r7, #16]
 8004c9e:	4013      	ands	r3, r2
 8004ca0:	613b      	str	r3, [r7, #16]
 8004ca2:	683b      	ldr	r3, [r7, #0]
 8004ca4:	685b      	ldr	r3, [r3, #4]
 8004ca6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d003      	beq.n	8004cb6 <HAL_GPIO_Init+0x27a>
 8004cae:	693a      	ldr	r2, [r7, #16]
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	4313      	orrs	r3, r2
 8004cb4:	613b      	str	r3, [r7, #16]
 8004cb6:	4a28      	ldr	r2, [pc, #160]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004cb8:	693b      	ldr	r3, [r7, #16]
 8004cba:	60d3      	str	r3, [r2, #12]
 8004cbc:	4b26      	ldr	r3, [pc, #152]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004cbe:	685b      	ldr	r3, [r3, #4]
 8004cc0:	613b      	str	r3, [r7, #16]
 8004cc2:	68fb      	ldr	r3, [r7, #12]
 8004cc4:	43db      	mvns	r3, r3
 8004cc6:	693a      	ldr	r2, [r7, #16]
 8004cc8:	4013      	ands	r3, r2
 8004cca:	613b      	str	r3, [r7, #16]
 8004ccc:	683b      	ldr	r3, [r7, #0]
 8004cce:	685b      	ldr	r3, [r3, #4]
 8004cd0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004cd4:	2b00      	cmp	r3, #0
 8004cd6:	d003      	beq.n	8004ce0 <HAL_GPIO_Init+0x2a4>
 8004cd8:	693a      	ldr	r2, [r7, #16]
 8004cda:	68fb      	ldr	r3, [r7, #12]
 8004cdc:	4313      	orrs	r3, r2
 8004cde:	613b      	str	r3, [r7, #16]
 8004ce0:	4a1d      	ldr	r2, [pc, #116]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004ce2:	693b      	ldr	r3, [r7, #16]
 8004ce4:	6053      	str	r3, [r2, #4]
 8004ce6:	4b1c      	ldr	r3, [pc, #112]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	613b      	str	r3, [r7, #16]
 8004cec:	68fb      	ldr	r3, [r7, #12]
 8004cee:	43db      	mvns	r3, r3
 8004cf0:	693a      	ldr	r2, [r7, #16]
 8004cf2:	4013      	ands	r3, r2
 8004cf4:	613b      	str	r3, [r7, #16]
 8004cf6:	683b      	ldr	r3, [r7, #0]
 8004cf8:	685b      	ldr	r3, [r3, #4]
 8004cfa:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004cfe:	2b00      	cmp	r3, #0
 8004d00:	d003      	beq.n	8004d0a <HAL_GPIO_Init+0x2ce>
 8004d02:	693a      	ldr	r2, [r7, #16]
 8004d04:	68fb      	ldr	r3, [r7, #12]
 8004d06:	4313      	orrs	r3, r2
 8004d08:	613b      	str	r3, [r7, #16]
 8004d0a:	4a13      	ldr	r2, [pc, #76]	@ (8004d58 <HAL_GPIO_Init+0x31c>)
 8004d0c:	693b      	ldr	r3, [r7, #16]
 8004d0e:	6013      	str	r3, [r2, #0]
 8004d10:	697b      	ldr	r3, [r7, #20]
 8004d12:	3301      	adds	r3, #1
 8004d14:	617b      	str	r3, [r7, #20]
 8004d16:	683b      	ldr	r3, [r7, #0]
 8004d18:	681a      	ldr	r2, [r3, #0]
 8004d1a:	697b      	ldr	r3, [r7, #20]
 8004d1c:	fa22 f303 	lsr.w	r3, r2, r3
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	f47f ae97 	bne.w	8004a54 <HAL_GPIO_Init+0x18>
 8004d26:	bf00      	nop
 8004d28:	bf00      	nop
 8004d2a:	371c      	adds	r7, #28
 8004d2c:	46bd      	mov	sp, r7
 8004d2e:	bc80      	pop	{r7}
 8004d30:	4770      	bx	lr
 8004d32:	bf00      	nop
 8004d34:	40023800 	.word	0x40023800
 8004d38:	40010000 	.word	0x40010000
 8004d3c:	40020000 	.word	0x40020000
 8004d40:	40020400 	.word	0x40020400
 8004d44:	40020800 	.word	0x40020800
 8004d48:	40020c00 	.word	0x40020c00
 8004d4c:	40021000 	.word	0x40021000
 8004d50:	40021400 	.word	0x40021400
 8004d54:	40021800 	.word	0x40021800
 8004d58:	40010400 	.word	0x40010400

08004d5c <HAL_GPIO_DeInit>:
 8004d5c:	b480      	push	{r7}
 8004d5e:	b087      	sub	sp, #28
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	6078      	str	r0, [r7, #4]
 8004d64:	6039      	str	r1, [r7, #0]
 8004d66:	2300      	movs	r3, #0
 8004d68:	617b      	str	r3, [r7, #20]
 8004d6a:	2300      	movs	r3, #0
 8004d6c:	613b      	str	r3, [r7, #16]
 8004d6e:	2300      	movs	r3, #0
 8004d70:	60fb      	str	r3, [r7, #12]
 8004d72:	e0c4      	b.n	8004efe <HAL_GPIO_DeInit+0x1a2>
 8004d74:	2201      	movs	r2, #1
 8004d76:	697b      	ldr	r3, [r7, #20]
 8004d78:	fa02 f303 	lsl.w	r3, r2, r3
 8004d7c:	683a      	ldr	r2, [r7, #0]
 8004d7e:	4013      	ands	r3, r2
 8004d80:	613b      	str	r3, [r7, #16]
 8004d82:	693b      	ldr	r3, [r7, #16]
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	f000 80b7 	beq.w	8004ef8 <HAL_GPIO_DeInit+0x19c>
 8004d8a:	4a63      	ldr	r2, [pc, #396]	@ (8004f18 <HAL_GPIO_DeInit+0x1bc>)
 8004d8c:	697b      	ldr	r3, [r7, #20]
 8004d8e:	089b      	lsrs	r3, r3, #2
 8004d90:	3302      	adds	r3, #2
 8004d92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004d96:	60fb      	str	r3, [r7, #12]
 8004d98:	697b      	ldr	r3, [r7, #20]
 8004d9a:	f003 0303 	and.w	r3, r3, #3
 8004d9e:	009b      	lsls	r3, r3, #2
 8004da0:	220f      	movs	r2, #15
 8004da2:	fa02 f303 	lsl.w	r3, r2, r3
 8004da6:	68fa      	ldr	r2, [r7, #12]
 8004da8:	4013      	ands	r3, r2
 8004daa:	60fb      	str	r3, [r7, #12]
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	4a5b      	ldr	r2, [pc, #364]	@ (8004f1c <HAL_GPIO_DeInit+0x1c0>)
 8004db0:	4293      	cmp	r3, r2
 8004db2:	d025      	beq.n	8004e00 <HAL_GPIO_DeInit+0xa4>
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	4a5a      	ldr	r2, [pc, #360]	@ (8004f20 <HAL_GPIO_DeInit+0x1c4>)
 8004db8:	4293      	cmp	r3, r2
 8004dba:	d01f      	beq.n	8004dfc <HAL_GPIO_DeInit+0xa0>
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	4a59      	ldr	r2, [pc, #356]	@ (8004f24 <HAL_GPIO_DeInit+0x1c8>)
 8004dc0:	4293      	cmp	r3, r2
 8004dc2:	d019      	beq.n	8004df8 <HAL_GPIO_DeInit+0x9c>
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	4a58      	ldr	r2, [pc, #352]	@ (8004f28 <HAL_GPIO_DeInit+0x1cc>)
 8004dc8:	4293      	cmp	r3, r2
 8004dca:	d013      	beq.n	8004df4 <HAL_GPIO_DeInit+0x98>
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	4a57      	ldr	r2, [pc, #348]	@ (8004f2c <HAL_GPIO_DeInit+0x1d0>)
 8004dd0:	4293      	cmp	r3, r2
 8004dd2:	d00d      	beq.n	8004df0 <HAL_GPIO_DeInit+0x94>
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	4a56      	ldr	r2, [pc, #344]	@ (8004f30 <HAL_GPIO_DeInit+0x1d4>)
 8004dd8:	4293      	cmp	r3, r2
 8004dda:	d007      	beq.n	8004dec <HAL_GPIO_DeInit+0x90>
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	4a55      	ldr	r2, [pc, #340]	@ (8004f34 <HAL_GPIO_DeInit+0x1d8>)
 8004de0:	4293      	cmp	r3, r2
 8004de2:	d101      	bne.n	8004de8 <HAL_GPIO_DeInit+0x8c>
 8004de4:	2306      	movs	r3, #6
 8004de6:	e00c      	b.n	8004e02 <HAL_GPIO_DeInit+0xa6>
 8004de8:	2307      	movs	r3, #7
 8004dea:	e00a      	b.n	8004e02 <HAL_GPIO_DeInit+0xa6>
 8004dec:	2305      	movs	r3, #5
 8004dee:	e008      	b.n	8004e02 <HAL_GPIO_DeInit+0xa6>
 8004df0:	2304      	movs	r3, #4
 8004df2:	e006      	b.n	8004e02 <HAL_GPIO_DeInit+0xa6>
 8004df4:	2303      	movs	r3, #3
 8004df6:	e004      	b.n	8004e02 <HAL_GPIO_DeInit+0xa6>
 8004df8:	2302      	movs	r3, #2
 8004dfa:	e002      	b.n	8004e02 <HAL_GPIO_DeInit+0xa6>
 8004dfc:	2301      	movs	r3, #1
 8004dfe:	e000      	b.n	8004e02 <HAL_GPIO_DeInit+0xa6>
 8004e00:	2300      	movs	r3, #0
 8004e02:	697a      	ldr	r2, [r7, #20]
 8004e04:	f002 0203 	and.w	r2, r2, #3
 8004e08:	0092      	lsls	r2, r2, #2
 8004e0a:	4093      	lsls	r3, r2
 8004e0c:	68fa      	ldr	r2, [r7, #12]
 8004e0e:	429a      	cmp	r2, r3
 8004e10:	d132      	bne.n	8004e78 <HAL_GPIO_DeInit+0x11c>
 8004e12:	4b49      	ldr	r3, [pc, #292]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e14:	681a      	ldr	r2, [r3, #0]
 8004e16:	693b      	ldr	r3, [r7, #16]
 8004e18:	43db      	mvns	r3, r3
 8004e1a:	4947      	ldr	r1, [pc, #284]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e1c:	4013      	ands	r3, r2
 8004e1e:	600b      	str	r3, [r1, #0]
 8004e20:	4b45      	ldr	r3, [pc, #276]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e22:	685a      	ldr	r2, [r3, #4]
 8004e24:	693b      	ldr	r3, [r7, #16]
 8004e26:	43db      	mvns	r3, r3
 8004e28:	4943      	ldr	r1, [pc, #268]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e2a:	4013      	ands	r3, r2
 8004e2c:	604b      	str	r3, [r1, #4]
 8004e2e:	4b42      	ldr	r3, [pc, #264]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e30:	68da      	ldr	r2, [r3, #12]
 8004e32:	693b      	ldr	r3, [r7, #16]
 8004e34:	43db      	mvns	r3, r3
 8004e36:	4940      	ldr	r1, [pc, #256]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e38:	4013      	ands	r3, r2
 8004e3a:	60cb      	str	r3, [r1, #12]
 8004e3c:	4b3e      	ldr	r3, [pc, #248]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e3e:	689a      	ldr	r2, [r3, #8]
 8004e40:	693b      	ldr	r3, [r7, #16]
 8004e42:	43db      	mvns	r3, r3
 8004e44:	493c      	ldr	r1, [pc, #240]	@ (8004f38 <HAL_GPIO_DeInit+0x1dc>)
 8004e46:	4013      	ands	r3, r2
 8004e48:	608b      	str	r3, [r1, #8]
 8004e4a:	697b      	ldr	r3, [r7, #20]
 8004e4c:	f003 0303 	and.w	r3, r3, #3
 8004e50:	009b      	lsls	r3, r3, #2
 8004e52:	220f      	movs	r2, #15
 8004e54:	fa02 f303 	lsl.w	r3, r2, r3
 8004e58:	60fb      	str	r3, [r7, #12]
 8004e5a:	4a2f      	ldr	r2, [pc, #188]	@ (8004f18 <HAL_GPIO_DeInit+0x1bc>)
 8004e5c:	697b      	ldr	r3, [r7, #20]
 8004e5e:	089b      	lsrs	r3, r3, #2
 8004e60:	3302      	adds	r3, #2
 8004e62:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	43da      	mvns	r2, r3
 8004e6a:	482b      	ldr	r0, [pc, #172]	@ (8004f18 <HAL_GPIO_DeInit+0x1bc>)
 8004e6c:	697b      	ldr	r3, [r7, #20]
 8004e6e:	089b      	lsrs	r3, r3, #2
 8004e70:	400a      	ands	r2, r1
 8004e72:	3302      	adds	r3, #2
 8004e74:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	681a      	ldr	r2, [r3, #0]
 8004e7c:	697b      	ldr	r3, [r7, #20]
 8004e7e:	005b      	lsls	r3, r3, #1
 8004e80:	2103      	movs	r1, #3
 8004e82:	fa01 f303 	lsl.w	r3, r1, r3
 8004e86:	43db      	mvns	r3, r3
 8004e88:	401a      	ands	r2, r3
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	601a      	str	r2, [r3, #0]
 8004e8e:	697b      	ldr	r3, [r7, #20]
 8004e90:	08da      	lsrs	r2, r3, #3
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	3208      	adds	r2, #8
 8004e96:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004e9a:	697b      	ldr	r3, [r7, #20]
 8004e9c:	f003 0307 	and.w	r3, r3, #7
 8004ea0:	009b      	lsls	r3, r3, #2
 8004ea2:	220f      	movs	r2, #15
 8004ea4:	fa02 f303 	lsl.w	r3, r2, r3
 8004ea8:	43db      	mvns	r3, r3
 8004eaa:	697a      	ldr	r2, [r7, #20]
 8004eac:	08d2      	lsrs	r2, r2, #3
 8004eae:	4019      	ands	r1, r3
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	3208      	adds	r2, #8
 8004eb4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	68da      	ldr	r2, [r3, #12]
 8004ebc:	697b      	ldr	r3, [r7, #20]
 8004ebe:	005b      	lsls	r3, r3, #1
 8004ec0:	2103      	movs	r1, #3
 8004ec2:	fa01 f303 	lsl.w	r3, r1, r3
 8004ec6:	43db      	mvns	r3, r3
 8004ec8:	401a      	ands	r2, r3
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	60da      	str	r2, [r3, #12]
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	685a      	ldr	r2, [r3, #4]
 8004ed2:	2101      	movs	r1, #1
 8004ed4:	697b      	ldr	r3, [r7, #20]
 8004ed6:	fa01 f303 	lsl.w	r3, r1, r3
 8004eda:	43db      	mvns	r3, r3
 8004edc:	401a      	ands	r2, r3
 8004ede:	687b      	ldr	r3, [r7, #4]
 8004ee0:	605a      	str	r2, [r3, #4]
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	689a      	ldr	r2, [r3, #8]
 8004ee6:	697b      	ldr	r3, [r7, #20]
 8004ee8:	005b      	lsls	r3, r3, #1
 8004eea:	2103      	movs	r1, #3
 8004eec:	fa01 f303 	lsl.w	r3, r1, r3
 8004ef0:	43db      	mvns	r3, r3
 8004ef2:	401a      	ands	r2, r3
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	609a      	str	r2, [r3, #8]
 8004ef8:	697b      	ldr	r3, [r7, #20]
 8004efa:	3301      	adds	r3, #1
 8004efc:	617b      	str	r3, [r7, #20]
 8004efe:	683a      	ldr	r2, [r7, #0]
 8004f00:	697b      	ldr	r3, [r7, #20]
 8004f02:	fa22 f303 	lsr.w	r3, r2, r3
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	f47f af34 	bne.w	8004d74 <HAL_GPIO_DeInit+0x18>
 8004f0c:	bf00      	nop
 8004f0e:	bf00      	nop
 8004f10:	371c      	adds	r7, #28
 8004f12:	46bd      	mov	sp, r7
 8004f14:	bc80      	pop	{r7}
 8004f16:	4770      	bx	lr
 8004f18:	40010000 	.word	0x40010000
 8004f1c:	40020000 	.word	0x40020000
 8004f20:	40020400 	.word	0x40020400
 8004f24:	40020800 	.word	0x40020800
 8004f28:	40020c00 	.word	0x40020c00
 8004f2c:	40021000 	.word	0x40021000
 8004f30:	40021400 	.word	0x40021400
 8004f34:	40021800 	.word	0x40021800
 8004f38:	40010400 	.word	0x40010400

08004f3c <HAL_GPIO_ReadPin>:
 8004f3c:	b480      	push	{r7}
 8004f3e:	b085      	sub	sp, #20
 8004f40:	af00      	add	r7, sp, #0
 8004f42:	6078      	str	r0, [r7, #4]
 8004f44:	460b      	mov	r3, r1
 8004f46:	807b      	strh	r3, [r7, #2]
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	691a      	ldr	r2, [r3, #16]
 8004f4c:	887b      	ldrh	r3, [r7, #2]
 8004f4e:	4013      	ands	r3, r2
 8004f50:	2b00      	cmp	r3, #0
 8004f52:	d002      	beq.n	8004f5a <HAL_GPIO_ReadPin+0x1e>
 8004f54:	2301      	movs	r3, #1
 8004f56:	73fb      	strb	r3, [r7, #15]
 8004f58:	e001      	b.n	8004f5e <HAL_GPIO_ReadPin+0x22>
 8004f5a:	2300      	movs	r3, #0
 8004f5c:	73fb      	strb	r3, [r7, #15]
 8004f5e:	7bfb      	ldrb	r3, [r7, #15]
 8004f60:	4618      	mov	r0, r3
 8004f62:	3714      	adds	r7, #20
 8004f64:	46bd      	mov	sp, r7
 8004f66:	bc80      	pop	{r7}
 8004f68:	4770      	bx	lr

08004f6a <HAL_GPIO_WritePin>:
 8004f6a:	b480      	push	{r7}
 8004f6c:	b083      	sub	sp, #12
 8004f6e:	af00      	add	r7, sp, #0
 8004f70:	6078      	str	r0, [r7, #4]
 8004f72:	460b      	mov	r3, r1
 8004f74:	807b      	strh	r3, [r7, #2]
 8004f76:	4613      	mov	r3, r2
 8004f78:	707b      	strb	r3, [r7, #1]
 8004f7a:	787b      	ldrb	r3, [r7, #1]
 8004f7c:	2b00      	cmp	r3, #0
 8004f7e:	d003      	beq.n	8004f88 <HAL_GPIO_WritePin+0x1e>
 8004f80:	887a      	ldrh	r2, [r7, #2]
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	619a      	str	r2, [r3, #24]
 8004f86:	e003      	b.n	8004f90 <HAL_GPIO_WritePin+0x26>
 8004f88:	887b      	ldrh	r3, [r7, #2]
 8004f8a:	041a      	lsls	r2, r3, #16
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	619a      	str	r2, [r3, #24]
 8004f90:	bf00      	nop
 8004f92:	370c      	adds	r7, #12
 8004f94:	46bd      	mov	sp, r7
 8004f96:	bc80      	pop	{r7}
 8004f98:	4770      	bx	lr

08004f9a <HAL_GPIO_TogglePin>:
 8004f9a:	b480      	push	{r7}
 8004f9c:	b085      	sub	sp, #20
 8004f9e:	af00      	add	r7, sp, #0
 8004fa0:	6078      	str	r0, [r7, #4]
 8004fa2:	460b      	mov	r3, r1
 8004fa4:	807b      	strh	r3, [r7, #2]
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	695b      	ldr	r3, [r3, #20]
 8004faa:	60fb      	str	r3, [r7, #12]
 8004fac:	887a      	ldrh	r2, [r7, #2]
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	4013      	ands	r3, r2
 8004fb2:	041a      	lsls	r2, r3, #16
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	43d9      	mvns	r1, r3
 8004fb8:	887b      	ldrh	r3, [r7, #2]
 8004fba:	400b      	ands	r3, r1
 8004fbc:	431a      	orrs	r2, r3
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	619a      	str	r2, [r3, #24]
 8004fc2:	bf00      	nop
 8004fc4:	3714      	adds	r7, #20
 8004fc6:	46bd      	mov	sp, r7
 8004fc8:	bc80      	pop	{r7}
 8004fca:	4770      	bx	lr

08004fcc <HAL_I2C_Init>:
 8004fcc:	b580      	push	{r7, lr}
 8004fce:	b084      	sub	sp, #16
 8004fd0:	af00      	add	r7, sp, #0
 8004fd2:	6078      	str	r0, [r7, #4]
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	2b00      	cmp	r3, #0
 8004fd8:	d101      	bne.n	8004fde <HAL_I2C_Init+0x12>
 8004fda:	2301      	movs	r3, #1
 8004fdc:	e12b      	b.n	8005236 <HAL_I2C_Init+0x26a>
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004fe4:	b2db      	uxtb	r3, r3
 8004fe6:	2b00      	cmp	r3, #0
 8004fe8:	d106      	bne.n	8004ff8 <HAL_I2C_Init+0x2c>
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	2200      	movs	r2, #0
 8004fee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004ff2:	6878      	ldr	r0, [r7, #4]
 8004ff4:	f7fe fea4 	bl	8003d40 <HAL_I2C_MspInit>
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	2224      	movs	r2, #36	@ 0x24
 8004ffc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	681a      	ldr	r2, [r3, #0]
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	f022 0201 	bic.w	r2, r2, #1
 800500e:	601a      	str	r2, [r3, #0]
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	681a      	ldr	r2, [r3, #0]
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800501e:	601a      	str	r2, [r3, #0]
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	681a      	ldr	r2, [r3, #0]
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800502e:	601a      	str	r2, [r3, #0]
 8005030:	f002 f9d2 	bl	80073d8 <HAL_RCC_GetPCLK1Freq>
 8005034:	60f8      	str	r0, [r7, #12]
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	685b      	ldr	r3, [r3, #4]
 800503a:	4a81      	ldr	r2, [pc, #516]	@ (8005240 <HAL_I2C_Init+0x274>)
 800503c:	4293      	cmp	r3, r2
 800503e:	d807      	bhi.n	8005050 <HAL_I2C_Init+0x84>
 8005040:	68fb      	ldr	r3, [r7, #12]
 8005042:	4a80      	ldr	r2, [pc, #512]	@ (8005244 <HAL_I2C_Init+0x278>)
 8005044:	4293      	cmp	r3, r2
 8005046:	bf94      	ite	ls
 8005048:	2301      	movls	r3, #1
 800504a:	2300      	movhi	r3, #0
 800504c:	b2db      	uxtb	r3, r3
 800504e:	e006      	b.n	800505e <HAL_I2C_Init+0x92>
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	4a7d      	ldr	r2, [pc, #500]	@ (8005248 <HAL_I2C_Init+0x27c>)
 8005054:	4293      	cmp	r3, r2
 8005056:	bf94      	ite	ls
 8005058:	2301      	movls	r3, #1
 800505a:	2300      	movhi	r3, #0
 800505c:	b2db      	uxtb	r3, r3
 800505e:	2b00      	cmp	r3, #0
 8005060:	d001      	beq.n	8005066 <HAL_I2C_Init+0x9a>
 8005062:	2301      	movs	r3, #1
 8005064:	e0e7      	b.n	8005236 <HAL_I2C_Init+0x26a>
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	4a78      	ldr	r2, [pc, #480]	@ (800524c <HAL_I2C_Init+0x280>)
 800506a:	fba2 2303 	umull	r2, r3, r2, r3
 800506e:	0c9b      	lsrs	r3, r3, #18
 8005070:	60bb      	str	r3, [r7, #8]
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	685b      	ldr	r3, [r3, #4]
 8005078:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	68ba      	ldr	r2, [r7, #8]
 8005082:	430a      	orrs	r2, r1
 8005084:	605a      	str	r2, [r3, #4]
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	6a1b      	ldr	r3, [r3, #32]
 800508c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	685b      	ldr	r3, [r3, #4]
 8005094:	4a6a      	ldr	r2, [pc, #424]	@ (8005240 <HAL_I2C_Init+0x274>)
 8005096:	4293      	cmp	r3, r2
 8005098:	d802      	bhi.n	80050a0 <HAL_I2C_Init+0xd4>
 800509a:	68bb      	ldr	r3, [r7, #8]
 800509c:	3301      	adds	r3, #1
 800509e:	e009      	b.n	80050b4 <HAL_I2C_Init+0xe8>
 80050a0:	68bb      	ldr	r3, [r7, #8]
 80050a2:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80050a6:	fb02 f303 	mul.w	r3, r2, r3
 80050aa:	4a69      	ldr	r2, [pc, #420]	@ (8005250 <HAL_I2C_Init+0x284>)
 80050ac:	fba2 2303 	umull	r2, r3, r2, r3
 80050b0:	099b      	lsrs	r3, r3, #6
 80050b2:	3301      	adds	r3, #1
 80050b4:	687a      	ldr	r2, [r7, #4]
 80050b6:	6812      	ldr	r2, [r2, #0]
 80050b8:	430b      	orrs	r3, r1
 80050ba:	6213      	str	r3, [r2, #32]
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	69db      	ldr	r3, [r3, #28]
 80050c2:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80050c6:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	685b      	ldr	r3, [r3, #4]
 80050ce:	495c      	ldr	r1, [pc, #368]	@ (8005240 <HAL_I2C_Init+0x274>)
 80050d0:	428b      	cmp	r3, r1
 80050d2:	d819      	bhi.n	8005108 <HAL_I2C_Init+0x13c>
 80050d4:	68fb      	ldr	r3, [r7, #12]
 80050d6:	1e59      	subs	r1, r3, #1
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	685b      	ldr	r3, [r3, #4]
 80050dc:	005b      	lsls	r3, r3, #1
 80050de:	fbb1 f3f3 	udiv	r3, r1, r3
 80050e2:	1c59      	adds	r1, r3, #1
 80050e4:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80050e8:	400b      	ands	r3, r1
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d00a      	beq.n	8005104 <HAL_I2C_Init+0x138>
 80050ee:	68fb      	ldr	r3, [r7, #12]
 80050f0:	1e59      	subs	r1, r3, #1
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	685b      	ldr	r3, [r3, #4]
 80050f6:	005b      	lsls	r3, r3, #1
 80050f8:	fbb1 f3f3 	udiv	r3, r1, r3
 80050fc:	3301      	adds	r3, #1
 80050fe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005102:	e051      	b.n	80051a8 <HAL_I2C_Init+0x1dc>
 8005104:	2304      	movs	r3, #4
 8005106:	e04f      	b.n	80051a8 <HAL_I2C_Init+0x1dc>
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	689b      	ldr	r3, [r3, #8]
 800510c:	2b00      	cmp	r3, #0
 800510e:	d111      	bne.n	8005134 <HAL_I2C_Init+0x168>
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	1e58      	subs	r0, r3, #1
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	6859      	ldr	r1, [r3, #4]
 8005118:	460b      	mov	r3, r1
 800511a:	005b      	lsls	r3, r3, #1
 800511c:	440b      	add	r3, r1
 800511e:	fbb0 f3f3 	udiv	r3, r0, r3
 8005122:	3301      	adds	r3, #1
 8005124:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005128:	2b00      	cmp	r3, #0
 800512a:	bf0c      	ite	eq
 800512c:	2301      	moveq	r3, #1
 800512e:	2300      	movne	r3, #0
 8005130:	b2db      	uxtb	r3, r3
 8005132:	e012      	b.n	800515a <HAL_I2C_Init+0x18e>
 8005134:	68fb      	ldr	r3, [r7, #12]
 8005136:	1e58      	subs	r0, r3, #1
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	6859      	ldr	r1, [r3, #4]
 800513c:	460b      	mov	r3, r1
 800513e:	009b      	lsls	r3, r3, #2
 8005140:	440b      	add	r3, r1
 8005142:	0099      	lsls	r1, r3, #2
 8005144:	440b      	add	r3, r1
 8005146:	fbb0 f3f3 	udiv	r3, r0, r3
 800514a:	3301      	adds	r3, #1
 800514c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005150:	2b00      	cmp	r3, #0
 8005152:	bf0c      	ite	eq
 8005154:	2301      	moveq	r3, #1
 8005156:	2300      	movne	r3, #0
 8005158:	b2db      	uxtb	r3, r3
 800515a:	2b00      	cmp	r3, #0
 800515c:	d001      	beq.n	8005162 <HAL_I2C_Init+0x196>
 800515e:	2301      	movs	r3, #1
 8005160:	e022      	b.n	80051a8 <HAL_I2C_Init+0x1dc>
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	689b      	ldr	r3, [r3, #8]
 8005166:	2b00      	cmp	r3, #0
 8005168:	d10e      	bne.n	8005188 <HAL_I2C_Init+0x1bc>
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	1e58      	subs	r0, r3, #1
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	6859      	ldr	r1, [r3, #4]
 8005172:	460b      	mov	r3, r1
 8005174:	005b      	lsls	r3, r3, #1
 8005176:	440b      	add	r3, r1
 8005178:	fbb0 f3f3 	udiv	r3, r0, r3
 800517c:	3301      	adds	r3, #1
 800517e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005182:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005186:	e00f      	b.n	80051a8 <HAL_I2C_Init+0x1dc>
 8005188:	68fb      	ldr	r3, [r7, #12]
 800518a:	1e58      	subs	r0, r3, #1
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	6859      	ldr	r1, [r3, #4]
 8005190:	460b      	mov	r3, r1
 8005192:	009b      	lsls	r3, r3, #2
 8005194:	440b      	add	r3, r1
 8005196:	0099      	lsls	r1, r3, #2
 8005198:	440b      	add	r3, r1
 800519a:	fbb0 f3f3 	udiv	r3, r0, r3
 800519e:	3301      	adds	r3, #1
 80051a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80051a4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80051a8:	6879      	ldr	r1, [r7, #4]
 80051aa:	6809      	ldr	r1, [r1, #0]
 80051ac:	4313      	orrs	r3, r2
 80051ae:	61cb      	str	r3, [r1, #28]
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	681b      	ldr	r3, [r3, #0]
 80051b6:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	69da      	ldr	r2, [r3, #28]
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	6a1b      	ldr	r3, [r3, #32]
 80051c2:	431a      	orrs	r2, r3
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	430a      	orrs	r2, r1
 80051ca:	601a      	str	r2, [r3, #0]
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	689b      	ldr	r3, [r3, #8]
 80051d2:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80051d6:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80051da:	687a      	ldr	r2, [r7, #4]
 80051dc:	6911      	ldr	r1, [r2, #16]
 80051de:	687a      	ldr	r2, [r7, #4]
 80051e0:	68d2      	ldr	r2, [r2, #12]
 80051e2:	4311      	orrs	r1, r2
 80051e4:	687a      	ldr	r2, [r7, #4]
 80051e6:	6812      	ldr	r2, [r2, #0]
 80051e8:	430b      	orrs	r3, r1
 80051ea:	6093      	str	r3, [r2, #8]
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	68db      	ldr	r3, [r3, #12]
 80051f2:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	695a      	ldr	r2, [r3, #20]
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	699b      	ldr	r3, [r3, #24]
 80051fe:	431a      	orrs	r2, r3
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	430a      	orrs	r2, r1
 8005206:	60da      	str	r2, [r3, #12]
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	681a      	ldr	r2, [r3, #0]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	f042 0201 	orr.w	r2, r2, #1
 8005216:	601a      	str	r2, [r3, #0]
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	2200      	movs	r2, #0
 800521c:	641a      	str	r2, [r3, #64]	@ 0x40
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	2220      	movs	r2, #32
 8005222:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	2200      	movs	r2, #0
 800522a:	631a      	str	r2, [r3, #48]	@ 0x30
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	2200      	movs	r2, #0
 8005230:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005234:	2300      	movs	r3, #0
 8005236:	4618      	mov	r0, r3
 8005238:	3710      	adds	r7, #16
 800523a:	46bd      	mov	sp, r7
 800523c:	bd80      	pop	{r7, pc}
 800523e:	bf00      	nop
 8005240:	000186a0 	.word	0x000186a0
 8005244:	001e847f 	.word	0x001e847f
 8005248:	003d08ff 	.word	0x003d08ff
 800524c:	431bde83 	.word	0x431bde83
 8005250:	10624dd3 	.word	0x10624dd3

08005254 <HAL_I2C_Master_Transmit>:
 8005254:	b580      	push	{r7, lr}
 8005256:	b088      	sub	sp, #32
 8005258:	af02      	add	r7, sp, #8
 800525a:	60f8      	str	r0, [r7, #12]
 800525c:	607a      	str	r2, [r7, #4]
 800525e:	461a      	mov	r2, r3
 8005260:	460b      	mov	r3, r1
 8005262:	817b      	strh	r3, [r7, #10]
 8005264:	4613      	mov	r3, r2
 8005266:	813b      	strh	r3, [r7, #8]
 8005268:	f7ff fa5e 	bl	8004728 <HAL_GetTick>
 800526c:	6178      	str	r0, [r7, #20]
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005274:	b2db      	uxtb	r3, r3
 8005276:	2b20      	cmp	r3, #32
 8005278:	f040 80e0 	bne.w	800543c <HAL_I2C_Master_Transmit+0x1e8>
 800527c:	697b      	ldr	r3, [r7, #20]
 800527e:	9300      	str	r3, [sp, #0]
 8005280:	2319      	movs	r3, #25
 8005282:	2201      	movs	r2, #1
 8005284:	4970      	ldr	r1, [pc, #448]	@ (8005448 <HAL_I2C_Master_Transmit+0x1f4>)
 8005286:	68f8      	ldr	r0, [r7, #12]
 8005288:	f001 f902 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 800528c:	4603      	mov	r3, r0
 800528e:	2b00      	cmp	r3, #0
 8005290:	d001      	beq.n	8005296 <HAL_I2C_Master_Transmit+0x42>
 8005292:	2302      	movs	r3, #2
 8005294:	e0d3      	b.n	800543e <HAL_I2C_Master_Transmit+0x1ea>
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800529c:	2b01      	cmp	r3, #1
 800529e:	d101      	bne.n	80052a4 <HAL_I2C_Master_Transmit+0x50>
 80052a0:	2302      	movs	r3, #2
 80052a2:	e0cc      	b.n	800543e <HAL_I2C_Master_Transmit+0x1ea>
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	2201      	movs	r2, #1
 80052a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	681b      	ldr	r3, [r3, #0]
 80052b2:	f003 0301 	and.w	r3, r3, #1
 80052b6:	2b01      	cmp	r3, #1
 80052b8:	d007      	beq.n	80052ca <HAL_I2C_Master_Transmit+0x76>
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	681a      	ldr	r2, [r3, #0]
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	f042 0201 	orr.w	r2, r2, #1
 80052c8:	601a      	str	r2, [r3, #0]
 80052ca:	68fb      	ldr	r3, [r7, #12]
 80052cc:	681b      	ldr	r3, [r3, #0]
 80052ce:	681a      	ldr	r2, [r3, #0]
 80052d0:	68fb      	ldr	r3, [r7, #12]
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80052d8:	601a      	str	r2, [r3, #0]
 80052da:	68fb      	ldr	r3, [r7, #12]
 80052dc:	2221      	movs	r2, #33	@ 0x21
 80052de:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	2210      	movs	r2, #16
 80052e6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	2200      	movs	r2, #0
 80052ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	687a      	ldr	r2, [r7, #4]
 80052f4:	625a      	str	r2, [r3, #36]	@ 0x24
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	893a      	ldrh	r2, [r7, #8]
 80052fa:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80052fc:	68fb      	ldr	r3, [r7, #12]
 80052fe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005300:	b29a      	uxth	r2, r3
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005306:	68fb      	ldr	r3, [r7, #12]
 8005308:	4a50      	ldr	r2, [pc, #320]	@ (800544c <HAL_I2C_Master_Transmit+0x1f8>)
 800530a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800530c:	8979      	ldrh	r1, [r7, #10]
 800530e:	697b      	ldr	r3, [r7, #20]
 8005310:	6a3a      	ldr	r2, [r7, #32]
 8005312:	68f8      	ldr	r0, [r7, #12]
 8005314:	f000 fdee 	bl	8005ef4 <I2C_MasterRequestWrite>
 8005318:	4603      	mov	r3, r0
 800531a:	2b00      	cmp	r3, #0
 800531c:	d001      	beq.n	8005322 <HAL_I2C_Master_Transmit+0xce>
 800531e:	2301      	movs	r3, #1
 8005320:	e08d      	b.n	800543e <HAL_I2C_Master_Transmit+0x1ea>
 8005322:	2300      	movs	r3, #0
 8005324:	613b      	str	r3, [r7, #16]
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	695b      	ldr	r3, [r3, #20]
 800532c:	613b      	str	r3, [r7, #16]
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	681b      	ldr	r3, [r3, #0]
 8005332:	699b      	ldr	r3, [r3, #24]
 8005334:	613b      	str	r3, [r7, #16]
 8005336:	693b      	ldr	r3, [r7, #16]
 8005338:	e066      	b.n	8005408 <HAL_I2C_Master_Transmit+0x1b4>
 800533a:	697a      	ldr	r2, [r7, #20]
 800533c:	6a39      	ldr	r1, [r7, #32]
 800533e:	68f8      	ldr	r0, [r7, #12]
 8005340:	f001 f9c0 	bl	80066c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8005344:	4603      	mov	r3, r0
 8005346:	2b00      	cmp	r3, #0
 8005348:	d00d      	beq.n	8005366 <HAL_I2C_Master_Transmit+0x112>
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800534e:	2b04      	cmp	r3, #4
 8005350:	d107      	bne.n	8005362 <HAL_I2C_Master_Transmit+0x10e>
 8005352:	68fb      	ldr	r3, [r7, #12]
 8005354:	681b      	ldr	r3, [r3, #0]
 8005356:	681a      	ldr	r2, [r3, #0]
 8005358:	68fb      	ldr	r3, [r7, #12]
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005360:	601a      	str	r2, [r3, #0]
 8005362:	2301      	movs	r3, #1
 8005364:	e06b      	b.n	800543e <HAL_I2C_Master_Transmit+0x1ea>
 8005366:	68fb      	ldr	r3, [r7, #12]
 8005368:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800536a:	781a      	ldrb	r2, [r3, #0]
 800536c:	68fb      	ldr	r3, [r7, #12]
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	611a      	str	r2, [r3, #16]
 8005372:	68fb      	ldr	r3, [r7, #12]
 8005374:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005376:	1c5a      	adds	r2, r3, #1
 8005378:	68fb      	ldr	r3, [r7, #12]
 800537a:	625a      	str	r2, [r3, #36]	@ 0x24
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005380:	b29b      	uxth	r3, r3
 8005382:	3b01      	subs	r3, #1
 8005384:	b29a      	uxth	r2, r3
 8005386:	68fb      	ldr	r3, [r7, #12]
 8005388:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800538e:	3b01      	subs	r3, #1
 8005390:	b29a      	uxth	r2, r3
 8005392:	68fb      	ldr	r3, [r7, #12]
 8005394:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005396:	68fb      	ldr	r3, [r7, #12]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	695b      	ldr	r3, [r3, #20]
 800539c:	f003 0304 	and.w	r3, r3, #4
 80053a0:	2b04      	cmp	r3, #4
 80053a2:	d11b      	bne.n	80053dc <HAL_I2C_Master_Transmit+0x188>
 80053a4:	68fb      	ldr	r3, [r7, #12]
 80053a6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80053a8:	2b00      	cmp	r3, #0
 80053aa:	d017      	beq.n	80053dc <HAL_I2C_Master_Transmit+0x188>
 80053ac:	68fb      	ldr	r3, [r7, #12]
 80053ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80053b0:	781a      	ldrb	r2, [r3, #0]
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	611a      	str	r2, [r3, #16]
 80053b8:	68fb      	ldr	r3, [r7, #12]
 80053ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80053bc:	1c5a      	adds	r2, r3, #1
 80053be:	68fb      	ldr	r3, [r7, #12]
 80053c0:	625a      	str	r2, [r3, #36]	@ 0x24
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80053c6:	b29b      	uxth	r3, r3
 80053c8:	3b01      	subs	r3, #1
 80053ca:	b29a      	uxth	r2, r3
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80053d4:	3b01      	subs	r3, #1
 80053d6:	b29a      	uxth	r2, r3
 80053d8:	68fb      	ldr	r3, [r7, #12]
 80053da:	851a      	strh	r2, [r3, #40]	@ 0x28
 80053dc:	697a      	ldr	r2, [r7, #20]
 80053de:	6a39      	ldr	r1, [r7, #32]
 80053e0:	68f8      	ldr	r0, [r7, #12]
 80053e2:	f001 f9b7 	bl	8006754 <I2C_WaitOnBTFFlagUntilTimeout>
 80053e6:	4603      	mov	r3, r0
 80053e8:	2b00      	cmp	r3, #0
 80053ea:	d00d      	beq.n	8005408 <HAL_I2C_Master_Transmit+0x1b4>
 80053ec:	68fb      	ldr	r3, [r7, #12]
 80053ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80053f0:	2b04      	cmp	r3, #4
 80053f2:	d107      	bne.n	8005404 <HAL_I2C_Master_Transmit+0x1b0>
 80053f4:	68fb      	ldr	r3, [r7, #12]
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	681a      	ldr	r2, [r3, #0]
 80053fa:	68fb      	ldr	r3, [r7, #12]
 80053fc:	681b      	ldr	r3, [r3, #0]
 80053fe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005402:	601a      	str	r2, [r3, #0]
 8005404:	2301      	movs	r3, #1
 8005406:	e01a      	b.n	800543e <HAL_I2C_Master_Transmit+0x1ea>
 8005408:	68fb      	ldr	r3, [r7, #12]
 800540a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800540c:	2b00      	cmp	r3, #0
 800540e:	d194      	bne.n	800533a <HAL_I2C_Master_Transmit+0xe6>
 8005410:	68fb      	ldr	r3, [r7, #12]
 8005412:	681b      	ldr	r3, [r3, #0]
 8005414:	681a      	ldr	r2, [r3, #0]
 8005416:	68fb      	ldr	r3, [r7, #12]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800541e:	601a      	str	r2, [r3, #0]
 8005420:	68fb      	ldr	r3, [r7, #12]
 8005422:	2220      	movs	r2, #32
 8005424:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005428:	68fb      	ldr	r3, [r7, #12]
 800542a:	2200      	movs	r2, #0
 800542c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005430:	68fb      	ldr	r3, [r7, #12]
 8005432:	2200      	movs	r2, #0
 8005434:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005438:	2300      	movs	r3, #0
 800543a:	e000      	b.n	800543e <HAL_I2C_Master_Transmit+0x1ea>
 800543c:	2302      	movs	r3, #2
 800543e:	4618      	mov	r0, r3
 8005440:	3718      	adds	r7, #24
 8005442:	46bd      	mov	sp, r7
 8005444:	bd80      	pop	{r7, pc}
 8005446:	bf00      	nop
 8005448:	00100002 	.word	0x00100002
 800544c:	ffff0000 	.word	0xffff0000

08005450 <HAL_I2C_Master_Receive>:
 8005450:	b580      	push	{r7, lr}
 8005452:	b08c      	sub	sp, #48	@ 0x30
 8005454:	af02      	add	r7, sp, #8
 8005456:	60f8      	str	r0, [r7, #12]
 8005458:	607a      	str	r2, [r7, #4]
 800545a:	461a      	mov	r2, r3
 800545c:	460b      	mov	r3, r1
 800545e:	817b      	strh	r3, [r7, #10]
 8005460:	4613      	mov	r3, r2
 8005462:	813b      	strh	r3, [r7, #8]
 8005464:	f7ff f960 	bl	8004728 <HAL_GetTick>
 8005468:	6278      	str	r0, [r7, #36]	@ 0x24
 800546a:	68fb      	ldr	r3, [r7, #12]
 800546c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005470:	b2db      	uxtb	r3, r3
 8005472:	2b20      	cmp	r3, #32
 8005474:	f040 8217 	bne.w	80058a6 <HAL_I2C_Master_Receive+0x456>
 8005478:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800547a:	9300      	str	r3, [sp, #0]
 800547c:	2319      	movs	r3, #25
 800547e:	2201      	movs	r2, #1
 8005480:	497c      	ldr	r1, [pc, #496]	@ (8005674 <HAL_I2C_Master_Receive+0x224>)
 8005482:	68f8      	ldr	r0, [r7, #12]
 8005484:	f001 f804 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005488:	4603      	mov	r3, r0
 800548a:	2b00      	cmp	r3, #0
 800548c:	d001      	beq.n	8005492 <HAL_I2C_Master_Receive+0x42>
 800548e:	2302      	movs	r3, #2
 8005490:	e20a      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005498:	2b01      	cmp	r3, #1
 800549a:	d101      	bne.n	80054a0 <HAL_I2C_Master_Receive+0x50>
 800549c:	2302      	movs	r3, #2
 800549e:	e203      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	2201      	movs	r2, #1
 80054a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80054a8:	68fb      	ldr	r3, [r7, #12]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	f003 0301 	and.w	r3, r3, #1
 80054b2:	2b01      	cmp	r3, #1
 80054b4:	d007      	beq.n	80054c6 <HAL_I2C_Master_Receive+0x76>
 80054b6:	68fb      	ldr	r3, [r7, #12]
 80054b8:	681b      	ldr	r3, [r3, #0]
 80054ba:	681a      	ldr	r2, [r3, #0]
 80054bc:	68fb      	ldr	r3, [r7, #12]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	f042 0201 	orr.w	r2, r2, #1
 80054c4:	601a      	str	r2, [r3, #0]
 80054c6:	68fb      	ldr	r3, [r7, #12]
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	681a      	ldr	r2, [r3, #0]
 80054cc:	68fb      	ldr	r3, [r7, #12]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80054d4:	601a      	str	r2, [r3, #0]
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	2222      	movs	r2, #34	@ 0x22
 80054da:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80054de:	68fb      	ldr	r3, [r7, #12]
 80054e0:	2210      	movs	r2, #16
 80054e2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	2200      	movs	r2, #0
 80054ea:	641a      	str	r2, [r3, #64]	@ 0x40
 80054ec:	68fb      	ldr	r3, [r7, #12]
 80054ee:	687a      	ldr	r2, [r7, #4]
 80054f0:	625a      	str	r2, [r3, #36]	@ 0x24
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	893a      	ldrh	r2, [r7, #8]
 80054f6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80054f8:	68fb      	ldr	r3, [r7, #12]
 80054fa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80054fc:	b29a      	uxth	r2, r3
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	4a5c      	ldr	r2, [pc, #368]	@ (8005678 <HAL_I2C_Master_Receive+0x228>)
 8005506:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005508:	8979      	ldrh	r1, [r7, #10]
 800550a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800550c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800550e:	68f8      	ldr	r0, [r7, #12]
 8005510:	f000 fd72 	bl	8005ff8 <I2C_MasterRequestRead>
 8005514:	4603      	mov	r3, r0
 8005516:	2b00      	cmp	r3, #0
 8005518:	d001      	beq.n	800551e <HAL_I2C_Master_Receive+0xce>
 800551a:	2301      	movs	r3, #1
 800551c:	e1c4      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005522:	2b00      	cmp	r3, #0
 8005524:	d113      	bne.n	800554e <HAL_I2C_Master_Receive+0xfe>
 8005526:	2300      	movs	r3, #0
 8005528:	623b      	str	r3, [r7, #32]
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	695b      	ldr	r3, [r3, #20]
 8005530:	623b      	str	r3, [r7, #32]
 8005532:	68fb      	ldr	r3, [r7, #12]
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	699b      	ldr	r3, [r3, #24]
 8005538:	623b      	str	r3, [r7, #32]
 800553a:	6a3b      	ldr	r3, [r7, #32]
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	681a      	ldr	r2, [r3, #0]
 8005542:	68fb      	ldr	r3, [r7, #12]
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800554a:	601a      	str	r2, [r3, #0]
 800554c:	e198      	b.n	8005880 <HAL_I2C_Master_Receive+0x430>
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005552:	2b01      	cmp	r3, #1
 8005554:	d11b      	bne.n	800558e <HAL_I2C_Master_Receive+0x13e>
 8005556:	68fb      	ldr	r3, [r7, #12]
 8005558:	681b      	ldr	r3, [r3, #0]
 800555a:	681a      	ldr	r2, [r3, #0]
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005564:	601a      	str	r2, [r3, #0]
 8005566:	2300      	movs	r3, #0
 8005568:	61fb      	str	r3, [r7, #28]
 800556a:	68fb      	ldr	r3, [r7, #12]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	695b      	ldr	r3, [r3, #20]
 8005570:	61fb      	str	r3, [r7, #28]
 8005572:	68fb      	ldr	r3, [r7, #12]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	699b      	ldr	r3, [r3, #24]
 8005578:	61fb      	str	r3, [r7, #28]
 800557a:	69fb      	ldr	r3, [r7, #28]
 800557c:	68fb      	ldr	r3, [r7, #12]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	681a      	ldr	r2, [r3, #0]
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800558a:	601a      	str	r2, [r3, #0]
 800558c:	e178      	b.n	8005880 <HAL_I2C_Master_Receive+0x430>
 800558e:	68fb      	ldr	r3, [r7, #12]
 8005590:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005592:	2b02      	cmp	r3, #2
 8005594:	d11b      	bne.n	80055ce <HAL_I2C_Master_Receive+0x17e>
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	681a      	ldr	r2, [r3, #0]
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80055a4:	601a      	str	r2, [r3, #0]
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	681a      	ldr	r2, [r3, #0]
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80055b4:	601a      	str	r2, [r3, #0]
 80055b6:	2300      	movs	r3, #0
 80055b8:	61bb      	str	r3, [r7, #24]
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	695b      	ldr	r3, [r3, #20]
 80055c0:	61bb      	str	r3, [r7, #24]
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	699b      	ldr	r3, [r3, #24]
 80055c8:	61bb      	str	r3, [r7, #24]
 80055ca:	69bb      	ldr	r3, [r7, #24]
 80055cc:	e158      	b.n	8005880 <HAL_I2C_Master_Receive+0x430>
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	681b      	ldr	r3, [r3, #0]
 80055d2:	681a      	ldr	r2, [r3, #0]
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	681b      	ldr	r3, [r3, #0]
 80055d8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80055dc:	601a      	str	r2, [r3, #0]
 80055de:	2300      	movs	r3, #0
 80055e0:	617b      	str	r3, [r7, #20]
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	681b      	ldr	r3, [r3, #0]
 80055e6:	695b      	ldr	r3, [r3, #20]
 80055e8:	617b      	str	r3, [r7, #20]
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	699b      	ldr	r3, [r3, #24]
 80055f0:	617b      	str	r3, [r7, #20]
 80055f2:	697b      	ldr	r3, [r7, #20]
 80055f4:	e144      	b.n	8005880 <HAL_I2C_Master_Receive+0x430>
 80055f6:	68fb      	ldr	r3, [r7, #12]
 80055f8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80055fa:	2b03      	cmp	r3, #3
 80055fc:	f200 80f1 	bhi.w	80057e2 <HAL_I2C_Master_Receive+0x392>
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005604:	2b01      	cmp	r3, #1
 8005606:	d123      	bne.n	8005650 <HAL_I2C_Master_Receive+0x200>
 8005608:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800560a:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800560c:	68f8      	ldr	r0, [r7, #12]
 800560e:	f001 f8e9 	bl	80067e4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005612:	4603      	mov	r3, r0
 8005614:	2b00      	cmp	r3, #0
 8005616:	d001      	beq.n	800561c <HAL_I2C_Master_Receive+0x1cc>
 8005618:	2301      	movs	r3, #1
 800561a:	e145      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 800561c:	68fb      	ldr	r3, [r7, #12]
 800561e:	681b      	ldr	r3, [r3, #0]
 8005620:	691a      	ldr	r2, [r3, #16]
 8005622:	68fb      	ldr	r3, [r7, #12]
 8005624:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005626:	b2d2      	uxtb	r2, r2
 8005628:	701a      	strb	r2, [r3, #0]
 800562a:	68fb      	ldr	r3, [r7, #12]
 800562c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800562e:	1c5a      	adds	r2, r3, #1
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	625a      	str	r2, [r3, #36]	@ 0x24
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005638:	3b01      	subs	r3, #1
 800563a:	b29a      	uxth	r2, r3
 800563c:	68fb      	ldr	r3, [r7, #12]
 800563e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005640:	68fb      	ldr	r3, [r7, #12]
 8005642:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005644:	b29b      	uxth	r3, r3
 8005646:	3b01      	subs	r3, #1
 8005648:	b29a      	uxth	r2, r3
 800564a:	68fb      	ldr	r3, [r7, #12]
 800564c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800564e:	e117      	b.n	8005880 <HAL_I2C_Master_Receive+0x430>
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005654:	2b02      	cmp	r3, #2
 8005656:	d14e      	bne.n	80056f6 <HAL_I2C_Master_Receive+0x2a6>
 8005658:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800565a:	9300      	str	r3, [sp, #0]
 800565c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800565e:	2200      	movs	r2, #0
 8005660:	4906      	ldr	r1, [pc, #24]	@ (800567c <HAL_I2C_Master_Receive+0x22c>)
 8005662:	68f8      	ldr	r0, [r7, #12]
 8005664:	f000 ff14 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005668:	4603      	mov	r3, r0
 800566a:	2b00      	cmp	r3, #0
 800566c:	d008      	beq.n	8005680 <HAL_I2C_Master_Receive+0x230>
 800566e:	2301      	movs	r3, #1
 8005670:	e11a      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 8005672:	bf00      	nop
 8005674:	00100002 	.word	0x00100002
 8005678:	ffff0000 	.word	0xffff0000
 800567c:	00010004 	.word	0x00010004
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	681a      	ldr	r2, [r3, #0]
 8005686:	68fb      	ldr	r3, [r7, #12]
 8005688:	681b      	ldr	r3, [r3, #0]
 800568a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800568e:	601a      	str	r2, [r3, #0]
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	691a      	ldr	r2, [r3, #16]
 8005696:	68fb      	ldr	r3, [r7, #12]
 8005698:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800569a:	b2d2      	uxtb	r2, r2
 800569c:	701a      	strb	r2, [r3, #0]
 800569e:	68fb      	ldr	r3, [r7, #12]
 80056a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80056a2:	1c5a      	adds	r2, r3, #1
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	625a      	str	r2, [r3, #36]	@ 0x24
 80056a8:	68fb      	ldr	r3, [r7, #12]
 80056aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80056ac:	3b01      	subs	r3, #1
 80056ae:	b29a      	uxth	r2, r3
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80056b4:	68fb      	ldr	r3, [r7, #12]
 80056b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80056b8:	b29b      	uxth	r3, r3
 80056ba:	3b01      	subs	r3, #1
 80056bc:	b29a      	uxth	r2, r3
 80056be:	68fb      	ldr	r3, [r7, #12]
 80056c0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80056c2:	68fb      	ldr	r3, [r7, #12]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	691a      	ldr	r2, [r3, #16]
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80056cc:	b2d2      	uxtb	r2, r2
 80056ce:	701a      	strb	r2, [r3, #0]
 80056d0:	68fb      	ldr	r3, [r7, #12]
 80056d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80056d4:	1c5a      	adds	r2, r3, #1
 80056d6:	68fb      	ldr	r3, [r7, #12]
 80056d8:	625a      	str	r2, [r3, #36]	@ 0x24
 80056da:	68fb      	ldr	r3, [r7, #12]
 80056dc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80056de:	3b01      	subs	r3, #1
 80056e0:	b29a      	uxth	r2, r3
 80056e2:	68fb      	ldr	r3, [r7, #12]
 80056e4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80056ea:	b29b      	uxth	r3, r3
 80056ec:	3b01      	subs	r3, #1
 80056ee:	b29a      	uxth	r2, r3
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80056f4:	e0c4      	b.n	8005880 <HAL_I2C_Master_Receive+0x430>
 80056f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80056f8:	9300      	str	r3, [sp, #0]
 80056fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80056fc:	2200      	movs	r2, #0
 80056fe:	496c      	ldr	r1, [pc, #432]	@ (80058b0 <HAL_I2C_Master_Receive+0x460>)
 8005700:	68f8      	ldr	r0, [r7, #12]
 8005702:	f000 fec5 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005706:	4603      	mov	r3, r0
 8005708:	2b00      	cmp	r3, #0
 800570a:	d001      	beq.n	8005710 <HAL_I2C_Master_Receive+0x2c0>
 800570c:	2301      	movs	r3, #1
 800570e:	e0cb      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 8005710:	68fb      	ldr	r3, [r7, #12]
 8005712:	681b      	ldr	r3, [r3, #0]
 8005714:	681a      	ldr	r2, [r3, #0]
 8005716:	68fb      	ldr	r3, [r7, #12]
 8005718:	681b      	ldr	r3, [r3, #0]
 800571a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800571e:	601a      	str	r2, [r3, #0]
 8005720:	68fb      	ldr	r3, [r7, #12]
 8005722:	681b      	ldr	r3, [r3, #0]
 8005724:	691a      	ldr	r2, [r3, #16]
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800572a:	b2d2      	uxtb	r2, r2
 800572c:	701a      	strb	r2, [r3, #0]
 800572e:	68fb      	ldr	r3, [r7, #12]
 8005730:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005732:	1c5a      	adds	r2, r3, #1
 8005734:	68fb      	ldr	r3, [r7, #12]
 8005736:	625a      	str	r2, [r3, #36]	@ 0x24
 8005738:	68fb      	ldr	r3, [r7, #12]
 800573a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800573c:	3b01      	subs	r3, #1
 800573e:	b29a      	uxth	r2, r3
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005744:	68fb      	ldr	r3, [r7, #12]
 8005746:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005748:	b29b      	uxth	r3, r3
 800574a:	3b01      	subs	r3, #1
 800574c:	b29a      	uxth	r2, r3
 800574e:	68fb      	ldr	r3, [r7, #12]
 8005750:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005752:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005754:	9300      	str	r3, [sp, #0]
 8005756:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005758:	2200      	movs	r2, #0
 800575a:	4955      	ldr	r1, [pc, #340]	@ (80058b0 <HAL_I2C_Master_Receive+0x460>)
 800575c:	68f8      	ldr	r0, [r7, #12]
 800575e:	f000 fe97 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005762:	4603      	mov	r3, r0
 8005764:	2b00      	cmp	r3, #0
 8005766:	d001      	beq.n	800576c <HAL_I2C_Master_Receive+0x31c>
 8005768:	2301      	movs	r3, #1
 800576a:	e09d      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 800576c:	68fb      	ldr	r3, [r7, #12]
 800576e:	681b      	ldr	r3, [r3, #0]
 8005770:	681a      	ldr	r2, [r3, #0]
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800577a:	601a      	str	r2, [r3, #0]
 800577c:	68fb      	ldr	r3, [r7, #12]
 800577e:	681b      	ldr	r3, [r3, #0]
 8005780:	691a      	ldr	r2, [r3, #16]
 8005782:	68fb      	ldr	r3, [r7, #12]
 8005784:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005786:	b2d2      	uxtb	r2, r2
 8005788:	701a      	strb	r2, [r3, #0]
 800578a:	68fb      	ldr	r3, [r7, #12]
 800578c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800578e:	1c5a      	adds	r2, r3, #1
 8005790:	68fb      	ldr	r3, [r7, #12]
 8005792:	625a      	str	r2, [r3, #36]	@ 0x24
 8005794:	68fb      	ldr	r3, [r7, #12]
 8005796:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005798:	3b01      	subs	r3, #1
 800579a:	b29a      	uxth	r2, r3
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	851a      	strh	r2, [r3, #40]	@ 0x28
 80057a0:	68fb      	ldr	r3, [r7, #12]
 80057a2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80057a4:	b29b      	uxth	r3, r3
 80057a6:	3b01      	subs	r3, #1
 80057a8:	b29a      	uxth	r2, r3
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80057ae:	68fb      	ldr	r3, [r7, #12]
 80057b0:	681b      	ldr	r3, [r3, #0]
 80057b2:	691a      	ldr	r2, [r3, #16]
 80057b4:	68fb      	ldr	r3, [r7, #12]
 80057b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80057b8:	b2d2      	uxtb	r2, r2
 80057ba:	701a      	strb	r2, [r3, #0]
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80057c0:	1c5a      	adds	r2, r3, #1
 80057c2:	68fb      	ldr	r3, [r7, #12]
 80057c4:	625a      	str	r2, [r3, #36]	@ 0x24
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80057ca:	3b01      	subs	r3, #1
 80057cc:	b29a      	uxth	r2, r3
 80057ce:	68fb      	ldr	r3, [r7, #12]
 80057d0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80057d2:	68fb      	ldr	r3, [r7, #12]
 80057d4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80057d6:	b29b      	uxth	r3, r3
 80057d8:	3b01      	subs	r3, #1
 80057da:	b29a      	uxth	r2, r3
 80057dc:	68fb      	ldr	r3, [r7, #12]
 80057de:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80057e0:	e04e      	b.n	8005880 <HAL_I2C_Master_Receive+0x430>
 80057e2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80057e4:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80057e6:	68f8      	ldr	r0, [r7, #12]
 80057e8:	f000 fffc 	bl	80067e4 <I2C_WaitOnRXNEFlagUntilTimeout>
 80057ec:	4603      	mov	r3, r0
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d001      	beq.n	80057f6 <HAL_I2C_Master_Receive+0x3a6>
 80057f2:	2301      	movs	r3, #1
 80057f4:	e058      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	691a      	ldr	r2, [r3, #16]
 80057fc:	68fb      	ldr	r3, [r7, #12]
 80057fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005800:	b2d2      	uxtb	r2, r2
 8005802:	701a      	strb	r2, [r3, #0]
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005808:	1c5a      	adds	r2, r3, #1
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	625a      	str	r2, [r3, #36]	@ 0x24
 800580e:	68fb      	ldr	r3, [r7, #12]
 8005810:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005812:	3b01      	subs	r3, #1
 8005814:	b29a      	uxth	r2, r3
 8005816:	68fb      	ldr	r3, [r7, #12]
 8005818:	851a      	strh	r2, [r3, #40]	@ 0x28
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800581e:	b29b      	uxth	r3, r3
 8005820:	3b01      	subs	r3, #1
 8005822:	b29a      	uxth	r2, r3
 8005824:	68fb      	ldr	r3, [r7, #12]
 8005826:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005828:	68fb      	ldr	r3, [r7, #12]
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	695b      	ldr	r3, [r3, #20]
 800582e:	f003 0304 	and.w	r3, r3, #4
 8005832:	2b04      	cmp	r3, #4
 8005834:	d124      	bne.n	8005880 <HAL_I2C_Master_Receive+0x430>
 8005836:	68fb      	ldr	r3, [r7, #12]
 8005838:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800583a:	2b03      	cmp	r3, #3
 800583c:	d107      	bne.n	800584e <HAL_I2C_Master_Receive+0x3fe>
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	681b      	ldr	r3, [r3, #0]
 8005842:	681a      	ldr	r2, [r3, #0]
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800584c:	601a      	str	r2, [r3, #0]
 800584e:	68fb      	ldr	r3, [r7, #12]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	691a      	ldr	r2, [r3, #16]
 8005854:	68fb      	ldr	r3, [r7, #12]
 8005856:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005858:	b2d2      	uxtb	r2, r2
 800585a:	701a      	strb	r2, [r3, #0]
 800585c:	68fb      	ldr	r3, [r7, #12]
 800585e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005860:	1c5a      	adds	r2, r3, #1
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	625a      	str	r2, [r3, #36]	@ 0x24
 8005866:	68fb      	ldr	r3, [r7, #12]
 8005868:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800586a:	3b01      	subs	r3, #1
 800586c:	b29a      	uxth	r2, r3
 800586e:	68fb      	ldr	r3, [r7, #12]
 8005870:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005872:	68fb      	ldr	r3, [r7, #12]
 8005874:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005876:	b29b      	uxth	r3, r3
 8005878:	3b01      	subs	r3, #1
 800587a:	b29a      	uxth	r2, r3
 800587c:	68fb      	ldr	r3, [r7, #12]
 800587e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005880:	68fb      	ldr	r3, [r7, #12]
 8005882:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005884:	2b00      	cmp	r3, #0
 8005886:	f47f aeb6 	bne.w	80055f6 <HAL_I2C_Master_Receive+0x1a6>
 800588a:	68fb      	ldr	r3, [r7, #12]
 800588c:	2220      	movs	r2, #32
 800588e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005892:	68fb      	ldr	r3, [r7, #12]
 8005894:	2200      	movs	r2, #0
 8005896:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	2200      	movs	r2, #0
 800589e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80058a2:	2300      	movs	r3, #0
 80058a4:	e000      	b.n	80058a8 <HAL_I2C_Master_Receive+0x458>
 80058a6:	2302      	movs	r3, #2
 80058a8:	4618      	mov	r0, r3
 80058aa:	3728      	adds	r7, #40	@ 0x28
 80058ac:	46bd      	mov	sp, r7
 80058ae:	bd80      	pop	{r7, pc}
 80058b0:	00010004 	.word	0x00010004

080058b4 <HAL_I2C_Mem_Write>:
 80058b4:	b580      	push	{r7, lr}
 80058b6:	b088      	sub	sp, #32
 80058b8:	af02      	add	r7, sp, #8
 80058ba:	60f8      	str	r0, [r7, #12]
 80058bc:	4608      	mov	r0, r1
 80058be:	4611      	mov	r1, r2
 80058c0:	461a      	mov	r2, r3
 80058c2:	4603      	mov	r3, r0
 80058c4:	817b      	strh	r3, [r7, #10]
 80058c6:	460b      	mov	r3, r1
 80058c8:	813b      	strh	r3, [r7, #8]
 80058ca:	4613      	mov	r3, r2
 80058cc:	80fb      	strh	r3, [r7, #6]
 80058ce:	f7fe ff2b 	bl	8004728 <HAL_GetTick>
 80058d2:	6178      	str	r0, [r7, #20]
 80058d4:	68fb      	ldr	r3, [r7, #12]
 80058d6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80058da:	b2db      	uxtb	r3, r3
 80058dc:	2b20      	cmp	r3, #32
 80058de:	f040 80d9 	bne.w	8005a94 <HAL_I2C_Mem_Write+0x1e0>
 80058e2:	697b      	ldr	r3, [r7, #20]
 80058e4:	9300      	str	r3, [sp, #0]
 80058e6:	2319      	movs	r3, #25
 80058e8:	2201      	movs	r2, #1
 80058ea:	496d      	ldr	r1, [pc, #436]	@ (8005aa0 <HAL_I2C_Mem_Write+0x1ec>)
 80058ec:	68f8      	ldr	r0, [r7, #12]
 80058ee:	f000 fdcf 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 80058f2:	4603      	mov	r3, r0
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d001      	beq.n	80058fc <HAL_I2C_Mem_Write+0x48>
 80058f8:	2302      	movs	r3, #2
 80058fa:	e0cc      	b.n	8005a96 <HAL_I2C_Mem_Write+0x1e2>
 80058fc:	68fb      	ldr	r3, [r7, #12]
 80058fe:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005902:	2b01      	cmp	r3, #1
 8005904:	d101      	bne.n	800590a <HAL_I2C_Mem_Write+0x56>
 8005906:	2302      	movs	r3, #2
 8005908:	e0c5      	b.n	8005a96 <HAL_I2C_Mem_Write+0x1e2>
 800590a:	68fb      	ldr	r3, [r7, #12]
 800590c:	2201      	movs	r2, #1
 800590e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005912:	68fb      	ldr	r3, [r7, #12]
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	681b      	ldr	r3, [r3, #0]
 8005918:	f003 0301 	and.w	r3, r3, #1
 800591c:	2b01      	cmp	r3, #1
 800591e:	d007      	beq.n	8005930 <HAL_I2C_Mem_Write+0x7c>
 8005920:	68fb      	ldr	r3, [r7, #12]
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	681a      	ldr	r2, [r3, #0]
 8005926:	68fb      	ldr	r3, [r7, #12]
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	f042 0201 	orr.w	r2, r2, #1
 800592e:	601a      	str	r2, [r3, #0]
 8005930:	68fb      	ldr	r3, [r7, #12]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	681a      	ldr	r2, [r3, #0]
 8005936:	68fb      	ldr	r3, [r7, #12]
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800593e:	601a      	str	r2, [r3, #0]
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	2221      	movs	r2, #33	@ 0x21
 8005944:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	2240      	movs	r2, #64	@ 0x40
 800594c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005950:	68fb      	ldr	r3, [r7, #12]
 8005952:	2200      	movs	r2, #0
 8005954:	641a      	str	r2, [r3, #64]	@ 0x40
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	6a3a      	ldr	r2, [r7, #32]
 800595a:	625a      	str	r2, [r3, #36]	@ 0x24
 800595c:	68fb      	ldr	r3, [r7, #12]
 800595e:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8005960:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005962:	68fb      	ldr	r3, [r7, #12]
 8005964:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005966:	b29a      	uxth	r2, r3
 8005968:	68fb      	ldr	r3, [r7, #12]
 800596a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800596c:	68fb      	ldr	r3, [r7, #12]
 800596e:	4a4d      	ldr	r2, [pc, #308]	@ (8005aa4 <HAL_I2C_Mem_Write+0x1f0>)
 8005970:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005972:	88f8      	ldrh	r0, [r7, #6]
 8005974:	893a      	ldrh	r2, [r7, #8]
 8005976:	8979      	ldrh	r1, [r7, #10]
 8005978:	697b      	ldr	r3, [r7, #20]
 800597a:	9301      	str	r3, [sp, #4]
 800597c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800597e:	9300      	str	r3, [sp, #0]
 8005980:	4603      	mov	r3, r0
 8005982:	68f8      	ldr	r0, [r7, #12]
 8005984:	f000 fc06 	bl	8006194 <I2C_RequestMemoryWrite>
 8005988:	4603      	mov	r3, r0
 800598a:	2b00      	cmp	r3, #0
 800598c:	d052      	beq.n	8005a34 <HAL_I2C_Mem_Write+0x180>
 800598e:	2301      	movs	r3, #1
 8005990:	e081      	b.n	8005a96 <HAL_I2C_Mem_Write+0x1e2>
 8005992:	697a      	ldr	r2, [r7, #20]
 8005994:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005996:	68f8      	ldr	r0, [r7, #12]
 8005998:	f000 fe94 	bl	80066c4 <I2C_WaitOnTXEFlagUntilTimeout>
 800599c:	4603      	mov	r3, r0
 800599e:	2b00      	cmp	r3, #0
 80059a0:	d00d      	beq.n	80059be <HAL_I2C_Mem_Write+0x10a>
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80059a6:	2b04      	cmp	r3, #4
 80059a8:	d107      	bne.n	80059ba <HAL_I2C_Mem_Write+0x106>
 80059aa:	68fb      	ldr	r3, [r7, #12]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	681a      	ldr	r2, [r3, #0]
 80059b0:	68fb      	ldr	r3, [r7, #12]
 80059b2:	681b      	ldr	r3, [r3, #0]
 80059b4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80059b8:	601a      	str	r2, [r3, #0]
 80059ba:	2301      	movs	r3, #1
 80059bc:	e06b      	b.n	8005a96 <HAL_I2C_Mem_Write+0x1e2>
 80059be:	68fb      	ldr	r3, [r7, #12]
 80059c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80059c2:	781a      	ldrb	r2, [r3, #0]
 80059c4:	68fb      	ldr	r3, [r7, #12]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	611a      	str	r2, [r3, #16]
 80059ca:	68fb      	ldr	r3, [r7, #12]
 80059cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80059ce:	1c5a      	adds	r2, r3, #1
 80059d0:	68fb      	ldr	r3, [r7, #12]
 80059d2:	625a      	str	r2, [r3, #36]	@ 0x24
 80059d4:	68fb      	ldr	r3, [r7, #12]
 80059d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80059d8:	3b01      	subs	r3, #1
 80059da:	b29a      	uxth	r2, r3
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	851a      	strh	r2, [r3, #40]	@ 0x28
 80059e0:	68fb      	ldr	r3, [r7, #12]
 80059e2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80059e4:	b29b      	uxth	r3, r3
 80059e6:	3b01      	subs	r3, #1
 80059e8:	b29a      	uxth	r2, r3
 80059ea:	68fb      	ldr	r3, [r7, #12]
 80059ec:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80059ee:	68fb      	ldr	r3, [r7, #12]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	695b      	ldr	r3, [r3, #20]
 80059f4:	f003 0304 	and.w	r3, r3, #4
 80059f8:	2b04      	cmp	r3, #4
 80059fa:	d11b      	bne.n	8005a34 <HAL_I2C_Mem_Write+0x180>
 80059fc:	68fb      	ldr	r3, [r7, #12]
 80059fe:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005a00:	2b00      	cmp	r3, #0
 8005a02:	d017      	beq.n	8005a34 <HAL_I2C_Mem_Write+0x180>
 8005a04:	68fb      	ldr	r3, [r7, #12]
 8005a06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005a08:	781a      	ldrb	r2, [r3, #0]
 8005a0a:	68fb      	ldr	r3, [r7, #12]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	611a      	str	r2, [r3, #16]
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005a14:	1c5a      	adds	r2, r3, #1
 8005a16:	68fb      	ldr	r3, [r7, #12]
 8005a18:	625a      	str	r2, [r3, #36]	@ 0x24
 8005a1a:	68fb      	ldr	r3, [r7, #12]
 8005a1c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005a1e:	3b01      	subs	r3, #1
 8005a20:	b29a      	uxth	r2, r3
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005a26:	68fb      	ldr	r3, [r7, #12]
 8005a28:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005a2a:	b29b      	uxth	r3, r3
 8005a2c:	3b01      	subs	r3, #1
 8005a2e:	b29a      	uxth	r2, r3
 8005a30:	68fb      	ldr	r3, [r7, #12]
 8005a32:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005a34:	68fb      	ldr	r3, [r7, #12]
 8005a36:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005a38:	2b00      	cmp	r3, #0
 8005a3a:	d1aa      	bne.n	8005992 <HAL_I2C_Mem_Write+0xde>
 8005a3c:	697a      	ldr	r2, [r7, #20]
 8005a3e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005a40:	68f8      	ldr	r0, [r7, #12]
 8005a42:	f000 fe87 	bl	8006754 <I2C_WaitOnBTFFlagUntilTimeout>
 8005a46:	4603      	mov	r3, r0
 8005a48:	2b00      	cmp	r3, #0
 8005a4a:	d00d      	beq.n	8005a68 <HAL_I2C_Mem_Write+0x1b4>
 8005a4c:	68fb      	ldr	r3, [r7, #12]
 8005a4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a50:	2b04      	cmp	r3, #4
 8005a52:	d107      	bne.n	8005a64 <HAL_I2C_Mem_Write+0x1b0>
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	681b      	ldr	r3, [r3, #0]
 8005a58:	681a      	ldr	r2, [r3, #0]
 8005a5a:	68fb      	ldr	r3, [r7, #12]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005a62:	601a      	str	r2, [r3, #0]
 8005a64:	2301      	movs	r3, #1
 8005a66:	e016      	b.n	8005a96 <HAL_I2C_Mem_Write+0x1e2>
 8005a68:	68fb      	ldr	r3, [r7, #12]
 8005a6a:	681b      	ldr	r3, [r3, #0]
 8005a6c:	681a      	ldr	r2, [r3, #0]
 8005a6e:	68fb      	ldr	r3, [r7, #12]
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005a76:	601a      	str	r2, [r3, #0]
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	2220      	movs	r2, #32
 8005a7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005a80:	68fb      	ldr	r3, [r7, #12]
 8005a82:	2200      	movs	r2, #0
 8005a84:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005a88:	68fb      	ldr	r3, [r7, #12]
 8005a8a:	2200      	movs	r2, #0
 8005a8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005a90:	2300      	movs	r3, #0
 8005a92:	e000      	b.n	8005a96 <HAL_I2C_Mem_Write+0x1e2>
 8005a94:	2302      	movs	r3, #2
 8005a96:	4618      	mov	r0, r3
 8005a98:	3718      	adds	r7, #24
 8005a9a:	46bd      	mov	sp, r7
 8005a9c:	bd80      	pop	{r7, pc}
 8005a9e:	bf00      	nop
 8005aa0:	00100002 	.word	0x00100002
 8005aa4:	ffff0000 	.word	0xffff0000

08005aa8 <HAL_I2C_Mem_Read>:
 8005aa8:	b580      	push	{r7, lr}
 8005aaa:	b08c      	sub	sp, #48	@ 0x30
 8005aac:	af02      	add	r7, sp, #8
 8005aae:	60f8      	str	r0, [r7, #12]
 8005ab0:	4608      	mov	r0, r1
 8005ab2:	4611      	mov	r1, r2
 8005ab4:	461a      	mov	r2, r3
 8005ab6:	4603      	mov	r3, r0
 8005ab8:	817b      	strh	r3, [r7, #10]
 8005aba:	460b      	mov	r3, r1
 8005abc:	813b      	strh	r3, [r7, #8]
 8005abe:	4613      	mov	r3, r2
 8005ac0:	80fb      	strh	r3, [r7, #6]
 8005ac2:	f7fe fe31 	bl	8004728 <HAL_GetTick>
 8005ac6:	6278      	str	r0, [r7, #36]	@ 0x24
 8005ac8:	68fb      	ldr	r3, [r7, #12]
 8005aca:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005ace:	b2db      	uxtb	r3, r3
 8005ad0:	2b20      	cmp	r3, #32
 8005ad2:	f040 8208 	bne.w	8005ee6 <HAL_I2C_Mem_Read+0x43e>
 8005ad6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005ad8:	9300      	str	r3, [sp, #0]
 8005ada:	2319      	movs	r3, #25
 8005adc:	2201      	movs	r2, #1
 8005ade:	497b      	ldr	r1, [pc, #492]	@ (8005ccc <HAL_I2C_Mem_Read+0x224>)
 8005ae0:	68f8      	ldr	r0, [r7, #12]
 8005ae2:	f000 fcd5 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005ae6:	4603      	mov	r3, r0
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	d001      	beq.n	8005af0 <HAL_I2C_Mem_Read+0x48>
 8005aec:	2302      	movs	r3, #2
 8005aee:	e1fb      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005af6:	2b01      	cmp	r3, #1
 8005af8:	d101      	bne.n	8005afe <HAL_I2C_Mem_Read+0x56>
 8005afa:	2302      	movs	r3, #2
 8005afc:	e1f4      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005afe:	68fb      	ldr	r3, [r7, #12]
 8005b00:	2201      	movs	r2, #1
 8005b02:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005b06:	68fb      	ldr	r3, [r7, #12]
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	681b      	ldr	r3, [r3, #0]
 8005b0c:	f003 0301 	and.w	r3, r3, #1
 8005b10:	2b01      	cmp	r3, #1
 8005b12:	d007      	beq.n	8005b24 <HAL_I2C_Mem_Read+0x7c>
 8005b14:	68fb      	ldr	r3, [r7, #12]
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	681a      	ldr	r2, [r3, #0]
 8005b1a:	68fb      	ldr	r3, [r7, #12]
 8005b1c:	681b      	ldr	r3, [r3, #0]
 8005b1e:	f042 0201 	orr.w	r2, r2, #1
 8005b22:	601a      	str	r2, [r3, #0]
 8005b24:	68fb      	ldr	r3, [r7, #12]
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	681a      	ldr	r2, [r3, #0]
 8005b2a:	68fb      	ldr	r3, [r7, #12]
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005b32:	601a      	str	r2, [r3, #0]
 8005b34:	68fb      	ldr	r3, [r7, #12]
 8005b36:	2222      	movs	r2, #34	@ 0x22
 8005b38:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005b3c:	68fb      	ldr	r3, [r7, #12]
 8005b3e:	2240      	movs	r2, #64	@ 0x40
 8005b40:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005b44:	68fb      	ldr	r3, [r7, #12]
 8005b46:	2200      	movs	r2, #0
 8005b48:	641a      	str	r2, [r3, #64]	@ 0x40
 8005b4a:	68fb      	ldr	r3, [r7, #12]
 8005b4c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005b4e:	625a      	str	r2, [r3, #36]	@ 0x24
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8005b54:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005b56:	68fb      	ldr	r3, [r7, #12]
 8005b58:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005b5a:	b29a      	uxth	r2, r3
 8005b5c:	68fb      	ldr	r3, [r7, #12]
 8005b5e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	4a5b      	ldr	r2, [pc, #364]	@ (8005cd0 <HAL_I2C_Mem_Read+0x228>)
 8005b64:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005b66:	88f8      	ldrh	r0, [r7, #6]
 8005b68:	893a      	ldrh	r2, [r7, #8]
 8005b6a:	8979      	ldrh	r1, [r7, #10]
 8005b6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005b6e:	9301      	str	r3, [sp, #4]
 8005b70:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005b72:	9300      	str	r3, [sp, #0]
 8005b74:	4603      	mov	r3, r0
 8005b76:	68f8      	ldr	r0, [r7, #12]
 8005b78:	f000 fba2 	bl	80062c0 <I2C_RequestMemoryRead>
 8005b7c:	4603      	mov	r3, r0
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d001      	beq.n	8005b86 <HAL_I2C_Mem_Read+0xde>
 8005b82:	2301      	movs	r3, #1
 8005b84:	e1b0      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	d113      	bne.n	8005bb6 <HAL_I2C_Mem_Read+0x10e>
 8005b8e:	2300      	movs	r3, #0
 8005b90:	623b      	str	r3, [r7, #32]
 8005b92:	68fb      	ldr	r3, [r7, #12]
 8005b94:	681b      	ldr	r3, [r3, #0]
 8005b96:	695b      	ldr	r3, [r3, #20]
 8005b98:	623b      	str	r3, [r7, #32]
 8005b9a:	68fb      	ldr	r3, [r7, #12]
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	699b      	ldr	r3, [r3, #24]
 8005ba0:	623b      	str	r3, [r7, #32]
 8005ba2:	6a3b      	ldr	r3, [r7, #32]
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	681a      	ldr	r2, [r3, #0]
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005bb2:	601a      	str	r2, [r3, #0]
 8005bb4:	e184      	b.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005bb6:	68fb      	ldr	r3, [r7, #12]
 8005bb8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005bba:	2b01      	cmp	r3, #1
 8005bbc:	d11b      	bne.n	8005bf6 <HAL_I2C_Mem_Read+0x14e>
 8005bbe:	68fb      	ldr	r3, [r7, #12]
 8005bc0:	681b      	ldr	r3, [r3, #0]
 8005bc2:	681a      	ldr	r2, [r3, #0]
 8005bc4:	68fb      	ldr	r3, [r7, #12]
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005bcc:	601a      	str	r2, [r3, #0]
 8005bce:	2300      	movs	r3, #0
 8005bd0:	61fb      	str	r3, [r7, #28]
 8005bd2:	68fb      	ldr	r3, [r7, #12]
 8005bd4:	681b      	ldr	r3, [r3, #0]
 8005bd6:	695b      	ldr	r3, [r3, #20]
 8005bd8:	61fb      	str	r3, [r7, #28]
 8005bda:	68fb      	ldr	r3, [r7, #12]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	699b      	ldr	r3, [r3, #24]
 8005be0:	61fb      	str	r3, [r7, #28]
 8005be2:	69fb      	ldr	r3, [r7, #28]
 8005be4:	68fb      	ldr	r3, [r7, #12]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	681a      	ldr	r2, [r3, #0]
 8005bea:	68fb      	ldr	r3, [r7, #12]
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005bf2:	601a      	str	r2, [r3, #0]
 8005bf4:	e164      	b.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005bfa:	2b02      	cmp	r3, #2
 8005bfc:	d11b      	bne.n	8005c36 <HAL_I2C_Mem_Read+0x18e>
 8005bfe:	68fb      	ldr	r3, [r7, #12]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	681a      	ldr	r2, [r3, #0]
 8005c04:	68fb      	ldr	r3, [r7, #12]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005c0c:	601a      	str	r2, [r3, #0]
 8005c0e:	68fb      	ldr	r3, [r7, #12]
 8005c10:	681b      	ldr	r3, [r3, #0]
 8005c12:	681a      	ldr	r2, [r3, #0]
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	681b      	ldr	r3, [r3, #0]
 8005c18:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005c1c:	601a      	str	r2, [r3, #0]
 8005c1e:	2300      	movs	r3, #0
 8005c20:	61bb      	str	r3, [r7, #24]
 8005c22:	68fb      	ldr	r3, [r7, #12]
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	695b      	ldr	r3, [r3, #20]
 8005c28:	61bb      	str	r3, [r7, #24]
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	681b      	ldr	r3, [r3, #0]
 8005c2e:	699b      	ldr	r3, [r3, #24]
 8005c30:	61bb      	str	r3, [r7, #24]
 8005c32:	69bb      	ldr	r3, [r7, #24]
 8005c34:	e144      	b.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005c36:	2300      	movs	r3, #0
 8005c38:	617b      	str	r3, [r7, #20]
 8005c3a:	68fb      	ldr	r3, [r7, #12]
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	695b      	ldr	r3, [r3, #20]
 8005c40:	617b      	str	r3, [r7, #20]
 8005c42:	68fb      	ldr	r3, [r7, #12]
 8005c44:	681b      	ldr	r3, [r3, #0]
 8005c46:	699b      	ldr	r3, [r3, #24]
 8005c48:	617b      	str	r3, [r7, #20]
 8005c4a:	697b      	ldr	r3, [r7, #20]
 8005c4c:	e138      	b.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005c4e:	68fb      	ldr	r3, [r7, #12]
 8005c50:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005c52:	2b03      	cmp	r3, #3
 8005c54:	f200 80f1 	bhi.w	8005e3a <HAL_I2C_Mem_Read+0x392>
 8005c58:	68fb      	ldr	r3, [r7, #12]
 8005c5a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005c5c:	2b01      	cmp	r3, #1
 8005c5e:	d123      	bne.n	8005ca8 <HAL_I2C_Mem_Read+0x200>
 8005c60:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005c62:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8005c64:	68f8      	ldr	r0, [r7, #12]
 8005c66:	f000 fdbd 	bl	80067e4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005c6a:	4603      	mov	r3, r0
 8005c6c:	2b00      	cmp	r3, #0
 8005c6e:	d001      	beq.n	8005c74 <HAL_I2C_Mem_Read+0x1cc>
 8005c70:	2301      	movs	r3, #1
 8005c72:	e139      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	691a      	ldr	r2, [r3, #16]
 8005c7a:	68fb      	ldr	r3, [r7, #12]
 8005c7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005c7e:	b2d2      	uxtb	r2, r2
 8005c80:	701a      	strb	r2, [r3, #0]
 8005c82:	68fb      	ldr	r3, [r7, #12]
 8005c84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005c86:	1c5a      	adds	r2, r3, #1
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	625a      	str	r2, [r3, #36]	@ 0x24
 8005c8c:	68fb      	ldr	r3, [r7, #12]
 8005c8e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005c90:	3b01      	subs	r3, #1
 8005c92:	b29a      	uxth	r2, r3
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005c98:	68fb      	ldr	r3, [r7, #12]
 8005c9a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005c9c:	b29b      	uxth	r3, r3
 8005c9e:	3b01      	subs	r3, #1
 8005ca0:	b29a      	uxth	r2, r3
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005ca6:	e10b      	b.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005cac:	2b02      	cmp	r3, #2
 8005cae:	d14e      	bne.n	8005d4e <HAL_I2C_Mem_Read+0x2a6>
 8005cb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005cb2:	9300      	str	r3, [sp, #0]
 8005cb4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005cb6:	2200      	movs	r2, #0
 8005cb8:	4906      	ldr	r1, [pc, #24]	@ (8005cd4 <HAL_I2C_Mem_Read+0x22c>)
 8005cba:	68f8      	ldr	r0, [r7, #12]
 8005cbc:	f000 fbe8 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005cc0:	4603      	mov	r3, r0
 8005cc2:	2b00      	cmp	r3, #0
 8005cc4:	d008      	beq.n	8005cd8 <HAL_I2C_Mem_Read+0x230>
 8005cc6:	2301      	movs	r3, #1
 8005cc8:	e10e      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005cca:	bf00      	nop
 8005ccc:	00100002 	.word	0x00100002
 8005cd0:	ffff0000 	.word	0xffff0000
 8005cd4:	00010004 	.word	0x00010004
 8005cd8:	68fb      	ldr	r3, [r7, #12]
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	681a      	ldr	r2, [r3, #0]
 8005cde:	68fb      	ldr	r3, [r7, #12]
 8005ce0:	681b      	ldr	r3, [r3, #0]
 8005ce2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005ce6:	601a      	str	r2, [r3, #0]
 8005ce8:	68fb      	ldr	r3, [r7, #12]
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	691a      	ldr	r2, [r3, #16]
 8005cee:	68fb      	ldr	r3, [r7, #12]
 8005cf0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005cf2:	b2d2      	uxtb	r2, r2
 8005cf4:	701a      	strb	r2, [r3, #0]
 8005cf6:	68fb      	ldr	r3, [r7, #12]
 8005cf8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005cfa:	1c5a      	adds	r2, r3, #1
 8005cfc:	68fb      	ldr	r3, [r7, #12]
 8005cfe:	625a      	str	r2, [r3, #36]	@ 0x24
 8005d00:	68fb      	ldr	r3, [r7, #12]
 8005d02:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005d04:	3b01      	subs	r3, #1
 8005d06:	b29a      	uxth	r2, r3
 8005d08:	68fb      	ldr	r3, [r7, #12]
 8005d0a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005d0c:	68fb      	ldr	r3, [r7, #12]
 8005d0e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005d10:	b29b      	uxth	r3, r3
 8005d12:	3b01      	subs	r3, #1
 8005d14:	b29a      	uxth	r2, r3
 8005d16:	68fb      	ldr	r3, [r7, #12]
 8005d18:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	681b      	ldr	r3, [r3, #0]
 8005d1e:	691a      	ldr	r2, [r3, #16]
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005d24:	b2d2      	uxtb	r2, r2
 8005d26:	701a      	strb	r2, [r3, #0]
 8005d28:	68fb      	ldr	r3, [r7, #12]
 8005d2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005d2c:	1c5a      	adds	r2, r3, #1
 8005d2e:	68fb      	ldr	r3, [r7, #12]
 8005d30:	625a      	str	r2, [r3, #36]	@ 0x24
 8005d32:	68fb      	ldr	r3, [r7, #12]
 8005d34:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005d36:	3b01      	subs	r3, #1
 8005d38:	b29a      	uxth	r2, r3
 8005d3a:	68fb      	ldr	r3, [r7, #12]
 8005d3c:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005d42:	b29b      	uxth	r3, r3
 8005d44:	3b01      	subs	r3, #1
 8005d46:	b29a      	uxth	r2, r3
 8005d48:	68fb      	ldr	r3, [r7, #12]
 8005d4a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005d4c:	e0b8      	b.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005d4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005d50:	9300      	str	r3, [sp, #0]
 8005d52:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005d54:	2200      	movs	r2, #0
 8005d56:	4966      	ldr	r1, [pc, #408]	@ (8005ef0 <HAL_I2C_Mem_Read+0x448>)
 8005d58:	68f8      	ldr	r0, [r7, #12]
 8005d5a:	f000 fb99 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005d5e:	4603      	mov	r3, r0
 8005d60:	2b00      	cmp	r3, #0
 8005d62:	d001      	beq.n	8005d68 <HAL_I2C_Mem_Read+0x2c0>
 8005d64:	2301      	movs	r3, #1
 8005d66:	e0bf      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005d68:	68fb      	ldr	r3, [r7, #12]
 8005d6a:	681b      	ldr	r3, [r3, #0]
 8005d6c:	681a      	ldr	r2, [r3, #0]
 8005d6e:	68fb      	ldr	r3, [r7, #12]
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005d76:	601a      	str	r2, [r3, #0]
 8005d78:	68fb      	ldr	r3, [r7, #12]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	691a      	ldr	r2, [r3, #16]
 8005d7e:	68fb      	ldr	r3, [r7, #12]
 8005d80:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005d82:	b2d2      	uxtb	r2, r2
 8005d84:	701a      	strb	r2, [r3, #0]
 8005d86:	68fb      	ldr	r3, [r7, #12]
 8005d88:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005d8a:	1c5a      	adds	r2, r3, #1
 8005d8c:	68fb      	ldr	r3, [r7, #12]
 8005d8e:	625a      	str	r2, [r3, #36]	@ 0x24
 8005d90:	68fb      	ldr	r3, [r7, #12]
 8005d92:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005d94:	3b01      	subs	r3, #1
 8005d96:	b29a      	uxth	r2, r3
 8005d98:	68fb      	ldr	r3, [r7, #12]
 8005d9a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005d9c:	68fb      	ldr	r3, [r7, #12]
 8005d9e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005da0:	b29b      	uxth	r3, r3
 8005da2:	3b01      	subs	r3, #1
 8005da4:	b29a      	uxth	r2, r3
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005daa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005dac:	9300      	str	r3, [sp, #0]
 8005dae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005db0:	2200      	movs	r2, #0
 8005db2:	494f      	ldr	r1, [pc, #316]	@ (8005ef0 <HAL_I2C_Mem_Read+0x448>)
 8005db4:	68f8      	ldr	r0, [r7, #12]
 8005db6:	f000 fb6b 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005dba:	4603      	mov	r3, r0
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d001      	beq.n	8005dc4 <HAL_I2C_Mem_Read+0x31c>
 8005dc0:	2301      	movs	r3, #1
 8005dc2:	e091      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	681a      	ldr	r2, [r3, #0]
 8005dca:	68fb      	ldr	r3, [r7, #12]
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005dd2:	601a      	str	r2, [r3, #0]
 8005dd4:	68fb      	ldr	r3, [r7, #12]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	691a      	ldr	r2, [r3, #16]
 8005dda:	68fb      	ldr	r3, [r7, #12]
 8005ddc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005dde:	b2d2      	uxtb	r2, r2
 8005de0:	701a      	strb	r2, [r3, #0]
 8005de2:	68fb      	ldr	r3, [r7, #12]
 8005de4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005de6:	1c5a      	adds	r2, r3, #1
 8005de8:	68fb      	ldr	r3, [r7, #12]
 8005dea:	625a      	str	r2, [r3, #36]	@ 0x24
 8005dec:	68fb      	ldr	r3, [r7, #12]
 8005dee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005df0:	3b01      	subs	r3, #1
 8005df2:	b29a      	uxth	r2, r3
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005df8:	68fb      	ldr	r3, [r7, #12]
 8005dfa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005dfc:	b29b      	uxth	r3, r3
 8005dfe:	3b01      	subs	r3, #1
 8005e00:	b29a      	uxth	r2, r3
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005e06:	68fb      	ldr	r3, [r7, #12]
 8005e08:	681b      	ldr	r3, [r3, #0]
 8005e0a:	691a      	ldr	r2, [r3, #16]
 8005e0c:	68fb      	ldr	r3, [r7, #12]
 8005e0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e10:	b2d2      	uxtb	r2, r2
 8005e12:	701a      	strb	r2, [r3, #0]
 8005e14:	68fb      	ldr	r3, [r7, #12]
 8005e16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e18:	1c5a      	adds	r2, r3, #1
 8005e1a:	68fb      	ldr	r3, [r7, #12]
 8005e1c:	625a      	str	r2, [r3, #36]	@ 0x24
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005e22:	3b01      	subs	r3, #1
 8005e24:	b29a      	uxth	r2, r3
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005e2a:	68fb      	ldr	r3, [r7, #12]
 8005e2c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005e2e:	b29b      	uxth	r3, r3
 8005e30:	3b01      	subs	r3, #1
 8005e32:	b29a      	uxth	r2, r3
 8005e34:	68fb      	ldr	r3, [r7, #12]
 8005e36:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005e38:	e042      	b.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005e3a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005e3c:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8005e3e:	68f8      	ldr	r0, [r7, #12]
 8005e40:	f000 fcd0 	bl	80067e4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005e44:	4603      	mov	r3, r0
 8005e46:	2b00      	cmp	r3, #0
 8005e48:	d001      	beq.n	8005e4e <HAL_I2C_Mem_Read+0x3a6>
 8005e4a:	2301      	movs	r3, #1
 8005e4c:	e04c      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	691a      	ldr	r2, [r3, #16]
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e58:	b2d2      	uxtb	r2, r2
 8005e5a:	701a      	strb	r2, [r3, #0]
 8005e5c:	68fb      	ldr	r3, [r7, #12]
 8005e5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e60:	1c5a      	adds	r2, r3, #1
 8005e62:	68fb      	ldr	r3, [r7, #12]
 8005e64:	625a      	str	r2, [r3, #36]	@ 0x24
 8005e66:	68fb      	ldr	r3, [r7, #12]
 8005e68:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005e6a:	3b01      	subs	r3, #1
 8005e6c:	b29a      	uxth	r2, r3
 8005e6e:	68fb      	ldr	r3, [r7, #12]
 8005e70:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005e72:	68fb      	ldr	r3, [r7, #12]
 8005e74:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005e76:	b29b      	uxth	r3, r3
 8005e78:	3b01      	subs	r3, #1
 8005e7a:	b29a      	uxth	r2, r3
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	681b      	ldr	r3, [r3, #0]
 8005e84:	695b      	ldr	r3, [r3, #20]
 8005e86:	f003 0304 	and.w	r3, r3, #4
 8005e8a:	2b04      	cmp	r3, #4
 8005e8c:	d118      	bne.n	8005ec0 <HAL_I2C_Mem_Read+0x418>
 8005e8e:	68fb      	ldr	r3, [r7, #12]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	691a      	ldr	r2, [r3, #16]
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e98:	b2d2      	uxtb	r2, r2
 8005e9a:	701a      	strb	r2, [r3, #0]
 8005e9c:	68fb      	ldr	r3, [r7, #12]
 8005e9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005ea0:	1c5a      	adds	r2, r3, #1
 8005ea2:	68fb      	ldr	r3, [r7, #12]
 8005ea4:	625a      	str	r2, [r3, #36]	@ 0x24
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005eaa:	3b01      	subs	r3, #1
 8005eac:	b29a      	uxth	r2, r3
 8005eae:	68fb      	ldr	r3, [r7, #12]
 8005eb0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005eb6:	b29b      	uxth	r3, r3
 8005eb8:	3b01      	subs	r3, #1
 8005eba:	b29a      	uxth	r2, r3
 8005ebc:	68fb      	ldr	r3, [r7, #12]
 8005ebe:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005ec4:	2b00      	cmp	r3, #0
 8005ec6:	f47f aec2 	bne.w	8005c4e <HAL_I2C_Mem_Read+0x1a6>
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	2220      	movs	r2, #32
 8005ece:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ed2:	68fb      	ldr	r3, [r7, #12]
 8005ed4:	2200      	movs	r2, #0
 8005ed6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005eda:	68fb      	ldr	r3, [r7, #12]
 8005edc:	2200      	movs	r2, #0
 8005ede:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005ee2:	2300      	movs	r3, #0
 8005ee4:	e000      	b.n	8005ee8 <HAL_I2C_Mem_Read+0x440>
 8005ee6:	2302      	movs	r3, #2
 8005ee8:	4618      	mov	r0, r3
 8005eea:	3728      	adds	r7, #40	@ 0x28
 8005eec:	46bd      	mov	sp, r7
 8005eee:	bd80      	pop	{r7, pc}
 8005ef0:	00010004 	.word	0x00010004

08005ef4 <I2C_MasterRequestWrite>:
 8005ef4:	b580      	push	{r7, lr}
 8005ef6:	b088      	sub	sp, #32
 8005ef8:	af02      	add	r7, sp, #8
 8005efa:	60f8      	str	r0, [r7, #12]
 8005efc:	607a      	str	r2, [r7, #4]
 8005efe:	603b      	str	r3, [r7, #0]
 8005f00:	460b      	mov	r3, r1
 8005f02:	817b      	strh	r3, [r7, #10]
 8005f04:	68fb      	ldr	r3, [r7, #12]
 8005f06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005f08:	617b      	str	r3, [r7, #20]
 8005f0a:	697b      	ldr	r3, [r7, #20]
 8005f0c:	2b08      	cmp	r3, #8
 8005f0e:	d006      	beq.n	8005f1e <I2C_MasterRequestWrite+0x2a>
 8005f10:	697b      	ldr	r3, [r7, #20]
 8005f12:	2b01      	cmp	r3, #1
 8005f14:	d003      	beq.n	8005f1e <I2C_MasterRequestWrite+0x2a>
 8005f16:	697b      	ldr	r3, [r7, #20]
 8005f18:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8005f1c:	d108      	bne.n	8005f30 <I2C_MasterRequestWrite+0x3c>
 8005f1e:	68fb      	ldr	r3, [r7, #12]
 8005f20:	681b      	ldr	r3, [r3, #0]
 8005f22:	681a      	ldr	r2, [r3, #0]
 8005f24:	68fb      	ldr	r3, [r7, #12]
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005f2c:	601a      	str	r2, [r3, #0]
 8005f2e:	e00b      	b.n	8005f48 <I2C_MasterRequestWrite+0x54>
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f34:	2b12      	cmp	r3, #18
 8005f36:	d107      	bne.n	8005f48 <I2C_MasterRequestWrite+0x54>
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	681a      	ldr	r2, [r3, #0]
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005f46:	601a      	str	r2, [r3, #0]
 8005f48:	683b      	ldr	r3, [r7, #0]
 8005f4a:	9300      	str	r3, [sp, #0]
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	2200      	movs	r2, #0
 8005f50:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8005f54:	68f8      	ldr	r0, [r7, #12]
 8005f56:	f000 fa9b 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8005f5a:	4603      	mov	r3, r0
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	d00d      	beq.n	8005f7c <I2C_MasterRequestWrite+0x88>
 8005f60:	68fb      	ldr	r3, [r7, #12]
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005f6a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005f6e:	d103      	bne.n	8005f78 <I2C_MasterRequestWrite+0x84>
 8005f70:	68fb      	ldr	r3, [r7, #12]
 8005f72:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005f76:	641a      	str	r2, [r3, #64]	@ 0x40
 8005f78:	2303      	movs	r3, #3
 8005f7a:	e035      	b.n	8005fe8 <I2C_MasterRequestWrite+0xf4>
 8005f7c:	68fb      	ldr	r3, [r7, #12]
 8005f7e:	691b      	ldr	r3, [r3, #16]
 8005f80:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005f84:	d108      	bne.n	8005f98 <I2C_MasterRequestWrite+0xa4>
 8005f86:	897b      	ldrh	r3, [r7, #10]
 8005f88:	b2db      	uxtb	r3, r3
 8005f8a:	461a      	mov	r2, r3
 8005f8c:	68fb      	ldr	r3, [r7, #12]
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8005f94:	611a      	str	r2, [r3, #16]
 8005f96:	e01b      	b.n	8005fd0 <I2C_MasterRequestWrite+0xdc>
 8005f98:	897b      	ldrh	r3, [r7, #10]
 8005f9a:	11db      	asrs	r3, r3, #7
 8005f9c:	b2db      	uxtb	r3, r3
 8005f9e:	f003 0306 	and.w	r3, r3, #6
 8005fa2:	b2db      	uxtb	r3, r3
 8005fa4:	f063 030f 	orn	r3, r3, #15
 8005fa8:	b2da      	uxtb	r2, r3
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	611a      	str	r2, [r3, #16]
 8005fb0:	683b      	ldr	r3, [r7, #0]
 8005fb2:	687a      	ldr	r2, [r7, #4]
 8005fb4:	490e      	ldr	r1, [pc, #56]	@ (8005ff0 <I2C_MasterRequestWrite+0xfc>)
 8005fb6:	68f8      	ldr	r0, [r7, #12]
 8005fb8:	f000 fae4 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005fbc:	4603      	mov	r3, r0
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d001      	beq.n	8005fc6 <I2C_MasterRequestWrite+0xd2>
 8005fc2:	2301      	movs	r3, #1
 8005fc4:	e010      	b.n	8005fe8 <I2C_MasterRequestWrite+0xf4>
 8005fc6:	897b      	ldrh	r3, [r7, #10]
 8005fc8:	b2da      	uxtb	r2, r3
 8005fca:	68fb      	ldr	r3, [r7, #12]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	611a      	str	r2, [r3, #16]
 8005fd0:	683b      	ldr	r3, [r7, #0]
 8005fd2:	687a      	ldr	r2, [r7, #4]
 8005fd4:	4907      	ldr	r1, [pc, #28]	@ (8005ff4 <I2C_MasterRequestWrite+0x100>)
 8005fd6:	68f8      	ldr	r0, [r7, #12]
 8005fd8:	f000 fad4 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005fdc:	4603      	mov	r3, r0
 8005fde:	2b00      	cmp	r3, #0
 8005fe0:	d001      	beq.n	8005fe6 <I2C_MasterRequestWrite+0xf2>
 8005fe2:	2301      	movs	r3, #1
 8005fe4:	e000      	b.n	8005fe8 <I2C_MasterRequestWrite+0xf4>
 8005fe6:	2300      	movs	r3, #0
 8005fe8:	4618      	mov	r0, r3
 8005fea:	3718      	adds	r7, #24
 8005fec:	46bd      	mov	sp, r7
 8005fee:	bd80      	pop	{r7, pc}
 8005ff0:	00010008 	.word	0x00010008
 8005ff4:	00010002 	.word	0x00010002

08005ff8 <I2C_MasterRequestRead>:
 8005ff8:	b580      	push	{r7, lr}
 8005ffa:	b088      	sub	sp, #32
 8005ffc:	af02      	add	r7, sp, #8
 8005ffe:	60f8      	str	r0, [r7, #12]
 8006000:	607a      	str	r2, [r7, #4]
 8006002:	603b      	str	r3, [r7, #0]
 8006004:	460b      	mov	r3, r1
 8006006:	817b      	strh	r3, [r7, #10]
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800600c:	617b      	str	r3, [r7, #20]
 800600e:	68fb      	ldr	r3, [r7, #12]
 8006010:	681b      	ldr	r3, [r3, #0]
 8006012:	681a      	ldr	r2, [r3, #0]
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	681b      	ldr	r3, [r3, #0]
 8006018:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800601c:	601a      	str	r2, [r3, #0]
 800601e:	697b      	ldr	r3, [r7, #20]
 8006020:	2b08      	cmp	r3, #8
 8006022:	d006      	beq.n	8006032 <I2C_MasterRequestRead+0x3a>
 8006024:	697b      	ldr	r3, [r7, #20]
 8006026:	2b01      	cmp	r3, #1
 8006028:	d003      	beq.n	8006032 <I2C_MasterRequestRead+0x3a>
 800602a:	697b      	ldr	r3, [r7, #20]
 800602c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8006030:	d108      	bne.n	8006044 <I2C_MasterRequestRead+0x4c>
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	681b      	ldr	r3, [r3, #0]
 8006036:	681a      	ldr	r2, [r3, #0]
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006040:	601a      	str	r2, [r3, #0]
 8006042:	e00b      	b.n	800605c <I2C_MasterRequestRead+0x64>
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006048:	2b11      	cmp	r3, #17
 800604a:	d107      	bne.n	800605c <I2C_MasterRequestRead+0x64>
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	681a      	ldr	r2, [r3, #0]
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	681b      	ldr	r3, [r3, #0]
 8006056:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800605a:	601a      	str	r2, [r3, #0]
 800605c:	683b      	ldr	r3, [r7, #0]
 800605e:	9300      	str	r3, [sp, #0]
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	2200      	movs	r2, #0
 8006064:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8006068:	68f8      	ldr	r0, [r7, #12]
 800606a:	f000 fa11 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 800606e:	4603      	mov	r3, r0
 8006070:	2b00      	cmp	r3, #0
 8006072:	d00d      	beq.n	8006090 <I2C_MasterRequestRead+0x98>
 8006074:	68fb      	ldr	r3, [r7, #12]
 8006076:	681b      	ldr	r3, [r3, #0]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800607e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006082:	d103      	bne.n	800608c <I2C_MasterRequestRead+0x94>
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800608a:	641a      	str	r2, [r3, #64]	@ 0x40
 800608c:	2303      	movs	r3, #3
 800608e:	e079      	b.n	8006184 <I2C_MasterRequestRead+0x18c>
 8006090:	68fb      	ldr	r3, [r7, #12]
 8006092:	691b      	ldr	r3, [r3, #16]
 8006094:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8006098:	d108      	bne.n	80060ac <I2C_MasterRequestRead+0xb4>
 800609a:	897b      	ldrh	r3, [r7, #10]
 800609c:	b2db      	uxtb	r3, r3
 800609e:	f043 0301 	orr.w	r3, r3, #1
 80060a2:	b2da      	uxtb	r2, r3
 80060a4:	68fb      	ldr	r3, [r7, #12]
 80060a6:	681b      	ldr	r3, [r3, #0]
 80060a8:	611a      	str	r2, [r3, #16]
 80060aa:	e05f      	b.n	800616c <I2C_MasterRequestRead+0x174>
 80060ac:	897b      	ldrh	r3, [r7, #10]
 80060ae:	11db      	asrs	r3, r3, #7
 80060b0:	b2db      	uxtb	r3, r3
 80060b2:	f003 0306 	and.w	r3, r3, #6
 80060b6:	b2db      	uxtb	r3, r3
 80060b8:	f063 030f 	orn	r3, r3, #15
 80060bc:	b2da      	uxtb	r2, r3
 80060be:	68fb      	ldr	r3, [r7, #12]
 80060c0:	681b      	ldr	r3, [r3, #0]
 80060c2:	611a      	str	r2, [r3, #16]
 80060c4:	683b      	ldr	r3, [r7, #0]
 80060c6:	687a      	ldr	r2, [r7, #4]
 80060c8:	4930      	ldr	r1, [pc, #192]	@ (800618c <I2C_MasterRequestRead+0x194>)
 80060ca:	68f8      	ldr	r0, [r7, #12]
 80060cc:	f000 fa5a 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80060d0:	4603      	mov	r3, r0
 80060d2:	2b00      	cmp	r3, #0
 80060d4:	d001      	beq.n	80060da <I2C_MasterRequestRead+0xe2>
 80060d6:	2301      	movs	r3, #1
 80060d8:	e054      	b.n	8006184 <I2C_MasterRequestRead+0x18c>
 80060da:	897b      	ldrh	r3, [r7, #10]
 80060dc:	b2da      	uxtb	r2, r3
 80060de:	68fb      	ldr	r3, [r7, #12]
 80060e0:	681b      	ldr	r3, [r3, #0]
 80060e2:	611a      	str	r2, [r3, #16]
 80060e4:	683b      	ldr	r3, [r7, #0]
 80060e6:	687a      	ldr	r2, [r7, #4]
 80060e8:	4929      	ldr	r1, [pc, #164]	@ (8006190 <I2C_MasterRequestRead+0x198>)
 80060ea:	68f8      	ldr	r0, [r7, #12]
 80060ec:	f000 fa4a 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80060f0:	4603      	mov	r3, r0
 80060f2:	2b00      	cmp	r3, #0
 80060f4:	d001      	beq.n	80060fa <I2C_MasterRequestRead+0x102>
 80060f6:	2301      	movs	r3, #1
 80060f8:	e044      	b.n	8006184 <I2C_MasterRequestRead+0x18c>
 80060fa:	2300      	movs	r3, #0
 80060fc:	613b      	str	r3, [r7, #16]
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	681b      	ldr	r3, [r3, #0]
 8006102:	695b      	ldr	r3, [r3, #20]
 8006104:	613b      	str	r3, [r7, #16]
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	681b      	ldr	r3, [r3, #0]
 800610a:	699b      	ldr	r3, [r3, #24]
 800610c:	613b      	str	r3, [r7, #16]
 800610e:	693b      	ldr	r3, [r7, #16]
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	681b      	ldr	r3, [r3, #0]
 8006114:	681a      	ldr	r2, [r3, #0]
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800611e:	601a      	str	r2, [r3, #0]
 8006120:	683b      	ldr	r3, [r7, #0]
 8006122:	9300      	str	r3, [sp, #0]
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	2200      	movs	r2, #0
 8006128:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800612c:	68f8      	ldr	r0, [r7, #12]
 800612e:	f000 f9af 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 8006132:	4603      	mov	r3, r0
 8006134:	2b00      	cmp	r3, #0
 8006136:	d00d      	beq.n	8006154 <I2C_MasterRequestRead+0x15c>
 8006138:	68fb      	ldr	r3, [r7, #12]
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	681b      	ldr	r3, [r3, #0]
 800613e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006142:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006146:	d103      	bne.n	8006150 <I2C_MasterRequestRead+0x158>
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800614e:	641a      	str	r2, [r3, #64]	@ 0x40
 8006150:	2303      	movs	r3, #3
 8006152:	e017      	b.n	8006184 <I2C_MasterRequestRead+0x18c>
 8006154:	897b      	ldrh	r3, [r7, #10]
 8006156:	11db      	asrs	r3, r3, #7
 8006158:	b2db      	uxtb	r3, r3
 800615a:	f003 0306 	and.w	r3, r3, #6
 800615e:	b2db      	uxtb	r3, r3
 8006160:	f063 030e 	orn	r3, r3, #14
 8006164:	b2da      	uxtb	r2, r3
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	611a      	str	r2, [r3, #16]
 800616c:	683b      	ldr	r3, [r7, #0]
 800616e:	687a      	ldr	r2, [r7, #4]
 8006170:	4907      	ldr	r1, [pc, #28]	@ (8006190 <I2C_MasterRequestRead+0x198>)
 8006172:	68f8      	ldr	r0, [r7, #12]
 8006174:	f000 fa06 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006178:	4603      	mov	r3, r0
 800617a:	2b00      	cmp	r3, #0
 800617c:	d001      	beq.n	8006182 <I2C_MasterRequestRead+0x18a>
 800617e:	2301      	movs	r3, #1
 8006180:	e000      	b.n	8006184 <I2C_MasterRequestRead+0x18c>
 8006182:	2300      	movs	r3, #0
 8006184:	4618      	mov	r0, r3
 8006186:	3718      	adds	r7, #24
 8006188:	46bd      	mov	sp, r7
 800618a:	bd80      	pop	{r7, pc}
 800618c:	00010008 	.word	0x00010008
 8006190:	00010002 	.word	0x00010002

08006194 <I2C_RequestMemoryWrite>:
 8006194:	b580      	push	{r7, lr}
 8006196:	b088      	sub	sp, #32
 8006198:	af02      	add	r7, sp, #8
 800619a:	60f8      	str	r0, [r7, #12]
 800619c:	4608      	mov	r0, r1
 800619e:	4611      	mov	r1, r2
 80061a0:	461a      	mov	r2, r3
 80061a2:	4603      	mov	r3, r0
 80061a4:	817b      	strh	r3, [r7, #10]
 80061a6:	460b      	mov	r3, r1
 80061a8:	813b      	strh	r3, [r7, #8]
 80061aa:	4613      	mov	r3, r2
 80061ac:	80fb      	strh	r3, [r7, #6]
 80061ae:	68fb      	ldr	r3, [r7, #12]
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	681a      	ldr	r2, [r3, #0]
 80061b4:	68fb      	ldr	r3, [r7, #12]
 80061b6:	681b      	ldr	r3, [r3, #0]
 80061b8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80061bc:	601a      	str	r2, [r3, #0]
 80061be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80061c0:	9300      	str	r3, [sp, #0]
 80061c2:	6a3b      	ldr	r3, [r7, #32]
 80061c4:	2200      	movs	r2, #0
 80061c6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80061ca:	68f8      	ldr	r0, [r7, #12]
 80061cc:	f000 f960 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 80061d0:	4603      	mov	r3, r0
 80061d2:	2b00      	cmp	r3, #0
 80061d4:	d00d      	beq.n	80061f2 <I2C_RequestMemoryWrite+0x5e>
 80061d6:	68fb      	ldr	r3, [r7, #12]
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	681b      	ldr	r3, [r3, #0]
 80061dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80061e0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80061e4:	d103      	bne.n	80061ee <I2C_RequestMemoryWrite+0x5a>
 80061e6:	68fb      	ldr	r3, [r7, #12]
 80061e8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80061ec:	641a      	str	r2, [r3, #64]	@ 0x40
 80061ee:	2303      	movs	r3, #3
 80061f0:	e05f      	b.n	80062b2 <I2C_RequestMemoryWrite+0x11e>
 80061f2:	897b      	ldrh	r3, [r7, #10]
 80061f4:	b2db      	uxtb	r3, r3
 80061f6:	461a      	mov	r2, r3
 80061f8:	68fb      	ldr	r3, [r7, #12]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8006200:	611a      	str	r2, [r3, #16]
 8006202:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006204:	6a3a      	ldr	r2, [r7, #32]
 8006206:	492d      	ldr	r1, [pc, #180]	@ (80062bc <I2C_RequestMemoryWrite+0x128>)
 8006208:	68f8      	ldr	r0, [r7, #12]
 800620a:	f000 f9bb 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800620e:	4603      	mov	r3, r0
 8006210:	2b00      	cmp	r3, #0
 8006212:	d001      	beq.n	8006218 <I2C_RequestMemoryWrite+0x84>
 8006214:	2301      	movs	r3, #1
 8006216:	e04c      	b.n	80062b2 <I2C_RequestMemoryWrite+0x11e>
 8006218:	2300      	movs	r3, #0
 800621a:	617b      	str	r3, [r7, #20]
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	695b      	ldr	r3, [r3, #20]
 8006222:	617b      	str	r3, [r7, #20]
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	699b      	ldr	r3, [r3, #24]
 800622a:	617b      	str	r3, [r7, #20]
 800622c:	697b      	ldr	r3, [r7, #20]
 800622e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006230:	6a39      	ldr	r1, [r7, #32]
 8006232:	68f8      	ldr	r0, [r7, #12]
 8006234:	f000 fa46 	bl	80066c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8006238:	4603      	mov	r3, r0
 800623a:	2b00      	cmp	r3, #0
 800623c:	d00d      	beq.n	800625a <I2C_RequestMemoryWrite+0xc6>
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006242:	2b04      	cmp	r3, #4
 8006244:	d107      	bne.n	8006256 <I2C_RequestMemoryWrite+0xc2>
 8006246:	68fb      	ldr	r3, [r7, #12]
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	681a      	ldr	r2, [r3, #0]
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	681b      	ldr	r3, [r3, #0]
 8006250:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006254:	601a      	str	r2, [r3, #0]
 8006256:	2301      	movs	r3, #1
 8006258:	e02b      	b.n	80062b2 <I2C_RequestMemoryWrite+0x11e>
 800625a:	88fb      	ldrh	r3, [r7, #6]
 800625c:	2b01      	cmp	r3, #1
 800625e:	d105      	bne.n	800626c <I2C_RequestMemoryWrite+0xd8>
 8006260:	893b      	ldrh	r3, [r7, #8]
 8006262:	b2da      	uxtb	r2, r3
 8006264:	68fb      	ldr	r3, [r7, #12]
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	611a      	str	r2, [r3, #16]
 800626a:	e021      	b.n	80062b0 <I2C_RequestMemoryWrite+0x11c>
 800626c:	893b      	ldrh	r3, [r7, #8]
 800626e:	0a1b      	lsrs	r3, r3, #8
 8006270:	b29b      	uxth	r3, r3
 8006272:	b2da      	uxtb	r2, r3
 8006274:	68fb      	ldr	r3, [r7, #12]
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	611a      	str	r2, [r3, #16]
 800627a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800627c:	6a39      	ldr	r1, [r7, #32]
 800627e:	68f8      	ldr	r0, [r7, #12]
 8006280:	f000 fa20 	bl	80066c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8006284:	4603      	mov	r3, r0
 8006286:	2b00      	cmp	r3, #0
 8006288:	d00d      	beq.n	80062a6 <I2C_RequestMemoryWrite+0x112>
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800628e:	2b04      	cmp	r3, #4
 8006290:	d107      	bne.n	80062a2 <I2C_RequestMemoryWrite+0x10e>
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	681a      	ldr	r2, [r3, #0]
 8006298:	68fb      	ldr	r3, [r7, #12]
 800629a:	681b      	ldr	r3, [r3, #0]
 800629c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80062a0:	601a      	str	r2, [r3, #0]
 80062a2:	2301      	movs	r3, #1
 80062a4:	e005      	b.n	80062b2 <I2C_RequestMemoryWrite+0x11e>
 80062a6:	893b      	ldrh	r3, [r7, #8]
 80062a8:	b2da      	uxtb	r2, r3
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	611a      	str	r2, [r3, #16]
 80062b0:	2300      	movs	r3, #0
 80062b2:	4618      	mov	r0, r3
 80062b4:	3718      	adds	r7, #24
 80062b6:	46bd      	mov	sp, r7
 80062b8:	bd80      	pop	{r7, pc}
 80062ba:	bf00      	nop
 80062bc:	00010002 	.word	0x00010002

080062c0 <I2C_RequestMemoryRead>:
 80062c0:	b580      	push	{r7, lr}
 80062c2:	b088      	sub	sp, #32
 80062c4:	af02      	add	r7, sp, #8
 80062c6:	60f8      	str	r0, [r7, #12]
 80062c8:	4608      	mov	r0, r1
 80062ca:	4611      	mov	r1, r2
 80062cc:	461a      	mov	r2, r3
 80062ce:	4603      	mov	r3, r0
 80062d0:	817b      	strh	r3, [r7, #10]
 80062d2:	460b      	mov	r3, r1
 80062d4:	813b      	strh	r3, [r7, #8]
 80062d6:	4613      	mov	r3, r2
 80062d8:	80fb      	strh	r3, [r7, #6]
 80062da:	68fb      	ldr	r3, [r7, #12]
 80062dc:	681b      	ldr	r3, [r3, #0]
 80062de:	681a      	ldr	r2, [r3, #0]
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80062e8:	601a      	str	r2, [r3, #0]
 80062ea:	68fb      	ldr	r3, [r7, #12]
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	681a      	ldr	r2, [r3, #0]
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80062f8:	601a      	str	r2, [r3, #0]
 80062fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80062fc:	9300      	str	r3, [sp, #0]
 80062fe:	6a3b      	ldr	r3, [r7, #32]
 8006300:	2200      	movs	r2, #0
 8006302:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8006306:	68f8      	ldr	r0, [r7, #12]
 8006308:	f000 f8c2 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 800630c:	4603      	mov	r3, r0
 800630e:	2b00      	cmp	r3, #0
 8006310:	d00d      	beq.n	800632e <I2C_RequestMemoryRead+0x6e>
 8006312:	68fb      	ldr	r3, [r7, #12]
 8006314:	681b      	ldr	r3, [r3, #0]
 8006316:	681b      	ldr	r3, [r3, #0]
 8006318:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800631c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006320:	d103      	bne.n	800632a <I2C_RequestMemoryRead+0x6a>
 8006322:	68fb      	ldr	r3, [r7, #12]
 8006324:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006328:	641a      	str	r2, [r3, #64]	@ 0x40
 800632a:	2303      	movs	r3, #3
 800632c:	e0aa      	b.n	8006484 <I2C_RequestMemoryRead+0x1c4>
 800632e:	897b      	ldrh	r3, [r7, #10]
 8006330:	b2db      	uxtb	r3, r3
 8006332:	461a      	mov	r2, r3
 8006334:	68fb      	ldr	r3, [r7, #12]
 8006336:	681b      	ldr	r3, [r3, #0]
 8006338:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800633c:	611a      	str	r2, [r3, #16]
 800633e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006340:	6a3a      	ldr	r2, [r7, #32]
 8006342:	4952      	ldr	r1, [pc, #328]	@ (800648c <I2C_RequestMemoryRead+0x1cc>)
 8006344:	68f8      	ldr	r0, [r7, #12]
 8006346:	f000 f91d 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800634a:	4603      	mov	r3, r0
 800634c:	2b00      	cmp	r3, #0
 800634e:	d001      	beq.n	8006354 <I2C_RequestMemoryRead+0x94>
 8006350:	2301      	movs	r3, #1
 8006352:	e097      	b.n	8006484 <I2C_RequestMemoryRead+0x1c4>
 8006354:	2300      	movs	r3, #0
 8006356:	617b      	str	r3, [r7, #20]
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	695b      	ldr	r3, [r3, #20]
 800635e:	617b      	str	r3, [r7, #20]
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	681b      	ldr	r3, [r3, #0]
 8006364:	699b      	ldr	r3, [r3, #24]
 8006366:	617b      	str	r3, [r7, #20]
 8006368:	697b      	ldr	r3, [r7, #20]
 800636a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800636c:	6a39      	ldr	r1, [r7, #32]
 800636e:	68f8      	ldr	r0, [r7, #12]
 8006370:	f000 f9a8 	bl	80066c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8006374:	4603      	mov	r3, r0
 8006376:	2b00      	cmp	r3, #0
 8006378:	d00d      	beq.n	8006396 <I2C_RequestMemoryRead+0xd6>
 800637a:	68fb      	ldr	r3, [r7, #12]
 800637c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800637e:	2b04      	cmp	r3, #4
 8006380:	d107      	bne.n	8006392 <I2C_RequestMemoryRead+0xd2>
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	681a      	ldr	r2, [r3, #0]
 8006388:	68fb      	ldr	r3, [r7, #12]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006390:	601a      	str	r2, [r3, #0]
 8006392:	2301      	movs	r3, #1
 8006394:	e076      	b.n	8006484 <I2C_RequestMemoryRead+0x1c4>
 8006396:	88fb      	ldrh	r3, [r7, #6]
 8006398:	2b01      	cmp	r3, #1
 800639a:	d105      	bne.n	80063a8 <I2C_RequestMemoryRead+0xe8>
 800639c:	893b      	ldrh	r3, [r7, #8]
 800639e:	b2da      	uxtb	r2, r3
 80063a0:	68fb      	ldr	r3, [r7, #12]
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	611a      	str	r2, [r3, #16]
 80063a6:	e021      	b.n	80063ec <I2C_RequestMemoryRead+0x12c>
 80063a8:	893b      	ldrh	r3, [r7, #8]
 80063aa:	0a1b      	lsrs	r3, r3, #8
 80063ac:	b29b      	uxth	r3, r3
 80063ae:	b2da      	uxtb	r2, r3
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	611a      	str	r2, [r3, #16]
 80063b6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80063b8:	6a39      	ldr	r1, [r7, #32]
 80063ba:	68f8      	ldr	r0, [r7, #12]
 80063bc:	f000 f982 	bl	80066c4 <I2C_WaitOnTXEFlagUntilTimeout>
 80063c0:	4603      	mov	r3, r0
 80063c2:	2b00      	cmp	r3, #0
 80063c4:	d00d      	beq.n	80063e2 <I2C_RequestMemoryRead+0x122>
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80063ca:	2b04      	cmp	r3, #4
 80063cc:	d107      	bne.n	80063de <I2C_RequestMemoryRead+0x11e>
 80063ce:	68fb      	ldr	r3, [r7, #12]
 80063d0:	681b      	ldr	r3, [r3, #0]
 80063d2:	681a      	ldr	r2, [r3, #0]
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80063dc:	601a      	str	r2, [r3, #0]
 80063de:	2301      	movs	r3, #1
 80063e0:	e050      	b.n	8006484 <I2C_RequestMemoryRead+0x1c4>
 80063e2:	893b      	ldrh	r3, [r7, #8]
 80063e4:	b2da      	uxtb	r2, r3
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	681b      	ldr	r3, [r3, #0]
 80063ea:	611a      	str	r2, [r3, #16]
 80063ec:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80063ee:	6a39      	ldr	r1, [r7, #32]
 80063f0:	68f8      	ldr	r0, [r7, #12]
 80063f2:	f000 f967 	bl	80066c4 <I2C_WaitOnTXEFlagUntilTimeout>
 80063f6:	4603      	mov	r3, r0
 80063f8:	2b00      	cmp	r3, #0
 80063fa:	d00d      	beq.n	8006418 <I2C_RequestMemoryRead+0x158>
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006400:	2b04      	cmp	r3, #4
 8006402:	d107      	bne.n	8006414 <I2C_RequestMemoryRead+0x154>
 8006404:	68fb      	ldr	r3, [r7, #12]
 8006406:	681b      	ldr	r3, [r3, #0]
 8006408:	681a      	ldr	r2, [r3, #0]
 800640a:	68fb      	ldr	r3, [r7, #12]
 800640c:	681b      	ldr	r3, [r3, #0]
 800640e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006412:	601a      	str	r2, [r3, #0]
 8006414:	2301      	movs	r3, #1
 8006416:	e035      	b.n	8006484 <I2C_RequestMemoryRead+0x1c4>
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	681b      	ldr	r3, [r3, #0]
 800641c:	681a      	ldr	r2, [r3, #0]
 800641e:	68fb      	ldr	r3, [r7, #12]
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006426:	601a      	str	r2, [r3, #0]
 8006428:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800642a:	9300      	str	r3, [sp, #0]
 800642c:	6a3b      	ldr	r3, [r7, #32]
 800642e:	2200      	movs	r2, #0
 8006430:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8006434:	68f8      	ldr	r0, [r7, #12]
 8006436:	f000 f82b 	bl	8006490 <I2C_WaitOnFlagUntilTimeout>
 800643a:	4603      	mov	r3, r0
 800643c:	2b00      	cmp	r3, #0
 800643e:	d00d      	beq.n	800645c <I2C_RequestMemoryRead+0x19c>
 8006440:	68fb      	ldr	r3, [r7, #12]
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	681b      	ldr	r3, [r3, #0]
 8006446:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800644a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800644e:	d103      	bne.n	8006458 <I2C_RequestMemoryRead+0x198>
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006456:	641a      	str	r2, [r3, #64]	@ 0x40
 8006458:	2303      	movs	r3, #3
 800645a:	e013      	b.n	8006484 <I2C_RequestMemoryRead+0x1c4>
 800645c:	897b      	ldrh	r3, [r7, #10]
 800645e:	b2db      	uxtb	r3, r3
 8006460:	f043 0301 	orr.w	r3, r3, #1
 8006464:	b2da      	uxtb	r2, r3
 8006466:	68fb      	ldr	r3, [r7, #12]
 8006468:	681b      	ldr	r3, [r3, #0]
 800646a:	611a      	str	r2, [r3, #16]
 800646c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800646e:	6a3a      	ldr	r2, [r7, #32]
 8006470:	4906      	ldr	r1, [pc, #24]	@ (800648c <I2C_RequestMemoryRead+0x1cc>)
 8006472:	68f8      	ldr	r0, [r7, #12]
 8006474:	f000 f886 	bl	8006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006478:	4603      	mov	r3, r0
 800647a:	2b00      	cmp	r3, #0
 800647c:	d001      	beq.n	8006482 <I2C_RequestMemoryRead+0x1c2>
 800647e:	2301      	movs	r3, #1
 8006480:	e000      	b.n	8006484 <I2C_RequestMemoryRead+0x1c4>
 8006482:	2300      	movs	r3, #0
 8006484:	4618      	mov	r0, r3
 8006486:	3718      	adds	r7, #24
 8006488:	46bd      	mov	sp, r7
 800648a:	bd80      	pop	{r7, pc}
 800648c:	00010002 	.word	0x00010002

08006490 <I2C_WaitOnFlagUntilTimeout>:
 8006490:	b580      	push	{r7, lr}
 8006492:	b084      	sub	sp, #16
 8006494:	af00      	add	r7, sp, #0
 8006496:	60f8      	str	r0, [r7, #12]
 8006498:	60b9      	str	r1, [r7, #8]
 800649a:	603b      	str	r3, [r7, #0]
 800649c:	4613      	mov	r3, r2
 800649e:	71fb      	strb	r3, [r7, #7]
 80064a0:	e048      	b.n	8006534 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80064a2:	683b      	ldr	r3, [r7, #0]
 80064a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80064a8:	d044      	beq.n	8006534 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80064aa:	f7fe f93d 	bl	8004728 <HAL_GetTick>
 80064ae:	4602      	mov	r2, r0
 80064b0:	69bb      	ldr	r3, [r7, #24]
 80064b2:	1ad3      	subs	r3, r2, r3
 80064b4:	683a      	ldr	r2, [r7, #0]
 80064b6:	429a      	cmp	r2, r3
 80064b8:	d302      	bcc.n	80064c0 <I2C_WaitOnFlagUntilTimeout+0x30>
 80064ba:	683b      	ldr	r3, [r7, #0]
 80064bc:	2b00      	cmp	r3, #0
 80064be:	d139      	bne.n	8006534 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80064c0:	68bb      	ldr	r3, [r7, #8]
 80064c2:	0c1b      	lsrs	r3, r3, #16
 80064c4:	b2db      	uxtb	r3, r3
 80064c6:	2b01      	cmp	r3, #1
 80064c8:	d10d      	bne.n	80064e6 <I2C_WaitOnFlagUntilTimeout+0x56>
 80064ca:	68fb      	ldr	r3, [r7, #12]
 80064cc:	681b      	ldr	r3, [r3, #0]
 80064ce:	695b      	ldr	r3, [r3, #20]
 80064d0:	43da      	mvns	r2, r3
 80064d2:	68bb      	ldr	r3, [r7, #8]
 80064d4:	4013      	ands	r3, r2
 80064d6:	b29b      	uxth	r3, r3
 80064d8:	2b00      	cmp	r3, #0
 80064da:	bf0c      	ite	eq
 80064dc:	2301      	moveq	r3, #1
 80064de:	2300      	movne	r3, #0
 80064e0:	b2db      	uxtb	r3, r3
 80064e2:	461a      	mov	r2, r3
 80064e4:	e00c      	b.n	8006500 <I2C_WaitOnFlagUntilTimeout+0x70>
 80064e6:	68fb      	ldr	r3, [r7, #12]
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	699b      	ldr	r3, [r3, #24]
 80064ec:	43da      	mvns	r2, r3
 80064ee:	68bb      	ldr	r3, [r7, #8]
 80064f0:	4013      	ands	r3, r2
 80064f2:	b29b      	uxth	r3, r3
 80064f4:	2b00      	cmp	r3, #0
 80064f6:	bf0c      	ite	eq
 80064f8:	2301      	moveq	r3, #1
 80064fa:	2300      	movne	r3, #0
 80064fc:	b2db      	uxtb	r3, r3
 80064fe:	461a      	mov	r2, r3
 8006500:	79fb      	ldrb	r3, [r7, #7]
 8006502:	429a      	cmp	r2, r3
 8006504:	d116      	bne.n	8006534 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8006506:	68fb      	ldr	r3, [r7, #12]
 8006508:	2200      	movs	r2, #0
 800650a:	631a      	str	r2, [r3, #48]	@ 0x30
 800650c:	68fb      	ldr	r3, [r7, #12]
 800650e:	2220      	movs	r2, #32
 8006510:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006514:	68fb      	ldr	r3, [r7, #12]
 8006516:	2200      	movs	r2, #0
 8006518:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800651c:	68fb      	ldr	r3, [r7, #12]
 800651e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006520:	f043 0220 	orr.w	r2, r3, #32
 8006524:	68fb      	ldr	r3, [r7, #12]
 8006526:	641a      	str	r2, [r3, #64]	@ 0x40
 8006528:	68fb      	ldr	r3, [r7, #12]
 800652a:	2200      	movs	r2, #0
 800652c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006530:	2301      	movs	r3, #1
 8006532:	e023      	b.n	800657c <I2C_WaitOnFlagUntilTimeout+0xec>
 8006534:	68bb      	ldr	r3, [r7, #8]
 8006536:	0c1b      	lsrs	r3, r3, #16
 8006538:	b2db      	uxtb	r3, r3
 800653a:	2b01      	cmp	r3, #1
 800653c:	d10d      	bne.n	800655a <I2C_WaitOnFlagUntilTimeout+0xca>
 800653e:	68fb      	ldr	r3, [r7, #12]
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	695b      	ldr	r3, [r3, #20]
 8006544:	43da      	mvns	r2, r3
 8006546:	68bb      	ldr	r3, [r7, #8]
 8006548:	4013      	ands	r3, r2
 800654a:	b29b      	uxth	r3, r3
 800654c:	2b00      	cmp	r3, #0
 800654e:	bf0c      	ite	eq
 8006550:	2301      	moveq	r3, #1
 8006552:	2300      	movne	r3, #0
 8006554:	b2db      	uxtb	r3, r3
 8006556:	461a      	mov	r2, r3
 8006558:	e00c      	b.n	8006574 <I2C_WaitOnFlagUntilTimeout+0xe4>
 800655a:	68fb      	ldr	r3, [r7, #12]
 800655c:	681b      	ldr	r3, [r3, #0]
 800655e:	699b      	ldr	r3, [r3, #24]
 8006560:	43da      	mvns	r2, r3
 8006562:	68bb      	ldr	r3, [r7, #8]
 8006564:	4013      	ands	r3, r2
 8006566:	b29b      	uxth	r3, r3
 8006568:	2b00      	cmp	r3, #0
 800656a:	bf0c      	ite	eq
 800656c:	2301      	moveq	r3, #1
 800656e:	2300      	movne	r3, #0
 8006570:	b2db      	uxtb	r3, r3
 8006572:	461a      	mov	r2, r3
 8006574:	79fb      	ldrb	r3, [r7, #7]
 8006576:	429a      	cmp	r2, r3
 8006578:	d093      	beq.n	80064a2 <I2C_WaitOnFlagUntilTimeout+0x12>
 800657a:	2300      	movs	r3, #0
 800657c:	4618      	mov	r0, r3
 800657e:	3710      	adds	r7, #16
 8006580:	46bd      	mov	sp, r7
 8006582:	bd80      	pop	{r7, pc}

08006584 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8006584:	b580      	push	{r7, lr}
 8006586:	b084      	sub	sp, #16
 8006588:	af00      	add	r7, sp, #0
 800658a:	60f8      	str	r0, [r7, #12]
 800658c:	60b9      	str	r1, [r7, #8]
 800658e:	607a      	str	r2, [r7, #4]
 8006590:	603b      	str	r3, [r7, #0]
 8006592:	e071      	b.n	8006678 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	695b      	ldr	r3, [r3, #20]
 800659a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800659e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80065a2:	d123      	bne.n	80065ec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	681a      	ldr	r2, [r3, #0]
 80065aa:	68fb      	ldr	r3, [r7, #12]
 80065ac:	681b      	ldr	r3, [r3, #0]
 80065ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80065b2:	601a      	str	r2, [r3, #0]
 80065b4:	68fb      	ldr	r3, [r7, #12]
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80065bc:	615a      	str	r2, [r3, #20]
 80065be:	68fb      	ldr	r3, [r7, #12]
 80065c0:	2200      	movs	r2, #0
 80065c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80065c4:	68fb      	ldr	r3, [r7, #12]
 80065c6:	2220      	movs	r2, #32
 80065c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80065cc:	68fb      	ldr	r3, [r7, #12]
 80065ce:	2200      	movs	r2, #0
 80065d0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80065d8:	f043 0204 	orr.w	r2, r3, #4
 80065dc:	68fb      	ldr	r3, [r7, #12]
 80065de:	641a      	str	r2, [r3, #64]	@ 0x40
 80065e0:	68fb      	ldr	r3, [r7, #12]
 80065e2:	2200      	movs	r2, #0
 80065e4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80065e8:	2301      	movs	r3, #1
 80065ea:	e067      	b.n	80066bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80065ec:	687b      	ldr	r3, [r7, #4]
 80065ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065f2:	d041      	beq.n	8006678 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80065f4:	f7fe f898 	bl	8004728 <HAL_GetTick>
 80065f8:	4602      	mov	r2, r0
 80065fa:	683b      	ldr	r3, [r7, #0]
 80065fc:	1ad3      	subs	r3, r2, r3
 80065fe:	687a      	ldr	r2, [r7, #4]
 8006600:	429a      	cmp	r2, r3
 8006602:	d302      	bcc.n	800660a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	2b00      	cmp	r3, #0
 8006608:	d136      	bne.n	8006678 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800660a:	68bb      	ldr	r3, [r7, #8]
 800660c:	0c1b      	lsrs	r3, r3, #16
 800660e:	b2db      	uxtb	r3, r3
 8006610:	2b01      	cmp	r3, #1
 8006612:	d10c      	bne.n	800662e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8006614:	68fb      	ldr	r3, [r7, #12]
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	695b      	ldr	r3, [r3, #20]
 800661a:	43da      	mvns	r2, r3
 800661c:	68bb      	ldr	r3, [r7, #8]
 800661e:	4013      	ands	r3, r2
 8006620:	b29b      	uxth	r3, r3
 8006622:	2b00      	cmp	r3, #0
 8006624:	bf14      	ite	ne
 8006626:	2301      	movne	r3, #1
 8006628:	2300      	moveq	r3, #0
 800662a:	b2db      	uxtb	r3, r3
 800662c:	e00b      	b.n	8006646 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	699b      	ldr	r3, [r3, #24]
 8006634:	43da      	mvns	r2, r3
 8006636:	68bb      	ldr	r3, [r7, #8]
 8006638:	4013      	ands	r3, r2
 800663a:	b29b      	uxth	r3, r3
 800663c:	2b00      	cmp	r3, #0
 800663e:	bf14      	ite	ne
 8006640:	2301      	movne	r3, #1
 8006642:	2300      	moveq	r3, #0
 8006644:	b2db      	uxtb	r3, r3
 8006646:	2b00      	cmp	r3, #0
 8006648:	d016      	beq.n	8006678 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800664a:	68fb      	ldr	r3, [r7, #12]
 800664c:	2200      	movs	r2, #0
 800664e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	2220      	movs	r2, #32
 8006654:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006658:	68fb      	ldr	r3, [r7, #12]
 800665a:	2200      	movs	r2, #0
 800665c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006660:	68fb      	ldr	r3, [r7, #12]
 8006662:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006664:	f043 0220 	orr.w	r2, r3, #32
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	641a      	str	r2, [r3, #64]	@ 0x40
 800666c:	68fb      	ldr	r3, [r7, #12]
 800666e:	2200      	movs	r2, #0
 8006670:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006674:	2301      	movs	r3, #1
 8006676:	e021      	b.n	80066bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8006678:	68bb      	ldr	r3, [r7, #8]
 800667a:	0c1b      	lsrs	r3, r3, #16
 800667c:	b2db      	uxtb	r3, r3
 800667e:	2b01      	cmp	r3, #1
 8006680:	d10c      	bne.n	800669c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	681b      	ldr	r3, [r3, #0]
 8006686:	695b      	ldr	r3, [r3, #20]
 8006688:	43da      	mvns	r2, r3
 800668a:	68bb      	ldr	r3, [r7, #8]
 800668c:	4013      	ands	r3, r2
 800668e:	b29b      	uxth	r3, r3
 8006690:	2b00      	cmp	r3, #0
 8006692:	bf14      	ite	ne
 8006694:	2301      	movne	r3, #1
 8006696:	2300      	moveq	r3, #0
 8006698:	b2db      	uxtb	r3, r3
 800669a:	e00b      	b.n	80066b4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	699b      	ldr	r3, [r3, #24]
 80066a2:	43da      	mvns	r2, r3
 80066a4:	68bb      	ldr	r3, [r7, #8]
 80066a6:	4013      	ands	r3, r2
 80066a8:	b29b      	uxth	r3, r3
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	bf14      	ite	ne
 80066ae:	2301      	movne	r3, #1
 80066b0:	2300      	moveq	r3, #0
 80066b2:	b2db      	uxtb	r3, r3
 80066b4:	2b00      	cmp	r3, #0
 80066b6:	f47f af6d 	bne.w	8006594 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80066ba:	2300      	movs	r3, #0
 80066bc:	4618      	mov	r0, r3
 80066be:	3710      	adds	r7, #16
 80066c0:	46bd      	mov	sp, r7
 80066c2:	bd80      	pop	{r7, pc}

080066c4 <I2C_WaitOnTXEFlagUntilTimeout>:
 80066c4:	b580      	push	{r7, lr}
 80066c6:	b084      	sub	sp, #16
 80066c8:	af00      	add	r7, sp, #0
 80066ca:	60f8      	str	r0, [r7, #12]
 80066cc:	60b9      	str	r1, [r7, #8]
 80066ce:	607a      	str	r2, [r7, #4]
 80066d0:	e034      	b.n	800673c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80066d2:	68f8      	ldr	r0, [r7, #12]
 80066d4:	f000 f8e3 	bl	800689e <I2C_IsAcknowledgeFailed>
 80066d8:	4603      	mov	r3, r0
 80066da:	2b00      	cmp	r3, #0
 80066dc:	d001      	beq.n	80066e2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80066de:	2301      	movs	r3, #1
 80066e0:	e034      	b.n	800674c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80066e2:	68bb      	ldr	r3, [r7, #8]
 80066e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80066e8:	d028      	beq.n	800673c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80066ea:	f7fe f81d 	bl	8004728 <HAL_GetTick>
 80066ee:	4602      	mov	r2, r0
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	1ad3      	subs	r3, r2, r3
 80066f4:	68ba      	ldr	r2, [r7, #8]
 80066f6:	429a      	cmp	r2, r3
 80066f8:	d302      	bcc.n	8006700 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80066fa:	68bb      	ldr	r3, [r7, #8]
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	d11d      	bne.n	800673c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8006700:	68fb      	ldr	r3, [r7, #12]
 8006702:	681b      	ldr	r3, [r3, #0]
 8006704:	695b      	ldr	r3, [r3, #20]
 8006706:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800670a:	2b80      	cmp	r3, #128	@ 0x80
 800670c:	d016      	beq.n	800673c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	2200      	movs	r2, #0
 8006712:	631a      	str	r2, [r3, #48]	@ 0x30
 8006714:	68fb      	ldr	r3, [r7, #12]
 8006716:	2220      	movs	r2, #32
 8006718:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	2200      	movs	r2, #0
 8006720:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006728:	f043 0220 	orr.w	r2, r3, #32
 800672c:	68fb      	ldr	r3, [r7, #12]
 800672e:	641a      	str	r2, [r3, #64]	@ 0x40
 8006730:	68fb      	ldr	r3, [r7, #12]
 8006732:	2200      	movs	r2, #0
 8006734:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006738:	2301      	movs	r3, #1
 800673a:	e007      	b.n	800674c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800673c:	68fb      	ldr	r3, [r7, #12]
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	695b      	ldr	r3, [r3, #20]
 8006742:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006746:	2b80      	cmp	r3, #128	@ 0x80
 8006748:	d1c3      	bne.n	80066d2 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800674a:	2300      	movs	r3, #0
 800674c:	4618      	mov	r0, r3
 800674e:	3710      	adds	r7, #16
 8006750:	46bd      	mov	sp, r7
 8006752:	bd80      	pop	{r7, pc}

08006754 <I2C_WaitOnBTFFlagUntilTimeout>:
 8006754:	b580      	push	{r7, lr}
 8006756:	b084      	sub	sp, #16
 8006758:	af00      	add	r7, sp, #0
 800675a:	60f8      	str	r0, [r7, #12]
 800675c:	60b9      	str	r1, [r7, #8]
 800675e:	607a      	str	r2, [r7, #4]
 8006760:	e034      	b.n	80067cc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006762:	68f8      	ldr	r0, [r7, #12]
 8006764:	f000 f89b 	bl	800689e <I2C_IsAcknowledgeFailed>
 8006768:	4603      	mov	r3, r0
 800676a:	2b00      	cmp	r3, #0
 800676c:	d001      	beq.n	8006772 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800676e:	2301      	movs	r3, #1
 8006770:	e034      	b.n	80067dc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8006772:	68bb      	ldr	r3, [r7, #8]
 8006774:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006778:	d028      	beq.n	80067cc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800677a:	f7fd ffd5 	bl	8004728 <HAL_GetTick>
 800677e:	4602      	mov	r2, r0
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	1ad3      	subs	r3, r2, r3
 8006784:	68ba      	ldr	r2, [r7, #8]
 8006786:	429a      	cmp	r2, r3
 8006788:	d302      	bcc.n	8006790 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800678a:	68bb      	ldr	r3, [r7, #8]
 800678c:	2b00      	cmp	r3, #0
 800678e:	d11d      	bne.n	80067cc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006790:	68fb      	ldr	r3, [r7, #12]
 8006792:	681b      	ldr	r3, [r3, #0]
 8006794:	695b      	ldr	r3, [r3, #20]
 8006796:	f003 0304 	and.w	r3, r3, #4
 800679a:	2b04      	cmp	r3, #4
 800679c:	d016      	beq.n	80067cc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	2200      	movs	r2, #0
 80067a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80067a4:	68fb      	ldr	r3, [r7, #12]
 80067a6:	2220      	movs	r2, #32
 80067a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80067ac:	68fb      	ldr	r3, [r7, #12]
 80067ae:	2200      	movs	r2, #0
 80067b0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80067b4:	68fb      	ldr	r3, [r7, #12]
 80067b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80067b8:	f043 0220 	orr.w	r2, r3, #32
 80067bc:	68fb      	ldr	r3, [r7, #12]
 80067be:	641a      	str	r2, [r3, #64]	@ 0x40
 80067c0:	68fb      	ldr	r3, [r7, #12]
 80067c2:	2200      	movs	r2, #0
 80067c4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80067c8:	2301      	movs	r3, #1
 80067ca:	e007      	b.n	80067dc <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	695b      	ldr	r3, [r3, #20]
 80067d2:	f003 0304 	and.w	r3, r3, #4
 80067d6:	2b04      	cmp	r3, #4
 80067d8:	d1c3      	bne.n	8006762 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80067da:	2300      	movs	r3, #0
 80067dc:	4618      	mov	r0, r3
 80067de:	3710      	adds	r7, #16
 80067e0:	46bd      	mov	sp, r7
 80067e2:	bd80      	pop	{r7, pc}

080067e4 <I2C_WaitOnRXNEFlagUntilTimeout>:
 80067e4:	b580      	push	{r7, lr}
 80067e6:	b084      	sub	sp, #16
 80067e8:	af00      	add	r7, sp, #0
 80067ea:	60f8      	str	r0, [r7, #12]
 80067ec:	60b9      	str	r1, [r7, #8]
 80067ee:	607a      	str	r2, [r7, #4]
 80067f0:	e049      	b.n	8006886 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 80067f2:	68fb      	ldr	r3, [r7, #12]
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	695b      	ldr	r3, [r3, #20]
 80067f8:	f003 0310 	and.w	r3, r3, #16
 80067fc:	2b10      	cmp	r3, #16
 80067fe:	d119      	bne.n	8006834 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8006800:	68fb      	ldr	r3, [r7, #12]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	f06f 0210 	mvn.w	r2, #16
 8006808:	615a      	str	r2, [r3, #20]
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	2200      	movs	r2, #0
 800680e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006810:	68fb      	ldr	r3, [r7, #12]
 8006812:	2220      	movs	r2, #32
 8006814:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006818:	68fb      	ldr	r3, [r7, #12]
 800681a:	2200      	movs	r2, #0
 800681c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006820:	68fb      	ldr	r3, [r7, #12]
 8006822:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006824:	68fb      	ldr	r3, [r7, #12]
 8006826:	641a      	str	r2, [r3, #64]	@ 0x40
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	2200      	movs	r2, #0
 800682c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006830:	2301      	movs	r3, #1
 8006832:	e030      	b.n	8006896 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8006834:	f7fd ff78 	bl	8004728 <HAL_GetTick>
 8006838:	4602      	mov	r2, r0
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	1ad3      	subs	r3, r2, r3
 800683e:	68ba      	ldr	r2, [r7, #8]
 8006840:	429a      	cmp	r2, r3
 8006842:	d302      	bcc.n	800684a <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8006844:	68bb      	ldr	r3, [r7, #8]
 8006846:	2b00      	cmp	r3, #0
 8006848:	d11d      	bne.n	8006886 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	681b      	ldr	r3, [r3, #0]
 800684e:	695b      	ldr	r3, [r3, #20]
 8006850:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006854:	2b40      	cmp	r3, #64	@ 0x40
 8006856:	d016      	beq.n	8006886 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	2200      	movs	r2, #0
 800685c:	631a      	str	r2, [r3, #48]	@ 0x30
 800685e:	68fb      	ldr	r3, [r7, #12]
 8006860:	2220      	movs	r2, #32
 8006862:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006866:	68fb      	ldr	r3, [r7, #12]
 8006868:	2200      	movs	r2, #0
 800686a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800686e:	68fb      	ldr	r3, [r7, #12]
 8006870:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006872:	f043 0220 	orr.w	r2, r3, #32
 8006876:	68fb      	ldr	r3, [r7, #12]
 8006878:	641a      	str	r2, [r3, #64]	@ 0x40
 800687a:	68fb      	ldr	r3, [r7, #12]
 800687c:	2200      	movs	r2, #0
 800687e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006882:	2301      	movs	r3, #1
 8006884:	e007      	b.n	8006896 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8006886:	68fb      	ldr	r3, [r7, #12]
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	695b      	ldr	r3, [r3, #20]
 800688c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006890:	2b40      	cmp	r3, #64	@ 0x40
 8006892:	d1ae      	bne.n	80067f2 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8006894:	2300      	movs	r3, #0
 8006896:	4618      	mov	r0, r3
 8006898:	3710      	adds	r7, #16
 800689a:	46bd      	mov	sp, r7
 800689c:	bd80      	pop	{r7, pc}

0800689e <I2C_IsAcknowledgeFailed>:
 800689e:	b480      	push	{r7}
 80068a0:	b083      	sub	sp, #12
 80068a2:	af00      	add	r7, sp, #0
 80068a4:	6078      	str	r0, [r7, #4]
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	695b      	ldr	r3, [r3, #20]
 80068ac:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80068b0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80068b4:	d11b      	bne.n	80068ee <I2C_IsAcknowledgeFailed+0x50>
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80068be:	615a      	str	r2, [r3, #20]
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	2200      	movs	r2, #0
 80068c4:	631a      	str	r2, [r3, #48]	@ 0x30
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	2220      	movs	r2, #32
 80068ca:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	2200      	movs	r2, #0
 80068d2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80068da:	f043 0204 	orr.w	r2, r3, #4
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	641a      	str	r2, [r3, #64]	@ 0x40
 80068e2:	687b      	ldr	r3, [r7, #4]
 80068e4:	2200      	movs	r2, #0
 80068e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80068ea:	2301      	movs	r3, #1
 80068ec:	e000      	b.n	80068f0 <I2C_IsAcknowledgeFailed+0x52>
 80068ee:	2300      	movs	r3, #0
 80068f0:	4618      	mov	r0, r3
 80068f2:	370c      	adds	r7, #12
 80068f4:	46bd      	mov	sp, r7
 80068f6:	bc80      	pop	{r7}
 80068f8:	4770      	bx	lr
	...

080068fc <HAL_RCC_OscConfig>:
 80068fc:	b580      	push	{r7, lr}
 80068fe:	b088      	sub	sp, #32
 8006900:	af00      	add	r7, sp, #0
 8006902:	6078      	str	r0, [r7, #4]
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	2b00      	cmp	r3, #0
 8006908:	d101      	bne.n	800690e <HAL_RCC_OscConfig+0x12>
 800690a:	2301      	movs	r3, #1
 800690c:	e31d      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 800690e:	4b94      	ldr	r3, [pc, #592]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006910:	689b      	ldr	r3, [r3, #8]
 8006912:	f003 030c 	and.w	r3, r3, #12
 8006916:	61bb      	str	r3, [r7, #24]
 8006918:	4b91      	ldr	r3, [pc, #580]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 800691a:	689b      	ldr	r3, [r3, #8]
 800691c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006920:	617b      	str	r3, [r7, #20]
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	f003 0301 	and.w	r3, r3, #1
 800692a:	2b00      	cmp	r3, #0
 800692c:	d07b      	beq.n	8006a26 <HAL_RCC_OscConfig+0x12a>
 800692e:	69bb      	ldr	r3, [r7, #24]
 8006930:	2b08      	cmp	r3, #8
 8006932:	d006      	beq.n	8006942 <HAL_RCC_OscConfig+0x46>
 8006934:	69bb      	ldr	r3, [r7, #24]
 8006936:	2b0c      	cmp	r3, #12
 8006938:	d10f      	bne.n	800695a <HAL_RCC_OscConfig+0x5e>
 800693a:	697b      	ldr	r3, [r7, #20]
 800693c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006940:	d10b      	bne.n	800695a <HAL_RCC_OscConfig+0x5e>
 8006942:	4b87      	ldr	r3, [pc, #540]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006944:	681b      	ldr	r3, [r3, #0]
 8006946:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800694a:	2b00      	cmp	r3, #0
 800694c:	d06a      	beq.n	8006a24 <HAL_RCC_OscConfig+0x128>
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	685b      	ldr	r3, [r3, #4]
 8006952:	2b00      	cmp	r3, #0
 8006954:	d166      	bne.n	8006a24 <HAL_RCC_OscConfig+0x128>
 8006956:	2301      	movs	r3, #1
 8006958:	e2f7      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	685b      	ldr	r3, [r3, #4]
 800695e:	2b01      	cmp	r3, #1
 8006960:	d106      	bne.n	8006970 <HAL_RCC_OscConfig+0x74>
 8006962:	4b7f      	ldr	r3, [pc, #508]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006964:	681b      	ldr	r3, [r3, #0]
 8006966:	4a7e      	ldr	r2, [pc, #504]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006968:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800696c:	6013      	str	r3, [r2, #0]
 800696e:	e02d      	b.n	80069cc <HAL_RCC_OscConfig+0xd0>
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	685b      	ldr	r3, [r3, #4]
 8006974:	2b00      	cmp	r3, #0
 8006976:	d10c      	bne.n	8006992 <HAL_RCC_OscConfig+0x96>
 8006978:	4b79      	ldr	r3, [pc, #484]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	4a78      	ldr	r2, [pc, #480]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 800697e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006982:	6013      	str	r3, [r2, #0]
 8006984:	4b76      	ldr	r3, [pc, #472]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006986:	681b      	ldr	r3, [r3, #0]
 8006988:	4a75      	ldr	r2, [pc, #468]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 800698a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800698e:	6013      	str	r3, [r2, #0]
 8006990:	e01c      	b.n	80069cc <HAL_RCC_OscConfig+0xd0>
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	685b      	ldr	r3, [r3, #4]
 8006996:	2b05      	cmp	r3, #5
 8006998:	d10c      	bne.n	80069b4 <HAL_RCC_OscConfig+0xb8>
 800699a:	4b71      	ldr	r3, [pc, #452]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 800699c:	681b      	ldr	r3, [r3, #0]
 800699e:	4a70      	ldr	r2, [pc, #448]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069a0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80069a4:	6013      	str	r3, [r2, #0]
 80069a6:	4b6e      	ldr	r3, [pc, #440]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	4a6d      	ldr	r2, [pc, #436]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069ac:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80069b0:	6013      	str	r3, [r2, #0]
 80069b2:	e00b      	b.n	80069cc <HAL_RCC_OscConfig+0xd0>
 80069b4:	4b6a      	ldr	r3, [pc, #424]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	4a69      	ldr	r2, [pc, #420]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069ba:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80069be:	6013      	str	r3, [r2, #0]
 80069c0:	4b67      	ldr	r3, [pc, #412]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	4a66      	ldr	r2, [pc, #408]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069c6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80069ca:	6013      	str	r3, [r2, #0]
 80069cc:	687b      	ldr	r3, [r7, #4]
 80069ce:	685b      	ldr	r3, [r3, #4]
 80069d0:	2b00      	cmp	r3, #0
 80069d2:	d013      	beq.n	80069fc <HAL_RCC_OscConfig+0x100>
 80069d4:	f7fd fea8 	bl	8004728 <HAL_GetTick>
 80069d8:	6138      	str	r0, [r7, #16]
 80069da:	e008      	b.n	80069ee <HAL_RCC_OscConfig+0xf2>
 80069dc:	f7fd fea4 	bl	8004728 <HAL_GetTick>
 80069e0:	4602      	mov	r2, r0
 80069e2:	693b      	ldr	r3, [r7, #16]
 80069e4:	1ad3      	subs	r3, r2, r3
 80069e6:	2b64      	cmp	r3, #100	@ 0x64
 80069e8:	d901      	bls.n	80069ee <HAL_RCC_OscConfig+0xf2>
 80069ea:	2303      	movs	r3, #3
 80069ec:	e2ad      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 80069ee:	4b5c      	ldr	r3, [pc, #368]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	d0f0      	beq.n	80069dc <HAL_RCC_OscConfig+0xe0>
 80069fa:	e014      	b.n	8006a26 <HAL_RCC_OscConfig+0x12a>
 80069fc:	f7fd fe94 	bl	8004728 <HAL_GetTick>
 8006a00:	6138      	str	r0, [r7, #16]
 8006a02:	e008      	b.n	8006a16 <HAL_RCC_OscConfig+0x11a>
 8006a04:	f7fd fe90 	bl	8004728 <HAL_GetTick>
 8006a08:	4602      	mov	r2, r0
 8006a0a:	693b      	ldr	r3, [r7, #16]
 8006a0c:	1ad3      	subs	r3, r2, r3
 8006a0e:	2b64      	cmp	r3, #100	@ 0x64
 8006a10:	d901      	bls.n	8006a16 <HAL_RCC_OscConfig+0x11a>
 8006a12:	2303      	movs	r3, #3
 8006a14:	e299      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006a16:	4b52      	ldr	r3, [pc, #328]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006a1e:	2b00      	cmp	r3, #0
 8006a20:	d1f0      	bne.n	8006a04 <HAL_RCC_OscConfig+0x108>
 8006a22:	e000      	b.n	8006a26 <HAL_RCC_OscConfig+0x12a>
 8006a24:	bf00      	nop
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	681b      	ldr	r3, [r3, #0]
 8006a2a:	f003 0302 	and.w	r3, r3, #2
 8006a2e:	2b00      	cmp	r3, #0
 8006a30:	d05a      	beq.n	8006ae8 <HAL_RCC_OscConfig+0x1ec>
 8006a32:	69bb      	ldr	r3, [r7, #24]
 8006a34:	2b04      	cmp	r3, #4
 8006a36:	d005      	beq.n	8006a44 <HAL_RCC_OscConfig+0x148>
 8006a38:	69bb      	ldr	r3, [r7, #24]
 8006a3a:	2b0c      	cmp	r3, #12
 8006a3c:	d119      	bne.n	8006a72 <HAL_RCC_OscConfig+0x176>
 8006a3e:	697b      	ldr	r3, [r7, #20]
 8006a40:	2b00      	cmp	r3, #0
 8006a42:	d116      	bne.n	8006a72 <HAL_RCC_OscConfig+0x176>
 8006a44:	4b46      	ldr	r3, [pc, #280]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006a46:	681b      	ldr	r3, [r3, #0]
 8006a48:	f003 0302 	and.w	r3, r3, #2
 8006a4c:	2b00      	cmp	r3, #0
 8006a4e:	d005      	beq.n	8006a5c <HAL_RCC_OscConfig+0x160>
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	68db      	ldr	r3, [r3, #12]
 8006a54:	2b01      	cmp	r3, #1
 8006a56:	d001      	beq.n	8006a5c <HAL_RCC_OscConfig+0x160>
 8006a58:	2301      	movs	r3, #1
 8006a5a:	e276      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006a5c:	4b40      	ldr	r3, [pc, #256]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006a5e:	685b      	ldr	r3, [r3, #4]
 8006a60:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8006a64:	687b      	ldr	r3, [r7, #4]
 8006a66:	691b      	ldr	r3, [r3, #16]
 8006a68:	021b      	lsls	r3, r3, #8
 8006a6a:	493d      	ldr	r1, [pc, #244]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006a6c:	4313      	orrs	r3, r2
 8006a6e:	604b      	str	r3, [r1, #4]
 8006a70:	e03a      	b.n	8006ae8 <HAL_RCC_OscConfig+0x1ec>
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	68db      	ldr	r3, [r3, #12]
 8006a76:	2b00      	cmp	r3, #0
 8006a78:	d020      	beq.n	8006abc <HAL_RCC_OscConfig+0x1c0>
 8006a7a:	4b3a      	ldr	r3, [pc, #232]	@ (8006b64 <HAL_RCC_OscConfig+0x268>)
 8006a7c:	2201      	movs	r2, #1
 8006a7e:	601a      	str	r2, [r3, #0]
 8006a80:	f7fd fe52 	bl	8004728 <HAL_GetTick>
 8006a84:	6138      	str	r0, [r7, #16]
 8006a86:	e008      	b.n	8006a9a <HAL_RCC_OscConfig+0x19e>
 8006a88:	f7fd fe4e 	bl	8004728 <HAL_GetTick>
 8006a8c:	4602      	mov	r2, r0
 8006a8e:	693b      	ldr	r3, [r7, #16]
 8006a90:	1ad3      	subs	r3, r2, r3
 8006a92:	2b02      	cmp	r3, #2
 8006a94:	d901      	bls.n	8006a9a <HAL_RCC_OscConfig+0x19e>
 8006a96:	2303      	movs	r3, #3
 8006a98:	e257      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006a9a:	4b31      	ldr	r3, [pc, #196]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	f003 0302 	and.w	r3, r3, #2
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	d0f0      	beq.n	8006a88 <HAL_RCC_OscConfig+0x18c>
 8006aa6:	4b2e      	ldr	r3, [pc, #184]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006aa8:	685b      	ldr	r3, [r3, #4]
 8006aaa:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8006aae:	687b      	ldr	r3, [r7, #4]
 8006ab0:	691b      	ldr	r3, [r3, #16]
 8006ab2:	021b      	lsls	r3, r3, #8
 8006ab4:	492a      	ldr	r1, [pc, #168]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006ab6:	4313      	orrs	r3, r2
 8006ab8:	604b      	str	r3, [r1, #4]
 8006aba:	e015      	b.n	8006ae8 <HAL_RCC_OscConfig+0x1ec>
 8006abc:	4b29      	ldr	r3, [pc, #164]	@ (8006b64 <HAL_RCC_OscConfig+0x268>)
 8006abe:	2200      	movs	r2, #0
 8006ac0:	601a      	str	r2, [r3, #0]
 8006ac2:	f7fd fe31 	bl	8004728 <HAL_GetTick>
 8006ac6:	6138      	str	r0, [r7, #16]
 8006ac8:	e008      	b.n	8006adc <HAL_RCC_OscConfig+0x1e0>
 8006aca:	f7fd fe2d 	bl	8004728 <HAL_GetTick>
 8006ace:	4602      	mov	r2, r0
 8006ad0:	693b      	ldr	r3, [r7, #16]
 8006ad2:	1ad3      	subs	r3, r2, r3
 8006ad4:	2b02      	cmp	r3, #2
 8006ad6:	d901      	bls.n	8006adc <HAL_RCC_OscConfig+0x1e0>
 8006ad8:	2303      	movs	r3, #3
 8006ada:	e236      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006adc:	4b20      	ldr	r3, [pc, #128]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006ade:	681b      	ldr	r3, [r3, #0]
 8006ae0:	f003 0302 	and.w	r3, r3, #2
 8006ae4:	2b00      	cmp	r3, #0
 8006ae6:	d1f0      	bne.n	8006aca <HAL_RCC_OscConfig+0x1ce>
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	f003 0310 	and.w	r3, r3, #16
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	f000 80b8 	beq.w	8006c66 <HAL_RCC_OscConfig+0x36a>
 8006af6:	69bb      	ldr	r3, [r7, #24]
 8006af8:	2b00      	cmp	r3, #0
 8006afa:	d170      	bne.n	8006bde <HAL_RCC_OscConfig+0x2e2>
 8006afc:	4b18      	ldr	r3, [pc, #96]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006afe:	681b      	ldr	r3, [r3, #0]
 8006b00:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	d005      	beq.n	8006b14 <HAL_RCC_OscConfig+0x218>
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	699b      	ldr	r3, [r3, #24]
 8006b0c:	2b00      	cmp	r3, #0
 8006b0e:	d101      	bne.n	8006b14 <HAL_RCC_OscConfig+0x218>
 8006b10:	2301      	movs	r3, #1
 8006b12:	e21a      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	6a1a      	ldr	r2, [r3, #32]
 8006b18:	4b11      	ldr	r3, [pc, #68]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006b1a:	685b      	ldr	r3, [r3, #4]
 8006b1c:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8006b20:	429a      	cmp	r2, r3
 8006b22:	d921      	bls.n	8006b68 <HAL_RCC_OscConfig+0x26c>
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	6a1b      	ldr	r3, [r3, #32]
 8006b28:	4618      	mov	r0, r3
 8006b2a:	f000 fc7d 	bl	8007428 <RCC_SetFlashLatencyFromMSIRange>
 8006b2e:	4603      	mov	r3, r0
 8006b30:	2b00      	cmp	r3, #0
 8006b32:	d001      	beq.n	8006b38 <HAL_RCC_OscConfig+0x23c>
 8006b34:	2301      	movs	r3, #1
 8006b36:	e208      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006b38:	4b09      	ldr	r3, [pc, #36]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006b3a:	685b      	ldr	r3, [r3, #4]
 8006b3c:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	6a1b      	ldr	r3, [r3, #32]
 8006b44:	4906      	ldr	r1, [pc, #24]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006b46:	4313      	orrs	r3, r2
 8006b48:	604b      	str	r3, [r1, #4]
 8006b4a:	4b05      	ldr	r3, [pc, #20]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006b4c:	685b      	ldr	r3, [r3, #4]
 8006b4e:	f023 427f 	bic.w	r2, r3, #4278190080	@ 0xff000000
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	69db      	ldr	r3, [r3, #28]
 8006b56:	061b      	lsls	r3, r3, #24
 8006b58:	4901      	ldr	r1, [pc, #4]	@ (8006b60 <HAL_RCC_OscConfig+0x264>)
 8006b5a:	4313      	orrs	r3, r2
 8006b5c:	604b      	str	r3, [r1, #4]
 8006b5e:	e020      	b.n	8006ba2 <HAL_RCC_OscConfig+0x2a6>
 8006b60:	40023800 	.word	0x40023800
 8006b64:	42470000 	.word	0x42470000
 8006b68:	4b99      	ldr	r3, [pc, #612]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006b6a:	685b      	ldr	r3, [r3, #4]
 8006b6c:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8006b70:	687b      	ldr	r3, [r7, #4]
 8006b72:	6a1b      	ldr	r3, [r3, #32]
 8006b74:	4996      	ldr	r1, [pc, #600]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006b76:	4313      	orrs	r3, r2
 8006b78:	604b      	str	r3, [r1, #4]
 8006b7a:	4b95      	ldr	r3, [pc, #596]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006b7c:	685b      	ldr	r3, [r3, #4]
 8006b7e:	f023 427f 	bic.w	r2, r3, #4278190080	@ 0xff000000
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	69db      	ldr	r3, [r3, #28]
 8006b86:	061b      	lsls	r3, r3, #24
 8006b88:	4991      	ldr	r1, [pc, #580]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006b8a:	4313      	orrs	r3, r2
 8006b8c:	604b      	str	r3, [r1, #4]
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	6a1b      	ldr	r3, [r3, #32]
 8006b92:	4618      	mov	r0, r3
 8006b94:	f000 fc48 	bl	8007428 <RCC_SetFlashLatencyFromMSIRange>
 8006b98:	4603      	mov	r3, r0
 8006b9a:	2b00      	cmp	r3, #0
 8006b9c:	d001      	beq.n	8006ba2 <HAL_RCC_OscConfig+0x2a6>
 8006b9e:	2301      	movs	r3, #1
 8006ba0:	e1d3      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	6a1b      	ldr	r3, [r3, #32]
 8006ba6:	0b5b      	lsrs	r3, r3, #13
 8006ba8:	3301      	adds	r3, #1
 8006baa:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8006bae:	fa02 f303 	lsl.w	r3, r2, r3
 8006bb2:	4a87      	ldr	r2, [pc, #540]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006bb4:	6892      	ldr	r2, [r2, #8]
 8006bb6:	0912      	lsrs	r2, r2, #4
 8006bb8:	f002 020f 	and.w	r2, r2, #15
 8006bbc:	4985      	ldr	r1, [pc, #532]	@ (8006dd4 <HAL_RCC_OscConfig+0x4d8>)
 8006bbe:	5c8a      	ldrb	r2, [r1, r2]
 8006bc0:	40d3      	lsrs	r3, r2
 8006bc2:	4a85      	ldr	r2, [pc, #532]	@ (8006dd8 <HAL_RCC_OscConfig+0x4dc>)
 8006bc4:	6013      	str	r3, [r2, #0]
 8006bc6:	4b85      	ldr	r3, [pc, #532]	@ (8006ddc <HAL_RCC_OscConfig+0x4e0>)
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	4618      	mov	r0, r3
 8006bcc:	f7fd fd60 	bl	8004690 <HAL_InitTick>
 8006bd0:	4603      	mov	r3, r0
 8006bd2:	73fb      	strb	r3, [r7, #15]
 8006bd4:	7bfb      	ldrb	r3, [r7, #15]
 8006bd6:	2b00      	cmp	r3, #0
 8006bd8:	d045      	beq.n	8006c66 <HAL_RCC_OscConfig+0x36a>
 8006bda:	7bfb      	ldrb	r3, [r7, #15]
 8006bdc:	e1b5      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006bde:	687b      	ldr	r3, [r7, #4]
 8006be0:	699b      	ldr	r3, [r3, #24]
 8006be2:	2b00      	cmp	r3, #0
 8006be4:	d029      	beq.n	8006c3a <HAL_RCC_OscConfig+0x33e>
 8006be6:	4b7e      	ldr	r3, [pc, #504]	@ (8006de0 <HAL_RCC_OscConfig+0x4e4>)
 8006be8:	2201      	movs	r2, #1
 8006bea:	601a      	str	r2, [r3, #0]
 8006bec:	f7fd fd9c 	bl	8004728 <HAL_GetTick>
 8006bf0:	6138      	str	r0, [r7, #16]
 8006bf2:	e008      	b.n	8006c06 <HAL_RCC_OscConfig+0x30a>
 8006bf4:	f7fd fd98 	bl	8004728 <HAL_GetTick>
 8006bf8:	4602      	mov	r2, r0
 8006bfa:	693b      	ldr	r3, [r7, #16]
 8006bfc:	1ad3      	subs	r3, r2, r3
 8006bfe:	2b02      	cmp	r3, #2
 8006c00:	d901      	bls.n	8006c06 <HAL_RCC_OscConfig+0x30a>
 8006c02:	2303      	movs	r3, #3
 8006c04:	e1a1      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006c06:	4b72      	ldr	r3, [pc, #456]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006c08:	681b      	ldr	r3, [r3, #0]
 8006c0a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006c0e:	2b00      	cmp	r3, #0
 8006c10:	d0f0      	beq.n	8006bf4 <HAL_RCC_OscConfig+0x2f8>
 8006c12:	4b6f      	ldr	r3, [pc, #444]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006c14:	685b      	ldr	r3, [r3, #4]
 8006c16:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	6a1b      	ldr	r3, [r3, #32]
 8006c1e:	496c      	ldr	r1, [pc, #432]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006c20:	4313      	orrs	r3, r2
 8006c22:	604b      	str	r3, [r1, #4]
 8006c24:	4b6a      	ldr	r3, [pc, #424]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006c26:	685b      	ldr	r3, [r3, #4]
 8006c28:	f023 427f 	bic.w	r2, r3, #4278190080	@ 0xff000000
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	69db      	ldr	r3, [r3, #28]
 8006c30:	061b      	lsls	r3, r3, #24
 8006c32:	4967      	ldr	r1, [pc, #412]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006c34:	4313      	orrs	r3, r2
 8006c36:	604b      	str	r3, [r1, #4]
 8006c38:	e015      	b.n	8006c66 <HAL_RCC_OscConfig+0x36a>
 8006c3a:	4b69      	ldr	r3, [pc, #420]	@ (8006de0 <HAL_RCC_OscConfig+0x4e4>)
 8006c3c:	2200      	movs	r2, #0
 8006c3e:	601a      	str	r2, [r3, #0]
 8006c40:	f7fd fd72 	bl	8004728 <HAL_GetTick>
 8006c44:	6138      	str	r0, [r7, #16]
 8006c46:	e008      	b.n	8006c5a <HAL_RCC_OscConfig+0x35e>
 8006c48:	f7fd fd6e 	bl	8004728 <HAL_GetTick>
 8006c4c:	4602      	mov	r2, r0
 8006c4e:	693b      	ldr	r3, [r7, #16]
 8006c50:	1ad3      	subs	r3, r2, r3
 8006c52:	2b02      	cmp	r3, #2
 8006c54:	d901      	bls.n	8006c5a <HAL_RCC_OscConfig+0x35e>
 8006c56:	2303      	movs	r3, #3
 8006c58:	e177      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006c5a:	4b5d      	ldr	r3, [pc, #372]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006c62:	2b00      	cmp	r3, #0
 8006c64:	d1f0      	bne.n	8006c48 <HAL_RCC_OscConfig+0x34c>
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	681b      	ldr	r3, [r3, #0]
 8006c6a:	f003 0308 	and.w	r3, r3, #8
 8006c6e:	2b00      	cmp	r3, #0
 8006c70:	d030      	beq.n	8006cd4 <HAL_RCC_OscConfig+0x3d8>
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	695b      	ldr	r3, [r3, #20]
 8006c76:	2b00      	cmp	r3, #0
 8006c78:	d016      	beq.n	8006ca8 <HAL_RCC_OscConfig+0x3ac>
 8006c7a:	4b5a      	ldr	r3, [pc, #360]	@ (8006de4 <HAL_RCC_OscConfig+0x4e8>)
 8006c7c:	2201      	movs	r2, #1
 8006c7e:	601a      	str	r2, [r3, #0]
 8006c80:	f7fd fd52 	bl	8004728 <HAL_GetTick>
 8006c84:	6138      	str	r0, [r7, #16]
 8006c86:	e008      	b.n	8006c9a <HAL_RCC_OscConfig+0x39e>
 8006c88:	f7fd fd4e 	bl	8004728 <HAL_GetTick>
 8006c8c:	4602      	mov	r2, r0
 8006c8e:	693b      	ldr	r3, [r7, #16]
 8006c90:	1ad3      	subs	r3, r2, r3
 8006c92:	2b02      	cmp	r3, #2
 8006c94:	d901      	bls.n	8006c9a <HAL_RCC_OscConfig+0x39e>
 8006c96:	2303      	movs	r3, #3
 8006c98:	e157      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006c9a:	4b4d      	ldr	r3, [pc, #308]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006c9c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006c9e:	f003 0302 	and.w	r3, r3, #2
 8006ca2:	2b00      	cmp	r3, #0
 8006ca4:	d0f0      	beq.n	8006c88 <HAL_RCC_OscConfig+0x38c>
 8006ca6:	e015      	b.n	8006cd4 <HAL_RCC_OscConfig+0x3d8>
 8006ca8:	4b4e      	ldr	r3, [pc, #312]	@ (8006de4 <HAL_RCC_OscConfig+0x4e8>)
 8006caa:	2200      	movs	r2, #0
 8006cac:	601a      	str	r2, [r3, #0]
 8006cae:	f7fd fd3b 	bl	8004728 <HAL_GetTick>
 8006cb2:	6138      	str	r0, [r7, #16]
 8006cb4:	e008      	b.n	8006cc8 <HAL_RCC_OscConfig+0x3cc>
 8006cb6:	f7fd fd37 	bl	8004728 <HAL_GetTick>
 8006cba:	4602      	mov	r2, r0
 8006cbc:	693b      	ldr	r3, [r7, #16]
 8006cbe:	1ad3      	subs	r3, r2, r3
 8006cc0:	2b02      	cmp	r3, #2
 8006cc2:	d901      	bls.n	8006cc8 <HAL_RCC_OscConfig+0x3cc>
 8006cc4:	2303      	movs	r3, #3
 8006cc6:	e140      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006cc8:	4b41      	ldr	r3, [pc, #260]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006cca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006ccc:	f003 0302 	and.w	r3, r3, #2
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d1f0      	bne.n	8006cb6 <HAL_RCC_OscConfig+0x3ba>
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	f003 0304 	and.w	r3, r3, #4
 8006cdc:	2b00      	cmp	r3, #0
 8006cde:	f000 80b5 	beq.w	8006e4c <HAL_RCC_OscConfig+0x550>
 8006ce2:	2300      	movs	r3, #0
 8006ce4:	77fb      	strb	r3, [r7, #31]
 8006ce6:	4b3a      	ldr	r3, [pc, #232]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006ce8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006cea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d10d      	bne.n	8006d0e <HAL_RCC_OscConfig+0x412>
 8006cf2:	4b37      	ldr	r3, [pc, #220]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006cf4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006cf6:	4a36      	ldr	r2, [pc, #216]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006cf8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006cfc:	6253      	str	r3, [r2, #36]	@ 0x24
 8006cfe:	4b34      	ldr	r3, [pc, #208]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006d02:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006d06:	60bb      	str	r3, [r7, #8]
 8006d08:	68bb      	ldr	r3, [r7, #8]
 8006d0a:	2301      	movs	r3, #1
 8006d0c:	77fb      	strb	r3, [r7, #31]
 8006d0e:	4b36      	ldr	r3, [pc, #216]	@ (8006de8 <HAL_RCC_OscConfig+0x4ec>)
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	d118      	bne.n	8006d4c <HAL_RCC_OscConfig+0x450>
 8006d1a:	4b33      	ldr	r3, [pc, #204]	@ (8006de8 <HAL_RCC_OscConfig+0x4ec>)
 8006d1c:	681b      	ldr	r3, [r3, #0]
 8006d1e:	4a32      	ldr	r2, [pc, #200]	@ (8006de8 <HAL_RCC_OscConfig+0x4ec>)
 8006d20:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006d24:	6013      	str	r3, [r2, #0]
 8006d26:	f7fd fcff 	bl	8004728 <HAL_GetTick>
 8006d2a:	6138      	str	r0, [r7, #16]
 8006d2c:	e008      	b.n	8006d40 <HAL_RCC_OscConfig+0x444>
 8006d2e:	f7fd fcfb 	bl	8004728 <HAL_GetTick>
 8006d32:	4602      	mov	r2, r0
 8006d34:	693b      	ldr	r3, [r7, #16]
 8006d36:	1ad3      	subs	r3, r2, r3
 8006d38:	2b64      	cmp	r3, #100	@ 0x64
 8006d3a:	d901      	bls.n	8006d40 <HAL_RCC_OscConfig+0x444>
 8006d3c:	2303      	movs	r3, #3
 8006d3e:	e104      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006d40:	4b29      	ldr	r3, [pc, #164]	@ (8006de8 <HAL_RCC_OscConfig+0x4ec>)
 8006d42:	681b      	ldr	r3, [r3, #0]
 8006d44:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006d48:	2b00      	cmp	r3, #0
 8006d4a:	d0f0      	beq.n	8006d2e <HAL_RCC_OscConfig+0x432>
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	689b      	ldr	r3, [r3, #8]
 8006d50:	2b01      	cmp	r3, #1
 8006d52:	d106      	bne.n	8006d62 <HAL_RCC_OscConfig+0x466>
 8006d54:	4b1e      	ldr	r3, [pc, #120]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d56:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006d58:	4a1d      	ldr	r2, [pc, #116]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d5a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006d5e:	6353      	str	r3, [r2, #52]	@ 0x34
 8006d60:	e02d      	b.n	8006dbe <HAL_RCC_OscConfig+0x4c2>
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	689b      	ldr	r3, [r3, #8]
 8006d66:	2b00      	cmp	r3, #0
 8006d68:	d10c      	bne.n	8006d84 <HAL_RCC_OscConfig+0x488>
 8006d6a:	4b19      	ldr	r3, [pc, #100]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d6c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006d6e:	4a18      	ldr	r2, [pc, #96]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d70:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006d74:	6353      	str	r3, [r2, #52]	@ 0x34
 8006d76:	4b16      	ldr	r3, [pc, #88]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d78:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006d7a:	4a15      	ldr	r2, [pc, #84]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d7c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006d80:	6353      	str	r3, [r2, #52]	@ 0x34
 8006d82:	e01c      	b.n	8006dbe <HAL_RCC_OscConfig+0x4c2>
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	689b      	ldr	r3, [r3, #8]
 8006d88:	2b05      	cmp	r3, #5
 8006d8a:	d10c      	bne.n	8006da6 <HAL_RCC_OscConfig+0x4aa>
 8006d8c:	4b10      	ldr	r3, [pc, #64]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d8e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006d90:	4a0f      	ldr	r2, [pc, #60]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d92:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8006d96:	6353      	str	r3, [r2, #52]	@ 0x34
 8006d98:	4b0d      	ldr	r3, [pc, #52]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d9a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006d9c:	4a0c      	ldr	r2, [pc, #48]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006d9e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006da2:	6353      	str	r3, [r2, #52]	@ 0x34
 8006da4:	e00b      	b.n	8006dbe <HAL_RCC_OscConfig+0x4c2>
 8006da6:	4b0a      	ldr	r3, [pc, #40]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006da8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006daa:	4a09      	ldr	r2, [pc, #36]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006dac:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006db0:	6353      	str	r3, [r2, #52]	@ 0x34
 8006db2:	4b07      	ldr	r3, [pc, #28]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006db4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006db6:	4a06      	ldr	r2, [pc, #24]	@ (8006dd0 <HAL_RCC_OscConfig+0x4d4>)
 8006db8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006dbc:	6353      	str	r3, [r2, #52]	@ 0x34
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	689b      	ldr	r3, [r3, #8]
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d024      	beq.n	8006e10 <HAL_RCC_OscConfig+0x514>
 8006dc6:	f7fd fcaf 	bl	8004728 <HAL_GetTick>
 8006dca:	6138      	str	r0, [r7, #16]
 8006dcc:	e019      	b.n	8006e02 <HAL_RCC_OscConfig+0x506>
 8006dce:	bf00      	nop
 8006dd0:	40023800 	.word	0x40023800
 8006dd4:	0800dbb8 	.word	0x0800dbb8
 8006dd8:	20000008 	.word	0x20000008
 8006ddc:	20000020 	.word	0x20000020
 8006de0:	42470020 	.word	0x42470020
 8006de4:	42470680 	.word	0x42470680
 8006de8:	40007000 	.word	0x40007000
 8006dec:	f7fd fc9c 	bl	8004728 <HAL_GetTick>
 8006df0:	4602      	mov	r2, r0
 8006df2:	693b      	ldr	r3, [r7, #16]
 8006df4:	1ad3      	subs	r3, r2, r3
 8006df6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006dfa:	4293      	cmp	r3, r2
 8006dfc:	d901      	bls.n	8006e02 <HAL_RCC_OscConfig+0x506>
 8006dfe:	2303      	movs	r3, #3
 8006e00:	e0a3      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006e02:	4b54      	ldr	r3, [pc, #336]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006e04:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006e06:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006e0a:	2b00      	cmp	r3, #0
 8006e0c:	d0ee      	beq.n	8006dec <HAL_RCC_OscConfig+0x4f0>
 8006e0e:	e014      	b.n	8006e3a <HAL_RCC_OscConfig+0x53e>
 8006e10:	f7fd fc8a 	bl	8004728 <HAL_GetTick>
 8006e14:	6138      	str	r0, [r7, #16]
 8006e16:	e00a      	b.n	8006e2e <HAL_RCC_OscConfig+0x532>
 8006e18:	f7fd fc86 	bl	8004728 <HAL_GetTick>
 8006e1c:	4602      	mov	r2, r0
 8006e1e:	693b      	ldr	r3, [r7, #16]
 8006e20:	1ad3      	subs	r3, r2, r3
 8006e22:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006e26:	4293      	cmp	r3, r2
 8006e28:	d901      	bls.n	8006e2e <HAL_RCC_OscConfig+0x532>
 8006e2a:	2303      	movs	r3, #3
 8006e2c:	e08d      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006e2e:	4b49      	ldr	r3, [pc, #292]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006e30:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006e32:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006e36:	2b00      	cmp	r3, #0
 8006e38:	d1ee      	bne.n	8006e18 <HAL_RCC_OscConfig+0x51c>
 8006e3a:	7ffb      	ldrb	r3, [r7, #31]
 8006e3c:	2b01      	cmp	r3, #1
 8006e3e:	d105      	bne.n	8006e4c <HAL_RCC_OscConfig+0x550>
 8006e40:	4b44      	ldr	r3, [pc, #272]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006e42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006e44:	4a43      	ldr	r2, [pc, #268]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006e46:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006e4a:	6253      	str	r3, [r2, #36]	@ 0x24
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006e50:	2b00      	cmp	r3, #0
 8006e52:	d079      	beq.n	8006f48 <HAL_RCC_OscConfig+0x64c>
 8006e54:	69bb      	ldr	r3, [r7, #24]
 8006e56:	2b0c      	cmp	r3, #12
 8006e58:	d056      	beq.n	8006f08 <HAL_RCC_OscConfig+0x60c>
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006e5e:	2b02      	cmp	r3, #2
 8006e60:	d13b      	bne.n	8006eda <HAL_RCC_OscConfig+0x5de>
 8006e62:	4b3d      	ldr	r3, [pc, #244]	@ (8006f58 <HAL_RCC_OscConfig+0x65c>)
 8006e64:	2200      	movs	r2, #0
 8006e66:	601a      	str	r2, [r3, #0]
 8006e68:	f7fd fc5e 	bl	8004728 <HAL_GetTick>
 8006e6c:	6138      	str	r0, [r7, #16]
 8006e6e:	e008      	b.n	8006e82 <HAL_RCC_OscConfig+0x586>
 8006e70:	f7fd fc5a 	bl	8004728 <HAL_GetTick>
 8006e74:	4602      	mov	r2, r0
 8006e76:	693b      	ldr	r3, [r7, #16]
 8006e78:	1ad3      	subs	r3, r2, r3
 8006e7a:	2b02      	cmp	r3, #2
 8006e7c:	d901      	bls.n	8006e82 <HAL_RCC_OscConfig+0x586>
 8006e7e:	2303      	movs	r3, #3
 8006e80:	e063      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006e82:	4b34      	ldr	r3, [pc, #208]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006e84:	681b      	ldr	r3, [r3, #0]
 8006e86:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006e8a:	2b00      	cmp	r3, #0
 8006e8c:	d1f0      	bne.n	8006e70 <HAL_RCC_OscConfig+0x574>
 8006e8e:	4b31      	ldr	r3, [pc, #196]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006e90:	689b      	ldr	r3, [r3, #8]
 8006e92:	f423 027d 	bic.w	r2, r3, #16580608	@ 0xfd0000
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	6a99      	ldr	r1, [r3, #40]	@ 0x28
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e9e:	4319      	orrs	r1, r3
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006ea4:	430b      	orrs	r3, r1
 8006ea6:	492b      	ldr	r1, [pc, #172]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006ea8:	4313      	orrs	r3, r2
 8006eaa:	608b      	str	r3, [r1, #8]
 8006eac:	4b2a      	ldr	r3, [pc, #168]	@ (8006f58 <HAL_RCC_OscConfig+0x65c>)
 8006eae:	2201      	movs	r2, #1
 8006eb0:	601a      	str	r2, [r3, #0]
 8006eb2:	f7fd fc39 	bl	8004728 <HAL_GetTick>
 8006eb6:	6138      	str	r0, [r7, #16]
 8006eb8:	e008      	b.n	8006ecc <HAL_RCC_OscConfig+0x5d0>
 8006eba:	f7fd fc35 	bl	8004728 <HAL_GetTick>
 8006ebe:	4602      	mov	r2, r0
 8006ec0:	693b      	ldr	r3, [r7, #16]
 8006ec2:	1ad3      	subs	r3, r2, r3
 8006ec4:	2b02      	cmp	r3, #2
 8006ec6:	d901      	bls.n	8006ecc <HAL_RCC_OscConfig+0x5d0>
 8006ec8:	2303      	movs	r3, #3
 8006eca:	e03e      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006ecc:	4b21      	ldr	r3, [pc, #132]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006ece:	681b      	ldr	r3, [r3, #0]
 8006ed0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006ed4:	2b00      	cmp	r3, #0
 8006ed6:	d0f0      	beq.n	8006eba <HAL_RCC_OscConfig+0x5be>
 8006ed8:	e036      	b.n	8006f48 <HAL_RCC_OscConfig+0x64c>
 8006eda:	4b1f      	ldr	r3, [pc, #124]	@ (8006f58 <HAL_RCC_OscConfig+0x65c>)
 8006edc:	2200      	movs	r2, #0
 8006ede:	601a      	str	r2, [r3, #0]
 8006ee0:	f7fd fc22 	bl	8004728 <HAL_GetTick>
 8006ee4:	6138      	str	r0, [r7, #16]
 8006ee6:	e008      	b.n	8006efa <HAL_RCC_OscConfig+0x5fe>
 8006ee8:	f7fd fc1e 	bl	8004728 <HAL_GetTick>
 8006eec:	4602      	mov	r2, r0
 8006eee:	693b      	ldr	r3, [r7, #16]
 8006ef0:	1ad3      	subs	r3, r2, r3
 8006ef2:	2b02      	cmp	r3, #2
 8006ef4:	d901      	bls.n	8006efa <HAL_RCC_OscConfig+0x5fe>
 8006ef6:	2303      	movs	r3, #3
 8006ef8:	e027      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006efa:	4b16      	ldr	r3, [pc, #88]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006efc:	681b      	ldr	r3, [r3, #0]
 8006efe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	d1f0      	bne.n	8006ee8 <HAL_RCC_OscConfig+0x5ec>
 8006f06:	e01f      	b.n	8006f48 <HAL_RCC_OscConfig+0x64c>
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006f0c:	2b01      	cmp	r3, #1
 8006f0e:	d101      	bne.n	8006f14 <HAL_RCC_OscConfig+0x618>
 8006f10:	2301      	movs	r3, #1
 8006f12:	e01a      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006f14:	4b0f      	ldr	r3, [pc, #60]	@ (8006f54 <HAL_RCC_OscConfig+0x658>)
 8006f16:	689b      	ldr	r3, [r3, #8]
 8006f18:	617b      	str	r3, [r7, #20]
 8006f1a:	697b      	ldr	r3, [r7, #20]
 8006f1c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f24:	429a      	cmp	r2, r3
 8006f26:	d10d      	bne.n	8006f44 <HAL_RCC_OscConfig+0x648>
 8006f28:	697b      	ldr	r3, [r7, #20]
 8006f2a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8006f2e:	687b      	ldr	r3, [r7, #4]
 8006f30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006f32:	429a      	cmp	r2, r3
 8006f34:	d106      	bne.n	8006f44 <HAL_RCC_OscConfig+0x648>
 8006f36:	697b      	ldr	r3, [r7, #20]
 8006f38:	f403 0240 	and.w	r2, r3, #12582912	@ 0xc00000
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006f40:	429a      	cmp	r2, r3
 8006f42:	d001      	beq.n	8006f48 <HAL_RCC_OscConfig+0x64c>
 8006f44:	2301      	movs	r3, #1
 8006f46:	e000      	b.n	8006f4a <HAL_RCC_OscConfig+0x64e>
 8006f48:	2300      	movs	r3, #0
 8006f4a:	4618      	mov	r0, r3
 8006f4c:	3720      	adds	r7, #32
 8006f4e:	46bd      	mov	sp, r7
 8006f50:	bd80      	pop	{r7, pc}
 8006f52:	bf00      	nop
 8006f54:	40023800 	.word	0x40023800
 8006f58:	42470060 	.word	0x42470060

08006f5c <HAL_RCC_ClockConfig>:
 8006f5c:	b580      	push	{r7, lr}
 8006f5e:	b084      	sub	sp, #16
 8006f60:	af00      	add	r7, sp, #0
 8006f62:	6078      	str	r0, [r7, #4]
 8006f64:	6039      	str	r1, [r7, #0]
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	2b00      	cmp	r3, #0
 8006f6a:	d101      	bne.n	8006f70 <HAL_RCC_ClockConfig+0x14>
 8006f6c:	2301      	movs	r3, #1
 8006f6e:	e11a      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 8006f70:	4b8f      	ldr	r3, [pc, #572]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	f003 0301 	and.w	r3, r3, #1
 8006f78:	683a      	ldr	r2, [r7, #0]
 8006f7a:	429a      	cmp	r2, r3
 8006f7c:	d919      	bls.n	8006fb2 <HAL_RCC_ClockConfig+0x56>
 8006f7e:	683b      	ldr	r3, [r7, #0]
 8006f80:	2b01      	cmp	r3, #1
 8006f82:	d105      	bne.n	8006f90 <HAL_RCC_ClockConfig+0x34>
 8006f84:	4b8a      	ldr	r3, [pc, #552]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8006f86:	681b      	ldr	r3, [r3, #0]
 8006f88:	4a89      	ldr	r2, [pc, #548]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8006f8a:	f043 0304 	orr.w	r3, r3, #4
 8006f8e:	6013      	str	r3, [r2, #0]
 8006f90:	4b87      	ldr	r3, [pc, #540]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8006f92:	681b      	ldr	r3, [r3, #0]
 8006f94:	f023 0201 	bic.w	r2, r3, #1
 8006f98:	4985      	ldr	r1, [pc, #532]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8006f9a:	683b      	ldr	r3, [r7, #0]
 8006f9c:	4313      	orrs	r3, r2
 8006f9e:	600b      	str	r3, [r1, #0]
 8006fa0:	4b83      	ldr	r3, [pc, #524]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	f003 0301 	and.w	r3, r3, #1
 8006fa8:	683a      	ldr	r2, [r7, #0]
 8006faa:	429a      	cmp	r2, r3
 8006fac:	d001      	beq.n	8006fb2 <HAL_RCC_ClockConfig+0x56>
 8006fae:	2301      	movs	r3, #1
 8006fb0:	e0f9      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 8006fb2:	687b      	ldr	r3, [r7, #4]
 8006fb4:	681b      	ldr	r3, [r3, #0]
 8006fb6:	f003 0302 	and.w	r3, r3, #2
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d008      	beq.n	8006fd0 <HAL_RCC_ClockConfig+0x74>
 8006fbe:	4b7d      	ldr	r3, [pc, #500]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8006fc0:	689b      	ldr	r3, [r3, #8]
 8006fc2:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	689b      	ldr	r3, [r3, #8]
 8006fca:	497a      	ldr	r1, [pc, #488]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8006fcc:	4313      	orrs	r3, r2
 8006fce:	608b      	str	r3, [r1, #8]
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	f003 0301 	and.w	r3, r3, #1
 8006fd8:	2b00      	cmp	r3, #0
 8006fda:	f000 808e 	beq.w	80070fa <HAL_RCC_ClockConfig+0x19e>
 8006fde:	687b      	ldr	r3, [r7, #4]
 8006fe0:	685b      	ldr	r3, [r3, #4]
 8006fe2:	2b02      	cmp	r3, #2
 8006fe4:	d107      	bne.n	8006ff6 <HAL_RCC_ClockConfig+0x9a>
 8006fe6:	4b73      	ldr	r3, [pc, #460]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006fee:	2b00      	cmp	r3, #0
 8006ff0:	d121      	bne.n	8007036 <HAL_RCC_ClockConfig+0xda>
 8006ff2:	2301      	movs	r3, #1
 8006ff4:	e0d7      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	685b      	ldr	r3, [r3, #4]
 8006ffa:	2b03      	cmp	r3, #3
 8006ffc:	d107      	bne.n	800700e <HAL_RCC_ClockConfig+0xb2>
 8006ffe:	4b6d      	ldr	r3, [pc, #436]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007006:	2b00      	cmp	r3, #0
 8007008:	d115      	bne.n	8007036 <HAL_RCC_ClockConfig+0xda>
 800700a:	2301      	movs	r3, #1
 800700c:	e0cb      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	685b      	ldr	r3, [r3, #4]
 8007012:	2b01      	cmp	r3, #1
 8007014:	d107      	bne.n	8007026 <HAL_RCC_ClockConfig+0xca>
 8007016:	4b67      	ldr	r3, [pc, #412]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007018:	681b      	ldr	r3, [r3, #0]
 800701a:	f003 0302 	and.w	r3, r3, #2
 800701e:	2b00      	cmp	r3, #0
 8007020:	d109      	bne.n	8007036 <HAL_RCC_ClockConfig+0xda>
 8007022:	2301      	movs	r3, #1
 8007024:	e0bf      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 8007026:	4b63      	ldr	r3, [pc, #396]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800702e:	2b00      	cmp	r3, #0
 8007030:	d101      	bne.n	8007036 <HAL_RCC_ClockConfig+0xda>
 8007032:	2301      	movs	r3, #1
 8007034:	e0b7      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 8007036:	4b5f      	ldr	r3, [pc, #380]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007038:	689b      	ldr	r3, [r3, #8]
 800703a:	f023 0203 	bic.w	r2, r3, #3
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	685b      	ldr	r3, [r3, #4]
 8007042:	495c      	ldr	r1, [pc, #368]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007044:	4313      	orrs	r3, r2
 8007046:	608b      	str	r3, [r1, #8]
 8007048:	f7fd fb6e 	bl	8004728 <HAL_GetTick>
 800704c:	60f8      	str	r0, [r7, #12]
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	685b      	ldr	r3, [r3, #4]
 8007052:	2b02      	cmp	r3, #2
 8007054:	d112      	bne.n	800707c <HAL_RCC_ClockConfig+0x120>
 8007056:	e00a      	b.n	800706e <HAL_RCC_ClockConfig+0x112>
 8007058:	f7fd fb66 	bl	8004728 <HAL_GetTick>
 800705c:	4602      	mov	r2, r0
 800705e:	68fb      	ldr	r3, [r7, #12]
 8007060:	1ad3      	subs	r3, r2, r3
 8007062:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007066:	4293      	cmp	r3, r2
 8007068:	d901      	bls.n	800706e <HAL_RCC_ClockConfig+0x112>
 800706a:	2303      	movs	r3, #3
 800706c:	e09b      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 800706e:	4b51      	ldr	r3, [pc, #324]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007070:	689b      	ldr	r3, [r3, #8]
 8007072:	f003 030c 	and.w	r3, r3, #12
 8007076:	2b08      	cmp	r3, #8
 8007078:	d1ee      	bne.n	8007058 <HAL_RCC_ClockConfig+0xfc>
 800707a:	e03e      	b.n	80070fa <HAL_RCC_ClockConfig+0x19e>
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	685b      	ldr	r3, [r3, #4]
 8007080:	2b03      	cmp	r3, #3
 8007082:	d112      	bne.n	80070aa <HAL_RCC_ClockConfig+0x14e>
 8007084:	e00a      	b.n	800709c <HAL_RCC_ClockConfig+0x140>
 8007086:	f7fd fb4f 	bl	8004728 <HAL_GetTick>
 800708a:	4602      	mov	r2, r0
 800708c:	68fb      	ldr	r3, [r7, #12]
 800708e:	1ad3      	subs	r3, r2, r3
 8007090:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007094:	4293      	cmp	r3, r2
 8007096:	d901      	bls.n	800709c <HAL_RCC_ClockConfig+0x140>
 8007098:	2303      	movs	r3, #3
 800709a:	e084      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 800709c:	4b45      	ldr	r3, [pc, #276]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 800709e:	689b      	ldr	r3, [r3, #8]
 80070a0:	f003 030c 	and.w	r3, r3, #12
 80070a4:	2b0c      	cmp	r3, #12
 80070a6:	d1ee      	bne.n	8007086 <HAL_RCC_ClockConfig+0x12a>
 80070a8:	e027      	b.n	80070fa <HAL_RCC_ClockConfig+0x19e>
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	685b      	ldr	r3, [r3, #4]
 80070ae:	2b01      	cmp	r3, #1
 80070b0:	d11d      	bne.n	80070ee <HAL_RCC_ClockConfig+0x192>
 80070b2:	e00a      	b.n	80070ca <HAL_RCC_ClockConfig+0x16e>
 80070b4:	f7fd fb38 	bl	8004728 <HAL_GetTick>
 80070b8:	4602      	mov	r2, r0
 80070ba:	68fb      	ldr	r3, [r7, #12]
 80070bc:	1ad3      	subs	r3, r2, r3
 80070be:	f241 3288 	movw	r2, #5000	@ 0x1388
 80070c2:	4293      	cmp	r3, r2
 80070c4:	d901      	bls.n	80070ca <HAL_RCC_ClockConfig+0x16e>
 80070c6:	2303      	movs	r3, #3
 80070c8:	e06d      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 80070ca:	4b3a      	ldr	r3, [pc, #232]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 80070cc:	689b      	ldr	r3, [r3, #8]
 80070ce:	f003 030c 	and.w	r3, r3, #12
 80070d2:	2b04      	cmp	r3, #4
 80070d4:	d1ee      	bne.n	80070b4 <HAL_RCC_ClockConfig+0x158>
 80070d6:	e010      	b.n	80070fa <HAL_RCC_ClockConfig+0x19e>
 80070d8:	f7fd fb26 	bl	8004728 <HAL_GetTick>
 80070dc:	4602      	mov	r2, r0
 80070de:	68fb      	ldr	r3, [r7, #12]
 80070e0:	1ad3      	subs	r3, r2, r3
 80070e2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80070e6:	4293      	cmp	r3, r2
 80070e8:	d901      	bls.n	80070ee <HAL_RCC_ClockConfig+0x192>
 80070ea:	2303      	movs	r3, #3
 80070ec:	e05b      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 80070ee:	4b31      	ldr	r3, [pc, #196]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 80070f0:	689b      	ldr	r3, [r3, #8]
 80070f2:	f003 030c 	and.w	r3, r3, #12
 80070f6:	2b00      	cmp	r3, #0
 80070f8:	d1ee      	bne.n	80070d8 <HAL_RCC_ClockConfig+0x17c>
 80070fa:	4b2d      	ldr	r3, [pc, #180]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 80070fc:	681b      	ldr	r3, [r3, #0]
 80070fe:	f003 0301 	and.w	r3, r3, #1
 8007102:	683a      	ldr	r2, [r7, #0]
 8007104:	429a      	cmp	r2, r3
 8007106:	d219      	bcs.n	800713c <HAL_RCC_ClockConfig+0x1e0>
 8007108:	683b      	ldr	r3, [r7, #0]
 800710a:	2b01      	cmp	r3, #1
 800710c:	d105      	bne.n	800711a <HAL_RCC_ClockConfig+0x1be>
 800710e:	4b28      	ldr	r3, [pc, #160]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8007110:	681b      	ldr	r3, [r3, #0]
 8007112:	4a27      	ldr	r2, [pc, #156]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8007114:	f043 0304 	orr.w	r3, r3, #4
 8007118:	6013      	str	r3, [r2, #0]
 800711a:	4b25      	ldr	r3, [pc, #148]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	f023 0201 	bic.w	r2, r3, #1
 8007122:	4923      	ldr	r1, [pc, #140]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 8007124:	683b      	ldr	r3, [r7, #0]
 8007126:	4313      	orrs	r3, r2
 8007128:	600b      	str	r3, [r1, #0]
 800712a:	4b21      	ldr	r3, [pc, #132]	@ (80071b0 <HAL_RCC_ClockConfig+0x254>)
 800712c:	681b      	ldr	r3, [r3, #0]
 800712e:	f003 0301 	and.w	r3, r3, #1
 8007132:	683a      	ldr	r2, [r7, #0]
 8007134:	429a      	cmp	r2, r3
 8007136:	d001      	beq.n	800713c <HAL_RCC_ClockConfig+0x1e0>
 8007138:	2301      	movs	r3, #1
 800713a:	e034      	b.n	80071a6 <HAL_RCC_ClockConfig+0x24a>
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	681b      	ldr	r3, [r3, #0]
 8007140:	f003 0304 	and.w	r3, r3, #4
 8007144:	2b00      	cmp	r3, #0
 8007146:	d008      	beq.n	800715a <HAL_RCC_ClockConfig+0x1fe>
 8007148:	4b1a      	ldr	r3, [pc, #104]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 800714a:	689b      	ldr	r3, [r3, #8]
 800714c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	68db      	ldr	r3, [r3, #12]
 8007154:	4917      	ldr	r1, [pc, #92]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007156:	4313      	orrs	r3, r2
 8007158:	608b      	str	r3, [r1, #8]
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	681b      	ldr	r3, [r3, #0]
 800715e:	f003 0308 	and.w	r3, r3, #8
 8007162:	2b00      	cmp	r3, #0
 8007164:	d009      	beq.n	800717a <HAL_RCC_ClockConfig+0x21e>
 8007166:	4b13      	ldr	r3, [pc, #76]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007168:	689b      	ldr	r3, [r3, #8]
 800716a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	691b      	ldr	r3, [r3, #16]
 8007172:	00db      	lsls	r3, r3, #3
 8007174:	490f      	ldr	r1, [pc, #60]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007176:	4313      	orrs	r3, r2
 8007178:	608b      	str	r3, [r1, #8]
 800717a:	f000 f823 	bl	80071c4 <HAL_RCC_GetSysClockFreq>
 800717e:	4602      	mov	r2, r0
 8007180:	4b0c      	ldr	r3, [pc, #48]	@ (80071b4 <HAL_RCC_ClockConfig+0x258>)
 8007182:	689b      	ldr	r3, [r3, #8]
 8007184:	091b      	lsrs	r3, r3, #4
 8007186:	f003 030f 	and.w	r3, r3, #15
 800718a:	490b      	ldr	r1, [pc, #44]	@ (80071b8 <HAL_RCC_ClockConfig+0x25c>)
 800718c:	5ccb      	ldrb	r3, [r1, r3]
 800718e:	fa22 f303 	lsr.w	r3, r2, r3
 8007192:	4a0a      	ldr	r2, [pc, #40]	@ (80071bc <HAL_RCC_ClockConfig+0x260>)
 8007194:	6013      	str	r3, [r2, #0]
 8007196:	4b0a      	ldr	r3, [pc, #40]	@ (80071c0 <HAL_RCC_ClockConfig+0x264>)
 8007198:	681b      	ldr	r3, [r3, #0]
 800719a:	4618      	mov	r0, r3
 800719c:	f7fd fa78 	bl	8004690 <HAL_InitTick>
 80071a0:	4603      	mov	r3, r0
 80071a2:	72fb      	strb	r3, [r7, #11]
 80071a4:	7afb      	ldrb	r3, [r7, #11]
 80071a6:	4618      	mov	r0, r3
 80071a8:	3710      	adds	r7, #16
 80071aa:	46bd      	mov	sp, r7
 80071ac:	bd80      	pop	{r7, pc}
 80071ae:	bf00      	nop
 80071b0:	40023c00 	.word	0x40023c00
 80071b4:	40023800 	.word	0x40023800
 80071b8:	0800dbb8 	.word	0x0800dbb8
 80071bc:	20000008 	.word	0x20000008
 80071c0:	20000020 	.word	0x20000020

080071c4 <HAL_RCC_GetSysClockFreq>:
 80071c4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80071c8:	b092      	sub	sp, #72	@ 0x48
 80071ca:	af00      	add	r7, sp, #0
 80071cc:	4b79      	ldr	r3, [pc, #484]	@ (80073b4 <HAL_RCC_GetSysClockFreq+0x1f0>)
 80071ce:	689b      	ldr	r3, [r3, #8]
 80071d0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80071d2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80071d4:	f003 030c 	and.w	r3, r3, #12
 80071d8:	2b0c      	cmp	r3, #12
 80071da:	d00d      	beq.n	80071f8 <HAL_RCC_GetSysClockFreq+0x34>
 80071dc:	2b0c      	cmp	r3, #12
 80071de:	f200 80d5 	bhi.w	800738c <HAL_RCC_GetSysClockFreq+0x1c8>
 80071e2:	2b04      	cmp	r3, #4
 80071e4:	d002      	beq.n	80071ec <HAL_RCC_GetSysClockFreq+0x28>
 80071e6:	2b08      	cmp	r3, #8
 80071e8:	d003      	beq.n	80071f2 <HAL_RCC_GetSysClockFreq+0x2e>
 80071ea:	e0cf      	b.n	800738c <HAL_RCC_GetSysClockFreq+0x1c8>
 80071ec:	4b72      	ldr	r3, [pc, #456]	@ (80073b8 <HAL_RCC_GetSysClockFreq+0x1f4>)
 80071ee:	643b      	str	r3, [r7, #64]	@ 0x40
 80071f0:	e0da      	b.n	80073a8 <HAL_RCC_GetSysClockFreq+0x1e4>
 80071f2:	4b72      	ldr	r3, [pc, #456]	@ (80073bc <HAL_RCC_GetSysClockFreq+0x1f8>)
 80071f4:	643b      	str	r3, [r7, #64]	@ 0x40
 80071f6:	e0d7      	b.n	80073a8 <HAL_RCC_GetSysClockFreq+0x1e4>
 80071f8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80071fa:	0c9b      	lsrs	r3, r3, #18
 80071fc:	f003 020f 	and.w	r2, r3, #15
 8007200:	4b6f      	ldr	r3, [pc, #444]	@ (80073c0 <HAL_RCC_GetSysClockFreq+0x1fc>)
 8007202:	5c9b      	ldrb	r3, [r3, r2]
 8007204:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007206:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007208:	0d9b      	lsrs	r3, r3, #22
 800720a:	f003 0303 	and.w	r3, r3, #3
 800720e:	3301      	adds	r3, #1
 8007210:	637b      	str	r3, [r7, #52]	@ 0x34
 8007212:	4b68      	ldr	r3, [pc, #416]	@ (80073b4 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8007214:	689b      	ldr	r3, [r3, #8]
 8007216:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800721a:	2b00      	cmp	r3, #0
 800721c:	d05d      	beq.n	80072da <HAL_RCC_GetSysClockFreq+0x116>
 800721e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007220:	2200      	movs	r2, #0
 8007222:	4618      	mov	r0, r3
 8007224:	4611      	mov	r1, r2
 8007226:	4604      	mov	r4, r0
 8007228:	460d      	mov	r5, r1
 800722a:	4622      	mov	r2, r4
 800722c:	462b      	mov	r3, r5
 800722e:	f04f 0000 	mov.w	r0, #0
 8007232:	f04f 0100 	mov.w	r1, #0
 8007236:	0159      	lsls	r1, r3, #5
 8007238:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800723c:	0150      	lsls	r0, r2, #5
 800723e:	4602      	mov	r2, r0
 8007240:	460b      	mov	r3, r1
 8007242:	4621      	mov	r1, r4
 8007244:	1a51      	subs	r1, r2, r1
 8007246:	6139      	str	r1, [r7, #16]
 8007248:	4629      	mov	r1, r5
 800724a:	eb63 0301 	sbc.w	r3, r3, r1
 800724e:	617b      	str	r3, [r7, #20]
 8007250:	f04f 0200 	mov.w	r2, #0
 8007254:	f04f 0300 	mov.w	r3, #0
 8007258:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800725c:	4659      	mov	r1, fp
 800725e:	018b      	lsls	r3, r1, #6
 8007260:	4651      	mov	r1, sl
 8007262:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8007266:	4651      	mov	r1, sl
 8007268:	018a      	lsls	r2, r1, #6
 800726a:	46d4      	mov	ip, sl
 800726c:	ebb2 080c 	subs.w	r8, r2, ip
 8007270:	4659      	mov	r1, fp
 8007272:	eb63 0901 	sbc.w	r9, r3, r1
 8007276:	f04f 0200 	mov.w	r2, #0
 800727a:	f04f 0300 	mov.w	r3, #0
 800727e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007282:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007286:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800728a:	4690      	mov	r8, r2
 800728c:	4699      	mov	r9, r3
 800728e:	4623      	mov	r3, r4
 8007290:	eb18 0303 	adds.w	r3, r8, r3
 8007294:	60bb      	str	r3, [r7, #8]
 8007296:	462b      	mov	r3, r5
 8007298:	eb49 0303 	adc.w	r3, r9, r3
 800729c:	60fb      	str	r3, [r7, #12]
 800729e:	f04f 0200 	mov.w	r2, #0
 80072a2:	f04f 0300 	mov.w	r3, #0
 80072a6:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80072aa:	4629      	mov	r1, r5
 80072ac:	024b      	lsls	r3, r1, #9
 80072ae:	4620      	mov	r0, r4
 80072b0:	4629      	mov	r1, r5
 80072b2:	4604      	mov	r4, r0
 80072b4:	ea43 53d4 	orr.w	r3, r3, r4, lsr #23
 80072b8:	4601      	mov	r1, r0
 80072ba:	024a      	lsls	r2, r1, #9
 80072bc:	4610      	mov	r0, r2
 80072be:	4619      	mov	r1, r3
 80072c0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80072c2:	2200      	movs	r2, #0
 80072c4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80072c6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80072c8:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80072cc:	f7f9 ff7e 	bl	80011cc <__aeabi_uldivmod>
 80072d0:	4602      	mov	r2, r0
 80072d2:	460b      	mov	r3, r1
 80072d4:	4613      	mov	r3, r2
 80072d6:	647b      	str	r3, [r7, #68]	@ 0x44
 80072d8:	e055      	b.n	8007386 <HAL_RCC_GetSysClockFreq+0x1c2>
 80072da:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80072dc:	2200      	movs	r2, #0
 80072de:	623b      	str	r3, [r7, #32]
 80072e0:	627a      	str	r2, [r7, #36]	@ 0x24
 80072e2:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80072e6:	4642      	mov	r2, r8
 80072e8:	464b      	mov	r3, r9
 80072ea:	f04f 0000 	mov.w	r0, #0
 80072ee:	f04f 0100 	mov.w	r1, #0
 80072f2:	0159      	lsls	r1, r3, #5
 80072f4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80072f8:	0150      	lsls	r0, r2, #5
 80072fa:	4602      	mov	r2, r0
 80072fc:	460b      	mov	r3, r1
 80072fe:	46c4      	mov	ip, r8
 8007300:	ebb2 0a0c 	subs.w	sl, r2, ip
 8007304:	4640      	mov	r0, r8
 8007306:	4649      	mov	r1, r9
 8007308:	468c      	mov	ip, r1
 800730a:	eb63 0b0c 	sbc.w	fp, r3, ip
 800730e:	f04f 0200 	mov.w	r2, #0
 8007312:	f04f 0300 	mov.w	r3, #0
 8007316:	ea4f 138b 	mov.w	r3, fp, lsl #6
 800731a:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800731e:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8007322:	ebb2 040a 	subs.w	r4, r2, sl
 8007326:	eb63 050b 	sbc.w	r5, r3, fp
 800732a:	f04f 0200 	mov.w	r2, #0
 800732e:	f04f 0300 	mov.w	r3, #0
 8007332:	00eb      	lsls	r3, r5, #3
 8007334:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007338:	00e2      	lsls	r2, r4, #3
 800733a:	4614      	mov	r4, r2
 800733c:	461d      	mov	r5, r3
 800733e:	4603      	mov	r3, r0
 8007340:	18e3      	adds	r3, r4, r3
 8007342:	603b      	str	r3, [r7, #0]
 8007344:	460b      	mov	r3, r1
 8007346:	eb45 0303 	adc.w	r3, r5, r3
 800734a:	607b      	str	r3, [r7, #4]
 800734c:	f04f 0200 	mov.w	r2, #0
 8007350:	f04f 0300 	mov.w	r3, #0
 8007354:	e9d7 4500 	ldrd	r4, r5, [r7]
 8007358:	4629      	mov	r1, r5
 800735a:	028b      	lsls	r3, r1, #10
 800735c:	4620      	mov	r0, r4
 800735e:	4629      	mov	r1, r5
 8007360:	4604      	mov	r4, r0
 8007362:	ea43 5394 	orr.w	r3, r3, r4, lsr #22
 8007366:	4601      	mov	r1, r0
 8007368:	028a      	lsls	r2, r1, #10
 800736a:	4610      	mov	r0, r2
 800736c:	4619      	mov	r1, r3
 800736e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007370:	2200      	movs	r2, #0
 8007372:	61bb      	str	r3, [r7, #24]
 8007374:	61fa      	str	r2, [r7, #28]
 8007376:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800737a:	f7f9 ff27 	bl	80011cc <__aeabi_uldivmod>
 800737e:	4602      	mov	r2, r0
 8007380:	460b      	mov	r3, r1
 8007382:	4613      	mov	r3, r2
 8007384:	647b      	str	r3, [r7, #68]	@ 0x44
 8007386:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007388:	643b      	str	r3, [r7, #64]	@ 0x40
 800738a:	e00d      	b.n	80073a8 <HAL_RCC_GetSysClockFreq+0x1e4>
 800738c:	4b09      	ldr	r3, [pc, #36]	@ (80073b4 <HAL_RCC_GetSysClockFreq+0x1f0>)
 800738e:	685b      	ldr	r3, [r3, #4]
 8007390:	0b5b      	lsrs	r3, r3, #13
 8007392:	f003 0307 	and.w	r3, r3, #7
 8007396:	633b      	str	r3, [r7, #48]	@ 0x30
 8007398:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800739a:	3301      	adds	r3, #1
 800739c:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80073a0:	fa02 f303 	lsl.w	r3, r2, r3
 80073a4:	643b      	str	r3, [r7, #64]	@ 0x40
 80073a6:	bf00      	nop
 80073a8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80073aa:	4618      	mov	r0, r3
 80073ac:	3748      	adds	r7, #72	@ 0x48
 80073ae:	46bd      	mov	sp, r7
 80073b0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80073b4:	40023800 	.word	0x40023800
 80073b8:	00f42400 	.word	0x00f42400
 80073bc:	007a1200 	.word	0x007a1200
 80073c0:	0800dbac 	.word	0x0800dbac

080073c4 <HAL_RCC_GetHCLKFreq>:
 80073c4:	b480      	push	{r7}
 80073c6:	af00      	add	r7, sp, #0
 80073c8:	4b02      	ldr	r3, [pc, #8]	@ (80073d4 <HAL_RCC_GetHCLKFreq+0x10>)
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	4618      	mov	r0, r3
 80073ce:	46bd      	mov	sp, r7
 80073d0:	bc80      	pop	{r7}
 80073d2:	4770      	bx	lr
 80073d4:	20000008 	.word	0x20000008

080073d8 <HAL_RCC_GetPCLK1Freq>:
 80073d8:	b580      	push	{r7, lr}
 80073da:	af00      	add	r7, sp, #0
 80073dc:	f7ff fff2 	bl	80073c4 <HAL_RCC_GetHCLKFreq>
 80073e0:	4602      	mov	r2, r0
 80073e2:	4b05      	ldr	r3, [pc, #20]	@ (80073f8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80073e4:	689b      	ldr	r3, [r3, #8]
 80073e6:	0a1b      	lsrs	r3, r3, #8
 80073e8:	f003 0307 	and.w	r3, r3, #7
 80073ec:	4903      	ldr	r1, [pc, #12]	@ (80073fc <HAL_RCC_GetPCLK1Freq+0x24>)
 80073ee:	5ccb      	ldrb	r3, [r1, r3]
 80073f0:	fa22 f303 	lsr.w	r3, r2, r3
 80073f4:	4618      	mov	r0, r3
 80073f6:	bd80      	pop	{r7, pc}
 80073f8:	40023800 	.word	0x40023800
 80073fc:	0800dbc8 	.word	0x0800dbc8

08007400 <HAL_RCC_GetPCLK2Freq>:
 8007400:	b580      	push	{r7, lr}
 8007402:	af00      	add	r7, sp, #0
 8007404:	f7ff ffde 	bl	80073c4 <HAL_RCC_GetHCLKFreq>
 8007408:	4602      	mov	r2, r0
 800740a:	4b05      	ldr	r3, [pc, #20]	@ (8007420 <HAL_RCC_GetPCLK2Freq+0x20>)
 800740c:	689b      	ldr	r3, [r3, #8]
 800740e:	0adb      	lsrs	r3, r3, #11
 8007410:	f003 0307 	and.w	r3, r3, #7
 8007414:	4903      	ldr	r1, [pc, #12]	@ (8007424 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007416:	5ccb      	ldrb	r3, [r1, r3]
 8007418:	fa22 f303 	lsr.w	r3, r2, r3
 800741c:	4618      	mov	r0, r3
 800741e:	bd80      	pop	{r7, pc}
 8007420:	40023800 	.word	0x40023800
 8007424:	0800dbc8 	.word	0x0800dbc8

08007428 <RCC_SetFlashLatencyFromMSIRange>:
 8007428:	b480      	push	{r7}
 800742a:	b087      	sub	sp, #28
 800742c:	af00      	add	r7, sp, #0
 800742e:	6078      	str	r0, [r7, #4]
 8007430:	2300      	movs	r3, #0
 8007432:	613b      	str	r3, [r7, #16]
 8007434:	4b29      	ldr	r3, [pc, #164]	@ (80074dc <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8007436:	689b      	ldr	r3, [r3, #8]
 8007438:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800743c:	2b00      	cmp	r3, #0
 800743e:	d12c      	bne.n	800749a <RCC_SetFlashLatencyFromMSIRange+0x72>
 8007440:	4b26      	ldr	r3, [pc, #152]	@ (80074dc <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8007442:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007444:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007448:	2b00      	cmp	r3, #0
 800744a:	d005      	beq.n	8007458 <RCC_SetFlashLatencyFromMSIRange+0x30>
 800744c:	4b24      	ldr	r3, [pc, #144]	@ (80074e0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800744e:	681b      	ldr	r3, [r3, #0]
 8007450:	f403 53c0 	and.w	r3, r3, #6144	@ 0x1800
 8007454:	617b      	str	r3, [r7, #20]
 8007456:	e016      	b.n	8007486 <RCC_SetFlashLatencyFromMSIRange+0x5e>
 8007458:	4b20      	ldr	r3, [pc, #128]	@ (80074dc <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 800745a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800745c:	4a1f      	ldr	r2, [pc, #124]	@ (80074dc <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 800745e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007462:	6253      	str	r3, [r2, #36]	@ 0x24
 8007464:	4b1d      	ldr	r3, [pc, #116]	@ (80074dc <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8007466:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007468:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800746c:	60fb      	str	r3, [r7, #12]
 800746e:	68fb      	ldr	r3, [r7, #12]
 8007470:	4b1b      	ldr	r3, [pc, #108]	@ (80074e0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8007472:	681b      	ldr	r3, [r3, #0]
 8007474:	f403 53c0 	and.w	r3, r3, #6144	@ 0x1800
 8007478:	617b      	str	r3, [r7, #20]
 800747a:	4b18      	ldr	r3, [pc, #96]	@ (80074dc <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 800747c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800747e:	4a17      	ldr	r2, [pc, #92]	@ (80074dc <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8007480:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007484:	6253      	str	r3, [r2, #36]	@ 0x24
 8007486:	697b      	ldr	r3, [r7, #20]
 8007488:	f5b3 5fc0 	cmp.w	r3, #6144	@ 0x1800
 800748c:	d105      	bne.n	800749a <RCC_SetFlashLatencyFromMSIRange+0x72>
 800748e:	687b      	ldr	r3, [r7, #4]
 8007490:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8007494:	d101      	bne.n	800749a <RCC_SetFlashLatencyFromMSIRange+0x72>
 8007496:	2301      	movs	r3, #1
 8007498:	613b      	str	r3, [r7, #16]
 800749a:	693b      	ldr	r3, [r7, #16]
 800749c:	2b01      	cmp	r3, #1
 800749e:	d105      	bne.n	80074ac <RCC_SetFlashLatencyFromMSIRange+0x84>
 80074a0:	4b10      	ldr	r3, [pc, #64]	@ (80074e4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80074a2:	681b      	ldr	r3, [r3, #0]
 80074a4:	4a0f      	ldr	r2, [pc, #60]	@ (80074e4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80074a6:	f043 0304 	orr.w	r3, r3, #4
 80074aa:	6013      	str	r3, [r2, #0]
 80074ac:	4b0d      	ldr	r3, [pc, #52]	@ (80074e4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80074ae:	681b      	ldr	r3, [r3, #0]
 80074b0:	f023 0201 	bic.w	r2, r3, #1
 80074b4:	490b      	ldr	r1, [pc, #44]	@ (80074e4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80074b6:	693b      	ldr	r3, [r7, #16]
 80074b8:	4313      	orrs	r3, r2
 80074ba:	600b      	str	r3, [r1, #0]
 80074bc:	4b09      	ldr	r3, [pc, #36]	@ (80074e4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80074be:	681b      	ldr	r3, [r3, #0]
 80074c0:	f003 0301 	and.w	r3, r3, #1
 80074c4:	693a      	ldr	r2, [r7, #16]
 80074c6:	429a      	cmp	r2, r3
 80074c8:	d001      	beq.n	80074ce <RCC_SetFlashLatencyFromMSIRange+0xa6>
 80074ca:	2301      	movs	r3, #1
 80074cc:	e000      	b.n	80074d0 <RCC_SetFlashLatencyFromMSIRange+0xa8>
 80074ce:	2300      	movs	r3, #0
 80074d0:	4618      	mov	r0, r3
 80074d2:	371c      	adds	r7, #28
 80074d4:	46bd      	mov	sp, r7
 80074d6:	bc80      	pop	{r7}
 80074d8:	4770      	bx	lr
 80074da:	bf00      	nop
 80074dc:	40023800 	.word	0x40023800
 80074e0:	40007000 	.word	0x40007000
 80074e4:	40023c00 	.word	0x40023c00

080074e8 <HAL_SPI_Init>:
 80074e8:	b580      	push	{r7, lr}
 80074ea:	b082      	sub	sp, #8
 80074ec:	af00      	add	r7, sp, #0
 80074ee:	6078      	str	r0, [r7, #4]
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d101      	bne.n	80074fa <HAL_SPI_Init+0x12>
 80074f6:	2301      	movs	r3, #1
 80074f8:	e07b      	b.n	80075f2 <HAL_SPI_Init+0x10a>
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80074fe:	2b00      	cmp	r3, #0
 8007500:	d108      	bne.n	8007514 <HAL_SPI_Init+0x2c>
 8007502:	687b      	ldr	r3, [r7, #4]
 8007504:	685b      	ldr	r3, [r3, #4]
 8007506:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800750a:	d009      	beq.n	8007520 <HAL_SPI_Init+0x38>
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	2200      	movs	r2, #0
 8007510:	61da      	str	r2, [r3, #28]
 8007512:	e005      	b.n	8007520 <HAL_SPI_Init+0x38>
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	2200      	movs	r2, #0
 8007518:	611a      	str	r2, [r3, #16]
 800751a:	687b      	ldr	r3, [r7, #4]
 800751c:	2200      	movs	r2, #0
 800751e:	615a      	str	r2, [r3, #20]
 8007520:	687b      	ldr	r3, [r7, #4]
 8007522:	2200      	movs	r2, #0
 8007524:	629a      	str	r2, [r3, #40]	@ 0x28
 8007526:	687b      	ldr	r3, [r7, #4]
 8007528:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800752c:	b2db      	uxtb	r3, r3
 800752e:	2b00      	cmp	r3, #0
 8007530:	d106      	bne.n	8007540 <HAL_SPI_Init+0x58>
 8007532:	687b      	ldr	r3, [r7, #4]
 8007534:	2200      	movs	r2, #0
 8007536:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800753a:	6878      	ldr	r0, [r7, #4]
 800753c:	f000 f85d 	bl	80075fa <HAL_SPI_MspInit>
 8007540:	687b      	ldr	r3, [r7, #4]
 8007542:	2202      	movs	r2, #2
 8007544:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	681b      	ldr	r3, [r3, #0]
 800754c:	681a      	ldr	r2, [r3, #0]
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	681b      	ldr	r3, [r3, #0]
 8007552:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007556:	601a      	str	r2, [r3, #0]
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	685b      	ldr	r3, [r3, #4]
 800755c:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	689b      	ldr	r3, [r3, #8]
 8007564:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8007568:	431a      	orrs	r2, r3
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	68db      	ldr	r3, [r3, #12]
 800756e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8007572:	431a      	orrs	r2, r3
 8007574:	687b      	ldr	r3, [r7, #4]
 8007576:	691b      	ldr	r3, [r3, #16]
 8007578:	f003 0302 	and.w	r3, r3, #2
 800757c:	431a      	orrs	r2, r3
 800757e:	687b      	ldr	r3, [r7, #4]
 8007580:	695b      	ldr	r3, [r3, #20]
 8007582:	f003 0301 	and.w	r3, r3, #1
 8007586:	431a      	orrs	r2, r3
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	699b      	ldr	r3, [r3, #24]
 800758c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007590:	431a      	orrs	r2, r3
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	69db      	ldr	r3, [r3, #28]
 8007596:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800759a:	431a      	orrs	r2, r3
 800759c:	687b      	ldr	r3, [r7, #4]
 800759e:	6a1b      	ldr	r3, [r3, #32]
 80075a0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80075a4:	ea42 0103 	orr.w	r1, r2, r3
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80075ac:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	430a      	orrs	r2, r1
 80075b6:	601a      	str	r2, [r3, #0]
 80075b8:	687b      	ldr	r3, [r7, #4]
 80075ba:	699b      	ldr	r3, [r3, #24]
 80075bc:	0c1b      	lsrs	r3, r3, #16
 80075be:	f003 0104 	and.w	r1, r3, #4
 80075c2:	687b      	ldr	r3, [r7, #4]
 80075c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80075c6:	f003 0210 	and.w	r2, r3, #16
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	681b      	ldr	r3, [r3, #0]
 80075ce:	430a      	orrs	r2, r1
 80075d0:	605a      	str	r2, [r3, #4]
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	69da      	ldr	r2, [r3, #28]
 80075d8:	687b      	ldr	r3, [r7, #4]
 80075da:	681b      	ldr	r3, [r3, #0]
 80075dc:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80075e0:	61da      	str	r2, [r3, #28]
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	2200      	movs	r2, #0
 80075e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80075e8:	687b      	ldr	r3, [r7, #4]
 80075ea:	2201      	movs	r2, #1
 80075ec:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80075f0:	2300      	movs	r3, #0
 80075f2:	4618      	mov	r0, r3
 80075f4:	3708      	adds	r7, #8
 80075f6:	46bd      	mov	sp, r7
 80075f8:	bd80      	pop	{r7, pc}

080075fa <HAL_SPI_MspInit>:
 80075fa:	b480      	push	{r7}
 80075fc:	b083      	sub	sp, #12
 80075fe:	af00      	add	r7, sp, #0
 8007600:	6078      	str	r0, [r7, #4]
 8007602:	bf00      	nop
 8007604:	370c      	adds	r7, #12
 8007606:	46bd      	mov	sp, r7
 8007608:	bc80      	pop	{r7}
 800760a:	4770      	bx	lr

0800760c <HAL_SPI_TransmitReceive>:
 800760c:	b580      	push	{r7, lr}
 800760e:	b08c      	sub	sp, #48	@ 0x30
 8007610:	af00      	add	r7, sp, #0
 8007612:	60f8      	str	r0, [r7, #12]
 8007614:	60b9      	str	r1, [r7, #8]
 8007616:	607a      	str	r2, [r7, #4]
 8007618:	807b      	strh	r3, [r7, #2]
 800761a:	2301      	movs	r3, #1
 800761c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800761e:	2300      	movs	r3, #0
 8007620:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007624:	68fb      	ldr	r3, [r7, #12]
 8007626:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800762a:	2b01      	cmp	r3, #1
 800762c:	d101      	bne.n	8007632 <HAL_SPI_TransmitReceive+0x26>
 800762e:	2302      	movs	r3, #2
 8007630:	e198      	b.n	8007964 <HAL_SPI_TransmitReceive+0x358>
 8007632:	68fb      	ldr	r3, [r7, #12]
 8007634:	2201      	movs	r2, #1
 8007636:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800763a:	f7fd f875 	bl	8004728 <HAL_GetTick>
 800763e:	6278      	str	r0, [r7, #36]	@ 0x24
 8007640:	68fb      	ldr	r3, [r7, #12]
 8007642:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007646:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800764a:	68fb      	ldr	r3, [r7, #12]
 800764c:	685b      	ldr	r3, [r3, #4]
 800764e:	61fb      	str	r3, [r7, #28]
 8007650:	887b      	ldrh	r3, [r7, #2]
 8007652:	837b      	strh	r3, [r7, #26]
 8007654:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8007658:	2b01      	cmp	r3, #1
 800765a:	d00f      	beq.n	800767c <HAL_SPI_TransmitReceive+0x70>
 800765c:	69fb      	ldr	r3, [r7, #28]
 800765e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007662:	d107      	bne.n	8007674 <HAL_SPI_TransmitReceive+0x68>
 8007664:	68fb      	ldr	r3, [r7, #12]
 8007666:	689b      	ldr	r3, [r3, #8]
 8007668:	2b00      	cmp	r3, #0
 800766a:	d103      	bne.n	8007674 <HAL_SPI_TransmitReceive+0x68>
 800766c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8007670:	2b04      	cmp	r3, #4
 8007672:	d003      	beq.n	800767c <HAL_SPI_TransmitReceive+0x70>
 8007674:	2302      	movs	r3, #2
 8007676:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800767a:	e16d      	b.n	8007958 <HAL_SPI_TransmitReceive+0x34c>
 800767c:	68bb      	ldr	r3, [r7, #8]
 800767e:	2b00      	cmp	r3, #0
 8007680:	d005      	beq.n	800768e <HAL_SPI_TransmitReceive+0x82>
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	2b00      	cmp	r3, #0
 8007686:	d002      	beq.n	800768e <HAL_SPI_TransmitReceive+0x82>
 8007688:	887b      	ldrh	r3, [r7, #2]
 800768a:	2b00      	cmp	r3, #0
 800768c:	d103      	bne.n	8007696 <HAL_SPI_TransmitReceive+0x8a>
 800768e:	2301      	movs	r3, #1
 8007690:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007694:	e160      	b.n	8007958 <HAL_SPI_TransmitReceive+0x34c>
 8007696:	68fb      	ldr	r3, [r7, #12]
 8007698:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800769c:	b2db      	uxtb	r3, r3
 800769e:	2b04      	cmp	r3, #4
 80076a0:	d003      	beq.n	80076aa <HAL_SPI_TransmitReceive+0x9e>
 80076a2:	68fb      	ldr	r3, [r7, #12]
 80076a4:	2205      	movs	r2, #5
 80076a6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80076aa:	68fb      	ldr	r3, [r7, #12]
 80076ac:	2200      	movs	r2, #0
 80076ae:	655a      	str	r2, [r3, #84]	@ 0x54
 80076b0:	68fb      	ldr	r3, [r7, #12]
 80076b2:	687a      	ldr	r2, [r7, #4]
 80076b4:	639a      	str	r2, [r3, #56]	@ 0x38
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	887a      	ldrh	r2, [r7, #2]
 80076ba:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	887a      	ldrh	r2, [r7, #2]
 80076c0:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80076c2:	68fb      	ldr	r3, [r7, #12]
 80076c4:	68ba      	ldr	r2, [r7, #8]
 80076c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80076c8:	68fb      	ldr	r3, [r7, #12]
 80076ca:	887a      	ldrh	r2, [r7, #2]
 80076cc:	86da      	strh	r2, [r3, #54]	@ 0x36
 80076ce:	68fb      	ldr	r3, [r7, #12]
 80076d0:	887a      	ldrh	r2, [r7, #2]
 80076d2:	869a      	strh	r2, [r3, #52]	@ 0x34
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	2200      	movs	r2, #0
 80076d8:	641a      	str	r2, [r3, #64]	@ 0x40
 80076da:	68fb      	ldr	r3, [r7, #12]
 80076dc:	2200      	movs	r2, #0
 80076de:	645a      	str	r2, [r3, #68]	@ 0x44
 80076e0:	68fb      	ldr	r3, [r7, #12]
 80076e2:	681b      	ldr	r3, [r3, #0]
 80076e4:	681b      	ldr	r3, [r3, #0]
 80076e6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80076ea:	2b40      	cmp	r3, #64	@ 0x40
 80076ec:	d007      	beq.n	80076fe <HAL_SPI_TransmitReceive+0xf2>
 80076ee:	68fb      	ldr	r3, [r7, #12]
 80076f0:	681b      	ldr	r3, [r3, #0]
 80076f2:	681a      	ldr	r2, [r3, #0]
 80076f4:	68fb      	ldr	r3, [r7, #12]
 80076f6:	681b      	ldr	r3, [r3, #0]
 80076f8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80076fc:	601a      	str	r2, [r3, #0]
 80076fe:	68fb      	ldr	r3, [r7, #12]
 8007700:	68db      	ldr	r3, [r3, #12]
 8007702:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007706:	d17c      	bne.n	8007802 <HAL_SPI_TransmitReceive+0x1f6>
 8007708:	68fb      	ldr	r3, [r7, #12]
 800770a:	685b      	ldr	r3, [r3, #4]
 800770c:	2b00      	cmp	r3, #0
 800770e:	d002      	beq.n	8007716 <HAL_SPI_TransmitReceive+0x10a>
 8007710:	8b7b      	ldrh	r3, [r7, #26]
 8007712:	2b01      	cmp	r3, #1
 8007714:	d16a      	bne.n	80077ec <HAL_SPI_TransmitReceive+0x1e0>
 8007716:	68fb      	ldr	r3, [r7, #12]
 8007718:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800771a:	881a      	ldrh	r2, [r3, #0]
 800771c:	68fb      	ldr	r3, [r7, #12]
 800771e:	681b      	ldr	r3, [r3, #0]
 8007720:	60da      	str	r2, [r3, #12]
 8007722:	68fb      	ldr	r3, [r7, #12]
 8007724:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007726:	1c9a      	adds	r2, r3, #2
 8007728:	68fb      	ldr	r3, [r7, #12]
 800772a:	631a      	str	r2, [r3, #48]	@ 0x30
 800772c:	68fb      	ldr	r3, [r7, #12]
 800772e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007730:	b29b      	uxth	r3, r3
 8007732:	3b01      	subs	r3, #1
 8007734:	b29a      	uxth	r2, r3
 8007736:	68fb      	ldr	r3, [r7, #12]
 8007738:	86da      	strh	r2, [r3, #54]	@ 0x36
 800773a:	e057      	b.n	80077ec <HAL_SPI_TransmitReceive+0x1e0>
 800773c:	68fb      	ldr	r3, [r7, #12]
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	689b      	ldr	r3, [r3, #8]
 8007742:	f003 0302 	and.w	r3, r3, #2
 8007746:	2b02      	cmp	r3, #2
 8007748:	d11b      	bne.n	8007782 <HAL_SPI_TransmitReceive+0x176>
 800774a:	68fb      	ldr	r3, [r7, #12]
 800774c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800774e:	b29b      	uxth	r3, r3
 8007750:	2b00      	cmp	r3, #0
 8007752:	d016      	beq.n	8007782 <HAL_SPI_TransmitReceive+0x176>
 8007754:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007756:	2b01      	cmp	r3, #1
 8007758:	d113      	bne.n	8007782 <HAL_SPI_TransmitReceive+0x176>
 800775a:	68fb      	ldr	r3, [r7, #12]
 800775c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800775e:	881a      	ldrh	r2, [r3, #0]
 8007760:	68fb      	ldr	r3, [r7, #12]
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	60da      	str	r2, [r3, #12]
 8007766:	68fb      	ldr	r3, [r7, #12]
 8007768:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800776a:	1c9a      	adds	r2, r3, #2
 800776c:	68fb      	ldr	r3, [r7, #12]
 800776e:	631a      	str	r2, [r3, #48]	@ 0x30
 8007770:	68fb      	ldr	r3, [r7, #12]
 8007772:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007774:	b29b      	uxth	r3, r3
 8007776:	3b01      	subs	r3, #1
 8007778:	b29a      	uxth	r2, r3
 800777a:	68fb      	ldr	r3, [r7, #12]
 800777c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800777e:	2300      	movs	r3, #0
 8007780:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007782:	68fb      	ldr	r3, [r7, #12]
 8007784:	681b      	ldr	r3, [r3, #0]
 8007786:	689b      	ldr	r3, [r3, #8]
 8007788:	f003 0301 	and.w	r3, r3, #1
 800778c:	2b01      	cmp	r3, #1
 800778e:	d119      	bne.n	80077c4 <HAL_SPI_TransmitReceive+0x1b8>
 8007790:	68fb      	ldr	r3, [r7, #12]
 8007792:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007794:	b29b      	uxth	r3, r3
 8007796:	2b00      	cmp	r3, #0
 8007798:	d014      	beq.n	80077c4 <HAL_SPI_TransmitReceive+0x1b8>
 800779a:	68fb      	ldr	r3, [r7, #12]
 800779c:	681b      	ldr	r3, [r3, #0]
 800779e:	68da      	ldr	r2, [r3, #12]
 80077a0:	68fb      	ldr	r3, [r7, #12]
 80077a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80077a4:	b292      	uxth	r2, r2
 80077a6:	801a      	strh	r2, [r3, #0]
 80077a8:	68fb      	ldr	r3, [r7, #12]
 80077aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80077ac:	1c9a      	adds	r2, r3, #2
 80077ae:	68fb      	ldr	r3, [r7, #12]
 80077b0:	639a      	str	r2, [r3, #56]	@ 0x38
 80077b2:	68fb      	ldr	r3, [r7, #12]
 80077b4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80077b6:	b29b      	uxth	r3, r3
 80077b8:	3b01      	subs	r3, #1
 80077ba:	b29a      	uxth	r2, r3
 80077bc:	68fb      	ldr	r3, [r7, #12]
 80077be:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80077c0:	2301      	movs	r3, #1
 80077c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80077c4:	f7fc ffb0 	bl	8004728 <HAL_GetTick>
 80077c8:	4602      	mov	r2, r0
 80077ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80077cc:	1ad3      	subs	r3, r2, r3
 80077ce:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80077d0:	429a      	cmp	r2, r3
 80077d2:	d80b      	bhi.n	80077ec <HAL_SPI_TransmitReceive+0x1e0>
 80077d4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80077d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80077da:	d007      	beq.n	80077ec <HAL_SPI_TransmitReceive+0x1e0>
 80077dc:	2303      	movs	r3, #3
 80077de:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	2201      	movs	r2, #1
 80077e6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80077ea:	e0b5      	b.n	8007958 <HAL_SPI_TransmitReceive+0x34c>
 80077ec:	68fb      	ldr	r3, [r7, #12]
 80077ee:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80077f0:	b29b      	uxth	r3, r3
 80077f2:	2b00      	cmp	r3, #0
 80077f4:	d1a2      	bne.n	800773c <HAL_SPI_TransmitReceive+0x130>
 80077f6:	68fb      	ldr	r3, [r7, #12]
 80077f8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80077fa:	b29b      	uxth	r3, r3
 80077fc:	2b00      	cmp	r3, #0
 80077fe:	d19d      	bne.n	800773c <HAL_SPI_TransmitReceive+0x130>
 8007800:	e080      	b.n	8007904 <HAL_SPI_TransmitReceive+0x2f8>
 8007802:	68fb      	ldr	r3, [r7, #12]
 8007804:	685b      	ldr	r3, [r3, #4]
 8007806:	2b00      	cmp	r3, #0
 8007808:	d002      	beq.n	8007810 <HAL_SPI_TransmitReceive+0x204>
 800780a:	8b7b      	ldrh	r3, [r7, #26]
 800780c:	2b01      	cmp	r3, #1
 800780e:	d16f      	bne.n	80078f0 <HAL_SPI_TransmitReceive+0x2e4>
 8007810:	68fb      	ldr	r3, [r7, #12]
 8007812:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007814:	68fb      	ldr	r3, [r7, #12]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	330c      	adds	r3, #12
 800781a:	7812      	ldrb	r2, [r2, #0]
 800781c:	701a      	strb	r2, [r3, #0]
 800781e:	68fb      	ldr	r3, [r7, #12]
 8007820:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007822:	1c5a      	adds	r2, r3, #1
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	631a      	str	r2, [r3, #48]	@ 0x30
 8007828:	68fb      	ldr	r3, [r7, #12]
 800782a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800782c:	b29b      	uxth	r3, r3
 800782e:	3b01      	subs	r3, #1
 8007830:	b29a      	uxth	r2, r3
 8007832:	68fb      	ldr	r3, [r7, #12]
 8007834:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007836:	e05b      	b.n	80078f0 <HAL_SPI_TransmitReceive+0x2e4>
 8007838:	68fb      	ldr	r3, [r7, #12]
 800783a:	681b      	ldr	r3, [r3, #0]
 800783c:	689b      	ldr	r3, [r3, #8]
 800783e:	f003 0302 	and.w	r3, r3, #2
 8007842:	2b02      	cmp	r3, #2
 8007844:	d11c      	bne.n	8007880 <HAL_SPI_TransmitReceive+0x274>
 8007846:	68fb      	ldr	r3, [r7, #12]
 8007848:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800784a:	b29b      	uxth	r3, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	d017      	beq.n	8007880 <HAL_SPI_TransmitReceive+0x274>
 8007850:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007852:	2b01      	cmp	r3, #1
 8007854:	d114      	bne.n	8007880 <HAL_SPI_TransmitReceive+0x274>
 8007856:	68fb      	ldr	r3, [r7, #12]
 8007858:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800785a:	68fb      	ldr	r3, [r7, #12]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	330c      	adds	r3, #12
 8007860:	7812      	ldrb	r2, [r2, #0]
 8007862:	701a      	strb	r2, [r3, #0]
 8007864:	68fb      	ldr	r3, [r7, #12]
 8007866:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007868:	1c5a      	adds	r2, r3, #1
 800786a:	68fb      	ldr	r3, [r7, #12]
 800786c:	631a      	str	r2, [r3, #48]	@ 0x30
 800786e:	68fb      	ldr	r3, [r7, #12]
 8007870:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007872:	b29b      	uxth	r3, r3
 8007874:	3b01      	subs	r3, #1
 8007876:	b29a      	uxth	r2, r3
 8007878:	68fb      	ldr	r3, [r7, #12]
 800787a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800787c:	2300      	movs	r3, #0
 800787e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007880:	68fb      	ldr	r3, [r7, #12]
 8007882:	681b      	ldr	r3, [r3, #0]
 8007884:	689b      	ldr	r3, [r3, #8]
 8007886:	f003 0301 	and.w	r3, r3, #1
 800788a:	2b01      	cmp	r3, #1
 800788c:	d119      	bne.n	80078c2 <HAL_SPI_TransmitReceive+0x2b6>
 800788e:	68fb      	ldr	r3, [r7, #12]
 8007890:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007892:	b29b      	uxth	r3, r3
 8007894:	2b00      	cmp	r3, #0
 8007896:	d014      	beq.n	80078c2 <HAL_SPI_TransmitReceive+0x2b6>
 8007898:	68fb      	ldr	r3, [r7, #12]
 800789a:	681b      	ldr	r3, [r3, #0]
 800789c:	68da      	ldr	r2, [r3, #12]
 800789e:	68fb      	ldr	r3, [r7, #12]
 80078a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80078a2:	b2d2      	uxtb	r2, r2
 80078a4:	701a      	strb	r2, [r3, #0]
 80078a6:	68fb      	ldr	r3, [r7, #12]
 80078a8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80078aa:	1c5a      	adds	r2, r3, #1
 80078ac:	68fb      	ldr	r3, [r7, #12]
 80078ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80078b0:	68fb      	ldr	r3, [r7, #12]
 80078b2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80078b4:	b29b      	uxth	r3, r3
 80078b6:	3b01      	subs	r3, #1
 80078b8:	b29a      	uxth	r2, r3
 80078ba:	68fb      	ldr	r3, [r7, #12]
 80078bc:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80078be:	2301      	movs	r3, #1
 80078c0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80078c2:	f7fc ff31 	bl	8004728 <HAL_GetTick>
 80078c6:	4602      	mov	r2, r0
 80078c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80078ca:	1ad3      	subs	r3, r2, r3
 80078cc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80078ce:	429a      	cmp	r2, r3
 80078d0:	d803      	bhi.n	80078da <HAL_SPI_TransmitReceive+0x2ce>
 80078d2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80078d4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80078d8:	d102      	bne.n	80078e0 <HAL_SPI_TransmitReceive+0x2d4>
 80078da:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80078dc:	2b00      	cmp	r3, #0
 80078de:	d107      	bne.n	80078f0 <HAL_SPI_TransmitReceive+0x2e4>
 80078e0:	2303      	movs	r3, #3
 80078e2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80078e6:	68fb      	ldr	r3, [r7, #12]
 80078e8:	2201      	movs	r2, #1
 80078ea:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80078ee:	e033      	b.n	8007958 <HAL_SPI_TransmitReceive+0x34c>
 80078f0:	68fb      	ldr	r3, [r7, #12]
 80078f2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80078f4:	b29b      	uxth	r3, r3
 80078f6:	2b00      	cmp	r3, #0
 80078f8:	d19e      	bne.n	8007838 <HAL_SPI_TransmitReceive+0x22c>
 80078fa:	68fb      	ldr	r3, [r7, #12]
 80078fc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80078fe:	b29b      	uxth	r3, r3
 8007900:	2b00      	cmp	r3, #0
 8007902:	d199      	bne.n	8007838 <HAL_SPI_TransmitReceive+0x22c>
 8007904:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007906:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8007908:	68f8      	ldr	r0, [r7, #12]
 800790a:	f000 f8c5 	bl	8007a98 <SPI_EndRxTxTransaction>
 800790e:	4603      	mov	r3, r0
 8007910:	2b00      	cmp	r3, #0
 8007912:	d006      	beq.n	8007922 <HAL_SPI_TransmitReceive+0x316>
 8007914:	2301      	movs	r3, #1
 8007916:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800791a:	68fb      	ldr	r3, [r7, #12]
 800791c:	2220      	movs	r2, #32
 800791e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007920:	e01a      	b.n	8007958 <HAL_SPI_TransmitReceive+0x34c>
 8007922:	68fb      	ldr	r3, [r7, #12]
 8007924:	689b      	ldr	r3, [r3, #8]
 8007926:	2b00      	cmp	r3, #0
 8007928:	d10a      	bne.n	8007940 <HAL_SPI_TransmitReceive+0x334>
 800792a:	2300      	movs	r3, #0
 800792c:	617b      	str	r3, [r7, #20]
 800792e:	68fb      	ldr	r3, [r7, #12]
 8007930:	681b      	ldr	r3, [r3, #0]
 8007932:	68db      	ldr	r3, [r3, #12]
 8007934:	617b      	str	r3, [r7, #20]
 8007936:	68fb      	ldr	r3, [r7, #12]
 8007938:	681b      	ldr	r3, [r3, #0]
 800793a:	689b      	ldr	r3, [r3, #8]
 800793c:	617b      	str	r3, [r7, #20]
 800793e:	697b      	ldr	r3, [r7, #20]
 8007940:	68fb      	ldr	r3, [r7, #12]
 8007942:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007944:	2b00      	cmp	r3, #0
 8007946:	d003      	beq.n	8007950 <HAL_SPI_TransmitReceive+0x344>
 8007948:	2301      	movs	r3, #1
 800794a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800794e:	e003      	b.n	8007958 <HAL_SPI_TransmitReceive+0x34c>
 8007950:	68fb      	ldr	r3, [r7, #12]
 8007952:	2201      	movs	r2, #1
 8007954:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007958:	68fb      	ldr	r3, [r7, #12]
 800795a:	2200      	movs	r2, #0
 800795c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007960:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8007964:	4618      	mov	r0, r3
 8007966:	3730      	adds	r7, #48	@ 0x30
 8007968:	46bd      	mov	sp, r7
 800796a:	bd80      	pop	{r7, pc}

0800796c <HAL_SPI_GetState>:
 800796c:	b480      	push	{r7}
 800796e:	b083      	sub	sp, #12
 8007970:	af00      	add	r7, sp, #0
 8007972:	6078      	str	r0, [r7, #4]
 8007974:	687b      	ldr	r3, [r7, #4]
 8007976:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800797a:	b2db      	uxtb	r3, r3
 800797c:	4618      	mov	r0, r3
 800797e:	370c      	adds	r7, #12
 8007980:	46bd      	mov	sp, r7
 8007982:	bc80      	pop	{r7}
 8007984:	4770      	bx	lr
	...

08007988 <SPI_WaitFlagStateUntilTimeout>:
 8007988:	b580      	push	{r7, lr}
 800798a:	b088      	sub	sp, #32
 800798c:	af00      	add	r7, sp, #0
 800798e:	60f8      	str	r0, [r7, #12]
 8007990:	60b9      	str	r1, [r7, #8]
 8007992:	603b      	str	r3, [r7, #0]
 8007994:	4613      	mov	r3, r2
 8007996:	71fb      	strb	r3, [r7, #7]
 8007998:	f7fc fec6 	bl	8004728 <HAL_GetTick>
 800799c:	4602      	mov	r2, r0
 800799e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80079a0:	1a9b      	subs	r3, r3, r2
 80079a2:	683a      	ldr	r2, [r7, #0]
 80079a4:	4413      	add	r3, r2
 80079a6:	61fb      	str	r3, [r7, #28]
 80079a8:	f7fc febe 	bl	8004728 <HAL_GetTick>
 80079ac:	61b8      	str	r0, [r7, #24]
 80079ae:	4b39      	ldr	r3, [pc, #228]	@ (8007a94 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	015b      	lsls	r3, r3, #5
 80079b4:	0d1b      	lsrs	r3, r3, #20
 80079b6:	69fa      	ldr	r2, [r7, #28]
 80079b8:	fb02 f303 	mul.w	r3, r2, r3
 80079bc:	617b      	str	r3, [r7, #20]
 80079be:	e054      	b.n	8007a6a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80079c0:	683b      	ldr	r3, [r7, #0]
 80079c2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80079c6:	d050      	beq.n	8007a6a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80079c8:	f7fc feae 	bl	8004728 <HAL_GetTick>
 80079cc:	4602      	mov	r2, r0
 80079ce:	69bb      	ldr	r3, [r7, #24]
 80079d0:	1ad3      	subs	r3, r2, r3
 80079d2:	69fa      	ldr	r2, [r7, #28]
 80079d4:	429a      	cmp	r2, r3
 80079d6:	d902      	bls.n	80079de <SPI_WaitFlagStateUntilTimeout+0x56>
 80079d8:	69fb      	ldr	r3, [r7, #28]
 80079da:	2b00      	cmp	r3, #0
 80079dc:	d13d      	bne.n	8007a5a <SPI_WaitFlagStateUntilTimeout+0xd2>
 80079de:	68fb      	ldr	r3, [r7, #12]
 80079e0:	681b      	ldr	r3, [r3, #0]
 80079e2:	685a      	ldr	r2, [r3, #4]
 80079e4:	68fb      	ldr	r3, [r7, #12]
 80079e6:	681b      	ldr	r3, [r3, #0]
 80079e8:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80079ec:	605a      	str	r2, [r3, #4]
 80079ee:	68fb      	ldr	r3, [r7, #12]
 80079f0:	685b      	ldr	r3, [r3, #4]
 80079f2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80079f6:	d111      	bne.n	8007a1c <SPI_WaitFlagStateUntilTimeout+0x94>
 80079f8:	68fb      	ldr	r3, [r7, #12]
 80079fa:	689b      	ldr	r3, [r3, #8]
 80079fc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007a00:	d004      	beq.n	8007a0c <SPI_WaitFlagStateUntilTimeout+0x84>
 8007a02:	68fb      	ldr	r3, [r7, #12]
 8007a04:	689b      	ldr	r3, [r3, #8]
 8007a06:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007a0a:	d107      	bne.n	8007a1c <SPI_WaitFlagStateUntilTimeout+0x94>
 8007a0c:	68fb      	ldr	r3, [r7, #12]
 8007a0e:	681b      	ldr	r3, [r3, #0]
 8007a10:	681a      	ldr	r2, [r3, #0]
 8007a12:	68fb      	ldr	r3, [r7, #12]
 8007a14:	681b      	ldr	r3, [r3, #0]
 8007a16:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007a1a:	601a      	str	r2, [r3, #0]
 8007a1c:	68fb      	ldr	r3, [r7, #12]
 8007a1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a20:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007a24:	d10f      	bne.n	8007a46 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8007a26:	68fb      	ldr	r3, [r7, #12]
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	681a      	ldr	r2, [r3, #0]
 8007a2c:	68fb      	ldr	r3, [r7, #12]
 8007a2e:	681b      	ldr	r3, [r3, #0]
 8007a30:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007a34:	601a      	str	r2, [r3, #0]
 8007a36:	68fb      	ldr	r3, [r7, #12]
 8007a38:	681b      	ldr	r3, [r3, #0]
 8007a3a:	681a      	ldr	r2, [r3, #0]
 8007a3c:	68fb      	ldr	r3, [r7, #12]
 8007a3e:	681b      	ldr	r3, [r3, #0]
 8007a40:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8007a44:	601a      	str	r2, [r3, #0]
 8007a46:	68fb      	ldr	r3, [r7, #12]
 8007a48:	2201      	movs	r2, #1
 8007a4a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007a4e:	68fb      	ldr	r3, [r7, #12]
 8007a50:	2200      	movs	r2, #0
 8007a52:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007a56:	2303      	movs	r3, #3
 8007a58:	e017      	b.n	8007a8a <SPI_WaitFlagStateUntilTimeout+0x102>
 8007a5a:	697b      	ldr	r3, [r7, #20]
 8007a5c:	2b00      	cmp	r3, #0
 8007a5e:	d101      	bne.n	8007a64 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8007a60:	2300      	movs	r3, #0
 8007a62:	61fb      	str	r3, [r7, #28]
 8007a64:	697b      	ldr	r3, [r7, #20]
 8007a66:	3b01      	subs	r3, #1
 8007a68:	617b      	str	r3, [r7, #20]
 8007a6a:	68fb      	ldr	r3, [r7, #12]
 8007a6c:	681b      	ldr	r3, [r3, #0]
 8007a6e:	689a      	ldr	r2, [r3, #8]
 8007a70:	68bb      	ldr	r3, [r7, #8]
 8007a72:	4013      	ands	r3, r2
 8007a74:	68ba      	ldr	r2, [r7, #8]
 8007a76:	429a      	cmp	r2, r3
 8007a78:	bf0c      	ite	eq
 8007a7a:	2301      	moveq	r3, #1
 8007a7c:	2300      	movne	r3, #0
 8007a7e:	b2db      	uxtb	r3, r3
 8007a80:	461a      	mov	r2, r3
 8007a82:	79fb      	ldrb	r3, [r7, #7]
 8007a84:	429a      	cmp	r2, r3
 8007a86:	d19b      	bne.n	80079c0 <SPI_WaitFlagStateUntilTimeout+0x38>
 8007a88:	2300      	movs	r3, #0
 8007a8a:	4618      	mov	r0, r3
 8007a8c:	3720      	adds	r7, #32
 8007a8e:	46bd      	mov	sp, r7
 8007a90:	bd80      	pop	{r7, pc}
 8007a92:	bf00      	nop
 8007a94:	20000008 	.word	0x20000008

08007a98 <SPI_EndRxTxTransaction>:
 8007a98:	b580      	push	{r7, lr}
 8007a9a:	b088      	sub	sp, #32
 8007a9c:	af02      	add	r7, sp, #8
 8007a9e:	60f8      	str	r0, [r7, #12]
 8007aa0:	60b9      	str	r1, [r7, #8]
 8007aa2:	607a      	str	r2, [r7, #4]
 8007aa4:	4b1b      	ldr	r3, [pc, #108]	@ (8007b14 <SPI_EndRxTxTransaction+0x7c>)
 8007aa6:	681b      	ldr	r3, [r3, #0]
 8007aa8:	4a1b      	ldr	r2, [pc, #108]	@ (8007b18 <SPI_EndRxTxTransaction+0x80>)
 8007aaa:	fba2 2303 	umull	r2, r3, r2, r3
 8007aae:	0d5b      	lsrs	r3, r3, #21
 8007ab0:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8007ab4:	fb02 f303 	mul.w	r3, r2, r3
 8007ab8:	617b      	str	r3, [r7, #20]
 8007aba:	68fb      	ldr	r3, [r7, #12]
 8007abc:	685b      	ldr	r3, [r3, #4]
 8007abe:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007ac2:	d112      	bne.n	8007aea <SPI_EndRxTxTransaction+0x52>
 8007ac4:	687b      	ldr	r3, [r7, #4]
 8007ac6:	9300      	str	r3, [sp, #0]
 8007ac8:	68bb      	ldr	r3, [r7, #8]
 8007aca:	2200      	movs	r2, #0
 8007acc:	2180      	movs	r1, #128	@ 0x80
 8007ace:	68f8      	ldr	r0, [r7, #12]
 8007ad0:	f7ff ff5a 	bl	8007988 <SPI_WaitFlagStateUntilTimeout>
 8007ad4:	4603      	mov	r3, r0
 8007ad6:	2b00      	cmp	r3, #0
 8007ad8:	d016      	beq.n	8007b08 <SPI_EndRxTxTransaction+0x70>
 8007ada:	68fb      	ldr	r3, [r7, #12]
 8007adc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007ade:	f043 0220 	orr.w	r2, r3, #32
 8007ae2:	68fb      	ldr	r3, [r7, #12]
 8007ae4:	655a      	str	r2, [r3, #84]	@ 0x54
 8007ae6:	2303      	movs	r3, #3
 8007ae8:	e00f      	b.n	8007b0a <SPI_EndRxTxTransaction+0x72>
 8007aea:	697b      	ldr	r3, [r7, #20]
 8007aec:	2b00      	cmp	r3, #0
 8007aee:	d00a      	beq.n	8007b06 <SPI_EndRxTxTransaction+0x6e>
 8007af0:	697b      	ldr	r3, [r7, #20]
 8007af2:	3b01      	subs	r3, #1
 8007af4:	617b      	str	r3, [r7, #20]
 8007af6:	68fb      	ldr	r3, [r7, #12]
 8007af8:	681b      	ldr	r3, [r3, #0]
 8007afa:	689b      	ldr	r3, [r3, #8]
 8007afc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007b00:	2b80      	cmp	r3, #128	@ 0x80
 8007b02:	d0f2      	beq.n	8007aea <SPI_EndRxTxTransaction+0x52>
 8007b04:	e000      	b.n	8007b08 <SPI_EndRxTxTransaction+0x70>
 8007b06:	bf00      	nop
 8007b08:	2300      	movs	r3, #0
 8007b0a:	4618      	mov	r0, r3
 8007b0c:	3718      	adds	r7, #24
 8007b0e:	46bd      	mov	sp, r7
 8007b10:	bd80      	pop	{r7, pc}
 8007b12:	bf00      	nop
 8007b14:	20000008 	.word	0x20000008
 8007b18:	165e9f81 	.word	0x165e9f81

08007b1c <HAL_UART_Init>:
 8007b1c:	b580      	push	{r7, lr}
 8007b1e:	b082      	sub	sp, #8
 8007b20:	af00      	add	r7, sp, #0
 8007b22:	6078      	str	r0, [r7, #4]
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	2b00      	cmp	r3, #0
 8007b28:	d101      	bne.n	8007b2e <HAL_UART_Init+0x12>
 8007b2a:	2301      	movs	r3, #1
 8007b2c:	e042      	b.n	8007bb4 <HAL_UART_Init+0x98>
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007b34:	b2db      	uxtb	r3, r3
 8007b36:	2b00      	cmp	r3, #0
 8007b38:	d106      	bne.n	8007b48 <HAL_UART_Init+0x2c>
 8007b3a:	687b      	ldr	r3, [r7, #4]
 8007b3c:	2200      	movs	r2, #0
 8007b3e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007b42:	6878      	ldr	r0, [r7, #4]
 8007b44:	f7fc f940 	bl	8003dc8 <HAL_UART_MspInit>
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	2224      	movs	r2, #36	@ 0x24
 8007b4c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	68da      	ldr	r2, [r3, #12]
 8007b56:	687b      	ldr	r3, [r7, #4]
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007b5e:	60da      	str	r2, [r3, #12]
 8007b60:	6878      	ldr	r0, [r7, #4]
 8007b62:	f000 f91d 	bl	8007da0 <UART_SetConfig>
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	681b      	ldr	r3, [r3, #0]
 8007b6a:	691a      	ldr	r2, [r3, #16]
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007b74:	611a      	str	r2, [r3, #16]
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	695a      	ldr	r2, [r3, #20]
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007b84:	615a      	str	r2, [r3, #20]
 8007b86:	687b      	ldr	r3, [r7, #4]
 8007b88:	681b      	ldr	r3, [r3, #0]
 8007b8a:	68da      	ldr	r2, [r3, #12]
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8007b94:	60da      	str	r2, [r3, #12]
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	2200      	movs	r2, #0
 8007b9a:	645a      	str	r2, [r3, #68]	@ 0x44
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	2220      	movs	r2, #32
 8007ba0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	2220      	movs	r2, #32
 8007ba8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	2200      	movs	r2, #0
 8007bb0:	635a      	str	r2, [r3, #52]	@ 0x34
 8007bb2:	2300      	movs	r3, #0
 8007bb4:	4618      	mov	r0, r3
 8007bb6:	3708      	adds	r7, #8
 8007bb8:	46bd      	mov	sp, r7
 8007bba:	bd80      	pop	{r7, pc}

08007bbc <HAL_UART_Transmit>:
 8007bbc:	b580      	push	{r7, lr}
 8007bbe:	b08a      	sub	sp, #40	@ 0x28
 8007bc0:	af02      	add	r7, sp, #8
 8007bc2:	60f8      	str	r0, [r7, #12]
 8007bc4:	60b9      	str	r1, [r7, #8]
 8007bc6:	603b      	str	r3, [r7, #0]
 8007bc8:	4613      	mov	r3, r2
 8007bca:	80fb      	strh	r3, [r7, #6]
 8007bcc:	2300      	movs	r3, #0
 8007bce:	617b      	str	r3, [r7, #20]
 8007bd0:	68fb      	ldr	r3, [r7, #12]
 8007bd2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007bd6:	b2db      	uxtb	r3, r3
 8007bd8:	2b20      	cmp	r3, #32
 8007bda:	d16d      	bne.n	8007cb8 <HAL_UART_Transmit+0xfc>
 8007bdc:	68bb      	ldr	r3, [r7, #8]
 8007bde:	2b00      	cmp	r3, #0
 8007be0:	d002      	beq.n	8007be8 <HAL_UART_Transmit+0x2c>
 8007be2:	88fb      	ldrh	r3, [r7, #6]
 8007be4:	2b00      	cmp	r3, #0
 8007be6:	d101      	bne.n	8007bec <HAL_UART_Transmit+0x30>
 8007be8:	2301      	movs	r3, #1
 8007bea:	e066      	b.n	8007cba <HAL_UART_Transmit+0xfe>
 8007bec:	68fb      	ldr	r3, [r7, #12]
 8007bee:	2200      	movs	r2, #0
 8007bf0:	645a      	str	r2, [r3, #68]	@ 0x44
 8007bf2:	68fb      	ldr	r3, [r7, #12]
 8007bf4:	2221      	movs	r2, #33	@ 0x21
 8007bf6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007bfa:	f7fc fd95 	bl	8004728 <HAL_GetTick>
 8007bfe:	6178      	str	r0, [r7, #20]
 8007c00:	68fb      	ldr	r3, [r7, #12]
 8007c02:	88fa      	ldrh	r2, [r7, #6]
 8007c04:	849a      	strh	r2, [r3, #36]	@ 0x24
 8007c06:	68fb      	ldr	r3, [r7, #12]
 8007c08:	88fa      	ldrh	r2, [r7, #6]
 8007c0a:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007c0c:	68fb      	ldr	r3, [r7, #12]
 8007c0e:	689b      	ldr	r3, [r3, #8]
 8007c10:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007c14:	d108      	bne.n	8007c28 <HAL_UART_Transmit+0x6c>
 8007c16:	68fb      	ldr	r3, [r7, #12]
 8007c18:	691b      	ldr	r3, [r3, #16]
 8007c1a:	2b00      	cmp	r3, #0
 8007c1c:	d104      	bne.n	8007c28 <HAL_UART_Transmit+0x6c>
 8007c1e:	2300      	movs	r3, #0
 8007c20:	61fb      	str	r3, [r7, #28]
 8007c22:	68bb      	ldr	r3, [r7, #8]
 8007c24:	61bb      	str	r3, [r7, #24]
 8007c26:	e003      	b.n	8007c30 <HAL_UART_Transmit+0x74>
 8007c28:	68bb      	ldr	r3, [r7, #8]
 8007c2a:	61fb      	str	r3, [r7, #28]
 8007c2c:	2300      	movs	r3, #0
 8007c2e:	61bb      	str	r3, [r7, #24]
 8007c30:	e02a      	b.n	8007c88 <HAL_UART_Transmit+0xcc>
 8007c32:	683b      	ldr	r3, [r7, #0]
 8007c34:	9300      	str	r3, [sp, #0]
 8007c36:	697b      	ldr	r3, [r7, #20]
 8007c38:	2200      	movs	r2, #0
 8007c3a:	2180      	movs	r1, #128	@ 0x80
 8007c3c:	68f8      	ldr	r0, [r7, #12]
 8007c3e:	f000 f840 	bl	8007cc2 <UART_WaitOnFlagUntilTimeout>
 8007c42:	4603      	mov	r3, r0
 8007c44:	2b00      	cmp	r3, #0
 8007c46:	d001      	beq.n	8007c4c <HAL_UART_Transmit+0x90>
 8007c48:	2303      	movs	r3, #3
 8007c4a:	e036      	b.n	8007cba <HAL_UART_Transmit+0xfe>
 8007c4c:	69fb      	ldr	r3, [r7, #28]
 8007c4e:	2b00      	cmp	r3, #0
 8007c50:	d10b      	bne.n	8007c6a <HAL_UART_Transmit+0xae>
 8007c52:	69bb      	ldr	r3, [r7, #24]
 8007c54:	881b      	ldrh	r3, [r3, #0]
 8007c56:	461a      	mov	r2, r3
 8007c58:	68fb      	ldr	r3, [r7, #12]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007c60:	605a      	str	r2, [r3, #4]
 8007c62:	69bb      	ldr	r3, [r7, #24]
 8007c64:	3302      	adds	r3, #2
 8007c66:	61bb      	str	r3, [r7, #24]
 8007c68:	e007      	b.n	8007c7a <HAL_UART_Transmit+0xbe>
 8007c6a:	69fb      	ldr	r3, [r7, #28]
 8007c6c:	781a      	ldrb	r2, [r3, #0]
 8007c6e:	68fb      	ldr	r3, [r7, #12]
 8007c70:	681b      	ldr	r3, [r3, #0]
 8007c72:	605a      	str	r2, [r3, #4]
 8007c74:	69fb      	ldr	r3, [r7, #28]
 8007c76:	3301      	adds	r3, #1
 8007c78:	61fb      	str	r3, [r7, #28]
 8007c7a:	68fb      	ldr	r3, [r7, #12]
 8007c7c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007c7e:	b29b      	uxth	r3, r3
 8007c80:	3b01      	subs	r3, #1
 8007c82:	b29a      	uxth	r2, r3
 8007c84:	68fb      	ldr	r3, [r7, #12]
 8007c86:	84da      	strh	r2, [r3, #38]	@ 0x26
 8007c88:	68fb      	ldr	r3, [r7, #12]
 8007c8a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8007c8c:	b29b      	uxth	r3, r3
 8007c8e:	2b00      	cmp	r3, #0
 8007c90:	d1cf      	bne.n	8007c32 <HAL_UART_Transmit+0x76>
 8007c92:	683b      	ldr	r3, [r7, #0]
 8007c94:	9300      	str	r3, [sp, #0]
 8007c96:	697b      	ldr	r3, [r7, #20]
 8007c98:	2200      	movs	r2, #0
 8007c9a:	2140      	movs	r1, #64	@ 0x40
 8007c9c:	68f8      	ldr	r0, [r7, #12]
 8007c9e:	f000 f810 	bl	8007cc2 <UART_WaitOnFlagUntilTimeout>
 8007ca2:	4603      	mov	r3, r0
 8007ca4:	2b00      	cmp	r3, #0
 8007ca6:	d001      	beq.n	8007cac <HAL_UART_Transmit+0xf0>
 8007ca8:	2303      	movs	r3, #3
 8007caa:	e006      	b.n	8007cba <HAL_UART_Transmit+0xfe>
 8007cac:	68fb      	ldr	r3, [r7, #12]
 8007cae:	2220      	movs	r2, #32
 8007cb0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	e000      	b.n	8007cba <HAL_UART_Transmit+0xfe>
 8007cb8:	2302      	movs	r3, #2
 8007cba:	4618      	mov	r0, r3
 8007cbc:	3720      	adds	r7, #32
 8007cbe:	46bd      	mov	sp, r7
 8007cc0:	bd80      	pop	{r7, pc}

08007cc2 <UART_WaitOnFlagUntilTimeout>:
 8007cc2:	b580      	push	{r7, lr}
 8007cc4:	b090      	sub	sp, #64	@ 0x40
 8007cc6:	af00      	add	r7, sp, #0
 8007cc8:	60f8      	str	r0, [r7, #12]
 8007cca:	60b9      	str	r1, [r7, #8]
 8007ccc:	603b      	str	r3, [r7, #0]
 8007cce:	4613      	mov	r3, r2
 8007cd0:	71fb      	strb	r3, [r7, #7]
 8007cd2:	e050      	b.n	8007d76 <UART_WaitOnFlagUntilTimeout+0xb4>
 8007cd4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007cd6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007cda:	d04c      	beq.n	8007d76 <UART_WaitOnFlagUntilTimeout+0xb4>
 8007cdc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007cde:	2b00      	cmp	r3, #0
 8007ce0:	d007      	beq.n	8007cf2 <UART_WaitOnFlagUntilTimeout+0x30>
 8007ce2:	f7fc fd21 	bl	8004728 <HAL_GetTick>
 8007ce6:	4602      	mov	r2, r0
 8007ce8:	683b      	ldr	r3, [r7, #0]
 8007cea:	1ad3      	subs	r3, r2, r3
 8007cec:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007cee:	429a      	cmp	r2, r3
 8007cf0:	d241      	bcs.n	8007d76 <UART_WaitOnFlagUntilTimeout+0xb4>
 8007cf2:	68fb      	ldr	r3, [r7, #12]
 8007cf4:	681b      	ldr	r3, [r3, #0]
 8007cf6:	330c      	adds	r3, #12
 8007cf8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007cfa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007cfc:	e853 3f00 	ldrex	r3, [r3]
 8007d00:	627b      	str	r3, [r7, #36]	@ 0x24
 8007d02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007d04:	f423 73d0 	bic.w	r3, r3, #416	@ 0x1a0
 8007d08:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007d0a:	68fb      	ldr	r3, [r7, #12]
 8007d0c:	681b      	ldr	r3, [r3, #0]
 8007d0e:	330c      	adds	r3, #12
 8007d10:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8007d12:	637a      	str	r2, [r7, #52]	@ 0x34
 8007d14:	633b      	str	r3, [r7, #48]	@ 0x30
 8007d16:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8007d18:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8007d1a:	e841 2300 	strex	r3, r2, [r1]
 8007d1e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007d20:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007d22:	2b00      	cmp	r3, #0
 8007d24:	d1e5      	bne.n	8007cf2 <UART_WaitOnFlagUntilTimeout+0x30>
 8007d26:	68fb      	ldr	r3, [r7, #12]
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	3314      	adds	r3, #20
 8007d2c:	617b      	str	r3, [r7, #20]
 8007d2e:	697b      	ldr	r3, [r7, #20]
 8007d30:	e853 3f00 	ldrex	r3, [r3]
 8007d34:	613b      	str	r3, [r7, #16]
 8007d36:	693b      	ldr	r3, [r7, #16]
 8007d38:	f023 0301 	bic.w	r3, r3, #1
 8007d3c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007d3e:	68fb      	ldr	r3, [r7, #12]
 8007d40:	681b      	ldr	r3, [r3, #0]
 8007d42:	3314      	adds	r3, #20
 8007d44:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8007d46:	623a      	str	r2, [r7, #32]
 8007d48:	61fb      	str	r3, [r7, #28]
 8007d4a:	69f9      	ldr	r1, [r7, #28]
 8007d4c:	6a3a      	ldr	r2, [r7, #32]
 8007d4e:	e841 2300 	strex	r3, r2, [r1]
 8007d52:	61bb      	str	r3, [r7, #24]
 8007d54:	69bb      	ldr	r3, [r7, #24]
 8007d56:	2b00      	cmp	r3, #0
 8007d58:	d1e5      	bne.n	8007d26 <UART_WaitOnFlagUntilTimeout+0x64>
 8007d5a:	68fb      	ldr	r3, [r7, #12]
 8007d5c:	2220      	movs	r2, #32
 8007d5e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007d62:	68fb      	ldr	r3, [r7, #12]
 8007d64:	2220      	movs	r2, #32
 8007d66:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007d6a:	68fb      	ldr	r3, [r7, #12]
 8007d6c:	2200      	movs	r2, #0
 8007d6e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007d72:	2303      	movs	r3, #3
 8007d74:	e00f      	b.n	8007d96 <UART_WaitOnFlagUntilTimeout+0xd4>
 8007d76:	68fb      	ldr	r3, [r7, #12]
 8007d78:	681b      	ldr	r3, [r3, #0]
 8007d7a:	681a      	ldr	r2, [r3, #0]
 8007d7c:	68bb      	ldr	r3, [r7, #8]
 8007d7e:	4013      	ands	r3, r2
 8007d80:	68ba      	ldr	r2, [r7, #8]
 8007d82:	429a      	cmp	r2, r3
 8007d84:	bf0c      	ite	eq
 8007d86:	2301      	moveq	r3, #1
 8007d88:	2300      	movne	r3, #0
 8007d8a:	b2db      	uxtb	r3, r3
 8007d8c:	461a      	mov	r2, r3
 8007d8e:	79fb      	ldrb	r3, [r7, #7]
 8007d90:	429a      	cmp	r2, r3
 8007d92:	d09f      	beq.n	8007cd4 <UART_WaitOnFlagUntilTimeout+0x12>
 8007d94:	2300      	movs	r3, #0
 8007d96:	4618      	mov	r0, r3
 8007d98:	3740      	adds	r7, #64	@ 0x40
 8007d9a:	46bd      	mov	sp, r7
 8007d9c:	bd80      	pop	{r7, pc}
	...

08007da0 <UART_SetConfig>:
 8007da0:	b580      	push	{r7, lr}
 8007da2:	b084      	sub	sp, #16
 8007da4:	af00      	add	r7, sp, #0
 8007da6:	6078      	str	r0, [r7, #4]
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	691b      	ldr	r3, [r3, #16]
 8007dae:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	68da      	ldr	r2, [r3, #12]
 8007db6:	687b      	ldr	r3, [r7, #4]
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	430a      	orrs	r2, r1
 8007dbc:	611a      	str	r2, [r3, #16]
 8007dbe:	687b      	ldr	r3, [r7, #4]
 8007dc0:	689a      	ldr	r2, [r3, #8]
 8007dc2:	687b      	ldr	r3, [r7, #4]
 8007dc4:	691b      	ldr	r3, [r3, #16]
 8007dc6:	431a      	orrs	r2, r3
 8007dc8:	687b      	ldr	r3, [r7, #4]
 8007dca:	695b      	ldr	r3, [r3, #20]
 8007dcc:	431a      	orrs	r2, r3
 8007dce:	687b      	ldr	r3, [r7, #4]
 8007dd0:	69db      	ldr	r3, [r3, #28]
 8007dd2:	4313      	orrs	r3, r2
 8007dd4:	60bb      	str	r3, [r7, #8]
 8007dd6:	687b      	ldr	r3, [r7, #4]
 8007dd8:	681b      	ldr	r3, [r3, #0]
 8007dda:	68db      	ldr	r3, [r3, #12]
 8007ddc:	f423 4316 	bic.w	r3, r3, #38400	@ 0x9600
 8007de0:	f023 030c 	bic.w	r3, r3, #12
 8007de4:	687a      	ldr	r2, [r7, #4]
 8007de6:	6812      	ldr	r2, [r2, #0]
 8007de8:	68b9      	ldr	r1, [r7, #8]
 8007dea:	430b      	orrs	r3, r1
 8007dec:	60d3      	str	r3, [r2, #12]
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	681b      	ldr	r3, [r3, #0]
 8007df2:	695b      	ldr	r3, [r3, #20]
 8007df4:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8007df8:	687b      	ldr	r3, [r7, #4]
 8007dfa:	699a      	ldr	r2, [r3, #24]
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	681b      	ldr	r3, [r3, #0]
 8007e00:	430a      	orrs	r2, r1
 8007e02:	615a      	str	r2, [r3, #20]
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	681b      	ldr	r3, [r3, #0]
 8007e08:	4a55      	ldr	r2, [pc, #340]	@ (8007f60 <UART_SetConfig+0x1c0>)
 8007e0a:	4293      	cmp	r3, r2
 8007e0c:	d103      	bne.n	8007e16 <UART_SetConfig+0x76>
 8007e0e:	f7ff faf7 	bl	8007400 <HAL_RCC_GetPCLK2Freq>
 8007e12:	60f8      	str	r0, [r7, #12]
 8007e14:	e002      	b.n	8007e1c <UART_SetConfig+0x7c>
 8007e16:	f7ff fadf 	bl	80073d8 <HAL_RCC_GetPCLK1Freq>
 8007e1a:	60f8      	str	r0, [r7, #12]
 8007e1c:	687b      	ldr	r3, [r7, #4]
 8007e1e:	69db      	ldr	r3, [r3, #28]
 8007e20:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007e24:	d14c      	bne.n	8007ec0 <UART_SetConfig+0x120>
 8007e26:	68fa      	ldr	r2, [r7, #12]
 8007e28:	4613      	mov	r3, r2
 8007e2a:	009b      	lsls	r3, r3, #2
 8007e2c:	4413      	add	r3, r2
 8007e2e:	009a      	lsls	r2, r3, #2
 8007e30:	441a      	add	r2, r3
 8007e32:	687b      	ldr	r3, [r7, #4]
 8007e34:	685b      	ldr	r3, [r3, #4]
 8007e36:	005b      	lsls	r3, r3, #1
 8007e38:	fbb2 f3f3 	udiv	r3, r2, r3
 8007e3c:	4a49      	ldr	r2, [pc, #292]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007e3e:	fba2 2303 	umull	r2, r3, r2, r3
 8007e42:	095b      	lsrs	r3, r3, #5
 8007e44:	0119      	lsls	r1, r3, #4
 8007e46:	68fa      	ldr	r2, [r7, #12]
 8007e48:	4613      	mov	r3, r2
 8007e4a:	009b      	lsls	r3, r3, #2
 8007e4c:	4413      	add	r3, r2
 8007e4e:	009a      	lsls	r2, r3, #2
 8007e50:	441a      	add	r2, r3
 8007e52:	687b      	ldr	r3, [r7, #4]
 8007e54:	685b      	ldr	r3, [r3, #4]
 8007e56:	005b      	lsls	r3, r3, #1
 8007e58:	fbb2 f2f3 	udiv	r2, r2, r3
 8007e5c:	4b41      	ldr	r3, [pc, #260]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007e5e:	fba3 0302 	umull	r0, r3, r3, r2
 8007e62:	095b      	lsrs	r3, r3, #5
 8007e64:	2064      	movs	r0, #100	@ 0x64
 8007e66:	fb00 f303 	mul.w	r3, r0, r3
 8007e6a:	1ad3      	subs	r3, r2, r3
 8007e6c:	00db      	lsls	r3, r3, #3
 8007e6e:	3332      	adds	r3, #50	@ 0x32
 8007e70:	4a3c      	ldr	r2, [pc, #240]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007e72:	fba2 2303 	umull	r2, r3, r2, r3
 8007e76:	095b      	lsrs	r3, r3, #5
 8007e78:	005b      	lsls	r3, r3, #1
 8007e7a:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8007e7e:	4419      	add	r1, r3
 8007e80:	68fa      	ldr	r2, [r7, #12]
 8007e82:	4613      	mov	r3, r2
 8007e84:	009b      	lsls	r3, r3, #2
 8007e86:	4413      	add	r3, r2
 8007e88:	009a      	lsls	r2, r3, #2
 8007e8a:	441a      	add	r2, r3
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	685b      	ldr	r3, [r3, #4]
 8007e90:	005b      	lsls	r3, r3, #1
 8007e92:	fbb2 f2f3 	udiv	r2, r2, r3
 8007e96:	4b33      	ldr	r3, [pc, #204]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007e98:	fba3 0302 	umull	r0, r3, r3, r2
 8007e9c:	095b      	lsrs	r3, r3, #5
 8007e9e:	2064      	movs	r0, #100	@ 0x64
 8007ea0:	fb00 f303 	mul.w	r3, r0, r3
 8007ea4:	1ad3      	subs	r3, r2, r3
 8007ea6:	00db      	lsls	r3, r3, #3
 8007ea8:	3332      	adds	r3, #50	@ 0x32
 8007eaa:	4a2e      	ldr	r2, [pc, #184]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007eac:	fba2 2303 	umull	r2, r3, r2, r3
 8007eb0:	095b      	lsrs	r3, r3, #5
 8007eb2:	f003 0207 	and.w	r2, r3, #7
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	681b      	ldr	r3, [r3, #0]
 8007eba:	440a      	add	r2, r1
 8007ebc:	609a      	str	r2, [r3, #8]
 8007ebe:	e04a      	b.n	8007f56 <UART_SetConfig+0x1b6>
 8007ec0:	68fa      	ldr	r2, [r7, #12]
 8007ec2:	4613      	mov	r3, r2
 8007ec4:	009b      	lsls	r3, r3, #2
 8007ec6:	4413      	add	r3, r2
 8007ec8:	009a      	lsls	r2, r3, #2
 8007eca:	441a      	add	r2, r3
 8007ecc:	687b      	ldr	r3, [r7, #4]
 8007ece:	685b      	ldr	r3, [r3, #4]
 8007ed0:	009b      	lsls	r3, r3, #2
 8007ed2:	fbb2 f3f3 	udiv	r3, r2, r3
 8007ed6:	4a23      	ldr	r2, [pc, #140]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007ed8:	fba2 2303 	umull	r2, r3, r2, r3
 8007edc:	095b      	lsrs	r3, r3, #5
 8007ede:	0119      	lsls	r1, r3, #4
 8007ee0:	68fa      	ldr	r2, [r7, #12]
 8007ee2:	4613      	mov	r3, r2
 8007ee4:	009b      	lsls	r3, r3, #2
 8007ee6:	4413      	add	r3, r2
 8007ee8:	009a      	lsls	r2, r3, #2
 8007eea:	441a      	add	r2, r3
 8007eec:	687b      	ldr	r3, [r7, #4]
 8007eee:	685b      	ldr	r3, [r3, #4]
 8007ef0:	009b      	lsls	r3, r3, #2
 8007ef2:	fbb2 f2f3 	udiv	r2, r2, r3
 8007ef6:	4b1b      	ldr	r3, [pc, #108]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007ef8:	fba3 0302 	umull	r0, r3, r3, r2
 8007efc:	095b      	lsrs	r3, r3, #5
 8007efe:	2064      	movs	r0, #100	@ 0x64
 8007f00:	fb00 f303 	mul.w	r3, r0, r3
 8007f04:	1ad3      	subs	r3, r2, r3
 8007f06:	011b      	lsls	r3, r3, #4
 8007f08:	3332      	adds	r3, #50	@ 0x32
 8007f0a:	4a16      	ldr	r2, [pc, #88]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007f0c:	fba2 2303 	umull	r2, r3, r2, r3
 8007f10:	095b      	lsrs	r3, r3, #5
 8007f12:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007f16:	4419      	add	r1, r3
 8007f18:	68fa      	ldr	r2, [r7, #12]
 8007f1a:	4613      	mov	r3, r2
 8007f1c:	009b      	lsls	r3, r3, #2
 8007f1e:	4413      	add	r3, r2
 8007f20:	009a      	lsls	r2, r3, #2
 8007f22:	441a      	add	r2, r3
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	685b      	ldr	r3, [r3, #4]
 8007f28:	009b      	lsls	r3, r3, #2
 8007f2a:	fbb2 f2f3 	udiv	r2, r2, r3
 8007f2e:	4b0d      	ldr	r3, [pc, #52]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007f30:	fba3 0302 	umull	r0, r3, r3, r2
 8007f34:	095b      	lsrs	r3, r3, #5
 8007f36:	2064      	movs	r0, #100	@ 0x64
 8007f38:	fb00 f303 	mul.w	r3, r0, r3
 8007f3c:	1ad3      	subs	r3, r2, r3
 8007f3e:	011b      	lsls	r3, r3, #4
 8007f40:	3332      	adds	r3, #50	@ 0x32
 8007f42:	4a08      	ldr	r2, [pc, #32]	@ (8007f64 <UART_SetConfig+0x1c4>)
 8007f44:	fba2 2303 	umull	r2, r3, r2, r3
 8007f48:	095b      	lsrs	r3, r3, #5
 8007f4a:	f003 020f 	and.w	r2, r3, #15
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	681b      	ldr	r3, [r3, #0]
 8007f52:	440a      	add	r2, r1
 8007f54:	609a      	str	r2, [r3, #8]
 8007f56:	bf00      	nop
 8007f58:	3710      	adds	r7, #16
 8007f5a:	46bd      	mov	sp, r7
 8007f5c:	bd80      	pop	{r7, pc}
 8007f5e:	bf00      	nop
 8007f60:	40013800 	.word	0x40013800
 8007f64:	51eb851f 	.word	0x51eb851f

08007f68 <aci_gap_init_IDB05A1>:
 8007f68:	b580      	push	{r7, lr}
 8007f6a:	b08c      	sub	sp, #48	@ 0x30
 8007f6c:	af00      	add	r7, sp, #0
 8007f6e:	603b      	str	r3, [r7, #0]
 8007f70:	4603      	mov	r3, r0
 8007f72:	71fb      	strb	r3, [r7, #7]
 8007f74:	460b      	mov	r3, r1
 8007f76:	71bb      	strb	r3, [r7, #6]
 8007f78:	4613      	mov	r3, r2
 8007f7a:	717b      	strb	r3, [r7, #5]
 8007f7c:	79fb      	ldrb	r3, [r7, #7]
 8007f7e:	753b      	strb	r3, [r7, #20]
 8007f80:	79bb      	ldrb	r3, [r7, #6]
 8007f82:	757b      	strb	r3, [r7, #21]
 8007f84:	797b      	ldrb	r3, [r7, #5]
 8007f86:	75bb      	strb	r3, [r7, #22]
 8007f88:	f107 030c 	add.w	r3, r7, #12
 8007f8c:	2207      	movs	r2, #7
 8007f8e:	2100      	movs	r1, #0
 8007f90:	4618      	mov	r0, r3
 8007f92:	f002 fa4d 	bl	800a430 <memset>
 8007f96:	f107 0318 	add.w	r3, r7, #24
 8007f9a:	2218      	movs	r2, #24
 8007f9c:	2100      	movs	r1, #0
 8007f9e:	4618      	mov	r0, r3
 8007fa0:	f002 fa46 	bl	800a430 <memset>
 8007fa4:	233f      	movs	r3, #63	@ 0x3f
 8007fa6:	833b      	strh	r3, [r7, #24]
 8007fa8:	238a      	movs	r3, #138	@ 0x8a
 8007faa:	837b      	strh	r3, [r7, #26]
 8007fac:	f107 0314 	add.w	r3, r7, #20
 8007fb0:	623b      	str	r3, [r7, #32]
 8007fb2:	2303      	movs	r3, #3
 8007fb4:	627b      	str	r3, [r7, #36]	@ 0x24
 8007fb6:	f107 030c 	add.w	r3, r7, #12
 8007fba:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007fbc:	2307      	movs	r3, #7
 8007fbe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007fc0:	f107 0318 	add.w	r3, r7, #24
 8007fc4:	2100      	movs	r1, #0
 8007fc6:	4618      	mov	r0, r3
 8007fc8:	f000 fea0 	bl	8008d0c <hci_send_req>
 8007fcc:	4603      	mov	r3, r0
 8007fce:	2b00      	cmp	r3, #0
 8007fd0:	da01      	bge.n	8007fd6 <aci_gap_init_IDB05A1+0x6e>
 8007fd2:	23ff      	movs	r3, #255	@ 0xff
 8007fd4:	e014      	b.n	8008000 <aci_gap_init_IDB05A1+0x98>
 8007fd6:	7b3b      	ldrb	r3, [r7, #12]
 8007fd8:	2b00      	cmp	r3, #0
 8007fda:	d001      	beq.n	8007fe0 <aci_gap_init_IDB05A1+0x78>
 8007fdc:	7b3b      	ldrb	r3, [r7, #12]
 8007fde:	e00f      	b.n	8008000 <aci_gap_init_IDB05A1+0x98>
 8007fe0:	f8b7 300d 	ldrh.w	r3, [r7, #13]
 8007fe4:	b29a      	uxth	r2, r3
 8007fe6:	683b      	ldr	r3, [r7, #0]
 8007fe8:	801a      	strh	r2, [r3, #0]
 8007fea:	f8b7 300f 	ldrh.w	r3, [r7, #15]
 8007fee:	b29a      	uxth	r2, r3
 8007ff0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007ff2:	801a      	strh	r2, [r3, #0]
 8007ff4:	f8b7 3011 	ldrh.w	r3, [r7, #17]
 8007ff8:	b29a      	uxth	r2, r3
 8007ffa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007ffc:	801a      	strh	r2, [r3, #0]
 8007ffe:	2300      	movs	r3, #0
 8008000:	4618      	mov	r0, r3
 8008002:	3730      	adds	r7, #48	@ 0x30
 8008004:	46bd      	mov	sp, r7
 8008006:	bd80      	pop	{r7, pc}

08008008 <aci_gap_init_IDB04A1>:
 8008008:	b580      	push	{r7, lr}
 800800a:	b08e      	sub	sp, #56	@ 0x38
 800800c:	af00      	add	r7, sp, #0
 800800e:	60b9      	str	r1, [r7, #8]
 8008010:	607a      	str	r2, [r7, #4]
 8008012:	603b      	str	r3, [r7, #0]
 8008014:	4603      	mov	r3, r0
 8008016:	73fb      	strb	r3, [r7, #15]
 8008018:	7bfb      	ldrb	r3, [r7, #15]
 800801a:	773b      	strb	r3, [r7, #28]
 800801c:	f107 0314 	add.w	r3, r7, #20
 8008020:	2207      	movs	r2, #7
 8008022:	2100      	movs	r1, #0
 8008024:	4618      	mov	r0, r3
 8008026:	f002 fa03 	bl	800a430 <memset>
 800802a:	f107 0320 	add.w	r3, r7, #32
 800802e:	2218      	movs	r2, #24
 8008030:	2100      	movs	r1, #0
 8008032:	4618      	mov	r0, r3
 8008034:	f002 f9fc 	bl	800a430 <memset>
 8008038:	233f      	movs	r3, #63	@ 0x3f
 800803a:	843b      	strh	r3, [r7, #32]
 800803c:	238a      	movs	r3, #138	@ 0x8a
 800803e:	847b      	strh	r3, [r7, #34]	@ 0x22
 8008040:	f107 031c 	add.w	r3, r7, #28
 8008044:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008046:	2301      	movs	r3, #1
 8008048:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800804a:	f107 0314 	add.w	r3, r7, #20
 800804e:	633b      	str	r3, [r7, #48]	@ 0x30
 8008050:	2307      	movs	r3, #7
 8008052:	637b      	str	r3, [r7, #52]	@ 0x34
 8008054:	f107 0320 	add.w	r3, r7, #32
 8008058:	2100      	movs	r1, #0
 800805a:	4618      	mov	r0, r3
 800805c:	f000 fe56 	bl	8008d0c <hci_send_req>
 8008060:	4603      	mov	r3, r0
 8008062:	2b00      	cmp	r3, #0
 8008064:	da01      	bge.n	800806a <aci_gap_init_IDB04A1+0x62>
 8008066:	23ff      	movs	r3, #255	@ 0xff
 8008068:	e014      	b.n	8008094 <aci_gap_init_IDB04A1+0x8c>
 800806a:	7d3b      	ldrb	r3, [r7, #20]
 800806c:	2b00      	cmp	r3, #0
 800806e:	d001      	beq.n	8008074 <aci_gap_init_IDB04A1+0x6c>
 8008070:	7d3b      	ldrb	r3, [r7, #20]
 8008072:	e00f      	b.n	8008094 <aci_gap_init_IDB04A1+0x8c>
 8008074:	f8b7 3015 	ldrh.w	r3, [r7, #21]
 8008078:	b29a      	uxth	r2, r3
 800807a:	68bb      	ldr	r3, [r7, #8]
 800807c:	801a      	strh	r2, [r3, #0]
 800807e:	f8b7 3017 	ldrh.w	r3, [r7, #23]
 8008082:	b29a      	uxth	r2, r3
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	801a      	strh	r2, [r3, #0]
 8008088:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 800808c:	b29a      	uxth	r2, r3
 800808e:	683b      	ldr	r3, [r7, #0]
 8008090:	801a      	strh	r2, [r3, #0]
 8008092:	2300      	movs	r3, #0
 8008094:	4618      	mov	r0, r3
 8008096:	3738      	adds	r7, #56	@ 0x38
 8008098:	46bd      	mov	sp, r7
 800809a:	bd80      	pop	{r7, pc}

0800809c <aci_gap_set_discoverable>:
 800809c:	b590      	push	{r4, r7, lr}
 800809e:	b095      	sub	sp, #84	@ 0x54
 80080a0:	af00      	add	r7, sp, #0
 80080a2:	4604      	mov	r4, r0
 80080a4:	4608      	mov	r0, r1
 80080a6:	4611      	mov	r1, r2
 80080a8:	461a      	mov	r2, r3
 80080aa:	4623      	mov	r3, r4
 80080ac:	71fb      	strb	r3, [r7, #7]
 80080ae:	4603      	mov	r3, r0
 80080b0:	80bb      	strh	r3, [r7, #4]
 80080b2:	460b      	mov	r3, r1
 80080b4:	807b      	strh	r3, [r7, #2]
 80080b6:	4613      	mov	r3, r2
 80080b8:	71bb      	strb	r3, [r7, #6]
 80080ba:	2300      	movs	r3, #0
 80080bc:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 80080c0:	f897 2064 	ldrb.w	r2, [r7, #100]	@ 0x64
 80080c4:	f897 306c 	ldrb.w	r3, [r7, #108]	@ 0x6c
 80080c8:	4413      	add	r3, r2
 80080ca:	330e      	adds	r3, #14
 80080cc:	2b28      	cmp	r3, #40	@ 0x28
 80080ce:	d901      	bls.n	80080d4 <aci_gap_set_discoverable+0x38>
 80080d0:	2342      	movs	r3, #66	@ 0x42
 80080d2:	e0c9      	b.n	8008268 <aci_gap_set_discoverable+0x1cc>
 80080d4:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80080d8:	3350      	adds	r3, #80	@ 0x50
 80080da:	443b      	add	r3, r7
 80080dc:	79fa      	ldrb	r2, [r7, #7]
 80080de:	f803 2c48 	strb.w	r2, [r3, #-72]
 80080e2:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80080e6:	3301      	adds	r3, #1
 80080e8:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 80080ec:	88bb      	ldrh	r3, [r7, #4]
 80080ee:	80bb      	strh	r3, [r7, #4]
 80080f0:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80080f4:	f107 0208 	add.w	r2, r7, #8
 80080f8:	4413      	add	r3, r2
 80080fa:	88ba      	ldrh	r2, [r7, #4]
 80080fc:	801a      	strh	r2, [r3, #0]
 80080fe:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008102:	3302      	adds	r3, #2
 8008104:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8008108:	887b      	ldrh	r3, [r7, #2]
 800810a:	807b      	strh	r3, [r7, #2]
 800810c:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008110:	f107 0208 	add.w	r2, r7, #8
 8008114:	4413      	add	r3, r2
 8008116:	887a      	ldrh	r2, [r7, #2]
 8008118:	801a      	strh	r2, [r3, #0]
 800811a:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 800811e:	3302      	adds	r3, #2
 8008120:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8008124:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008128:	3350      	adds	r3, #80	@ 0x50
 800812a:	443b      	add	r3, r7
 800812c:	79ba      	ldrb	r2, [r7, #6]
 800812e:	f803 2c48 	strb.w	r2, [r3, #-72]
 8008132:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008136:	3301      	adds	r3, #1
 8008138:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 800813c:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008140:	3350      	adds	r3, #80	@ 0x50
 8008142:	443b      	add	r3, r7
 8008144:	f897 2060 	ldrb.w	r2, [r7, #96]	@ 0x60
 8008148:	f803 2c48 	strb.w	r2, [r3, #-72]
 800814c:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008150:	3301      	adds	r3, #1
 8008152:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8008156:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 800815a:	3350      	adds	r3, #80	@ 0x50
 800815c:	443b      	add	r3, r7
 800815e:	f897 2064 	ldrb.w	r2, [r7, #100]	@ 0x64
 8008162:	f803 2c48 	strb.w	r2, [r3, #-72]
 8008166:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 800816a:	3301      	adds	r3, #1
 800816c:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8008170:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008174:	f107 0208 	add.w	r2, r7, #8
 8008178:	4413      	add	r3, r2
 800817a:	f897 2064 	ldrb.w	r2, [r7, #100]	@ 0x64
 800817e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8008180:	4618      	mov	r0, r3
 8008182:	f002 f9e2 	bl	800a54a <memcpy>
 8008186:	f897 204f 	ldrb.w	r2, [r7, #79]	@ 0x4f
 800818a:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 800818e:	4413      	add	r3, r2
 8008190:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8008194:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008198:	3350      	adds	r3, #80	@ 0x50
 800819a:	443b      	add	r3, r7
 800819c:	f897 206c 	ldrb.w	r2, [r7, #108]	@ 0x6c
 80081a0:	f803 2c48 	strb.w	r2, [r3, #-72]
 80081a4:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80081a8:	3301      	adds	r3, #1
 80081aa:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 80081ae:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80081b2:	f107 0208 	add.w	r2, r7, #8
 80081b6:	4413      	add	r3, r2
 80081b8:	f897 206c 	ldrb.w	r2, [r7, #108]	@ 0x6c
 80081bc:	6f39      	ldr	r1, [r7, #112]	@ 0x70
 80081be:	4618      	mov	r0, r3
 80081c0:	f002 f9c3 	bl	800a54a <memcpy>
 80081c4:	f897 204f 	ldrb.w	r2, [r7, #79]	@ 0x4f
 80081c8:	f897 306c 	ldrb.w	r3, [r7, #108]	@ 0x6c
 80081cc:	4413      	add	r3, r2
 80081ce:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 80081d2:	f8b7 3074 	ldrh.w	r3, [r7, #116]	@ 0x74
 80081d6:	f8a7 3074 	strh.w	r3, [r7, #116]	@ 0x74
 80081da:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80081de:	f107 0208 	add.w	r2, r7, #8
 80081e2:	4413      	add	r3, r2
 80081e4:	f8b7 2074 	ldrh.w	r2, [r7, #116]	@ 0x74
 80081e8:	801a      	strh	r2, [r3, #0]
 80081ea:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80081ee:	3302      	adds	r3, #2
 80081f0:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 80081f4:	f8b7 3078 	ldrh.w	r3, [r7, #120]	@ 0x78
 80081f8:	f8a7 3078 	strh.w	r3, [r7, #120]	@ 0x78
 80081fc:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008200:	f107 0208 	add.w	r2, r7, #8
 8008204:	4413      	add	r3, r2
 8008206:	f8b7 2078 	ldrh.w	r2, [r7, #120]	@ 0x78
 800820a:	801a      	strh	r2, [r3, #0]
 800820c:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008210:	3302      	adds	r3, #2
 8008212:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8008216:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800821a:	2218      	movs	r2, #24
 800821c:	2100      	movs	r1, #0
 800821e:	4618      	mov	r0, r3
 8008220:	f002 f906 	bl	800a430 <memset>
 8008224:	233f      	movs	r3, #63	@ 0x3f
 8008226:	86bb      	strh	r3, [r7, #52]	@ 0x34
 8008228:	2383      	movs	r3, #131	@ 0x83
 800822a:	86fb      	strh	r3, [r7, #54]	@ 0x36
 800822c:	f107 0308 	add.w	r3, r7, #8
 8008230:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008232:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8008236:	643b      	str	r3, [r7, #64]	@ 0x40
 8008238:	f107 0333 	add.w	r3, r7, #51	@ 0x33
 800823c:	647b      	str	r3, [r7, #68]	@ 0x44
 800823e:	2301      	movs	r3, #1
 8008240:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008242:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8008246:	2100      	movs	r1, #0
 8008248:	4618      	mov	r0, r3
 800824a:	f000 fd5f 	bl	8008d0c <hci_send_req>
 800824e:	4603      	mov	r3, r0
 8008250:	2b00      	cmp	r3, #0
 8008252:	da01      	bge.n	8008258 <aci_gap_set_discoverable+0x1bc>
 8008254:	23ff      	movs	r3, #255	@ 0xff
 8008256:	e007      	b.n	8008268 <aci_gap_set_discoverable+0x1cc>
 8008258:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 800825c:	2b00      	cmp	r3, #0
 800825e:	d002      	beq.n	8008266 <aci_gap_set_discoverable+0x1ca>
 8008260:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8008264:	e000      	b.n	8008268 <aci_gap_set_discoverable+0x1cc>
 8008266:	2300      	movs	r3, #0
 8008268:	4618      	mov	r0, r3
 800826a:	3754      	adds	r7, #84	@ 0x54
 800826c:	46bd      	mov	sp, r7
 800826e:	bd90      	pop	{r4, r7, pc}

08008270 <aci_gap_set_auth_requirement>:
 8008270:	b590      	push	{r4, r7, lr}
 8008272:	b091      	sub	sp, #68	@ 0x44
 8008274:	af00      	add	r7, sp, #0
 8008276:	603a      	str	r2, [r7, #0]
 8008278:	461a      	mov	r2, r3
 800827a:	4603      	mov	r3, r0
 800827c:	71fb      	strb	r3, [r7, #7]
 800827e:	460b      	mov	r3, r1
 8008280:	71bb      	strb	r3, [r7, #6]
 8008282:	4613      	mov	r3, r2
 8008284:	717b      	strb	r3, [r7, #5]
 8008286:	79fb      	ldrb	r3, [r7, #7]
 8008288:	733b      	strb	r3, [r7, #12]
 800828a:	79bb      	ldrb	r3, [r7, #6]
 800828c:	737b      	strb	r3, [r7, #13]
 800828e:	79bb      	ldrb	r3, [r7, #6]
 8008290:	2b00      	cmp	r3, #0
 8008292:	d00a      	beq.n	80082aa <aci_gap_set_auth_requirement+0x3a>
 8008294:	683a      	ldr	r2, [r7, #0]
 8008296:	f107 030e 	add.w	r3, r7, #14
 800829a:	6814      	ldr	r4, [r2, #0]
 800829c:	6850      	ldr	r0, [r2, #4]
 800829e:	6891      	ldr	r1, [r2, #8]
 80082a0:	68d2      	ldr	r2, [r2, #12]
 80082a2:	601c      	str	r4, [r3, #0]
 80082a4:	6058      	str	r0, [r3, #4]
 80082a6:	6099      	str	r1, [r3, #8]
 80082a8:	60da      	str	r2, [r3, #12]
 80082aa:	797b      	ldrb	r3, [r7, #5]
 80082ac:	77bb      	strb	r3, [r7, #30]
 80082ae:	f897 3050 	ldrb.w	r3, [r7, #80]	@ 0x50
 80082b2:	77fb      	strb	r3, [r7, #31]
 80082b4:	f897 3054 	ldrb.w	r3, [r7, #84]	@ 0x54
 80082b8:	f887 3020 	strb.w	r3, [r7, #32]
 80082bc:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80082be:	f8c7 3021 	str.w	r3, [r7, #33]	@ 0x21
 80082c2:	f897 305c 	ldrb.w	r3, [r7, #92]	@ 0x5c
 80082c6:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 80082ca:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80082ce:	2218      	movs	r2, #24
 80082d0:	2100      	movs	r1, #0
 80082d2:	4618      	mov	r0, r3
 80082d4:	f002 f8ac 	bl	800a430 <memset>
 80082d8:	233f      	movs	r3, #63	@ 0x3f
 80082da:	853b      	strh	r3, [r7, #40]	@ 0x28
 80082dc:	2386      	movs	r3, #134	@ 0x86
 80082de:	857b      	strh	r3, [r7, #42]	@ 0x2a
 80082e0:	f107 030c 	add.w	r3, r7, #12
 80082e4:	633b      	str	r3, [r7, #48]	@ 0x30
 80082e6:	231a      	movs	r3, #26
 80082e8:	637b      	str	r3, [r7, #52]	@ 0x34
 80082ea:	f107 030b 	add.w	r3, r7, #11
 80082ee:	63bb      	str	r3, [r7, #56]	@ 0x38
 80082f0:	2301      	movs	r3, #1
 80082f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80082f4:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80082f8:	2100      	movs	r1, #0
 80082fa:	4618      	mov	r0, r3
 80082fc:	f000 fd06 	bl	8008d0c <hci_send_req>
 8008300:	4603      	mov	r3, r0
 8008302:	2b00      	cmp	r3, #0
 8008304:	da01      	bge.n	800830a <aci_gap_set_auth_requirement+0x9a>
 8008306:	23ff      	movs	r3, #255	@ 0xff
 8008308:	e005      	b.n	8008316 <aci_gap_set_auth_requirement+0xa6>
 800830a:	7afb      	ldrb	r3, [r7, #11]
 800830c:	2b00      	cmp	r3, #0
 800830e:	d001      	beq.n	8008314 <aci_gap_set_auth_requirement+0xa4>
 8008310:	7afb      	ldrb	r3, [r7, #11]
 8008312:	e000      	b.n	8008316 <aci_gap_set_auth_requirement+0xa6>
 8008314:	2300      	movs	r3, #0
 8008316:	4618      	mov	r0, r3
 8008318:	3744      	adds	r7, #68	@ 0x44
 800831a:	46bd      	mov	sp, r7
 800831c:	bd90      	pop	{r4, r7, pc}

0800831e <aci_gap_update_adv_data>:
 800831e:	b580      	push	{r7, lr}
 8008320:	b092      	sub	sp, #72	@ 0x48
 8008322:	af00      	add	r7, sp, #0
 8008324:	4603      	mov	r3, r0
 8008326:	6039      	str	r1, [r7, #0]
 8008328:	71fb      	strb	r3, [r7, #7]
 800832a:	2300      	movs	r3, #0
 800832c:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8008330:	79fb      	ldrb	r3, [r7, #7]
 8008332:	2b1f      	cmp	r3, #31
 8008334:	d901      	bls.n	800833a <aci_gap_update_adv_data+0x1c>
 8008336:	2342      	movs	r3, #66	@ 0x42
 8008338:	e03e      	b.n	80083b8 <aci_gap_update_adv_data+0x9a>
 800833a:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 800833e:	3348      	adds	r3, #72	@ 0x48
 8008340:	443b      	add	r3, r7
 8008342:	79fa      	ldrb	r2, [r7, #7]
 8008344:	f803 2c40 	strb.w	r2, [r3, #-64]
 8008348:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 800834c:	3301      	adds	r3, #1
 800834e:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8008352:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8008356:	f107 0208 	add.w	r2, r7, #8
 800835a:	4413      	add	r3, r2
 800835c:	79fa      	ldrb	r2, [r7, #7]
 800835e:	6839      	ldr	r1, [r7, #0]
 8008360:	4618      	mov	r0, r3
 8008362:	f002 f8f2 	bl	800a54a <memcpy>
 8008366:	f897 2047 	ldrb.w	r2, [r7, #71]	@ 0x47
 800836a:	79fb      	ldrb	r3, [r7, #7]
 800836c:	4413      	add	r3, r2
 800836e:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8008372:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8008376:	2218      	movs	r2, #24
 8008378:	2100      	movs	r1, #0
 800837a:	4618      	mov	r0, r3
 800837c:	f002 f858 	bl	800a430 <memset>
 8008380:	233f      	movs	r3, #63	@ 0x3f
 8008382:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 8008384:	238e      	movs	r3, #142	@ 0x8e
 8008386:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8008388:	f107 0308 	add.w	r3, r7, #8
 800838c:	637b      	str	r3, [r7, #52]	@ 0x34
 800838e:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8008392:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008394:	f107 032b 	add.w	r3, r7, #43	@ 0x2b
 8008398:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800839a:	2301      	movs	r3, #1
 800839c:	643b      	str	r3, [r7, #64]	@ 0x40
 800839e:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 80083a2:	2100      	movs	r1, #0
 80083a4:	4618      	mov	r0, r3
 80083a6:	f000 fcb1 	bl	8008d0c <hci_send_req>
 80083aa:	4603      	mov	r3, r0
 80083ac:	2b00      	cmp	r3, #0
 80083ae:	da01      	bge.n	80083b4 <aci_gap_update_adv_data+0x96>
 80083b0:	23ff      	movs	r3, #255	@ 0xff
 80083b2:	e001      	b.n	80083b8 <aci_gap_update_adv_data+0x9a>
 80083b4:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 80083b8:	4618      	mov	r0, r3
 80083ba:	3748      	adds	r7, #72	@ 0x48
 80083bc:	46bd      	mov	sp, r7
 80083be:	bd80      	pop	{r7, pc}

080083c0 <aci_gatt_init>:
 80083c0:	b580      	push	{r7, lr}
 80083c2:	b088      	sub	sp, #32
 80083c4:	af00      	add	r7, sp, #0
 80083c6:	f107 0308 	add.w	r3, r7, #8
 80083ca:	2218      	movs	r2, #24
 80083cc:	2100      	movs	r1, #0
 80083ce:	4618      	mov	r0, r3
 80083d0:	f002 f82e 	bl	800a430 <memset>
 80083d4:	233f      	movs	r3, #63	@ 0x3f
 80083d6:	813b      	strh	r3, [r7, #8]
 80083d8:	f240 1301 	movw	r3, #257	@ 0x101
 80083dc:	817b      	strh	r3, [r7, #10]
 80083de:	1dfb      	adds	r3, r7, #7
 80083e0:	61bb      	str	r3, [r7, #24]
 80083e2:	2301      	movs	r3, #1
 80083e4:	61fb      	str	r3, [r7, #28]
 80083e6:	f107 0308 	add.w	r3, r7, #8
 80083ea:	2100      	movs	r1, #0
 80083ec:	4618      	mov	r0, r3
 80083ee:	f000 fc8d 	bl	8008d0c <hci_send_req>
 80083f2:	4603      	mov	r3, r0
 80083f4:	2b00      	cmp	r3, #0
 80083f6:	da01      	bge.n	80083fc <aci_gatt_init+0x3c>
 80083f8:	23ff      	movs	r3, #255	@ 0xff
 80083fa:	e000      	b.n	80083fe <aci_gatt_init+0x3e>
 80083fc:	79fb      	ldrb	r3, [r7, #7]
 80083fe:	4618      	mov	r0, r3
 8008400:	3720      	adds	r7, #32
 8008402:	46bd      	mov	sp, r7
 8008404:	bd80      	pop	{r7, pc}

08008406 <aci_gatt_add_serv>:
 8008406:	b580      	push	{r7, lr}
 8008408:	b090      	sub	sp, #64	@ 0x40
 800840a:	af00      	add	r7, sp, #0
 800840c:	6039      	str	r1, [r7, #0]
 800840e:	4611      	mov	r1, r2
 8008410:	461a      	mov	r2, r3
 8008412:	4603      	mov	r3, r0
 8008414:	71fb      	strb	r3, [r7, #7]
 8008416:	460b      	mov	r3, r1
 8008418:	71bb      	strb	r3, [r7, #6]
 800841a:	4613      	mov	r3, r2
 800841c:	717b      	strb	r3, [r7, #5]
 800841e:	2300      	movs	r3, #0
 8008420:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 8008424:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8008428:	3340      	adds	r3, #64	@ 0x40
 800842a:	443b      	add	r3, r7
 800842c:	79fa      	ldrb	r2, [r7, #7]
 800842e:	f803 2c34 	strb.w	r2, [r3, #-52]
 8008432:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8008436:	3301      	adds	r3, #1
 8008438:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 800843c:	79fb      	ldrb	r3, [r7, #7]
 800843e:	2b01      	cmp	r3, #1
 8008440:	d103      	bne.n	800844a <aci_gatt_add_serv+0x44>
 8008442:	2302      	movs	r3, #2
 8008444:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
 8008448:	e002      	b.n	8008450 <aci_gatt_add_serv+0x4a>
 800844a:	2310      	movs	r3, #16
 800844c:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
 8008450:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8008454:	f107 020c 	add.w	r2, r7, #12
 8008458:	4413      	add	r3, r2
 800845a:	f897 203f 	ldrb.w	r2, [r7, #63]	@ 0x3f
 800845e:	6839      	ldr	r1, [r7, #0]
 8008460:	4618      	mov	r0, r3
 8008462:	f002 f872 	bl	800a54a <memcpy>
 8008466:	f897 203e 	ldrb.w	r2, [r7, #62]	@ 0x3e
 800846a:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 800846e:	4413      	add	r3, r2
 8008470:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 8008474:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8008478:	3340      	adds	r3, #64	@ 0x40
 800847a:	443b      	add	r3, r7
 800847c:	79ba      	ldrb	r2, [r7, #6]
 800847e:	f803 2c34 	strb.w	r2, [r3, #-52]
 8008482:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8008486:	3301      	adds	r3, #1
 8008488:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 800848c:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8008490:	3340      	adds	r3, #64	@ 0x40
 8008492:	443b      	add	r3, r7
 8008494:	797a      	ldrb	r2, [r7, #5]
 8008496:	f803 2c34 	strb.w	r2, [r3, #-52]
 800849a:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 800849e:	3301      	adds	r3, #1
 80084a0:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 80084a4:	f107 0320 	add.w	r3, r7, #32
 80084a8:	2203      	movs	r2, #3
 80084aa:	2100      	movs	r1, #0
 80084ac:	4618      	mov	r0, r3
 80084ae:	f001 ffbf 	bl	800a430 <memset>
 80084b2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80084b6:	2218      	movs	r2, #24
 80084b8:	2100      	movs	r1, #0
 80084ba:	4618      	mov	r0, r3
 80084bc:	f001 ffb8 	bl	800a430 <memset>
 80084c0:	233f      	movs	r3, #63	@ 0x3f
 80084c2:	84bb      	strh	r3, [r7, #36]	@ 0x24
 80084c4:	f44f 7381 	mov.w	r3, #258	@ 0x102
 80084c8:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80084ca:	f107 030c 	add.w	r3, r7, #12
 80084ce:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80084d0:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 80084d4:	633b      	str	r3, [r7, #48]	@ 0x30
 80084d6:	f107 0320 	add.w	r3, r7, #32
 80084da:	637b      	str	r3, [r7, #52]	@ 0x34
 80084dc:	2303      	movs	r3, #3
 80084de:	63bb      	str	r3, [r7, #56]	@ 0x38
 80084e0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80084e4:	2100      	movs	r1, #0
 80084e6:	4618      	mov	r0, r3
 80084e8:	f000 fc10 	bl	8008d0c <hci_send_req>
 80084ec:	4603      	mov	r3, r0
 80084ee:	2b00      	cmp	r3, #0
 80084f0:	da01      	bge.n	80084f6 <aci_gatt_add_serv+0xf0>
 80084f2:	23ff      	movs	r3, #255	@ 0xff
 80084f4:	e00c      	b.n	8008510 <aci_gatt_add_serv+0x10a>
 80084f6:	f897 3020 	ldrb.w	r3, [r7, #32]
 80084fa:	2b00      	cmp	r3, #0
 80084fc:	d002      	beq.n	8008504 <aci_gatt_add_serv+0xfe>
 80084fe:	f897 3020 	ldrb.w	r3, [r7, #32]
 8008502:	e005      	b.n	8008510 <aci_gatt_add_serv+0x10a>
 8008504:	f8b7 3021 	ldrh.w	r3, [r7, #33]	@ 0x21
 8008508:	b29a      	uxth	r2, r3
 800850a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800850c:	801a      	strh	r2, [r3, #0]
 800850e:	2300      	movs	r3, #0
 8008510:	4618      	mov	r0, r3
 8008512:	3740      	adds	r7, #64	@ 0x40
 8008514:	46bd      	mov	sp, r7
 8008516:	bd80      	pop	{r7, pc}

08008518 <aci_gatt_add_char>:
 8008518:	b580      	push	{r7, lr}
 800851a:	b092      	sub	sp, #72	@ 0x48
 800851c:	af00      	add	r7, sp, #0
 800851e:	603a      	str	r2, [r7, #0]
 8008520:	461a      	mov	r2, r3
 8008522:	4603      	mov	r3, r0
 8008524:	80fb      	strh	r3, [r7, #6]
 8008526:	460b      	mov	r3, r1
 8008528:	717b      	strb	r3, [r7, #5]
 800852a:	4613      	mov	r3, r2
 800852c:	713b      	strb	r3, [r7, #4]
 800852e:	2300      	movs	r3, #0
 8008530:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 8008534:	88fb      	ldrh	r3, [r7, #6]
 8008536:	80fb      	strh	r3, [r7, #6]
 8008538:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 800853c:	f107 020c 	add.w	r2, r7, #12
 8008540:	4413      	add	r3, r2
 8008542:	88fa      	ldrh	r2, [r7, #6]
 8008544:	801a      	strh	r2, [r3, #0]
 8008546:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 800854a:	3302      	adds	r3, #2
 800854c:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 8008550:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8008554:	3348      	adds	r3, #72	@ 0x48
 8008556:	443b      	add	r3, r7
 8008558:	797a      	ldrb	r2, [r7, #5]
 800855a:	f803 2c3c 	strb.w	r2, [r3, #-60]
 800855e:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8008562:	3301      	adds	r3, #1
 8008564:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 8008568:	797b      	ldrb	r3, [r7, #5]
 800856a:	2b01      	cmp	r3, #1
 800856c:	d103      	bne.n	8008576 <aci_gatt_add_char+0x5e>
 800856e:	2302      	movs	r3, #2
 8008570:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8008574:	e002      	b.n	800857c <aci_gatt_add_char+0x64>
 8008576:	2310      	movs	r3, #16
 8008578:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 800857c:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8008580:	f107 020c 	add.w	r2, r7, #12
 8008584:	4413      	add	r3, r2
 8008586:	f897 2047 	ldrb.w	r2, [r7, #71]	@ 0x47
 800858a:	6839      	ldr	r1, [r7, #0]
 800858c:	4618      	mov	r0, r3
 800858e:	f001 ffdc 	bl	800a54a <memcpy>
 8008592:	f897 2046 	ldrb.w	r2, [r7, #70]	@ 0x46
 8008596:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 800859a:	4413      	add	r3, r2
 800859c:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 80085a0:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 80085a4:	3348      	adds	r3, #72	@ 0x48
 80085a6:	443b      	add	r3, r7
 80085a8:	793a      	ldrb	r2, [r7, #4]
 80085aa:	f803 2c3c 	strb.w	r2, [r3, #-60]
 80085ae:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 80085b2:	3301      	adds	r3, #1
 80085b4:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 80085b8:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 80085bc:	3348      	adds	r3, #72	@ 0x48
 80085be:	443b      	add	r3, r7
 80085c0:	f897 2050 	ldrb.w	r2, [r7, #80]	@ 0x50
 80085c4:	f803 2c3c 	strb.w	r2, [r3, #-60]
 80085c8:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 80085cc:	3301      	adds	r3, #1
 80085ce:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 80085d2:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 80085d6:	3348      	adds	r3, #72	@ 0x48
 80085d8:	443b      	add	r3, r7
 80085da:	f897 2054 	ldrb.w	r2, [r7, #84]	@ 0x54
 80085de:	f803 2c3c 	strb.w	r2, [r3, #-60]
 80085e2:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 80085e6:	3301      	adds	r3, #1
 80085e8:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 80085ec:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 80085f0:	3348      	adds	r3, #72	@ 0x48
 80085f2:	443b      	add	r3, r7
 80085f4:	f897 2058 	ldrb.w	r2, [r7, #88]	@ 0x58
 80085f8:	f803 2c3c 	strb.w	r2, [r3, #-60]
 80085fc:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8008600:	3301      	adds	r3, #1
 8008602:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 8008606:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 800860a:	3348      	adds	r3, #72	@ 0x48
 800860c:	443b      	add	r3, r7
 800860e:	f897 205c 	ldrb.w	r2, [r7, #92]	@ 0x5c
 8008612:	f803 2c3c 	strb.w	r2, [r3, #-60]
 8008616:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 800861a:	3301      	adds	r3, #1
 800861c:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 8008620:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8008624:	3348      	adds	r3, #72	@ 0x48
 8008626:	443b      	add	r3, r7
 8008628:	f897 2060 	ldrb.w	r2, [r7, #96]	@ 0x60
 800862c:	f803 2c3c 	strb.w	r2, [r3, #-60]
 8008630:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8008634:	3301      	adds	r3, #1
 8008636:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
 800863a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800863e:	2203      	movs	r2, #3
 8008640:	2100      	movs	r1, #0
 8008642:	4618      	mov	r0, r3
 8008644:	f001 fef4 	bl	800a430 <memset>
 8008648:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800864c:	2218      	movs	r2, #24
 800864e:	2100      	movs	r1, #0
 8008650:	4618      	mov	r0, r3
 8008652:	f001 feed 	bl	800a430 <memset>
 8008656:	233f      	movs	r3, #63	@ 0x3f
 8008658:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800865a:	f44f 7382 	mov.w	r3, #260	@ 0x104
 800865e:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8008660:	f107 030c 	add.w	r3, r7, #12
 8008664:	637b      	str	r3, [r7, #52]	@ 0x34
 8008666:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 800866a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800866c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8008670:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008672:	2303      	movs	r3, #3
 8008674:	643b      	str	r3, [r7, #64]	@ 0x40
 8008676:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800867a:	2100      	movs	r1, #0
 800867c:	4618      	mov	r0, r3
 800867e:	f000 fb45 	bl	8008d0c <hci_send_req>
 8008682:	4603      	mov	r3, r0
 8008684:	2b00      	cmp	r3, #0
 8008686:	da01      	bge.n	800868c <aci_gatt_add_char+0x174>
 8008688:	23ff      	movs	r3, #255	@ 0xff
 800868a:	e00c      	b.n	80086a6 <aci_gatt_add_char+0x18e>
 800868c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008690:	2b00      	cmp	r3, #0
 8008692:	d002      	beq.n	800869a <aci_gatt_add_char+0x182>
 8008694:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008698:	e005      	b.n	80086a6 <aci_gatt_add_char+0x18e>
 800869a:	f8b7 3029 	ldrh.w	r3, [r7, #41]	@ 0x29
 800869e:	b29a      	uxth	r2, r3
 80086a0:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80086a2:	801a      	strh	r2, [r3, #0]
 80086a4:	2300      	movs	r3, #0
 80086a6:	4618      	mov	r0, r3
 80086a8:	3748      	adds	r7, #72	@ 0x48
 80086aa:	46bd      	mov	sp, r7
 80086ac:	bd80      	pop	{r7, pc}

080086ae <aci_gatt_update_char_value>:
 80086ae:	b590      	push	{r4, r7, lr}
 80086b0:	b0ab      	sub	sp, #172	@ 0xac
 80086b2:	af00      	add	r7, sp, #0
 80086b4:	4604      	mov	r4, r0
 80086b6:	4608      	mov	r0, r1
 80086b8:	4611      	mov	r1, r2
 80086ba:	461a      	mov	r2, r3
 80086bc:	4623      	mov	r3, r4
 80086be:	80fb      	strh	r3, [r7, #6]
 80086c0:	4603      	mov	r3, r0
 80086c2:	80bb      	strh	r3, [r7, #4]
 80086c4:	460b      	mov	r3, r1
 80086c6:	70fb      	strb	r3, [r7, #3]
 80086c8:	4613      	mov	r3, r2
 80086ca:	70bb      	strb	r3, [r7, #2]
 80086cc:	2300      	movs	r3, #0
 80086ce:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
 80086d2:	78bb      	ldrb	r3, [r7, #2]
 80086d4:	2b7a      	cmp	r3, #122	@ 0x7a
 80086d6:	d901      	bls.n	80086dc <aci_gatt_update_char_value+0x2e>
 80086d8:	2342      	movs	r3, #66	@ 0x42
 80086da:	e074      	b.n	80087c6 <aci_gatt_update_char_value+0x118>
 80086dc:	88fb      	ldrh	r3, [r7, #6]
 80086de:	80fb      	strh	r3, [r7, #6]
 80086e0:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 80086e4:	f107 0208 	add.w	r2, r7, #8
 80086e8:	4413      	add	r3, r2
 80086ea:	88fa      	ldrh	r2, [r7, #6]
 80086ec:	801a      	strh	r2, [r3, #0]
 80086ee:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 80086f2:	3302      	adds	r3, #2
 80086f4:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
 80086f8:	88bb      	ldrh	r3, [r7, #4]
 80086fa:	80bb      	strh	r3, [r7, #4]
 80086fc:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 8008700:	f107 0208 	add.w	r2, r7, #8
 8008704:	4413      	add	r3, r2
 8008706:	88ba      	ldrh	r2, [r7, #4]
 8008708:	801a      	strh	r2, [r3, #0]
 800870a:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 800870e:	3302      	adds	r3, #2
 8008710:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
 8008714:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 8008718:	33a8      	adds	r3, #168	@ 0xa8
 800871a:	443b      	add	r3, r7
 800871c:	78fa      	ldrb	r2, [r7, #3]
 800871e:	f803 2ca0 	strb.w	r2, [r3, #-160]
 8008722:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 8008726:	3301      	adds	r3, #1
 8008728:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
 800872c:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 8008730:	33a8      	adds	r3, #168	@ 0xa8
 8008732:	443b      	add	r3, r7
 8008734:	78ba      	ldrb	r2, [r7, #2]
 8008736:	f803 2ca0 	strb.w	r2, [r3, #-160]
 800873a:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 800873e:	3301      	adds	r3, #1
 8008740:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
 8008744:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 8008748:	f107 0208 	add.w	r2, r7, #8
 800874c:	4413      	add	r3, r2
 800874e:	78ba      	ldrb	r2, [r7, #2]
 8008750:	f8d7 10b8 	ldr.w	r1, [r7, #184]	@ 0xb8
 8008754:	4618      	mov	r0, r3
 8008756:	f001 fef8 	bl	800a54a <memcpy>
 800875a:	f897 20a7 	ldrb.w	r2, [r7, #167]	@ 0xa7
 800875e:	78bb      	ldrb	r3, [r7, #2]
 8008760:	4413      	add	r3, r2
 8008762:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
 8008766:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 800876a:	2218      	movs	r2, #24
 800876c:	2100      	movs	r1, #0
 800876e:	4618      	mov	r0, r3
 8008770:	f001 fe5e 	bl	800a430 <memset>
 8008774:	233f      	movs	r3, #63	@ 0x3f
 8008776:	f8a7 308c 	strh.w	r3, [r7, #140]	@ 0x8c
 800877a:	f44f 7383 	mov.w	r3, #262	@ 0x106
 800877e:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
 8008782:	f107 0308 	add.w	r3, r7, #8
 8008786:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800878a:	f897 30a7 	ldrb.w	r3, [r7, #167]	@ 0xa7
 800878e:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8008792:	f107 038b 	add.w	r3, r7, #139	@ 0x8b
 8008796:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800879a:	2301      	movs	r3, #1
 800879c:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80087a0:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 80087a4:	2100      	movs	r1, #0
 80087a6:	4618      	mov	r0, r3
 80087a8:	f000 fab0 	bl	8008d0c <hci_send_req>
 80087ac:	4603      	mov	r3, r0
 80087ae:	2b00      	cmp	r3, #0
 80087b0:	da01      	bge.n	80087b6 <aci_gatt_update_char_value+0x108>
 80087b2:	23ff      	movs	r3, #255	@ 0xff
 80087b4:	e007      	b.n	80087c6 <aci_gatt_update_char_value+0x118>
 80087b6:	f897 308b 	ldrb.w	r3, [r7, #139]	@ 0x8b
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	d002      	beq.n	80087c4 <aci_gatt_update_char_value+0x116>
 80087be:	f897 308b 	ldrb.w	r3, [r7, #139]	@ 0x8b
 80087c2:	e000      	b.n	80087c6 <aci_gatt_update_char_value+0x118>
 80087c4:	2300      	movs	r3, #0
 80087c6:	4618      	mov	r0, r3
 80087c8:	37ac      	adds	r7, #172	@ 0xac
 80087ca:	46bd      	mov	sp, r7
 80087cc:	bd90      	pop	{r4, r7, pc}

080087ce <aci_gatt_allow_read>:
 80087ce:	b580      	push	{r7, lr}
 80087d0:	b08a      	sub	sp, #40	@ 0x28
 80087d2:	af00      	add	r7, sp, #0
 80087d4:	4603      	mov	r3, r0
 80087d6:	80fb      	strh	r3, [r7, #6]
 80087d8:	88fb      	ldrh	r3, [r7, #6]
 80087da:	81bb      	strh	r3, [r7, #12]
 80087dc:	f107 0310 	add.w	r3, r7, #16
 80087e0:	2218      	movs	r2, #24
 80087e2:	2100      	movs	r1, #0
 80087e4:	4618      	mov	r0, r3
 80087e6:	f001 fe23 	bl	800a430 <memset>
 80087ea:	233f      	movs	r3, #63	@ 0x3f
 80087ec:	823b      	strh	r3, [r7, #16]
 80087ee:	f240 1327 	movw	r3, #295	@ 0x127
 80087f2:	827b      	strh	r3, [r7, #18]
 80087f4:	f107 030c 	add.w	r3, r7, #12
 80087f8:	61bb      	str	r3, [r7, #24]
 80087fa:	2302      	movs	r3, #2
 80087fc:	61fb      	str	r3, [r7, #28]
 80087fe:	f107 030b 	add.w	r3, r7, #11
 8008802:	623b      	str	r3, [r7, #32]
 8008804:	2301      	movs	r3, #1
 8008806:	627b      	str	r3, [r7, #36]	@ 0x24
 8008808:	f107 0310 	add.w	r3, r7, #16
 800880c:	2100      	movs	r1, #0
 800880e:	4618      	mov	r0, r3
 8008810:	f000 fa7c 	bl	8008d0c <hci_send_req>
 8008814:	4603      	mov	r3, r0
 8008816:	2b00      	cmp	r3, #0
 8008818:	da01      	bge.n	800881e <aci_gatt_allow_read+0x50>
 800881a:	23ff      	movs	r3, #255	@ 0xff
 800881c:	e000      	b.n	8008820 <aci_gatt_allow_read+0x52>
 800881e:	7afb      	ldrb	r3, [r7, #11]
 8008820:	4618      	mov	r0, r3
 8008822:	3728      	adds	r7, #40	@ 0x28
 8008824:	46bd      	mov	sp, r7
 8008826:	bd80      	pop	{r7, pc}

08008828 <aci_hal_read_config_data>:
 8008828:	b580      	push	{r7, lr}
 800882a:	b0ac      	sub	sp, #176	@ 0xb0
 800882c:	af00      	add	r7, sp, #0
 800882e:	60ba      	str	r2, [r7, #8]
 8008830:	607b      	str	r3, [r7, #4]
 8008832:	4603      	mov	r3, r0
 8008834:	73fb      	strb	r3, [r7, #15]
 8008836:	460b      	mov	r3, r1
 8008838:	81bb      	strh	r3, [r7, #12]
 800883a:	7bfb      	ldrb	r3, [r7, #15]
 800883c:	f887 3094 	strb.w	r3, [r7, #148]	@ 0x94
 8008840:	f107 0398 	add.w	r3, r7, #152	@ 0x98
 8008844:	2218      	movs	r2, #24
 8008846:	2100      	movs	r1, #0
 8008848:	4618      	mov	r0, r3
 800884a:	f001 fdf1 	bl	800a430 <memset>
 800884e:	233f      	movs	r3, #63	@ 0x3f
 8008850:	f8a7 3098 	strh.w	r3, [r7, #152]	@ 0x98
 8008854:	230d      	movs	r3, #13
 8008856:	f8a7 309a 	strh.w	r3, [r7, #154]	@ 0x9a
 800885a:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800885e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8008862:	2301      	movs	r3, #1
 8008864:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8008868:	f107 0314 	add.w	r3, r7, #20
 800886c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8008870:	2380      	movs	r3, #128	@ 0x80
 8008872:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8008876:	f107 0398 	add.w	r3, r7, #152	@ 0x98
 800887a:	2100      	movs	r1, #0
 800887c:	4618      	mov	r0, r3
 800887e:	f000 fa45 	bl	8008d0c <hci_send_req>
 8008882:	4603      	mov	r3, r0
 8008884:	2b00      	cmp	r3, #0
 8008886:	da01      	bge.n	800888c <aci_hal_read_config_data+0x64>
 8008888:	23ff      	movs	r3, #255	@ 0xff
 800888a:	e01e      	b.n	80088ca <aci_hal_read_config_data+0xa2>
 800888c:	7d3b      	ldrb	r3, [r7, #20]
 800888e:	2b00      	cmp	r3, #0
 8008890:	d001      	beq.n	8008896 <aci_hal_read_config_data+0x6e>
 8008892:	7d3b      	ldrb	r3, [r7, #20]
 8008894:	e019      	b.n	80088ca <aci_hal_read_config_data+0xa2>
 8008896:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800889a:	b2db      	uxtb	r3, r3
 800889c:	3b01      	subs	r3, #1
 800889e:	b2da      	uxtb	r2, r3
 80088a0:	68bb      	ldr	r3, [r7, #8]
 80088a2:	701a      	strb	r2, [r3, #0]
 80088a4:	68bb      	ldr	r3, [r7, #8]
 80088a6:	781b      	ldrb	r3, [r3, #0]
 80088a8:	461a      	mov	r2, r3
 80088aa:	89bb      	ldrh	r3, [r7, #12]
 80088ac:	4293      	cmp	r3, r2
 80088ae:	d201      	bcs.n	80088b4 <aci_hal_read_config_data+0x8c>
 80088b0:	89ba      	ldrh	r2, [r7, #12]
 80088b2:	e002      	b.n	80088ba <aci_hal_read_config_data+0x92>
 80088b4:	68bb      	ldr	r3, [r7, #8]
 80088b6:	781b      	ldrb	r3, [r3, #0]
 80088b8:	461a      	mov	r2, r3
 80088ba:	f107 0314 	add.w	r3, r7, #20
 80088be:	3301      	adds	r3, #1
 80088c0:	4619      	mov	r1, r3
 80088c2:	6878      	ldr	r0, [r7, #4]
 80088c4:	f001 fe41 	bl	800a54a <memcpy>
 80088c8:	2300      	movs	r3, #0
 80088ca:	4618      	mov	r0, r3
 80088cc:	37b0      	adds	r7, #176	@ 0xb0
 80088ce:	46bd      	mov	sp, r7
 80088d0:	bd80      	pop	{r7, pc}

080088d2 <aci_hal_set_tx_power_level>:
 80088d2:	b580      	push	{r7, lr}
 80088d4:	b08a      	sub	sp, #40	@ 0x28
 80088d6:	af00      	add	r7, sp, #0
 80088d8:	4603      	mov	r3, r0
 80088da:	460a      	mov	r2, r1
 80088dc:	71fb      	strb	r3, [r7, #7]
 80088de:	4613      	mov	r3, r2
 80088e0:	71bb      	strb	r3, [r7, #6]
 80088e2:	79fb      	ldrb	r3, [r7, #7]
 80088e4:	733b      	strb	r3, [r7, #12]
 80088e6:	79bb      	ldrb	r3, [r7, #6]
 80088e8:	737b      	strb	r3, [r7, #13]
 80088ea:	f107 0310 	add.w	r3, r7, #16
 80088ee:	2218      	movs	r2, #24
 80088f0:	2100      	movs	r1, #0
 80088f2:	4618      	mov	r0, r3
 80088f4:	f001 fd9c 	bl	800a430 <memset>
 80088f8:	233f      	movs	r3, #63	@ 0x3f
 80088fa:	823b      	strh	r3, [r7, #16]
 80088fc:	230f      	movs	r3, #15
 80088fe:	827b      	strh	r3, [r7, #18]
 8008900:	f107 030c 	add.w	r3, r7, #12
 8008904:	61bb      	str	r3, [r7, #24]
 8008906:	2302      	movs	r3, #2
 8008908:	61fb      	str	r3, [r7, #28]
 800890a:	f107 030b 	add.w	r3, r7, #11
 800890e:	623b      	str	r3, [r7, #32]
 8008910:	2301      	movs	r3, #1
 8008912:	627b      	str	r3, [r7, #36]	@ 0x24
 8008914:	f107 0310 	add.w	r3, r7, #16
 8008918:	2100      	movs	r1, #0
 800891a:	4618      	mov	r0, r3
 800891c:	f000 f9f6 	bl	8008d0c <hci_send_req>
 8008920:	4603      	mov	r3, r0
 8008922:	2b00      	cmp	r3, #0
 8008924:	da01      	bge.n	800892a <aci_hal_set_tx_power_level+0x58>
 8008926:	23ff      	movs	r3, #255	@ 0xff
 8008928:	e000      	b.n	800892c <aci_hal_set_tx_power_level+0x5a>
 800892a:	7afb      	ldrb	r3, [r7, #11]
 800892c:	4618      	mov	r0, r3
 800892e:	3728      	adds	r7, #40	@ 0x28
 8008930:	46bd      	mov	sp, r7
 8008932:	bd80      	pop	{r7, pc}

08008934 <getBlueNRGVersion>:
 8008934:	b590      	push	{r4, r7, lr}
 8008936:	b089      	sub	sp, #36	@ 0x24
 8008938:	af02      	add	r7, sp, #8
 800893a:	6078      	str	r0, [r7, #4]
 800893c:	6039      	str	r1, [r7, #0]
 800893e:	f107 0410 	add.w	r4, r7, #16
 8008942:	f107 0215 	add.w	r2, r7, #21
 8008946:	f107 0112 	add.w	r1, r7, #18
 800894a:	f107 0016 	add.w	r0, r7, #22
 800894e:	f107 030e 	add.w	r3, r7, #14
 8008952:	9300      	str	r3, [sp, #0]
 8008954:	4623      	mov	r3, r4
 8008956:	f000 f853 	bl	8008a00 <hci_le_read_local_version>
 800895a:	4603      	mov	r3, r0
 800895c:	75fb      	strb	r3, [r7, #23]
 800895e:	7dfb      	ldrb	r3, [r7, #23]
 8008960:	2b00      	cmp	r3, #0
 8008962:	d126      	bne.n	80089b2 <getBlueNRGVersion+0x7e>
 8008964:	8a7b      	ldrh	r3, [r7, #18]
 8008966:	0a1b      	lsrs	r3, r3, #8
 8008968:	b29b      	uxth	r3, r3
 800896a:	b2da      	uxtb	r2, r3
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	701a      	strb	r2, [r3, #0]
 8008970:	8a7b      	ldrh	r3, [r7, #18]
 8008972:	021b      	lsls	r3, r3, #8
 8008974:	b29a      	uxth	r2, r3
 8008976:	683b      	ldr	r3, [r7, #0]
 8008978:	801a      	strh	r2, [r3, #0]
 800897a:	683b      	ldr	r3, [r7, #0]
 800897c:	881b      	ldrh	r3, [r3, #0]
 800897e:	b21a      	sxth	r2, r3
 8008980:	89fb      	ldrh	r3, [r7, #14]
 8008982:	091b      	lsrs	r3, r3, #4
 8008984:	b29b      	uxth	r3, r3
 8008986:	011b      	lsls	r3, r3, #4
 8008988:	b21b      	sxth	r3, r3
 800898a:	b2db      	uxtb	r3, r3
 800898c:	b21b      	sxth	r3, r3
 800898e:	4313      	orrs	r3, r2
 8008990:	b21b      	sxth	r3, r3
 8008992:	b29a      	uxth	r2, r3
 8008994:	683b      	ldr	r3, [r7, #0]
 8008996:	801a      	strh	r2, [r3, #0]
 8008998:	683b      	ldr	r3, [r7, #0]
 800899a:	881b      	ldrh	r3, [r3, #0]
 800899c:	b21a      	sxth	r2, r3
 800899e:	89fb      	ldrh	r3, [r7, #14]
 80089a0:	b21b      	sxth	r3, r3
 80089a2:	f003 030f 	and.w	r3, r3, #15
 80089a6:	b21b      	sxth	r3, r3
 80089a8:	4313      	orrs	r3, r2
 80089aa:	b21b      	sxth	r3, r3
 80089ac:	b29a      	uxth	r2, r3
 80089ae:	683b      	ldr	r3, [r7, #0]
 80089b0:	801a      	strh	r2, [r3, #0]
 80089b2:	7dfb      	ldrb	r3, [r7, #23]
 80089b4:	4618      	mov	r0, r3
 80089b6:	371c      	adds	r7, #28
 80089b8:	46bd      	mov	sp, r7
 80089ba:	bd90      	pop	{r4, r7, pc}

080089bc <hci_reset>:
 80089bc:	b580      	push	{r7, lr}
 80089be:	b088      	sub	sp, #32
 80089c0:	af00      	add	r7, sp, #0
 80089c2:	f107 0308 	add.w	r3, r7, #8
 80089c6:	2218      	movs	r2, #24
 80089c8:	2100      	movs	r1, #0
 80089ca:	4618      	mov	r0, r3
 80089cc:	f001 fd30 	bl	800a430 <memset>
 80089d0:	2303      	movs	r3, #3
 80089d2:	813b      	strh	r3, [r7, #8]
 80089d4:	2303      	movs	r3, #3
 80089d6:	817b      	strh	r3, [r7, #10]
 80089d8:	1dfb      	adds	r3, r7, #7
 80089da:	61bb      	str	r3, [r7, #24]
 80089dc:	2301      	movs	r3, #1
 80089de:	61fb      	str	r3, [r7, #28]
 80089e0:	f107 0308 	add.w	r3, r7, #8
 80089e4:	2100      	movs	r1, #0
 80089e6:	4618      	mov	r0, r3
 80089e8:	f000 f990 	bl	8008d0c <hci_send_req>
 80089ec:	4603      	mov	r3, r0
 80089ee:	2b00      	cmp	r3, #0
 80089f0:	da01      	bge.n	80089f6 <hci_reset+0x3a>
 80089f2:	23ff      	movs	r3, #255	@ 0xff
 80089f4:	e000      	b.n	80089f8 <hci_reset+0x3c>
 80089f6:	79fb      	ldrb	r3, [r7, #7]
 80089f8:	4618      	mov	r0, r3
 80089fa:	3720      	adds	r7, #32
 80089fc:	46bd      	mov	sp, r7
 80089fe:	bd80      	pop	{r7, pc}

08008a00 <hci_le_read_local_version>:
 8008a00:	b580      	push	{r7, lr}
 8008a02:	b08e      	sub	sp, #56	@ 0x38
 8008a04:	af00      	add	r7, sp, #0
 8008a06:	60f8      	str	r0, [r7, #12]
 8008a08:	60b9      	str	r1, [r7, #8]
 8008a0a:	607a      	str	r2, [r7, #4]
 8008a0c:	603b      	str	r3, [r7, #0]
 8008a0e:	f107 0314 	add.w	r3, r7, #20
 8008a12:	2209      	movs	r2, #9
 8008a14:	2100      	movs	r1, #0
 8008a16:	4618      	mov	r0, r3
 8008a18:	f001 fd0a 	bl	800a430 <memset>
 8008a1c:	f107 0320 	add.w	r3, r7, #32
 8008a20:	2218      	movs	r2, #24
 8008a22:	2100      	movs	r1, #0
 8008a24:	4618      	mov	r0, r3
 8008a26:	f001 fd03 	bl	800a430 <memset>
 8008a2a:	2304      	movs	r3, #4
 8008a2c:	843b      	strh	r3, [r7, #32]
 8008a2e:	2301      	movs	r3, #1
 8008a30:	847b      	strh	r3, [r7, #34]	@ 0x22
 8008a32:	2300      	movs	r3, #0
 8008a34:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008a36:	2300      	movs	r3, #0
 8008a38:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008a3a:	f107 0314 	add.w	r3, r7, #20
 8008a3e:	633b      	str	r3, [r7, #48]	@ 0x30
 8008a40:	2309      	movs	r3, #9
 8008a42:	637b      	str	r3, [r7, #52]	@ 0x34
 8008a44:	f107 0320 	add.w	r3, r7, #32
 8008a48:	2100      	movs	r1, #0
 8008a4a:	4618      	mov	r0, r3
 8008a4c:	f000 f95e 	bl	8008d0c <hci_send_req>
 8008a50:	4603      	mov	r3, r0
 8008a52:	2b00      	cmp	r3, #0
 8008a54:	da01      	bge.n	8008a5a <hci_le_read_local_version+0x5a>
 8008a56:	23ff      	movs	r3, #255	@ 0xff
 8008a58:	e018      	b.n	8008a8c <hci_le_read_local_version+0x8c>
 8008a5a:	7d3b      	ldrb	r3, [r7, #20]
 8008a5c:	2b00      	cmp	r3, #0
 8008a5e:	d001      	beq.n	8008a64 <hci_le_read_local_version+0x64>
 8008a60:	7d3b      	ldrb	r3, [r7, #20]
 8008a62:	e013      	b.n	8008a8c <hci_le_read_local_version+0x8c>
 8008a64:	7d7a      	ldrb	r2, [r7, #21]
 8008a66:	68fb      	ldr	r3, [r7, #12]
 8008a68:	701a      	strb	r2, [r3, #0]
 8008a6a:	8afa      	ldrh	r2, [r7, #22]
 8008a6c:	68bb      	ldr	r3, [r7, #8]
 8008a6e:	801a      	strh	r2, [r3, #0]
 8008a70:	7e3a      	ldrb	r2, [r7, #24]
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	701a      	strb	r2, [r3, #0]
 8008a76:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 8008a7a:	b29a      	uxth	r2, r3
 8008a7c:	683b      	ldr	r3, [r7, #0]
 8008a7e:	801a      	strh	r2, [r3, #0]
 8008a80:	f8b7 301b 	ldrh.w	r3, [r7, #27]
 8008a84:	b29a      	uxth	r2, r3
 8008a86:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8008a88:	801a      	strh	r2, [r3, #0]
 8008a8a:	2300      	movs	r3, #0
 8008a8c:	4618      	mov	r0, r3
 8008a8e:	3738      	adds	r7, #56	@ 0x38
 8008a90:	46bd      	mov	sp, r7
 8008a92:	bd80      	pop	{r7, pc}

08008a94 <hci_le_set_scan_resp_data>:
 8008a94:	b580      	push	{r7, lr}
 8008a96:	b092      	sub	sp, #72	@ 0x48
 8008a98:	af00      	add	r7, sp, #0
 8008a9a:	4603      	mov	r3, r0
 8008a9c:	6039      	str	r1, [r7, #0]
 8008a9e:	71fb      	strb	r3, [r7, #7]
 8008aa0:	f107 0310 	add.w	r3, r7, #16
 8008aa4:	2220      	movs	r2, #32
 8008aa6:	2100      	movs	r1, #0
 8008aa8:	4618      	mov	r0, r3
 8008aaa:	f001 fcc1 	bl	800a430 <memset>
 8008aae:	79fb      	ldrb	r3, [r7, #7]
 8008ab0:	743b      	strb	r3, [r7, #16]
 8008ab2:	79fb      	ldrb	r3, [r7, #7]
 8008ab4:	2b1f      	cmp	r3, #31
 8008ab6:	bf28      	it	cs
 8008ab8:	231f      	movcs	r3, #31
 8008aba:	b2db      	uxtb	r3, r3
 8008abc:	461a      	mov	r2, r3
 8008abe:	f107 0310 	add.w	r3, r7, #16
 8008ac2:	3301      	adds	r3, #1
 8008ac4:	6839      	ldr	r1, [r7, #0]
 8008ac6:	4618      	mov	r0, r3
 8008ac8:	f001 fd3f 	bl	800a54a <memcpy>
 8008acc:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8008ad0:	2218      	movs	r2, #24
 8008ad2:	2100      	movs	r1, #0
 8008ad4:	4618      	mov	r0, r3
 8008ad6:	f001 fcab 	bl	800a430 <memset>
 8008ada:	2308      	movs	r3, #8
 8008adc:	863b      	strh	r3, [r7, #48]	@ 0x30
 8008ade:	2309      	movs	r3, #9
 8008ae0:	867b      	strh	r3, [r7, #50]	@ 0x32
 8008ae2:	f107 0310 	add.w	r3, r7, #16
 8008ae6:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008ae8:	2320      	movs	r3, #32
 8008aea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008aec:	f107 030f 	add.w	r3, r7, #15
 8008af0:	643b      	str	r3, [r7, #64]	@ 0x40
 8008af2:	2301      	movs	r3, #1
 8008af4:	647b      	str	r3, [r7, #68]	@ 0x44
 8008af6:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8008afa:	2100      	movs	r1, #0
 8008afc:	4618      	mov	r0, r3
 8008afe:	f000 f905 	bl	8008d0c <hci_send_req>
 8008b02:	4603      	mov	r3, r0
 8008b04:	2b00      	cmp	r3, #0
 8008b06:	da01      	bge.n	8008b0c <hci_le_set_scan_resp_data+0x78>
 8008b08:	23ff      	movs	r3, #255	@ 0xff
 8008b0a:	e000      	b.n	8008b0e <hci_le_set_scan_resp_data+0x7a>
 8008b0c:	7bfb      	ldrb	r3, [r7, #15]
 8008b0e:	4618      	mov	r0, r3
 8008b10:	3748      	adds	r7, #72	@ 0x48
 8008b12:	46bd      	mov	sp, r7
 8008b14:	bd80      	pop	{r7, pc}

08008b16 <verify_packet>:
 8008b16:	b480      	push	{r7}
 8008b18:	b085      	sub	sp, #20
 8008b1a:	af00      	add	r7, sp, #0
 8008b1c:	6078      	str	r0, [r7, #4]
 8008b1e:	687b      	ldr	r3, [r7, #4]
 8008b20:	3308      	adds	r3, #8
 8008b22:	60fb      	str	r3, [r7, #12]
 8008b24:	68fb      	ldr	r3, [r7, #12]
 8008b26:	781b      	ldrb	r3, [r3, #0]
 8008b28:	2b04      	cmp	r3, #4
 8008b2a:	d001      	beq.n	8008b30 <verify_packet+0x1a>
 8008b2c:	2301      	movs	r3, #1
 8008b2e:	e00c      	b.n	8008b4a <verify_packet+0x34>
 8008b30:	68fb      	ldr	r3, [r7, #12]
 8008b32:	3302      	adds	r3, #2
 8008b34:	781b      	ldrb	r3, [r3, #0]
 8008b36:	461a      	mov	r2, r3
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	f893 3088 	ldrb.w	r3, [r3, #136]	@ 0x88
 8008b3e:	3b03      	subs	r3, #3
 8008b40:	429a      	cmp	r2, r3
 8008b42:	d001      	beq.n	8008b48 <verify_packet+0x32>
 8008b44:	2302      	movs	r3, #2
 8008b46:	e000      	b.n	8008b4a <verify_packet+0x34>
 8008b48:	2300      	movs	r3, #0
 8008b4a:	4618      	mov	r0, r3
 8008b4c:	3714      	adds	r7, #20
 8008b4e:	46bd      	mov	sp, r7
 8008b50:	bc80      	pop	{r7}
 8008b52:	4770      	bx	lr

08008b54 <send_cmd>:
 8008b54:	b580      	push	{r7, lr}
 8008b56:	b0a6      	sub	sp, #152	@ 0x98
 8008b58:	af00      	add	r7, sp, #0
 8008b5a:	607b      	str	r3, [r7, #4]
 8008b5c:	4603      	mov	r3, r0
 8008b5e:	81fb      	strh	r3, [r7, #14]
 8008b60:	460b      	mov	r3, r1
 8008b62:	81bb      	strh	r3, [r7, #12]
 8008b64:	4613      	mov	r3, r2
 8008b66:	72fb      	strb	r3, [r7, #11]
 8008b68:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008b6c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8008b70:	b21a      	sxth	r2, r3
 8008b72:	89fb      	ldrh	r3, [r7, #14]
 8008b74:	029b      	lsls	r3, r3, #10
 8008b76:	b21b      	sxth	r3, r3
 8008b78:	4313      	orrs	r3, r2
 8008b7a:	b21b      	sxth	r3, r3
 8008b7c:	b29b      	uxth	r3, r3
 8008b7e:	82bb      	strh	r3, [r7, #20]
 8008b80:	7afb      	ldrb	r3, [r7, #11]
 8008b82:	75bb      	strb	r3, [r7, #22]
 8008b84:	2301      	movs	r3, #1
 8008b86:	763b      	strb	r3, [r7, #24]
 8008b88:	f107 0318 	add.w	r3, r7, #24
 8008b8c:	3301      	adds	r3, #1
 8008b8e:	461a      	mov	r2, r3
 8008b90:	f107 0314 	add.w	r3, r7, #20
 8008b94:	8819      	ldrh	r1, [r3, #0]
 8008b96:	789b      	ldrb	r3, [r3, #2]
 8008b98:	8011      	strh	r1, [r2, #0]
 8008b9a:	7093      	strb	r3, [r2, #2]
 8008b9c:	f107 0318 	add.w	r3, r7, #24
 8008ba0:	3304      	adds	r3, #4
 8008ba2:	7afa      	ldrb	r2, [r7, #11]
 8008ba4:	6879      	ldr	r1, [r7, #4]
 8008ba6:	4618      	mov	r0, r3
 8008ba8:	f001 fccf 	bl	800a54a <memcpy>
 8008bac:	4b08      	ldr	r3, [pc, #32]	@ (8008bd0 <send_cmd+0x7c>)
 8008bae:	691b      	ldr	r3, [r3, #16]
 8008bb0:	2b00      	cmp	r3, #0
 8008bb2:	d009      	beq.n	8008bc8 <send_cmd+0x74>
 8008bb4:	4b06      	ldr	r3, [pc, #24]	@ (8008bd0 <send_cmd+0x7c>)
 8008bb6:	691b      	ldr	r3, [r3, #16]
 8008bb8:	7afa      	ldrb	r2, [r7, #11]
 8008bba:	b292      	uxth	r2, r2
 8008bbc:	3204      	adds	r2, #4
 8008bbe:	b291      	uxth	r1, r2
 8008bc0:	f107 0218 	add.w	r2, r7, #24
 8008bc4:	4610      	mov	r0, r2
 8008bc6:	4798      	blx	r3
 8008bc8:	bf00      	nop
 8008bca:	3798      	adds	r7, #152	@ 0x98
 8008bcc:	46bd      	mov	sp, r7
 8008bce:	bd80      	pop	{r7, pc}
 8008bd0:	200007ac 	.word	0x200007ac

08008bd4 <move_list>:
 8008bd4:	b580      	push	{r7, lr}
 8008bd6:	b084      	sub	sp, #16
 8008bd8:	af00      	add	r7, sp, #0
 8008bda:	6078      	str	r0, [r7, #4]
 8008bdc:	6039      	str	r1, [r7, #0]
 8008bde:	e00a      	b.n	8008bf6 <move_list+0x22>
 8008be0:	f107 030c 	add.w	r3, r7, #12
 8008be4:	4619      	mov	r1, r3
 8008be6:	6838      	ldr	r0, [r7, #0]
 8008be8:	f000 fae3 	bl	80091b2 <list_remove_tail>
 8008bec:	68fb      	ldr	r3, [r7, #12]
 8008bee:	4619      	mov	r1, r3
 8008bf0:	6878      	ldr	r0, [r7, #4]
 8008bf2:	f000 fa4d 	bl	8009090 <list_insert_head>
 8008bf6:	6838      	ldr	r0, [r7, #0]
 8008bf8:	f000 fa29 	bl	800904e <list_is_empty>
 8008bfc:	4603      	mov	r3, r0
 8008bfe:	2b00      	cmp	r3, #0
 8008c00:	d0ee      	beq.n	8008be0 <move_list+0xc>
 8008c02:	bf00      	nop
 8008c04:	bf00      	nop
 8008c06:	3710      	adds	r7, #16
 8008c08:	46bd      	mov	sp, r7
 8008c0a:	bd80      	pop	{r7, pc}

08008c0c <free_event_list>:
 8008c0c:	b580      	push	{r7, lr}
 8008c0e:	b082      	sub	sp, #8
 8008c10:	af00      	add	r7, sp, #0
 8008c12:	e009      	b.n	8008c28 <free_event_list+0x1c>
 8008c14:	1d3b      	adds	r3, r7, #4
 8008c16:	4619      	mov	r1, r3
 8008c18:	4809      	ldr	r0, [pc, #36]	@ (8008c40 <free_event_list+0x34>)
 8008c1a:	f000 faa3 	bl	8009164 <list_remove_head>
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	4619      	mov	r1, r3
 8008c22:	4808      	ldr	r0, [pc, #32]	@ (8008c44 <free_event_list+0x38>)
 8008c24:	f000 fa59 	bl	80090da <list_insert_tail>
 8008c28:	4806      	ldr	r0, [pc, #24]	@ (8008c44 <free_event_list+0x38>)
 8008c2a:	f000 fae9 	bl	8009200 <list_get_size>
 8008c2e:	4603      	mov	r3, r0
 8008c30:	2b01      	cmp	r3, #1
 8008c32:	ddef      	ble.n	8008c14 <free_event_list+0x8>
 8008c34:	bf00      	nop
 8008c36:	bf00      	nop
 8008c38:	3708      	adds	r7, #8
 8008c3a:	46bd      	mov	sp, r7
 8008c3c:	bd80      	pop	{r7, pc}
 8008c3e:	bf00      	nop
 8008c40:	200004e8 	.word	0x200004e8
 8008c44:	200004e0 	.word	0x200004e0

08008c48 <hci_init>:
 8008c48:	b580      	push	{r7, lr}
 8008c4a:	b084      	sub	sp, #16
 8008c4c:	af00      	add	r7, sp, #0
 8008c4e:	6078      	str	r0, [r7, #4]
 8008c50:	6039      	str	r1, [r7, #0]
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	2b00      	cmp	r3, #0
 8008c56:	d002      	beq.n	8008c5e <hci_init+0x16>
 8008c58:	4a18      	ldr	r2, [pc, #96]	@ (8008cbc <hci_init+0x74>)
 8008c5a:	687b      	ldr	r3, [r7, #4]
 8008c5c:	61d3      	str	r3, [r2, #28]
 8008c5e:	4818      	ldr	r0, [pc, #96]	@ (8008cc0 <hci_init+0x78>)
 8008c60:	f000 f9e6 	bl	8009030 <list_init_head>
 8008c64:	4817      	ldr	r0, [pc, #92]	@ (8008cc4 <hci_init+0x7c>)
 8008c66:	f000 f9e3 	bl	8009030 <list_init_head>
 8008c6a:	f7fa fc89 	bl	8003580 <hci_tl_lowlevel_init>
 8008c6e:	2300      	movs	r3, #0
 8008c70:	73fb      	strb	r3, [r7, #15]
 8008c72:	e00c      	b.n	8008c8e <hci_init+0x46>
 8008c74:	7bfb      	ldrb	r3, [r7, #15]
 8008c76:	228c      	movs	r2, #140	@ 0x8c
 8008c78:	fb02 f303 	mul.w	r3, r2, r3
 8008c7c:	4a12      	ldr	r2, [pc, #72]	@ (8008cc8 <hci_init+0x80>)
 8008c7e:	4413      	add	r3, r2
 8008c80:	4619      	mov	r1, r3
 8008c82:	480f      	ldr	r0, [pc, #60]	@ (8008cc0 <hci_init+0x78>)
 8008c84:	f000 fa29 	bl	80090da <list_insert_tail>
 8008c88:	7bfb      	ldrb	r3, [r7, #15]
 8008c8a:	3301      	adds	r3, #1
 8008c8c:	73fb      	strb	r3, [r7, #15]
 8008c8e:	7bfb      	ldrb	r3, [r7, #15]
 8008c90:	2b04      	cmp	r3, #4
 8008c92:	d9ef      	bls.n	8008c74 <hci_init+0x2c>
 8008c94:	4b09      	ldr	r3, [pc, #36]	@ (8008cbc <hci_init+0x74>)
 8008c96:	681b      	ldr	r3, [r3, #0]
 8008c98:	2b00      	cmp	r3, #0
 8008c9a:	d003      	beq.n	8008ca4 <hci_init+0x5c>
 8008c9c:	4b07      	ldr	r3, [pc, #28]	@ (8008cbc <hci_init+0x74>)
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	2000      	movs	r0, #0
 8008ca2:	4798      	blx	r3
 8008ca4:	4b05      	ldr	r3, [pc, #20]	@ (8008cbc <hci_init+0x74>)
 8008ca6:	689b      	ldr	r3, [r3, #8]
 8008ca8:	2b00      	cmp	r3, #0
 8008caa:	d002      	beq.n	8008cb2 <hci_init+0x6a>
 8008cac:	4b03      	ldr	r3, [pc, #12]	@ (8008cbc <hci_init+0x74>)
 8008cae:	689b      	ldr	r3, [r3, #8]
 8008cb0:	4798      	blx	r3
 8008cb2:	bf00      	nop
 8008cb4:	3710      	adds	r7, #16
 8008cb6:	46bd      	mov	sp, r7
 8008cb8:	bd80      	pop	{r7, pc}
 8008cba:	bf00      	nop
 8008cbc:	200007ac 	.word	0x200007ac
 8008cc0:	200004e0 	.word	0x200004e0
 8008cc4:	200004e8 	.word	0x200004e8
 8008cc8:	200004f0 	.word	0x200004f0

08008ccc <hci_register_io_bus>:
 8008ccc:	b480      	push	{r7}
 8008cce:	b083      	sub	sp, #12
 8008cd0:	af00      	add	r7, sp, #0
 8008cd2:	6078      	str	r0, [r7, #4]
 8008cd4:	687b      	ldr	r3, [r7, #4]
 8008cd6:	681b      	ldr	r3, [r3, #0]
 8008cd8:	4a0b      	ldr	r2, [pc, #44]	@ (8008d08 <hci_register_io_bus+0x3c>)
 8008cda:	6013      	str	r3, [r2, #0]
 8008cdc:	687b      	ldr	r3, [r7, #4]
 8008cde:	68db      	ldr	r3, [r3, #12]
 8008ce0:	4a09      	ldr	r2, [pc, #36]	@ (8008d08 <hci_register_io_bus+0x3c>)
 8008ce2:	60d3      	str	r3, [r2, #12]
 8008ce4:	687b      	ldr	r3, [r7, #4]
 8008ce6:	691b      	ldr	r3, [r3, #16]
 8008ce8:	4a07      	ldr	r2, [pc, #28]	@ (8008d08 <hci_register_io_bus+0x3c>)
 8008cea:	6113      	str	r3, [r2, #16]
 8008cec:	687b      	ldr	r3, [r7, #4]
 8008cee:	699b      	ldr	r3, [r3, #24]
 8008cf0:	4a05      	ldr	r2, [pc, #20]	@ (8008d08 <hci_register_io_bus+0x3c>)
 8008cf2:	6193      	str	r3, [r2, #24]
 8008cf4:	687b      	ldr	r3, [r7, #4]
 8008cf6:	689b      	ldr	r3, [r3, #8]
 8008cf8:	4a03      	ldr	r2, [pc, #12]	@ (8008d08 <hci_register_io_bus+0x3c>)
 8008cfa:	6093      	str	r3, [r2, #8]
 8008cfc:	bf00      	nop
 8008cfe:	370c      	adds	r7, #12
 8008d00:	46bd      	mov	sp, r7
 8008d02:	bc80      	pop	{r7}
 8008d04:	4770      	bx	lr
 8008d06:	bf00      	nop
 8008d08:	200007ac 	.word	0x200007ac

08008d0c <hci_send_req>:
 8008d0c:	b580      	push	{r7, lr}
 8008d0e:	b08e      	sub	sp, #56	@ 0x38
 8008d10:	af00      	add	r7, sp, #0
 8008d12:	6078      	str	r0, [r7, #4]
 8008d14:	460b      	mov	r3, r1
 8008d16:	70fb      	strb	r3, [r7, #3]
 8008d18:	687b      	ldr	r3, [r7, #4]
 8008d1a:	885b      	ldrh	r3, [r3, #2]
 8008d1c:	b21b      	sxth	r3, r3
 8008d1e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8008d22:	b21a      	sxth	r2, r3
 8008d24:	687b      	ldr	r3, [r7, #4]
 8008d26:	881b      	ldrh	r3, [r3, #0]
 8008d28:	029b      	lsls	r3, r3, #10
 8008d2a:	b21b      	sxth	r3, r3
 8008d2c:	4313      	orrs	r3, r2
 8008d2e:	b21b      	sxth	r3, r3
 8008d30:	86fb      	strh	r3, [r7, #54]	@ 0x36
 8008d32:	2300      	movs	r3, #0
 8008d34:	613b      	str	r3, [r7, #16]
 8008d36:	f107 0308 	add.w	r3, r7, #8
 8008d3a:	4618      	mov	r0, r3
 8008d3c:	f000 f978 	bl	8009030 <list_init_head>
 8008d40:	f7ff ff64 	bl	8008c0c <free_event_list>
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	8818      	ldrh	r0, [r3, #0]
 8008d48:	687b      	ldr	r3, [r7, #4]
 8008d4a:	8859      	ldrh	r1, [r3, #2]
 8008d4c:	687b      	ldr	r3, [r7, #4]
 8008d4e:	68db      	ldr	r3, [r3, #12]
 8008d50:	b2da      	uxtb	r2, r3
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	689b      	ldr	r3, [r3, #8]
 8008d56:	f7ff fefd 	bl	8008b54 <send_cmd>
 8008d5a:	78fb      	ldrb	r3, [r7, #3]
 8008d5c:	2b00      	cmp	r3, #0
 8008d5e:	d001      	beq.n	8008d64 <hci_send_req+0x58>
 8008d60:	2300      	movs	r3, #0
 8008d62:	e0e2      	b.n	8008f2a <hci_send_req+0x21e>
 8008d64:	f7fb fce0 	bl	8004728 <HAL_GetTick>
 8008d68:	6338      	str	r0, [r7, #48]	@ 0x30
 8008d6a:	f7fb fcdd 	bl	8004728 <HAL_GetTick>
 8008d6e:	4602      	mov	r2, r0
 8008d70:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008d72:	1ad3      	subs	r3, r2, r3
 8008d74:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8008d78:	f200 80b3 	bhi.w	8008ee2 <hci_send_req+0x1d6>
 8008d7c:	486d      	ldr	r0, [pc, #436]	@ (8008f34 <hci_send_req+0x228>)
 8008d7e:	f000 f966 	bl	800904e <list_is_empty>
 8008d82:	4603      	mov	r3, r0
 8008d84:	2b00      	cmp	r3, #0
 8008d86:	d000      	beq.n	8008d8a <hci_send_req+0x7e>
 8008d88:	e7ef      	b.n	8008d6a <hci_send_req+0x5e>
 8008d8a:	bf00      	nop
 8008d8c:	f107 0310 	add.w	r3, r7, #16
 8008d90:	4619      	mov	r1, r3
 8008d92:	4868      	ldr	r0, [pc, #416]	@ (8008f34 <hci_send_req+0x228>)
 8008d94:	f000 f9e6 	bl	8009164 <list_remove_head>
 8008d98:	693b      	ldr	r3, [r7, #16]
 8008d9a:	3308      	adds	r3, #8
 8008d9c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008d9e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008da0:	781b      	ldrb	r3, [r3, #0]
 8008da2:	2b04      	cmp	r3, #4
 8008da4:	d17f      	bne.n	8008ea6 <hci_send_req+0x19a>
 8008da6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008da8:	3301      	adds	r3, #1
 8008daa:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008dac:	693b      	ldr	r3, [r7, #16]
 8008dae:	3308      	adds	r3, #8
 8008db0:	3303      	adds	r3, #3
 8008db2:	627b      	str	r3, [r7, #36]	@ 0x24
 8008db4:	693b      	ldr	r3, [r7, #16]
 8008db6:	f893 3088 	ldrb.w	r3, [r3, #136]	@ 0x88
 8008dba:	3b03      	subs	r3, #3
 8008dbc:	623b      	str	r3, [r7, #32]
 8008dbe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008dc0:	781b      	ldrb	r3, [r3, #0]
 8008dc2:	2b3e      	cmp	r3, #62	@ 0x3e
 8008dc4:	d04c      	beq.n	8008e60 <hci_send_req+0x154>
 8008dc6:	2b3e      	cmp	r3, #62	@ 0x3e
 8008dc8:	dc68      	bgt.n	8008e9c <hci_send_req+0x190>
 8008dca:	2b10      	cmp	r3, #16
 8008dcc:	f000 808b 	beq.w	8008ee6 <hci_send_req+0x1da>
 8008dd0:	2b10      	cmp	r3, #16
 8008dd2:	dc63      	bgt.n	8008e9c <hci_send_req+0x190>
 8008dd4:	2b0e      	cmp	r3, #14
 8008dd6:	d023      	beq.n	8008e20 <hci_send_req+0x114>
 8008dd8:	2b0f      	cmp	r3, #15
 8008dda:	d15f      	bne.n	8008e9c <hci_send_req+0x190>
 8008ddc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008dde:	61bb      	str	r3, [r7, #24]
 8008de0:	69bb      	ldr	r3, [r7, #24]
 8008de2:	885b      	ldrh	r3, [r3, #2]
 8008de4:	b29b      	uxth	r3, r3
 8008de6:	8efa      	ldrh	r2, [r7, #54]	@ 0x36
 8008de8:	429a      	cmp	r2, r3
 8008dea:	d17e      	bne.n	8008eea <hci_send_req+0x1de>
 8008dec:	687b      	ldr	r3, [r7, #4]
 8008dee:	685b      	ldr	r3, [r3, #4]
 8008df0:	2b0f      	cmp	r3, #15
 8008df2:	d004      	beq.n	8008dfe <hci_send_req+0xf2>
 8008df4:	69bb      	ldr	r3, [r7, #24]
 8008df6:	781b      	ldrb	r3, [r3, #0]
 8008df8:	2b00      	cmp	r3, #0
 8008dfa:	d051      	beq.n	8008ea0 <hci_send_req+0x194>
 8008dfc:	e078      	b.n	8008ef0 <hci_send_req+0x1e4>
 8008dfe:	687b      	ldr	r3, [r7, #4]
 8008e00:	695a      	ldr	r2, [r3, #20]
 8008e02:	6a3b      	ldr	r3, [r7, #32]
 8008e04:	429a      	cmp	r2, r3
 8008e06:	bf28      	it	cs
 8008e08:	461a      	movcs	r2, r3
 8008e0a:	687b      	ldr	r3, [r7, #4]
 8008e0c:	615a      	str	r2, [r3, #20]
 8008e0e:	687b      	ldr	r3, [r7, #4]
 8008e10:	6918      	ldr	r0, [r3, #16]
 8008e12:	687b      	ldr	r3, [r7, #4]
 8008e14:	695b      	ldr	r3, [r3, #20]
 8008e16:	461a      	mov	r2, r3
 8008e18:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8008e1a:	f001 fb96 	bl	800a54a <memcpy>
 8008e1e:	e078      	b.n	8008f12 <hci_send_req+0x206>
 8008e20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e22:	617b      	str	r3, [r7, #20]
 8008e24:	697b      	ldr	r3, [r7, #20]
 8008e26:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8008e2a:	b29b      	uxth	r3, r3
 8008e2c:	8efa      	ldrh	r2, [r7, #54]	@ 0x36
 8008e2e:	429a      	cmp	r2, r3
 8008e30:	d15d      	bne.n	8008eee <hci_send_req+0x1e2>
 8008e32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e34:	3303      	adds	r3, #3
 8008e36:	627b      	str	r3, [r7, #36]	@ 0x24
 8008e38:	6a3b      	ldr	r3, [r7, #32]
 8008e3a:	3b03      	subs	r3, #3
 8008e3c:	623b      	str	r3, [r7, #32]
 8008e3e:	687b      	ldr	r3, [r7, #4]
 8008e40:	695a      	ldr	r2, [r3, #20]
 8008e42:	6a3b      	ldr	r3, [r7, #32]
 8008e44:	429a      	cmp	r2, r3
 8008e46:	bf28      	it	cs
 8008e48:	461a      	movcs	r2, r3
 8008e4a:	687b      	ldr	r3, [r7, #4]
 8008e4c:	615a      	str	r2, [r3, #20]
 8008e4e:	687b      	ldr	r3, [r7, #4]
 8008e50:	6918      	ldr	r0, [r3, #16]
 8008e52:	687b      	ldr	r3, [r7, #4]
 8008e54:	695b      	ldr	r3, [r3, #20]
 8008e56:	461a      	mov	r2, r3
 8008e58:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8008e5a:	f001 fb76 	bl	800a54a <memcpy>
 8008e5e:	e058      	b.n	8008f12 <hci_send_req+0x206>
 8008e60:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e62:	61fb      	str	r3, [r7, #28]
 8008e64:	69fb      	ldr	r3, [r7, #28]
 8008e66:	781b      	ldrb	r3, [r3, #0]
 8008e68:	461a      	mov	r2, r3
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	685b      	ldr	r3, [r3, #4]
 8008e6e:	429a      	cmp	r2, r3
 8008e70:	d118      	bne.n	8008ea4 <hci_send_req+0x198>
 8008e72:	6a3b      	ldr	r3, [r7, #32]
 8008e74:	3b01      	subs	r3, #1
 8008e76:	623b      	str	r3, [r7, #32]
 8008e78:	687b      	ldr	r3, [r7, #4]
 8008e7a:	695a      	ldr	r2, [r3, #20]
 8008e7c:	6a3b      	ldr	r3, [r7, #32]
 8008e7e:	429a      	cmp	r2, r3
 8008e80:	bf28      	it	cs
 8008e82:	461a      	movcs	r2, r3
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	615a      	str	r2, [r3, #20]
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	6918      	ldr	r0, [r3, #16]
 8008e8c:	69fb      	ldr	r3, [r7, #28]
 8008e8e:	1c59      	adds	r1, r3, #1
 8008e90:	687b      	ldr	r3, [r7, #4]
 8008e92:	695b      	ldr	r3, [r3, #20]
 8008e94:	461a      	mov	r2, r3
 8008e96:	f001 fb58 	bl	800a54a <memcpy>
 8008e9a:	e03a      	b.n	8008f12 <hci_send_req+0x206>
 8008e9c:	bf00      	nop
 8008e9e:	e002      	b.n	8008ea6 <hci_send_req+0x19a>
 8008ea0:	bf00      	nop
 8008ea2:	e000      	b.n	8008ea6 <hci_send_req+0x19a>
 8008ea4:	bf00      	nop
 8008ea6:	4824      	ldr	r0, [pc, #144]	@ (8008f38 <hci_send_req+0x22c>)
 8008ea8:	f000 f8d1 	bl	800904e <list_is_empty>
 8008eac:	4603      	mov	r3, r0
 8008eae:	2b00      	cmp	r3, #0
 8008eb0:	d00d      	beq.n	8008ece <hci_send_req+0x1c2>
 8008eb2:	4820      	ldr	r0, [pc, #128]	@ (8008f34 <hci_send_req+0x228>)
 8008eb4:	f000 f8cb 	bl	800904e <list_is_empty>
 8008eb8:	4603      	mov	r3, r0
 8008eba:	2b00      	cmp	r3, #0
 8008ebc:	d007      	beq.n	8008ece <hci_send_req+0x1c2>
 8008ebe:	693b      	ldr	r3, [r7, #16]
 8008ec0:	4619      	mov	r1, r3
 8008ec2:	481d      	ldr	r0, [pc, #116]	@ (8008f38 <hci_send_req+0x22c>)
 8008ec4:	f000 f909 	bl	80090da <list_insert_tail>
 8008ec8:	2300      	movs	r3, #0
 8008eca:	613b      	str	r3, [r7, #16]
 8008ecc:	e008      	b.n	8008ee0 <hci_send_req+0x1d4>
 8008ece:	693a      	ldr	r2, [r7, #16]
 8008ed0:	f107 0308 	add.w	r3, r7, #8
 8008ed4:	4611      	mov	r1, r2
 8008ed6:	4618      	mov	r0, r3
 8008ed8:	f000 f8ff 	bl	80090da <list_insert_tail>
 8008edc:	2300      	movs	r3, #0
 8008ede:	613b      	str	r3, [r7, #16]
 8008ee0:	e740      	b.n	8008d64 <hci_send_req+0x58>
 8008ee2:	bf00      	nop
 8008ee4:	e004      	b.n	8008ef0 <hci_send_req+0x1e4>
 8008ee6:	bf00      	nop
 8008ee8:	e002      	b.n	8008ef0 <hci_send_req+0x1e4>
 8008eea:	bf00      	nop
 8008eec:	e000      	b.n	8008ef0 <hci_send_req+0x1e4>
 8008eee:	bf00      	nop
 8008ef0:	693b      	ldr	r3, [r7, #16]
 8008ef2:	2b00      	cmp	r3, #0
 8008ef4:	d004      	beq.n	8008f00 <hci_send_req+0x1f4>
 8008ef6:	693b      	ldr	r3, [r7, #16]
 8008ef8:	4619      	mov	r1, r3
 8008efa:	480f      	ldr	r0, [pc, #60]	@ (8008f38 <hci_send_req+0x22c>)
 8008efc:	f000 f8c8 	bl	8009090 <list_insert_head>
 8008f00:	f107 0308 	add.w	r3, r7, #8
 8008f04:	4619      	mov	r1, r3
 8008f06:	480b      	ldr	r0, [pc, #44]	@ (8008f34 <hci_send_req+0x228>)
 8008f08:	f7ff fe64 	bl	8008bd4 <move_list>
 8008f0c:	f04f 33ff 	mov.w	r3, #4294967295
 8008f10:	e00b      	b.n	8008f2a <hci_send_req+0x21e>
 8008f12:	693b      	ldr	r3, [r7, #16]
 8008f14:	4619      	mov	r1, r3
 8008f16:	4808      	ldr	r0, [pc, #32]	@ (8008f38 <hci_send_req+0x22c>)
 8008f18:	f000 f8ba 	bl	8009090 <list_insert_head>
 8008f1c:	f107 0308 	add.w	r3, r7, #8
 8008f20:	4619      	mov	r1, r3
 8008f22:	4804      	ldr	r0, [pc, #16]	@ (8008f34 <hci_send_req+0x228>)
 8008f24:	f7ff fe56 	bl	8008bd4 <move_list>
 8008f28:	2300      	movs	r3, #0
 8008f2a:	4618      	mov	r0, r3
 8008f2c:	3738      	adds	r7, #56	@ 0x38
 8008f2e:	46bd      	mov	sp, r7
 8008f30:	bd80      	pop	{r7, pc}
 8008f32:	bf00      	nop
 8008f34:	200004e8 	.word	0x200004e8
 8008f38:	200004e0 	.word	0x200004e0

08008f3c <hci_user_evt_proc>:
 8008f3c:	b580      	push	{r7, lr}
 8008f3e:	b082      	sub	sp, #8
 8008f40:	af00      	add	r7, sp, #0
 8008f42:	2300      	movs	r3, #0
 8008f44:	607b      	str	r3, [r7, #4]
 8008f46:	e013      	b.n	8008f70 <hci_user_evt_proc+0x34>
 8008f48:	1d3b      	adds	r3, r7, #4
 8008f4a:	4619      	mov	r1, r3
 8008f4c:	480e      	ldr	r0, [pc, #56]	@ (8008f88 <hci_user_evt_proc+0x4c>)
 8008f4e:	f000 f909 	bl	8009164 <list_remove_head>
 8008f52:	4b0e      	ldr	r3, [pc, #56]	@ (8008f8c <hci_user_evt_proc+0x50>)
 8008f54:	69db      	ldr	r3, [r3, #28]
 8008f56:	2b00      	cmp	r3, #0
 8008f58:	d005      	beq.n	8008f66 <hci_user_evt_proc+0x2a>
 8008f5a:	4b0c      	ldr	r3, [pc, #48]	@ (8008f8c <hci_user_evt_proc+0x50>)
 8008f5c:	69db      	ldr	r3, [r3, #28]
 8008f5e:	687a      	ldr	r2, [r7, #4]
 8008f60:	3208      	adds	r2, #8
 8008f62:	4610      	mov	r0, r2
 8008f64:	4798      	blx	r3
 8008f66:	687b      	ldr	r3, [r7, #4]
 8008f68:	4619      	mov	r1, r3
 8008f6a:	4809      	ldr	r0, [pc, #36]	@ (8008f90 <hci_user_evt_proc+0x54>)
 8008f6c:	f000 f8b5 	bl	80090da <list_insert_tail>
 8008f70:	4805      	ldr	r0, [pc, #20]	@ (8008f88 <hci_user_evt_proc+0x4c>)
 8008f72:	f000 f86c 	bl	800904e <list_is_empty>
 8008f76:	4603      	mov	r3, r0
 8008f78:	2b00      	cmp	r3, #0
 8008f7a:	d0e5      	beq.n	8008f48 <hci_user_evt_proc+0xc>
 8008f7c:	bf00      	nop
 8008f7e:	bf00      	nop
 8008f80:	3708      	adds	r7, #8
 8008f82:	46bd      	mov	sp, r7
 8008f84:	bd80      	pop	{r7, pc}
 8008f86:	bf00      	nop
 8008f88:	200004e8 	.word	0x200004e8
 8008f8c:	200007ac 	.word	0x200007ac
 8008f90:	200004e0 	.word	0x200004e0

08008f94 <hci_notify_asynch_evt>:
 8008f94:	b580      	push	{r7, lr}
 8008f96:	b086      	sub	sp, #24
 8008f98:	af00      	add	r7, sp, #0
 8008f9a:	6078      	str	r0, [r7, #4]
 8008f9c:	2300      	movs	r3, #0
 8008f9e:	60fb      	str	r3, [r7, #12]
 8008fa0:	2300      	movs	r3, #0
 8008fa2:	617b      	str	r3, [r7, #20]
 8008fa4:	481f      	ldr	r0, [pc, #124]	@ (8009024 <hci_notify_asynch_evt+0x90>)
 8008fa6:	f000 f852 	bl	800904e <list_is_empty>
 8008faa:	4603      	mov	r3, r0
 8008fac:	2b00      	cmp	r3, #0
 8008fae:	d132      	bne.n	8009016 <hci_notify_asynch_evt+0x82>
 8008fb0:	f107 030c 	add.w	r3, r7, #12
 8008fb4:	4619      	mov	r1, r3
 8008fb6:	481b      	ldr	r0, [pc, #108]	@ (8009024 <hci_notify_asynch_evt+0x90>)
 8008fb8:	f000 f8d4 	bl	8009164 <list_remove_head>
 8008fbc:	4b1a      	ldr	r3, [pc, #104]	@ (8009028 <hci_notify_asynch_evt+0x94>)
 8008fbe:	68db      	ldr	r3, [r3, #12]
 8008fc0:	2b00      	cmp	r3, #0
 8008fc2:	d02a      	beq.n	800901a <hci_notify_asynch_evt+0x86>
 8008fc4:	4b18      	ldr	r3, [pc, #96]	@ (8009028 <hci_notify_asynch_evt+0x94>)
 8008fc6:	68db      	ldr	r3, [r3, #12]
 8008fc8:	68fa      	ldr	r2, [r7, #12]
 8008fca:	3208      	adds	r2, #8
 8008fcc:	2180      	movs	r1, #128	@ 0x80
 8008fce:	4610      	mov	r0, r2
 8008fd0:	4798      	blx	r3
 8008fd2:	4603      	mov	r3, r0
 8008fd4:	74fb      	strb	r3, [r7, #19]
 8008fd6:	7cfb      	ldrb	r3, [r7, #19]
 8008fd8:	2b00      	cmp	r3, #0
 8008fda:	d016      	beq.n	800900a <hci_notify_asynch_evt+0x76>
 8008fdc:	68fb      	ldr	r3, [r7, #12]
 8008fde:	7cfa      	ldrb	r2, [r7, #19]
 8008fe0:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88
 8008fe4:	68fb      	ldr	r3, [r7, #12]
 8008fe6:	4618      	mov	r0, r3
 8008fe8:	f7ff fd95 	bl	8008b16 <verify_packet>
 8008fec:	4603      	mov	r3, r0
 8008fee:	2b00      	cmp	r3, #0
 8008ff0:	d105      	bne.n	8008ffe <hci_notify_asynch_evt+0x6a>
 8008ff2:	68fb      	ldr	r3, [r7, #12]
 8008ff4:	4619      	mov	r1, r3
 8008ff6:	480d      	ldr	r0, [pc, #52]	@ (800902c <hci_notify_asynch_evt+0x98>)
 8008ff8:	f000 f86f 	bl	80090da <list_insert_tail>
 8008ffc:	e00d      	b.n	800901a <hci_notify_asynch_evt+0x86>
 8008ffe:	68fb      	ldr	r3, [r7, #12]
 8009000:	4619      	mov	r1, r3
 8009002:	4808      	ldr	r0, [pc, #32]	@ (8009024 <hci_notify_asynch_evt+0x90>)
 8009004:	f000 f844 	bl	8009090 <list_insert_head>
 8009008:	e007      	b.n	800901a <hci_notify_asynch_evt+0x86>
 800900a:	68fb      	ldr	r3, [r7, #12]
 800900c:	4619      	mov	r1, r3
 800900e:	4805      	ldr	r0, [pc, #20]	@ (8009024 <hci_notify_asynch_evt+0x90>)
 8009010:	f000 f83e 	bl	8009090 <list_insert_head>
 8009014:	e001      	b.n	800901a <hci_notify_asynch_evt+0x86>
 8009016:	2301      	movs	r3, #1
 8009018:	617b      	str	r3, [r7, #20]
 800901a:	697b      	ldr	r3, [r7, #20]
 800901c:	4618      	mov	r0, r3
 800901e:	3718      	adds	r7, #24
 8009020:	46bd      	mov	sp, r7
 8009022:	bd80      	pop	{r7, pc}
 8009024:	200004e0 	.word	0x200004e0
 8009028:	200007ac 	.word	0x200007ac
 800902c:	200004e8 	.word	0x200004e8

08009030 <list_init_head>:
 8009030:	b480      	push	{r7}
 8009032:	b083      	sub	sp, #12
 8009034:	af00      	add	r7, sp, #0
 8009036:	6078      	str	r0, [r7, #4]
 8009038:	687b      	ldr	r3, [r7, #4]
 800903a:	687a      	ldr	r2, [r7, #4]
 800903c:	601a      	str	r2, [r3, #0]
 800903e:	687b      	ldr	r3, [r7, #4]
 8009040:	687a      	ldr	r2, [r7, #4]
 8009042:	605a      	str	r2, [r3, #4]
 8009044:	bf00      	nop
 8009046:	370c      	adds	r7, #12
 8009048:	46bd      	mov	sp, r7
 800904a:	bc80      	pop	{r7}
 800904c:	4770      	bx	lr

0800904e <list_is_empty>:
 800904e:	b480      	push	{r7}
 8009050:	b087      	sub	sp, #28
 8009052:	af00      	add	r7, sp, #0
 8009054:	6078      	str	r0, [r7, #4]
 8009056:	f3ef 8310 	mrs	r3, PRIMASK
 800905a:	60fb      	str	r3, [r7, #12]
 800905c:	68fb      	ldr	r3, [r7, #12]
 800905e:	613b      	str	r3, [r7, #16]
 8009060:	b672      	cpsid	i
 8009062:	bf00      	nop
 8009064:	687b      	ldr	r3, [r7, #4]
 8009066:	681b      	ldr	r3, [r3, #0]
 8009068:	687a      	ldr	r2, [r7, #4]
 800906a:	429a      	cmp	r2, r3
 800906c:	d102      	bne.n	8009074 <list_is_empty+0x26>
 800906e:	2301      	movs	r3, #1
 8009070:	75fb      	strb	r3, [r7, #23]
 8009072:	e001      	b.n	8009078 <list_is_empty+0x2a>
 8009074:	2300      	movs	r3, #0
 8009076:	75fb      	strb	r3, [r7, #23]
 8009078:	693b      	ldr	r3, [r7, #16]
 800907a:	60bb      	str	r3, [r7, #8]
 800907c:	68bb      	ldr	r3, [r7, #8]
 800907e:	f383 8810 	msr	PRIMASK, r3
 8009082:	bf00      	nop
 8009084:	7dfb      	ldrb	r3, [r7, #23]
 8009086:	4618      	mov	r0, r3
 8009088:	371c      	adds	r7, #28
 800908a:	46bd      	mov	sp, r7
 800908c:	bc80      	pop	{r7}
 800908e:	4770      	bx	lr

08009090 <list_insert_head>:
 8009090:	b480      	push	{r7}
 8009092:	b087      	sub	sp, #28
 8009094:	af00      	add	r7, sp, #0
 8009096:	6078      	str	r0, [r7, #4]
 8009098:	6039      	str	r1, [r7, #0]
 800909a:	f3ef 8310 	mrs	r3, PRIMASK
 800909e:	60fb      	str	r3, [r7, #12]
 80090a0:	68fb      	ldr	r3, [r7, #12]
 80090a2:	617b      	str	r3, [r7, #20]
 80090a4:	b672      	cpsid	i
 80090a6:	bf00      	nop
 80090a8:	687b      	ldr	r3, [r7, #4]
 80090aa:	681a      	ldr	r2, [r3, #0]
 80090ac:	683b      	ldr	r3, [r7, #0]
 80090ae:	601a      	str	r2, [r3, #0]
 80090b0:	683b      	ldr	r3, [r7, #0]
 80090b2:	687a      	ldr	r2, [r7, #4]
 80090b4:	605a      	str	r2, [r3, #4]
 80090b6:	687b      	ldr	r3, [r7, #4]
 80090b8:	683a      	ldr	r2, [r7, #0]
 80090ba:	601a      	str	r2, [r3, #0]
 80090bc:	683b      	ldr	r3, [r7, #0]
 80090be:	681b      	ldr	r3, [r3, #0]
 80090c0:	683a      	ldr	r2, [r7, #0]
 80090c2:	605a      	str	r2, [r3, #4]
 80090c4:	697b      	ldr	r3, [r7, #20]
 80090c6:	613b      	str	r3, [r7, #16]
 80090c8:	693b      	ldr	r3, [r7, #16]
 80090ca:	f383 8810 	msr	PRIMASK, r3
 80090ce:	bf00      	nop
 80090d0:	bf00      	nop
 80090d2:	371c      	adds	r7, #28
 80090d4:	46bd      	mov	sp, r7
 80090d6:	bc80      	pop	{r7}
 80090d8:	4770      	bx	lr

080090da <list_insert_tail>:
 80090da:	b480      	push	{r7}
 80090dc:	b087      	sub	sp, #28
 80090de:	af00      	add	r7, sp, #0
 80090e0:	6078      	str	r0, [r7, #4]
 80090e2:	6039      	str	r1, [r7, #0]
 80090e4:	f3ef 8310 	mrs	r3, PRIMASK
 80090e8:	60fb      	str	r3, [r7, #12]
 80090ea:	68fb      	ldr	r3, [r7, #12]
 80090ec:	617b      	str	r3, [r7, #20]
 80090ee:	b672      	cpsid	i
 80090f0:	bf00      	nop
 80090f2:	683b      	ldr	r3, [r7, #0]
 80090f4:	687a      	ldr	r2, [r7, #4]
 80090f6:	601a      	str	r2, [r3, #0]
 80090f8:	687b      	ldr	r3, [r7, #4]
 80090fa:	685a      	ldr	r2, [r3, #4]
 80090fc:	683b      	ldr	r3, [r7, #0]
 80090fe:	605a      	str	r2, [r3, #4]
 8009100:	687b      	ldr	r3, [r7, #4]
 8009102:	683a      	ldr	r2, [r7, #0]
 8009104:	605a      	str	r2, [r3, #4]
 8009106:	683b      	ldr	r3, [r7, #0]
 8009108:	685b      	ldr	r3, [r3, #4]
 800910a:	683a      	ldr	r2, [r7, #0]
 800910c:	601a      	str	r2, [r3, #0]
 800910e:	697b      	ldr	r3, [r7, #20]
 8009110:	613b      	str	r3, [r7, #16]
 8009112:	693b      	ldr	r3, [r7, #16]
 8009114:	f383 8810 	msr	PRIMASK, r3
 8009118:	bf00      	nop
 800911a:	bf00      	nop
 800911c:	371c      	adds	r7, #28
 800911e:	46bd      	mov	sp, r7
 8009120:	bc80      	pop	{r7}
 8009122:	4770      	bx	lr

08009124 <list_remove_node>:
 8009124:	b480      	push	{r7}
 8009126:	b087      	sub	sp, #28
 8009128:	af00      	add	r7, sp, #0
 800912a:	6078      	str	r0, [r7, #4]
 800912c:	f3ef 8310 	mrs	r3, PRIMASK
 8009130:	60fb      	str	r3, [r7, #12]
 8009132:	68fb      	ldr	r3, [r7, #12]
 8009134:	617b      	str	r3, [r7, #20]
 8009136:	b672      	cpsid	i
 8009138:	bf00      	nop
 800913a:	687b      	ldr	r3, [r7, #4]
 800913c:	685b      	ldr	r3, [r3, #4]
 800913e:	687a      	ldr	r2, [r7, #4]
 8009140:	6812      	ldr	r2, [r2, #0]
 8009142:	601a      	str	r2, [r3, #0]
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	681b      	ldr	r3, [r3, #0]
 8009148:	687a      	ldr	r2, [r7, #4]
 800914a:	6852      	ldr	r2, [r2, #4]
 800914c:	605a      	str	r2, [r3, #4]
 800914e:	697b      	ldr	r3, [r7, #20]
 8009150:	613b      	str	r3, [r7, #16]
 8009152:	693b      	ldr	r3, [r7, #16]
 8009154:	f383 8810 	msr	PRIMASK, r3
 8009158:	bf00      	nop
 800915a:	bf00      	nop
 800915c:	371c      	adds	r7, #28
 800915e:	46bd      	mov	sp, r7
 8009160:	bc80      	pop	{r7}
 8009162:	4770      	bx	lr

08009164 <list_remove_head>:
 8009164:	b580      	push	{r7, lr}
 8009166:	b086      	sub	sp, #24
 8009168:	af00      	add	r7, sp, #0
 800916a:	6078      	str	r0, [r7, #4]
 800916c:	6039      	str	r1, [r7, #0]
 800916e:	f3ef 8310 	mrs	r3, PRIMASK
 8009172:	60fb      	str	r3, [r7, #12]
 8009174:	68fb      	ldr	r3, [r7, #12]
 8009176:	617b      	str	r3, [r7, #20]
 8009178:	b672      	cpsid	i
 800917a:	bf00      	nop
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	681a      	ldr	r2, [r3, #0]
 8009180:	683b      	ldr	r3, [r7, #0]
 8009182:	601a      	str	r2, [r3, #0]
 8009184:	687b      	ldr	r3, [r7, #4]
 8009186:	681b      	ldr	r3, [r3, #0]
 8009188:	4618      	mov	r0, r3
 800918a:	f7ff ffcb 	bl	8009124 <list_remove_node>
 800918e:	683b      	ldr	r3, [r7, #0]
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	2200      	movs	r2, #0
 8009194:	601a      	str	r2, [r3, #0]
 8009196:	683b      	ldr	r3, [r7, #0]
 8009198:	681b      	ldr	r3, [r3, #0]
 800919a:	2200      	movs	r2, #0
 800919c:	605a      	str	r2, [r3, #4]
 800919e:	697b      	ldr	r3, [r7, #20]
 80091a0:	613b      	str	r3, [r7, #16]
 80091a2:	693b      	ldr	r3, [r7, #16]
 80091a4:	f383 8810 	msr	PRIMASK, r3
 80091a8:	bf00      	nop
 80091aa:	bf00      	nop
 80091ac:	3718      	adds	r7, #24
 80091ae:	46bd      	mov	sp, r7
 80091b0:	bd80      	pop	{r7, pc}

080091b2 <list_remove_tail>:
 80091b2:	b580      	push	{r7, lr}
 80091b4:	b086      	sub	sp, #24
 80091b6:	af00      	add	r7, sp, #0
 80091b8:	6078      	str	r0, [r7, #4]
 80091ba:	6039      	str	r1, [r7, #0]
 80091bc:	f3ef 8310 	mrs	r3, PRIMASK
 80091c0:	60fb      	str	r3, [r7, #12]
 80091c2:	68fb      	ldr	r3, [r7, #12]
 80091c4:	617b      	str	r3, [r7, #20]
 80091c6:	b672      	cpsid	i
 80091c8:	bf00      	nop
 80091ca:	687b      	ldr	r3, [r7, #4]
 80091cc:	685a      	ldr	r2, [r3, #4]
 80091ce:	683b      	ldr	r3, [r7, #0]
 80091d0:	601a      	str	r2, [r3, #0]
 80091d2:	687b      	ldr	r3, [r7, #4]
 80091d4:	685b      	ldr	r3, [r3, #4]
 80091d6:	4618      	mov	r0, r3
 80091d8:	f7ff ffa4 	bl	8009124 <list_remove_node>
 80091dc:	683b      	ldr	r3, [r7, #0]
 80091de:	681b      	ldr	r3, [r3, #0]
 80091e0:	2200      	movs	r2, #0
 80091e2:	601a      	str	r2, [r3, #0]
 80091e4:	683b      	ldr	r3, [r7, #0]
 80091e6:	681b      	ldr	r3, [r3, #0]
 80091e8:	2200      	movs	r2, #0
 80091ea:	605a      	str	r2, [r3, #4]
 80091ec:	697b      	ldr	r3, [r7, #20]
 80091ee:	613b      	str	r3, [r7, #16]
 80091f0:	693b      	ldr	r3, [r7, #16]
 80091f2:	f383 8810 	msr	PRIMASK, r3
 80091f6:	bf00      	nop
 80091f8:	bf00      	nop
 80091fa:	3718      	adds	r7, #24
 80091fc:	46bd      	mov	sp, r7
 80091fe:	bd80      	pop	{r7, pc}

08009200 <list_get_size>:
 8009200:	b480      	push	{r7}
 8009202:	b089      	sub	sp, #36	@ 0x24
 8009204:	af00      	add	r7, sp, #0
 8009206:	6078      	str	r0, [r7, #4]
 8009208:	2300      	movs	r3, #0
 800920a:	61fb      	str	r3, [r7, #28]
 800920c:	f3ef 8310 	mrs	r3, PRIMASK
 8009210:	613b      	str	r3, [r7, #16]
 8009212:	693b      	ldr	r3, [r7, #16]
 8009214:	617b      	str	r3, [r7, #20]
 8009216:	b672      	cpsid	i
 8009218:	bf00      	nop
 800921a:	687b      	ldr	r3, [r7, #4]
 800921c:	681b      	ldr	r3, [r3, #0]
 800921e:	61bb      	str	r3, [r7, #24]
 8009220:	e005      	b.n	800922e <list_get_size+0x2e>
 8009222:	69fb      	ldr	r3, [r7, #28]
 8009224:	3301      	adds	r3, #1
 8009226:	61fb      	str	r3, [r7, #28]
 8009228:	69bb      	ldr	r3, [r7, #24]
 800922a:	681b      	ldr	r3, [r3, #0]
 800922c:	61bb      	str	r3, [r7, #24]
 800922e:	69ba      	ldr	r2, [r7, #24]
 8009230:	687b      	ldr	r3, [r7, #4]
 8009232:	429a      	cmp	r2, r3
 8009234:	d1f5      	bne.n	8009222 <list_get_size+0x22>
 8009236:	697b      	ldr	r3, [r7, #20]
 8009238:	60fb      	str	r3, [r7, #12]
 800923a:	68fb      	ldr	r3, [r7, #12]
 800923c:	f383 8810 	msr	PRIMASK, r3
 8009240:	bf00      	nop
 8009242:	69fb      	ldr	r3, [r7, #28]
 8009244:	4618      	mov	r0, r3
 8009246:	3724      	adds	r7, #36	@ 0x24
 8009248:	46bd      	mov	sp, r7
 800924a:	bc80      	pop	{r7}
 800924c:	4770      	bx	lr
	...

08009250 <srand>:
 8009250:	b538      	push	{r3, r4, r5, lr}
 8009252:	4b10      	ldr	r3, [pc, #64]	@ (8009294 <srand+0x44>)
 8009254:	4604      	mov	r4, r0
 8009256:	681d      	ldr	r5, [r3, #0]
 8009258:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800925a:	b9b3      	cbnz	r3, 800928a <srand+0x3a>
 800925c:	2018      	movs	r0, #24
 800925e:	f002 f83f 	bl	800b2e0 <malloc>
 8009262:	4602      	mov	r2, r0
 8009264:	6328      	str	r0, [r5, #48]	@ 0x30
 8009266:	b920      	cbnz	r0, 8009272 <srand+0x22>
 8009268:	2146      	movs	r1, #70	@ 0x46
 800926a:	4b0b      	ldr	r3, [pc, #44]	@ (8009298 <srand+0x48>)
 800926c:	480b      	ldr	r0, [pc, #44]	@ (800929c <srand+0x4c>)
 800926e:	f001 f97f 	bl	800a570 <__assert_func>
 8009272:	490b      	ldr	r1, [pc, #44]	@ (80092a0 <srand+0x50>)
 8009274:	4b0b      	ldr	r3, [pc, #44]	@ (80092a4 <srand+0x54>)
 8009276:	e9c0 1300 	strd	r1, r3, [r0]
 800927a:	4b0b      	ldr	r3, [pc, #44]	@ (80092a8 <srand+0x58>)
 800927c:	2100      	movs	r1, #0
 800927e:	6083      	str	r3, [r0, #8]
 8009280:	230b      	movs	r3, #11
 8009282:	8183      	strh	r3, [r0, #12]
 8009284:	2001      	movs	r0, #1
 8009286:	e9c2 0104 	strd	r0, r1, [r2, #16]
 800928a:	2200      	movs	r2, #0
 800928c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 800928e:	611c      	str	r4, [r3, #16]
 8009290:	615a      	str	r2, [r3, #20]
 8009292:	bd38      	pop	{r3, r4, r5, pc}
 8009294:	20000034 	.word	0x20000034
 8009298:	0800dbe4 	.word	0x0800dbe4
 800929c:	0800dbfb 	.word	0x0800dbfb
 80092a0:	abcd330e 	.word	0xabcd330e
 80092a4:	e66d1234 	.word	0xe66d1234
 80092a8:	0005deec 	.word	0x0005deec

080092ac <rand>:
 80092ac:	4b16      	ldr	r3, [pc, #88]	@ (8009308 <rand+0x5c>)
 80092ae:	b510      	push	{r4, lr}
 80092b0:	681c      	ldr	r4, [r3, #0]
 80092b2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80092b4:	b9b3      	cbnz	r3, 80092e4 <rand+0x38>
 80092b6:	2018      	movs	r0, #24
 80092b8:	f002 f812 	bl	800b2e0 <malloc>
 80092bc:	4602      	mov	r2, r0
 80092be:	6320      	str	r0, [r4, #48]	@ 0x30
 80092c0:	b920      	cbnz	r0, 80092cc <rand+0x20>
 80092c2:	2152      	movs	r1, #82	@ 0x52
 80092c4:	4b11      	ldr	r3, [pc, #68]	@ (800930c <rand+0x60>)
 80092c6:	4812      	ldr	r0, [pc, #72]	@ (8009310 <rand+0x64>)
 80092c8:	f001 f952 	bl	800a570 <__assert_func>
 80092cc:	4911      	ldr	r1, [pc, #68]	@ (8009314 <rand+0x68>)
 80092ce:	4b12      	ldr	r3, [pc, #72]	@ (8009318 <rand+0x6c>)
 80092d0:	e9c0 1300 	strd	r1, r3, [r0]
 80092d4:	4b11      	ldr	r3, [pc, #68]	@ (800931c <rand+0x70>)
 80092d6:	2100      	movs	r1, #0
 80092d8:	6083      	str	r3, [r0, #8]
 80092da:	230b      	movs	r3, #11
 80092dc:	8183      	strh	r3, [r0, #12]
 80092de:	2001      	movs	r0, #1
 80092e0:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80092e4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80092e6:	480e      	ldr	r0, [pc, #56]	@ (8009320 <rand+0x74>)
 80092e8:	690b      	ldr	r3, [r1, #16]
 80092ea:	694c      	ldr	r4, [r1, #20]
 80092ec:	4358      	muls	r0, r3
 80092ee:	4a0d      	ldr	r2, [pc, #52]	@ (8009324 <rand+0x78>)
 80092f0:	fb02 0004 	mla	r0, r2, r4, r0
 80092f4:	fba3 3202 	umull	r3, r2, r3, r2
 80092f8:	3301      	adds	r3, #1
 80092fa:	eb40 0002 	adc.w	r0, r0, r2
 80092fe:	e9c1 3004 	strd	r3, r0, [r1, #16]
 8009302:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 8009306:	bd10      	pop	{r4, pc}
 8009308:	20000034 	.word	0x20000034
 800930c:	0800dbe4 	.word	0x0800dbe4
 8009310:	0800dbfb 	.word	0x0800dbfb
 8009314:	abcd330e 	.word	0xabcd330e
 8009318:	e66d1234 	.word	0xe66d1234
 800931c:	0005deec 	.word	0x0005deec
 8009320:	5851f42d 	.word	0x5851f42d
 8009324:	4c957f2d 	.word	0x4c957f2d

08009328 <__cvt>:
 8009328:	2b00      	cmp	r3, #0
 800932a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800932e:	461d      	mov	r5, r3
 8009330:	bfbb      	ittet	lt
 8009332:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8009336:	461d      	movlt	r5, r3
 8009338:	2300      	movge	r3, #0
 800933a:	232d      	movlt	r3, #45	@ 0x2d
 800933c:	b088      	sub	sp, #32
 800933e:	4614      	mov	r4, r2
 8009340:	bfb8      	it	lt
 8009342:	4614      	movlt	r4, r2
 8009344:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8009346:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8009348:	7013      	strb	r3, [r2, #0]
 800934a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800934c:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8009350:	f023 0820 	bic.w	r8, r3, #32
 8009354:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8009358:	d005      	beq.n	8009366 <__cvt+0x3e>
 800935a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800935e:	d100      	bne.n	8009362 <__cvt+0x3a>
 8009360:	3601      	adds	r6, #1
 8009362:	2302      	movs	r3, #2
 8009364:	e000      	b.n	8009368 <__cvt+0x40>
 8009366:	2303      	movs	r3, #3
 8009368:	aa07      	add	r2, sp, #28
 800936a:	9204      	str	r2, [sp, #16]
 800936c:	aa06      	add	r2, sp, #24
 800936e:	e9cd a202 	strd	sl, r2, [sp, #8]
 8009372:	e9cd 3600 	strd	r3, r6, [sp]
 8009376:	4622      	mov	r2, r4
 8009378:	462b      	mov	r3, r5
 800937a:	f001 f9a1 	bl	800a6c0 <_dtoa_r>
 800937e:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8009382:	4607      	mov	r7, r0
 8009384:	d119      	bne.n	80093ba <__cvt+0x92>
 8009386:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8009388:	07db      	lsls	r3, r3, #31
 800938a:	d50e      	bpl.n	80093aa <__cvt+0x82>
 800938c:	eb00 0906 	add.w	r9, r0, r6
 8009390:	2200      	movs	r2, #0
 8009392:	2300      	movs	r3, #0
 8009394:	4620      	mov	r0, r4
 8009396:	4629      	mov	r1, r5
 8009398:	f7f7 fb1e 	bl	80009d8 <__aeabi_dcmpeq>
 800939c:	b108      	cbz	r0, 80093a2 <__cvt+0x7a>
 800939e:	f8cd 901c 	str.w	r9, [sp, #28]
 80093a2:	2230      	movs	r2, #48	@ 0x30
 80093a4:	9b07      	ldr	r3, [sp, #28]
 80093a6:	454b      	cmp	r3, r9
 80093a8:	d31e      	bcc.n	80093e8 <__cvt+0xc0>
 80093aa:	4638      	mov	r0, r7
 80093ac:	9b07      	ldr	r3, [sp, #28]
 80093ae:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80093b0:	1bdb      	subs	r3, r3, r7
 80093b2:	6013      	str	r3, [r2, #0]
 80093b4:	b008      	add	sp, #32
 80093b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80093ba:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80093be:	eb00 0906 	add.w	r9, r0, r6
 80093c2:	d1e5      	bne.n	8009390 <__cvt+0x68>
 80093c4:	7803      	ldrb	r3, [r0, #0]
 80093c6:	2b30      	cmp	r3, #48	@ 0x30
 80093c8:	d10a      	bne.n	80093e0 <__cvt+0xb8>
 80093ca:	2200      	movs	r2, #0
 80093cc:	2300      	movs	r3, #0
 80093ce:	4620      	mov	r0, r4
 80093d0:	4629      	mov	r1, r5
 80093d2:	f7f7 fb01 	bl	80009d8 <__aeabi_dcmpeq>
 80093d6:	b918      	cbnz	r0, 80093e0 <__cvt+0xb8>
 80093d8:	f1c6 0601 	rsb	r6, r6, #1
 80093dc:	f8ca 6000 	str.w	r6, [sl]
 80093e0:	f8da 3000 	ldr.w	r3, [sl]
 80093e4:	4499      	add	r9, r3
 80093e6:	e7d3      	b.n	8009390 <__cvt+0x68>
 80093e8:	1c59      	adds	r1, r3, #1
 80093ea:	9107      	str	r1, [sp, #28]
 80093ec:	701a      	strb	r2, [r3, #0]
 80093ee:	e7d9      	b.n	80093a4 <__cvt+0x7c>

080093f0 <__exponent>:
 80093f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80093f2:	2900      	cmp	r1, #0
 80093f4:	bfb6      	itet	lt
 80093f6:	232d      	movlt	r3, #45	@ 0x2d
 80093f8:	232b      	movge	r3, #43	@ 0x2b
 80093fa:	4249      	neglt	r1, r1
 80093fc:	2909      	cmp	r1, #9
 80093fe:	7002      	strb	r2, [r0, #0]
 8009400:	7043      	strb	r3, [r0, #1]
 8009402:	dd29      	ble.n	8009458 <__exponent+0x68>
 8009404:	f10d 0307 	add.w	r3, sp, #7
 8009408:	461d      	mov	r5, r3
 800940a:	270a      	movs	r7, #10
 800940c:	fbb1 f6f7 	udiv	r6, r1, r7
 8009410:	461a      	mov	r2, r3
 8009412:	fb07 1416 	mls	r4, r7, r6, r1
 8009416:	3430      	adds	r4, #48	@ 0x30
 8009418:	f802 4c01 	strb.w	r4, [r2, #-1]
 800941c:	460c      	mov	r4, r1
 800941e:	2c63      	cmp	r4, #99	@ 0x63
 8009420:	4631      	mov	r1, r6
 8009422:	f103 33ff 	add.w	r3, r3, #4294967295
 8009426:	dcf1      	bgt.n	800940c <__exponent+0x1c>
 8009428:	3130      	adds	r1, #48	@ 0x30
 800942a:	1e94      	subs	r4, r2, #2
 800942c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8009430:	4623      	mov	r3, r4
 8009432:	1c41      	adds	r1, r0, #1
 8009434:	42ab      	cmp	r3, r5
 8009436:	d30a      	bcc.n	800944e <__exponent+0x5e>
 8009438:	f10d 0309 	add.w	r3, sp, #9
 800943c:	1a9b      	subs	r3, r3, r2
 800943e:	42ac      	cmp	r4, r5
 8009440:	bf88      	it	hi
 8009442:	2300      	movhi	r3, #0
 8009444:	3302      	adds	r3, #2
 8009446:	4403      	add	r3, r0
 8009448:	1a18      	subs	r0, r3, r0
 800944a:	b003      	add	sp, #12
 800944c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800944e:	f813 6b01 	ldrb.w	r6, [r3], #1
 8009452:	f801 6f01 	strb.w	r6, [r1, #1]!
 8009456:	e7ed      	b.n	8009434 <__exponent+0x44>
 8009458:	2330      	movs	r3, #48	@ 0x30
 800945a:	3130      	adds	r1, #48	@ 0x30
 800945c:	7083      	strb	r3, [r0, #2]
 800945e:	70c1      	strb	r1, [r0, #3]
 8009460:	1d03      	adds	r3, r0, #4
 8009462:	e7f1      	b.n	8009448 <__exponent+0x58>

08009464 <_printf_float>:
 8009464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009468:	b091      	sub	sp, #68	@ 0x44
 800946a:	460c      	mov	r4, r1
 800946c:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8009470:	4616      	mov	r6, r2
 8009472:	461f      	mov	r7, r3
 8009474:	4605      	mov	r5, r0
 8009476:	f000 ffe3 	bl	800a440 <_localeconv_r>
 800947a:	6803      	ldr	r3, [r0, #0]
 800947c:	4618      	mov	r0, r3
 800947e:	9308      	str	r3, [sp, #32]
 8009480:	f7f6 fe7e 	bl	8000180 <strlen>
 8009484:	2300      	movs	r3, #0
 8009486:	930e      	str	r3, [sp, #56]	@ 0x38
 8009488:	f8d8 3000 	ldr.w	r3, [r8]
 800948c:	9009      	str	r0, [sp, #36]	@ 0x24
 800948e:	3307      	adds	r3, #7
 8009490:	f023 0307 	bic.w	r3, r3, #7
 8009494:	f103 0208 	add.w	r2, r3, #8
 8009498:	f894 a018 	ldrb.w	sl, [r4, #24]
 800949c:	f8d4 b000 	ldr.w	fp, [r4]
 80094a0:	f8c8 2000 	str.w	r2, [r8]
 80094a4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80094a8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80094ac:	930b      	str	r3, [sp, #44]	@ 0x2c
 80094ae:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80094b2:	f04f 32ff 	mov.w	r2, #4294967295
 80094b6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80094ba:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80094be:	4b9c      	ldr	r3, [pc, #624]	@ (8009730 <_printf_float+0x2cc>)
 80094c0:	f7f7 fabc 	bl	8000a3c <__aeabi_dcmpun>
 80094c4:	bb70      	cbnz	r0, 8009524 <_printf_float+0xc0>
 80094c6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80094ca:	f04f 32ff 	mov.w	r2, #4294967295
 80094ce:	4b98      	ldr	r3, [pc, #608]	@ (8009730 <_printf_float+0x2cc>)
 80094d0:	f7f7 fa96 	bl	8000a00 <__aeabi_dcmple>
 80094d4:	bb30      	cbnz	r0, 8009524 <_printf_float+0xc0>
 80094d6:	2200      	movs	r2, #0
 80094d8:	2300      	movs	r3, #0
 80094da:	4640      	mov	r0, r8
 80094dc:	4649      	mov	r1, r9
 80094de:	f7f7 fa85 	bl	80009ec <__aeabi_dcmplt>
 80094e2:	b110      	cbz	r0, 80094ea <_printf_float+0x86>
 80094e4:	232d      	movs	r3, #45	@ 0x2d
 80094e6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80094ea:	4a92      	ldr	r2, [pc, #584]	@ (8009734 <_printf_float+0x2d0>)
 80094ec:	4b92      	ldr	r3, [pc, #584]	@ (8009738 <_printf_float+0x2d4>)
 80094ee:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80094f2:	bf94      	ite	ls
 80094f4:	4690      	movls	r8, r2
 80094f6:	4698      	movhi	r8, r3
 80094f8:	2303      	movs	r3, #3
 80094fa:	f04f 0900 	mov.w	r9, #0
 80094fe:	6123      	str	r3, [r4, #16]
 8009500:	f02b 0304 	bic.w	r3, fp, #4
 8009504:	6023      	str	r3, [r4, #0]
 8009506:	4633      	mov	r3, r6
 8009508:	4621      	mov	r1, r4
 800950a:	4628      	mov	r0, r5
 800950c:	9700      	str	r7, [sp, #0]
 800950e:	aa0f      	add	r2, sp, #60	@ 0x3c
 8009510:	f000 f9d4 	bl	80098bc <_printf_common>
 8009514:	3001      	adds	r0, #1
 8009516:	f040 8090 	bne.w	800963a <_printf_float+0x1d6>
 800951a:	f04f 30ff 	mov.w	r0, #4294967295
 800951e:	b011      	add	sp, #68	@ 0x44
 8009520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009524:	4642      	mov	r2, r8
 8009526:	464b      	mov	r3, r9
 8009528:	4640      	mov	r0, r8
 800952a:	4649      	mov	r1, r9
 800952c:	f7f7 fa86 	bl	8000a3c <__aeabi_dcmpun>
 8009530:	b148      	cbz	r0, 8009546 <_printf_float+0xe2>
 8009532:	464b      	mov	r3, r9
 8009534:	2b00      	cmp	r3, #0
 8009536:	bfb8      	it	lt
 8009538:	232d      	movlt	r3, #45	@ 0x2d
 800953a:	4a80      	ldr	r2, [pc, #512]	@ (800973c <_printf_float+0x2d8>)
 800953c:	bfb8      	it	lt
 800953e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8009542:	4b7f      	ldr	r3, [pc, #508]	@ (8009740 <_printf_float+0x2dc>)
 8009544:	e7d3      	b.n	80094ee <_printf_float+0x8a>
 8009546:	6863      	ldr	r3, [r4, #4]
 8009548:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 800954c:	1c5a      	adds	r2, r3, #1
 800954e:	d13f      	bne.n	80095d0 <_printf_float+0x16c>
 8009550:	2306      	movs	r3, #6
 8009552:	6063      	str	r3, [r4, #4]
 8009554:	2200      	movs	r2, #0
 8009556:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 800955a:	6023      	str	r3, [r4, #0]
 800955c:	9206      	str	r2, [sp, #24]
 800955e:	aa0e      	add	r2, sp, #56	@ 0x38
 8009560:	e9cd a204 	strd	sl, r2, [sp, #16]
 8009564:	aa0d      	add	r2, sp, #52	@ 0x34
 8009566:	9203      	str	r2, [sp, #12]
 8009568:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 800956c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8009570:	6863      	ldr	r3, [r4, #4]
 8009572:	4642      	mov	r2, r8
 8009574:	9300      	str	r3, [sp, #0]
 8009576:	4628      	mov	r0, r5
 8009578:	464b      	mov	r3, r9
 800957a:	910a      	str	r1, [sp, #40]	@ 0x28
 800957c:	f7ff fed4 	bl	8009328 <__cvt>
 8009580:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8009582:	4680      	mov	r8, r0
 8009584:	2947      	cmp	r1, #71	@ 0x47
 8009586:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8009588:	d128      	bne.n	80095dc <_printf_float+0x178>
 800958a:	1cc8      	adds	r0, r1, #3
 800958c:	db02      	blt.n	8009594 <_printf_float+0x130>
 800958e:	6863      	ldr	r3, [r4, #4]
 8009590:	4299      	cmp	r1, r3
 8009592:	dd40      	ble.n	8009616 <_printf_float+0x1b2>
 8009594:	f1aa 0a02 	sub.w	sl, sl, #2
 8009598:	fa5f fa8a 	uxtb.w	sl, sl
 800959c:	4652      	mov	r2, sl
 800959e:	3901      	subs	r1, #1
 80095a0:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80095a4:	910d      	str	r1, [sp, #52]	@ 0x34
 80095a6:	f7ff ff23 	bl	80093f0 <__exponent>
 80095aa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80095ac:	4681      	mov	r9, r0
 80095ae:	1813      	adds	r3, r2, r0
 80095b0:	2a01      	cmp	r2, #1
 80095b2:	6123      	str	r3, [r4, #16]
 80095b4:	dc02      	bgt.n	80095bc <_printf_float+0x158>
 80095b6:	6822      	ldr	r2, [r4, #0]
 80095b8:	07d2      	lsls	r2, r2, #31
 80095ba:	d501      	bpl.n	80095c0 <_printf_float+0x15c>
 80095bc:	3301      	adds	r3, #1
 80095be:	6123      	str	r3, [r4, #16]
 80095c0:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80095c4:	2b00      	cmp	r3, #0
 80095c6:	d09e      	beq.n	8009506 <_printf_float+0xa2>
 80095c8:	232d      	movs	r3, #45	@ 0x2d
 80095ca:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80095ce:	e79a      	b.n	8009506 <_printf_float+0xa2>
 80095d0:	2947      	cmp	r1, #71	@ 0x47
 80095d2:	d1bf      	bne.n	8009554 <_printf_float+0xf0>
 80095d4:	2b00      	cmp	r3, #0
 80095d6:	d1bd      	bne.n	8009554 <_printf_float+0xf0>
 80095d8:	2301      	movs	r3, #1
 80095da:	e7ba      	b.n	8009552 <_printf_float+0xee>
 80095dc:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80095e0:	d9dc      	bls.n	800959c <_printf_float+0x138>
 80095e2:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80095e6:	d118      	bne.n	800961a <_printf_float+0x1b6>
 80095e8:	2900      	cmp	r1, #0
 80095ea:	6863      	ldr	r3, [r4, #4]
 80095ec:	dd0b      	ble.n	8009606 <_printf_float+0x1a2>
 80095ee:	6121      	str	r1, [r4, #16]
 80095f0:	b913      	cbnz	r3, 80095f8 <_printf_float+0x194>
 80095f2:	6822      	ldr	r2, [r4, #0]
 80095f4:	07d0      	lsls	r0, r2, #31
 80095f6:	d502      	bpl.n	80095fe <_printf_float+0x19a>
 80095f8:	3301      	adds	r3, #1
 80095fa:	440b      	add	r3, r1
 80095fc:	6123      	str	r3, [r4, #16]
 80095fe:	f04f 0900 	mov.w	r9, #0
 8009602:	65a1      	str	r1, [r4, #88]	@ 0x58
 8009604:	e7dc      	b.n	80095c0 <_printf_float+0x15c>
 8009606:	b913      	cbnz	r3, 800960e <_printf_float+0x1aa>
 8009608:	6822      	ldr	r2, [r4, #0]
 800960a:	07d2      	lsls	r2, r2, #31
 800960c:	d501      	bpl.n	8009612 <_printf_float+0x1ae>
 800960e:	3302      	adds	r3, #2
 8009610:	e7f4      	b.n	80095fc <_printf_float+0x198>
 8009612:	2301      	movs	r3, #1
 8009614:	e7f2      	b.n	80095fc <_printf_float+0x198>
 8009616:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800961a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800961c:	4299      	cmp	r1, r3
 800961e:	db05      	blt.n	800962c <_printf_float+0x1c8>
 8009620:	6823      	ldr	r3, [r4, #0]
 8009622:	6121      	str	r1, [r4, #16]
 8009624:	07d8      	lsls	r0, r3, #31
 8009626:	d5ea      	bpl.n	80095fe <_printf_float+0x19a>
 8009628:	1c4b      	adds	r3, r1, #1
 800962a:	e7e7      	b.n	80095fc <_printf_float+0x198>
 800962c:	2900      	cmp	r1, #0
 800962e:	bfcc      	ite	gt
 8009630:	2201      	movgt	r2, #1
 8009632:	f1c1 0202 	rsble	r2, r1, #2
 8009636:	4413      	add	r3, r2
 8009638:	e7e0      	b.n	80095fc <_printf_float+0x198>
 800963a:	6823      	ldr	r3, [r4, #0]
 800963c:	055a      	lsls	r2, r3, #21
 800963e:	d407      	bmi.n	8009650 <_printf_float+0x1ec>
 8009640:	6923      	ldr	r3, [r4, #16]
 8009642:	4642      	mov	r2, r8
 8009644:	4631      	mov	r1, r6
 8009646:	4628      	mov	r0, r5
 8009648:	47b8      	blx	r7
 800964a:	3001      	adds	r0, #1
 800964c:	d12b      	bne.n	80096a6 <_printf_float+0x242>
 800964e:	e764      	b.n	800951a <_printf_float+0xb6>
 8009650:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8009654:	f240 80dc 	bls.w	8009810 <_printf_float+0x3ac>
 8009658:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800965c:	2200      	movs	r2, #0
 800965e:	2300      	movs	r3, #0
 8009660:	f7f7 f9ba 	bl	80009d8 <__aeabi_dcmpeq>
 8009664:	2800      	cmp	r0, #0
 8009666:	d033      	beq.n	80096d0 <_printf_float+0x26c>
 8009668:	2301      	movs	r3, #1
 800966a:	4631      	mov	r1, r6
 800966c:	4628      	mov	r0, r5
 800966e:	4a35      	ldr	r2, [pc, #212]	@ (8009744 <_printf_float+0x2e0>)
 8009670:	47b8      	blx	r7
 8009672:	3001      	adds	r0, #1
 8009674:	f43f af51 	beq.w	800951a <_printf_float+0xb6>
 8009678:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 800967c:	4543      	cmp	r3, r8
 800967e:	db02      	blt.n	8009686 <_printf_float+0x222>
 8009680:	6823      	ldr	r3, [r4, #0]
 8009682:	07d8      	lsls	r0, r3, #31
 8009684:	d50f      	bpl.n	80096a6 <_printf_float+0x242>
 8009686:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800968a:	4631      	mov	r1, r6
 800968c:	4628      	mov	r0, r5
 800968e:	47b8      	blx	r7
 8009690:	3001      	adds	r0, #1
 8009692:	f43f af42 	beq.w	800951a <_printf_float+0xb6>
 8009696:	f04f 0900 	mov.w	r9, #0
 800969a:	f108 38ff 	add.w	r8, r8, #4294967295
 800969e:	f104 0a1a 	add.w	sl, r4, #26
 80096a2:	45c8      	cmp	r8, r9
 80096a4:	dc09      	bgt.n	80096ba <_printf_float+0x256>
 80096a6:	6823      	ldr	r3, [r4, #0]
 80096a8:	079b      	lsls	r3, r3, #30
 80096aa:	f100 8102 	bmi.w	80098b2 <_printf_float+0x44e>
 80096ae:	68e0      	ldr	r0, [r4, #12]
 80096b0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80096b2:	4298      	cmp	r0, r3
 80096b4:	bfb8      	it	lt
 80096b6:	4618      	movlt	r0, r3
 80096b8:	e731      	b.n	800951e <_printf_float+0xba>
 80096ba:	2301      	movs	r3, #1
 80096bc:	4652      	mov	r2, sl
 80096be:	4631      	mov	r1, r6
 80096c0:	4628      	mov	r0, r5
 80096c2:	47b8      	blx	r7
 80096c4:	3001      	adds	r0, #1
 80096c6:	f43f af28 	beq.w	800951a <_printf_float+0xb6>
 80096ca:	f109 0901 	add.w	r9, r9, #1
 80096ce:	e7e8      	b.n	80096a2 <_printf_float+0x23e>
 80096d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80096d2:	2b00      	cmp	r3, #0
 80096d4:	dc38      	bgt.n	8009748 <_printf_float+0x2e4>
 80096d6:	2301      	movs	r3, #1
 80096d8:	4631      	mov	r1, r6
 80096da:	4628      	mov	r0, r5
 80096dc:	4a19      	ldr	r2, [pc, #100]	@ (8009744 <_printf_float+0x2e0>)
 80096de:	47b8      	blx	r7
 80096e0:	3001      	adds	r0, #1
 80096e2:	f43f af1a 	beq.w	800951a <_printf_float+0xb6>
 80096e6:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 80096ea:	ea59 0303 	orrs.w	r3, r9, r3
 80096ee:	d102      	bne.n	80096f6 <_printf_float+0x292>
 80096f0:	6823      	ldr	r3, [r4, #0]
 80096f2:	07d9      	lsls	r1, r3, #31
 80096f4:	d5d7      	bpl.n	80096a6 <_printf_float+0x242>
 80096f6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80096fa:	4631      	mov	r1, r6
 80096fc:	4628      	mov	r0, r5
 80096fe:	47b8      	blx	r7
 8009700:	3001      	adds	r0, #1
 8009702:	f43f af0a 	beq.w	800951a <_printf_float+0xb6>
 8009706:	f04f 0a00 	mov.w	sl, #0
 800970a:	f104 0b1a 	add.w	fp, r4, #26
 800970e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009710:	425b      	negs	r3, r3
 8009712:	4553      	cmp	r3, sl
 8009714:	dc01      	bgt.n	800971a <_printf_float+0x2b6>
 8009716:	464b      	mov	r3, r9
 8009718:	e793      	b.n	8009642 <_printf_float+0x1de>
 800971a:	2301      	movs	r3, #1
 800971c:	465a      	mov	r2, fp
 800971e:	4631      	mov	r1, r6
 8009720:	4628      	mov	r0, r5
 8009722:	47b8      	blx	r7
 8009724:	3001      	adds	r0, #1
 8009726:	f43f aef8 	beq.w	800951a <_printf_float+0xb6>
 800972a:	f10a 0a01 	add.w	sl, sl, #1
 800972e:	e7ee      	b.n	800970e <_printf_float+0x2aa>
 8009730:	7fefffff 	.word	0x7fefffff
 8009734:	0800dc53 	.word	0x0800dc53
 8009738:	0800dc57 	.word	0x0800dc57
 800973c:	0800dc5b 	.word	0x0800dc5b
 8009740:	0800dc5f 	.word	0x0800dc5f
 8009744:	0800dc63 	.word	0x0800dc63
 8009748:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800974a:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 800974e:	4553      	cmp	r3, sl
 8009750:	bfa8      	it	ge
 8009752:	4653      	movge	r3, sl
 8009754:	2b00      	cmp	r3, #0
 8009756:	4699      	mov	r9, r3
 8009758:	dc36      	bgt.n	80097c8 <_printf_float+0x364>
 800975a:	f04f 0b00 	mov.w	fp, #0
 800975e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009762:	f104 021a 	add.w	r2, r4, #26
 8009766:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8009768:	930a      	str	r3, [sp, #40]	@ 0x28
 800976a:	eba3 0309 	sub.w	r3, r3, r9
 800976e:	455b      	cmp	r3, fp
 8009770:	dc31      	bgt.n	80097d6 <_printf_float+0x372>
 8009772:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009774:	459a      	cmp	sl, r3
 8009776:	dc3a      	bgt.n	80097ee <_printf_float+0x38a>
 8009778:	6823      	ldr	r3, [r4, #0]
 800977a:	07da      	lsls	r2, r3, #31
 800977c:	d437      	bmi.n	80097ee <_printf_float+0x38a>
 800977e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009780:	ebaa 0903 	sub.w	r9, sl, r3
 8009784:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009786:	ebaa 0303 	sub.w	r3, sl, r3
 800978a:	4599      	cmp	r9, r3
 800978c:	bfa8      	it	ge
 800978e:	4699      	movge	r9, r3
 8009790:	f1b9 0f00 	cmp.w	r9, #0
 8009794:	dc33      	bgt.n	80097fe <_printf_float+0x39a>
 8009796:	f04f 0800 	mov.w	r8, #0
 800979a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800979e:	f104 0b1a 	add.w	fp, r4, #26
 80097a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80097a4:	ebaa 0303 	sub.w	r3, sl, r3
 80097a8:	eba3 0309 	sub.w	r3, r3, r9
 80097ac:	4543      	cmp	r3, r8
 80097ae:	f77f af7a 	ble.w	80096a6 <_printf_float+0x242>
 80097b2:	2301      	movs	r3, #1
 80097b4:	465a      	mov	r2, fp
 80097b6:	4631      	mov	r1, r6
 80097b8:	4628      	mov	r0, r5
 80097ba:	47b8      	blx	r7
 80097bc:	3001      	adds	r0, #1
 80097be:	f43f aeac 	beq.w	800951a <_printf_float+0xb6>
 80097c2:	f108 0801 	add.w	r8, r8, #1
 80097c6:	e7ec      	b.n	80097a2 <_printf_float+0x33e>
 80097c8:	4642      	mov	r2, r8
 80097ca:	4631      	mov	r1, r6
 80097cc:	4628      	mov	r0, r5
 80097ce:	47b8      	blx	r7
 80097d0:	3001      	adds	r0, #1
 80097d2:	d1c2      	bne.n	800975a <_printf_float+0x2f6>
 80097d4:	e6a1      	b.n	800951a <_printf_float+0xb6>
 80097d6:	2301      	movs	r3, #1
 80097d8:	4631      	mov	r1, r6
 80097da:	4628      	mov	r0, r5
 80097dc:	920a      	str	r2, [sp, #40]	@ 0x28
 80097de:	47b8      	blx	r7
 80097e0:	3001      	adds	r0, #1
 80097e2:	f43f ae9a 	beq.w	800951a <_printf_float+0xb6>
 80097e6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80097e8:	f10b 0b01 	add.w	fp, fp, #1
 80097ec:	e7bb      	b.n	8009766 <_printf_float+0x302>
 80097ee:	4631      	mov	r1, r6
 80097f0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80097f4:	4628      	mov	r0, r5
 80097f6:	47b8      	blx	r7
 80097f8:	3001      	adds	r0, #1
 80097fa:	d1c0      	bne.n	800977e <_printf_float+0x31a>
 80097fc:	e68d      	b.n	800951a <_printf_float+0xb6>
 80097fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009800:	464b      	mov	r3, r9
 8009802:	4631      	mov	r1, r6
 8009804:	4628      	mov	r0, r5
 8009806:	4442      	add	r2, r8
 8009808:	47b8      	blx	r7
 800980a:	3001      	adds	r0, #1
 800980c:	d1c3      	bne.n	8009796 <_printf_float+0x332>
 800980e:	e684      	b.n	800951a <_printf_float+0xb6>
 8009810:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8009814:	f1ba 0f01 	cmp.w	sl, #1
 8009818:	dc01      	bgt.n	800981e <_printf_float+0x3ba>
 800981a:	07db      	lsls	r3, r3, #31
 800981c:	d536      	bpl.n	800988c <_printf_float+0x428>
 800981e:	2301      	movs	r3, #1
 8009820:	4642      	mov	r2, r8
 8009822:	4631      	mov	r1, r6
 8009824:	4628      	mov	r0, r5
 8009826:	47b8      	blx	r7
 8009828:	3001      	adds	r0, #1
 800982a:	f43f ae76 	beq.w	800951a <_printf_float+0xb6>
 800982e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8009832:	4631      	mov	r1, r6
 8009834:	4628      	mov	r0, r5
 8009836:	47b8      	blx	r7
 8009838:	3001      	adds	r0, #1
 800983a:	f43f ae6e 	beq.w	800951a <_printf_float+0xb6>
 800983e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8009842:	2200      	movs	r2, #0
 8009844:	2300      	movs	r3, #0
 8009846:	f10a 3aff 	add.w	sl, sl, #4294967295
 800984a:	f7f7 f8c5 	bl	80009d8 <__aeabi_dcmpeq>
 800984e:	b9c0      	cbnz	r0, 8009882 <_printf_float+0x41e>
 8009850:	4653      	mov	r3, sl
 8009852:	f108 0201 	add.w	r2, r8, #1
 8009856:	4631      	mov	r1, r6
 8009858:	4628      	mov	r0, r5
 800985a:	47b8      	blx	r7
 800985c:	3001      	adds	r0, #1
 800985e:	d10c      	bne.n	800987a <_printf_float+0x416>
 8009860:	e65b      	b.n	800951a <_printf_float+0xb6>
 8009862:	2301      	movs	r3, #1
 8009864:	465a      	mov	r2, fp
 8009866:	4631      	mov	r1, r6
 8009868:	4628      	mov	r0, r5
 800986a:	47b8      	blx	r7
 800986c:	3001      	adds	r0, #1
 800986e:	f43f ae54 	beq.w	800951a <_printf_float+0xb6>
 8009872:	f108 0801 	add.w	r8, r8, #1
 8009876:	45d0      	cmp	r8, sl
 8009878:	dbf3      	blt.n	8009862 <_printf_float+0x3fe>
 800987a:	464b      	mov	r3, r9
 800987c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8009880:	e6e0      	b.n	8009644 <_printf_float+0x1e0>
 8009882:	f04f 0800 	mov.w	r8, #0
 8009886:	f104 0b1a 	add.w	fp, r4, #26
 800988a:	e7f4      	b.n	8009876 <_printf_float+0x412>
 800988c:	2301      	movs	r3, #1
 800988e:	4642      	mov	r2, r8
 8009890:	e7e1      	b.n	8009856 <_printf_float+0x3f2>
 8009892:	2301      	movs	r3, #1
 8009894:	464a      	mov	r2, r9
 8009896:	4631      	mov	r1, r6
 8009898:	4628      	mov	r0, r5
 800989a:	47b8      	blx	r7
 800989c:	3001      	adds	r0, #1
 800989e:	f43f ae3c 	beq.w	800951a <_printf_float+0xb6>
 80098a2:	f108 0801 	add.w	r8, r8, #1
 80098a6:	68e3      	ldr	r3, [r4, #12]
 80098a8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80098aa:	1a5b      	subs	r3, r3, r1
 80098ac:	4543      	cmp	r3, r8
 80098ae:	dcf0      	bgt.n	8009892 <_printf_float+0x42e>
 80098b0:	e6fd      	b.n	80096ae <_printf_float+0x24a>
 80098b2:	f04f 0800 	mov.w	r8, #0
 80098b6:	f104 0919 	add.w	r9, r4, #25
 80098ba:	e7f4      	b.n	80098a6 <_printf_float+0x442>

080098bc <_printf_common>:
 80098bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098c0:	4616      	mov	r6, r2
 80098c2:	4698      	mov	r8, r3
 80098c4:	688a      	ldr	r2, [r1, #8]
 80098c6:	690b      	ldr	r3, [r1, #16]
 80098c8:	4607      	mov	r7, r0
 80098ca:	4293      	cmp	r3, r2
 80098cc:	bfb8      	it	lt
 80098ce:	4613      	movlt	r3, r2
 80098d0:	6033      	str	r3, [r6, #0]
 80098d2:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80098d6:	460c      	mov	r4, r1
 80098d8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80098dc:	b10a      	cbz	r2, 80098e2 <_printf_common+0x26>
 80098de:	3301      	adds	r3, #1
 80098e0:	6033      	str	r3, [r6, #0]
 80098e2:	6823      	ldr	r3, [r4, #0]
 80098e4:	0699      	lsls	r1, r3, #26
 80098e6:	bf42      	ittt	mi
 80098e8:	6833      	ldrmi	r3, [r6, #0]
 80098ea:	3302      	addmi	r3, #2
 80098ec:	6033      	strmi	r3, [r6, #0]
 80098ee:	6825      	ldr	r5, [r4, #0]
 80098f0:	f015 0506 	ands.w	r5, r5, #6
 80098f4:	d106      	bne.n	8009904 <_printf_common+0x48>
 80098f6:	f104 0a19 	add.w	sl, r4, #25
 80098fa:	68e3      	ldr	r3, [r4, #12]
 80098fc:	6832      	ldr	r2, [r6, #0]
 80098fe:	1a9b      	subs	r3, r3, r2
 8009900:	42ab      	cmp	r3, r5
 8009902:	dc2b      	bgt.n	800995c <_printf_common+0xa0>
 8009904:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8009908:	6822      	ldr	r2, [r4, #0]
 800990a:	3b00      	subs	r3, #0
 800990c:	bf18      	it	ne
 800990e:	2301      	movne	r3, #1
 8009910:	0692      	lsls	r2, r2, #26
 8009912:	d430      	bmi.n	8009976 <_printf_common+0xba>
 8009914:	4641      	mov	r1, r8
 8009916:	4638      	mov	r0, r7
 8009918:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800991c:	47c8      	blx	r9
 800991e:	3001      	adds	r0, #1
 8009920:	d023      	beq.n	800996a <_printf_common+0xae>
 8009922:	6823      	ldr	r3, [r4, #0]
 8009924:	6922      	ldr	r2, [r4, #16]
 8009926:	f003 0306 	and.w	r3, r3, #6
 800992a:	2b04      	cmp	r3, #4
 800992c:	bf14      	ite	ne
 800992e:	2500      	movne	r5, #0
 8009930:	6833      	ldreq	r3, [r6, #0]
 8009932:	f04f 0600 	mov.w	r6, #0
 8009936:	bf08      	it	eq
 8009938:	68e5      	ldreq	r5, [r4, #12]
 800993a:	f104 041a 	add.w	r4, r4, #26
 800993e:	bf08      	it	eq
 8009940:	1aed      	subeq	r5, r5, r3
 8009942:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8009946:	bf08      	it	eq
 8009948:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800994c:	4293      	cmp	r3, r2
 800994e:	bfc4      	itt	gt
 8009950:	1a9b      	subgt	r3, r3, r2
 8009952:	18ed      	addgt	r5, r5, r3
 8009954:	42b5      	cmp	r5, r6
 8009956:	d11a      	bne.n	800998e <_printf_common+0xd2>
 8009958:	2000      	movs	r0, #0
 800995a:	e008      	b.n	800996e <_printf_common+0xb2>
 800995c:	2301      	movs	r3, #1
 800995e:	4652      	mov	r2, sl
 8009960:	4641      	mov	r1, r8
 8009962:	4638      	mov	r0, r7
 8009964:	47c8      	blx	r9
 8009966:	3001      	adds	r0, #1
 8009968:	d103      	bne.n	8009972 <_printf_common+0xb6>
 800996a:	f04f 30ff 	mov.w	r0, #4294967295
 800996e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009972:	3501      	adds	r5, #1
 8009974:	e7c1      	b.n	80098fa <_printf_common+0x3e>
 8009976:	2030      	movs	r0, #48	@ 0x30
 8009978:	18e1      	adds	r1, r4, r3
 800997a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800997e:	1c5a      	adds	r2, r3, #1
 8009980:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8009984:	4422      	add	r2, r4
 8009986:	3302      	adds	r3, #2
 8009988:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800998c:	e7c2      	b.n	8009914 <_printf_common+0x58>
 800998e:	2301      	movs	r3, #1
 8009990:	4622      	mov	r2, r4
 8009992:	4641      	mov	r1, r8
 8009994:	4638      	mov	r0, r7
 8009996:	47c8      	blx	r9
 8009998:	3001      	adds	r0, #1
 800999a:	d0e6      	beq.n	800996a <_printf_common+0xae>
 800999c:	3601      	adds	r6, #1
 800999e:	e7d9      	b.n	8009954 <_printf_common+0x98>

080099a0 <_printf_i>:
 80099a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80099a4:	7e0f      	ldrb	r7, [r1, #24]
 80099a6:	4691      	mov	r9, r2
 80099a8:	2f78      	cmp	r7, #120	@ 0x78
 80099aa:	4680      	mov	r8, r0
 80099ac:	460c      	mov	r4, r1
 80099ae:	469a      	mov	sl, r3
 80099b0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80099b2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80099b6:	d807      	bhi.n	80099c8 <_printf_i+0x28>
 80099b8:	2f62      	cmp	r7, #98	@ 0x62
 80099ba:	d80a      	bhi.n	80099d2 <_printf_i+0x32>
 80099bc:	2f00      	cmp	r7, #0
 80099be:	f000 80d3 	beq.w	8009b68 <_printf_i+0x1c8>
 80099c2:	2f58      	cmp	r7, #88	@ 0x58
 80099c4:	f000 80ba 	beq.w	8009b3c <_printf_i+0x19c>
 80099c8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80099cc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80099d0:	e03a      	b.n	8009a48 <_printf_i+0xa8>
 80099d2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80099d6:	2b15      	cmp	r3, #21
 80099d8:	d8f6      	bhi.n	80099c8 <_printf_i+0x28>
 80099da:	a101      	add	r1, pc, #4	@ (adr r1, 80099e0 <_printf_i+0x40>)
 80099dc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80099e0:	08009a39 	.word	0x08009a39
 80099e4:	08009a4d 	.word	0x08009a4d
 80099e8:	080099c9 	.word	0x080099c9
 80099ec:	080099c9 	.word	0x080099c9
 80099f0:	080099c9 	.word	0x080099c9
 80099f4:	080099c9 	.word	0x080099c9
 80099f8:	08009a4d 	.word	0x08009a4d
 80099fc:	080099c9 	.word	0x080099c9
 8009a00:	080099c9 	.word	0x080099c9
 8009a04:	080099c9 	.word	0x080099c9
 8009a08:	080099c9 	.word	0x080099c9
 8009a0c:	08009b4f 	.word	0x08009b4f
 8009a10:	08009a77 	.word	0x08009a77
 8009a14:	08009b09 	.word	0x08009b09
 8009a18:	080099c9 	.word	0x080099c9
 8009a1c:	080099c9 	.word	0x080099c9
 8009a20:	08009b71 	.word	0x08009b71
 8009a24:	080099c9 	.word	0x080099c9
 8009a28:	08009a77 	.word	0x08009a77
 8009a2c:	080099c9 	.word	0x080099c9
 8009a30:	080099c9 	.word	0x080099c9
 8009a34:	08009b11 	.word	0x08009b11
 8009a38:	6833      	ldr	r3, [r6, #0]
 8009a3a:	1d1a      	adds	r2, r3, #4
 8009a3c:	681b      	ldr	r3, [r3, #0]
 8009a3e:	6032      	str	r2, [r6, #0]
 8009a40:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8009a44:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8009a48:	2301      	movs	r3, #1
 8009a4a:	e09e      	b.n	8009b8a <_printf_i+0x1ea>
 8009a4c:	6833      	ldr	r3, [r6, #0]
 8009a4e:	6820      	ldr	r0, [r4, #0]
 8009a50:	1d19      	adds	r1, r3, #4
 8009a52:	6031      	str	r1, [r6, #0]
 8009a54:	0606      	lsls	r6, r0, #24
 8009a56:	d501      	bpl.n	8009a5c <_printf_i+0xbc>
 8009a58:	681d      	ldr	r5, [r3, #0]
 8009a5a:	e003      	b.n	8009a64 <_printf_i+0xc4>
 8009a5c:	0645      	lsls	r5, r0, #25
 8009a5e:	d5fb      	bpl.n	8009a58 <_printf_i+0xb8>
 8009a60:	f9b3 5000 	ldrsh.w	r5, [r3]
 8009a64:	2d00      	cmp	r5, #0
 8009a66:	da03      	bge.n	8009a70 <_printf_i+0xd0>
 8009a68:	232d      	movs	r3, #45	@ 0x2d
 8009a6a:	426d      	negs	r5, r5
 8009a6c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009a70:	230a      	movs	r3, #10
 8009a72:	4859      	ldr	r0, [pc, #356]	@ (8009bd8 <_printf_i+0x238>)
 8009a74:	e011      	b.n	8009a9a <_printf_i+0xfa>
 8009a76:	6821      	ldr	r1, [r4, #0]
 8009a78:	6833      	ldr	r3, [r6, #0]
 8009a7a:	0608      	lsls	r0, r1, #24
 8009a7c:	f853 5b04 	ldr.w	r5, [r3], #4
 8009a80:	d402      	bmi.n	8009a88 <_printf_i+0xe8>
 8009a82:	0649      	lsls	r1, r1, #25
 8009a84:	bf48      	it	mi
 8009a86:	b2ad      	uxthmi	r5, r5
 8009a88:	2f6f      	cmp	r7, #111	@ 0x6f
 8009a8a:	6033      	str	r3, [r6, #0]
 8009a8c:	bf14      	ite	ne
 8009a8e:	230a      	movne	r3, #10
 8009a90:	2308      	moveq	r3, #8
 8009a92:	4851      	ldr	r0, [pc, #324]	@ (8009bd8 <_printf_i+0x238>)
 8009a94:	2100      	movs	r1, #0
 8009a96:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8009a9a:	6866      	ldr	r6, [r4, #4]
 8009a9c:	2e00      	cmp	r6, #0
 8009a9e:	bfa8      	it	ge
 8009aa0:	6821      	ldrge	r1, [r4, #0]
 8009aa2:	60a6      	str	r6, [r4, #8]
 8009aa4:	bfa4      	itt	ge
 8009aa6:	f021 0104 	bicge.w	r1, r1, #4
 8009aaa:	6021      	strge	r1, [r4, #0]
 8009aac:	b90d      	cbnz	r5, 8009ab2 <_printf_i+0x112>
 8009aae:	2e00      	cmp	r6, #0
 8009ab0:	d04b      	beq.n	8009b4a <_printf_i+0x1aa>
 8009ab2:	4616      	mov	r6, r2
 8009ab4:	fbb5 f1f3 	udiv	r1, r5, r3
 8009ab8:	fb03 5711 	mls	r7, r3, r1, r5
 8009abc:	5dc7      	ldrb	r7, [r0, r7]
 8009abe:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8009ac2:	462f      	mov	r7, r5
 8009ac4:	42bb      	cmp	r3, r7
 8009ac6:	460d      	mov	r5, r1
 8009ac8:	d9f4      	bls.n	8009ab4 <_printf_i+0x114>
 8009aca:	2b08      	cmp	r3, #8
 8009acc:	d10b      	bne.n	8009ae6 <_printf_i+0x146>
 8009ace:	6823      	ldr	r3, [r4, #0]
 8009ad0:	07df      	lsls	r7, r3, #31
 8009ad2:	d508      	bpl.n	8009ae6 <_printf_i+0x146>
 8009ad4:	6923      	ldr	r3, [r4, #16]
 8009ad6:	6861      	ldr	r1, [r4, #4]
 8009ad8:	4299      	cmp	r1, r3
 8009ada:	bfde      	ittt	le
 8009adc:	2330      	movle	r3, #48	@ 0x30
 8009ade:	f806 3c01 	strble.w	r3, [r6, #-1]
 8009ae2:	f106 36ff 	addle.w	r6, r6, #4294967295
 8009ae6:	1b92      	subs	r2, r2, r6
 8009ae8:	6122      	str	r2, [r4, #16]
 8009aea:	464b      	mov	r3, r9
 8009aec:	4621      	mov	r1, r4
 8009aee:	4640      	mov	r0, r8
 8009af0:	f8cd a000 	str.w	sl, [sp]
 8009af4:	aa03      	add	r2, sp, #12
 8009af6:	f7ff fee1 	bl	80098bc <_printf_common>
 8009afa:	3001      	adds	r0, #1
 8009afc:	d14a      	bne.n	8009b94 <_printf_i+0x1f4>
 8009afe:	f04f 30ff 	mov.w	r0, #4294967295
 8009b02:	b004      	add	sp, #16
 8009b04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b08:	6823      	ldr	r3, [r4, #0]
 8009b0a:	f043 0320 	orr.w	r3, r3, #32
 8009b0e:	6023      	str	r3, [r4, #0]
 8009b10:	2778      	movs	r7, #120	@ 0x78
 8009b12:	4832      	ldr	r0, [pc, #200]	@ (8009bdc <_printf_i+0x23c>)
 8009b14:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8009b18:	6823      	ldr	r3, [r4, #0]
 8009b1a:	6831      	ldr	r1, [r6, #0]
 8009b1c:	061f      	lsls	r7, r3, #24
 8009b1e:	f851 5b04 	ldr.w	r5, [r1], #4
 8009b22:	d402      	bmi.n	8009b2a <_printf_i+0x18a>
 8009b24:	065f      	lsls	r7, r3, #25
 8009b26:	bf48      	it	mi
 8009b28:	b2ad      	uxthmi	r5, r5
 8009b2a:	6031      	str	r1, [r6, #0]
 8009b2c:	07d9      	lsls	r1, r3, #31
 8009b2e:	bf44      	itt	mi
 8009b30:	f043 0320 	orrmi.w	r3, r3, #32
 8009b34:	6023      	strmi	r3, [r4, #0]
 8009b36:	b11d      	cbz	r5, 8009b40 <_printf_i+0x1a0>
 8009b38:	2310      	movs	r3, #16
 8009b3a:	e7ab      	b.n	8009a94 <_printf_i+0xf4>
 8009b3c:	4826      	ldr	r0, [pc, #152]	@ (8009bd8 <_printf_i+0x238>)
 8009b3e:	e7e9      	b.n	8009b14 <_printf_i+0x174>
 8009b40:	6823      	ldr	r3, [r4, #0]
 8009b42:	f023 0320 	bic.w	r3, r3, #32
 8009b46:	6023      	str	r3, [r4, #0]
 8009b48:	e7f6      	b.n	8009b38 <_printf_i+0x198>
 8009b4a:	4616      	mov	r6, r2
 8009b4c:	e7bd      	b.n	8009aca <_printf_i+0x12a>
 8009b4e:	6833      	ldr	r3, [r6, #0]
 8009b50:	6825      	ldr	r5, [r4, #0]
 8009b52:	1d18      	adds	r0, r3, #4
 8009b54:	6961      	ldr	r1, [r4, #20]
 8009b56:	6030      	str	r0, [r6, #0]
 8009b58:	062e      	lsls	r6, r5, #24
 8009b5a:	681b      	ldr	r3, [r3, #0]
 8009b5c:	d501      	bpl.n	8009b62 <_printf_i+0x1c2>
 8009b5e:	6019      	str	r1, [r3, #0]
 8009b60:	e002      	b.n	8009b68 <_printf_i+0x1c8>
 8009b62:	0668      	lsls	r0, r5, #25
 8009b64:	d5fb      	bpl.n	8009b5e <_printf_i+0x1be>
 8009b66:	8019      	strh	r1, [r3, #0]
 8009b68:	2300      	movs	r3, #0
 8009b6a:	4616      	mov	r6, r2
 8009b6c:	6123      	str	r3, [r4, #16]
 8009b6e:	e7bc      	b.n	8009aea <_printf_i+0x14a>
 8009b70:	6833      	ldr	r3, [r6, #0]
 8009b72:	2100      	movs	r1, #0
 8009b74:	1d1a      	adds	r2, r3, #4
 8009b76:	6032      	str	r2, [r6, #0]
 8009b78:	681e      	ldr	r6, [r3, #0]
 8009b7a:	6862      	ldr	r2, [r4, #4]
 8009b7c:	4630      	mov	r0, r6
 8009b7e:	f000 fcd6 	bl	800a52e <memchr>
 8009b82:	b108      	cbz	r0, 8009b88 <_printf_i+0x1e8>
 8009b84:	1b80      	subs	r0, r0, r6
 8009b86:	6060      	str	r0, [r4, #4]
 8009b88:	6863      	ldr	r3, [r4, #4]
 8009b8a:	6123      	str	r3, [r4, #16]
 8009b8c:	2300      	movs	r3, #0
 8009b8e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009b92:	e7aa      	b.n	8009aea <_printf_i+0x14a>
 8009b94:	4632      	mov	r2, r6
 8009b96:	4649      	mov	r1, r9
 8009b98:	4640      	mov	r0, r8
 8009b9a:	6923      	ldr	r3, [r4, #16]
 8009b9c:	47d0      	blx	sl
 8009b9e:	3001      	adds	r0, #1
 8009ba0:	d0ad      	beq.n	8009afe <_printf_i+0x15e>
 8009ba2:	6823      	ldr	r3, [r4, #0]
 8009ba4:	079b      	lsls	r3, r3, #30
 8009ba6:	d413      	bmi.n	8009bd0 <_printf_i+0x230>
 8009ba8:	68e0      	ldr	r0, [r4, #12]
 8009baa:	9b03      	ldr	r3, [sp, #12]
 8009bac:	4298      	cmp	r0, r3
 8009bae:	bfb8      	it	lt
 8009bb0:	4618      	movlt	r0, r3
 8009bb2:	e7a6      	b.n	8009b02 <_printf_i+0x162>
 8009bb4:	2301      	movs	r3, #1
 8009bb6:	4632      	mov	r2, r6
 8009bb8:	4649      	mov	r1, r9
 8009bba:	4640      	mov	r0, r8
 8009bbc:	47d0      	blx	sl
 8009bbe:	3001      	adds	r0, #1
 8009bc0:	d09d      	beq.n	8009afe <_printf_i+0x15e>
 8009bc2:	3501      	adds	r5, #1
 8009bc4:	68e3      	ldr	r3, [r4, #12]
 8009bc6:	9903      	ldr	r1, [sp, #12]
 8009bc8:	1a5b      	subs	r3, r3, r1
 8009bca:	42ab      	cmp	r3, r5
 8009bcc:	dcf2      	bgt.n	8009bb4 <_printf_i+0x214>
 8009bce:	e7eb      	b.n	8009ba8 <_printf_i+0x208>
 8009bd0:	2500      	movs	r5, #0
 8009bd2:	f104 0619 	add.w	r6, r4, #25
 8009bd6:	e7f5      	b.n	8009bc4 <_printf_i+0x224>
 8009bd8:	0800dc65 	.word	0x0800dc65
 8009bdc:	0800dc76 	.word	0x0800dc76

08009be0 <_scanf_float>:
 8009be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009be4:	b087      	sub	sp, #28
 8009be6:	9303      	str	r3, [sp, #12]
 8009be8:	688b      	ldr	r3, [r1, #8]
 8009bea:	4617      	mov	r7, r2
 8009bec:	1e5a      	subs	r2, r3, #1
 8009bee:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8009bf2:	bf82      	ittt	hi
 8009bf4:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8009bf8:	eb03 0b05 	addhi.w	fp, r3, r5
 8009bfc:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8009c00:	460a      	mov	r2, r1
 8009c02:	f04f 0500 	mov.w	r5, #0
 8009c06:	bf88      	it	hi
 8009c08:	608b      	strhi	r3, [r1, #8]
 8009c0a:	680b      	ldr	r3, [r1, #0]
 8009c0c:	4680      	mov	r8, r0
 8009c0e:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8009c12:	f842 3b1c 	str.w	r3, [r2], #28
 8009c16:	460c      	mov	r4, r1
 8009c18:	bf98      	it	ls
 8009c1a:	f04f 0b00 	movls.w	fp, #0
 8009c1e:	4616      	mov	r6, r2
 8009c20:	46aa      	mov	sl, r5
 8009c22:	46a9      	mov	r9, r5
 8009c24:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8009c28:	9201      	str	r2, [sp, #4]
 8009c2a:	9502      	str	r5, [sp, #8]
 8009c2c:	68a2      	ldr	r2, [r4, #8]
 8009c2e:	b152      	cbz	r2, 8009c46 <_scanf_float+0x66>
 8009c30:	683b      	ldr	r3, [r7, #0]
 8009c32:	781b      	ldrb	r3, [r3, #0]
 8009c34:	2b4e      	cmp	r3, #78	@ 0x4e
 8009c36:	d865      	bhi.n	8009d04 <_scanf_float+0x124>
 8009c38:	2b40      	cmp	r3, #64	@ 0x40
 8009c3a:	d83d      	bhi.n	8009cb8 <_scanf_float+0xd8>
 8009c3c:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8009c40:	b2c8      	uxtb	r0, r1
 8009c42:	280e      	cmp	r0, #14
 8009c44:	d93b      	bls.n	8009cbe <_scanf_float+0xde>
 8009c46:	f1b9 0f00 	cmp.w	r9, #0
 8009c4a:	d003      	beq.n	8009c54 <_scanf_float+0x74>
 8009c4c:	6823      	ldr	r3, [r4, #0]
 8009c4e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8009c52:	6023      	str	r3, [r4, #0]
 8009c54:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009c58:	f1ba 0f01 	cmp.w	sl, #1
 8009c5c:	f200 8118 	bhi.w	8009e90 <_scanf_float+0x2b0>
 8009c60:	9b01      	ldr	r3, [sp, #4]
 8009c62:	429e      	cmp	r6, r3
 8009c64:	f200 8109 	bhi.w	8009e7a <_scanf_float+0x29a>
 8009c68:	2001      	movs	r0, #1
 8009c6a:	b007      	add	sp, #28
 8009c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c70:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8009c74:	2a0d      	cmp	r2, #13
 8009c76:	d8e6      	bhi.n	8009c46 <_scanf_float+0x66>
 8009c78:	a101      	add	r1, pc, #4	@ (adr r1, 8009c80 <_scanf_float+0xa0>)
 8009c7a:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009c7e:	bf00      	nop
 8009c80:	08009dc7 	.word	0x08009dc7
 8009c84:	08009c47 	.word	0x08009c47
 8009c88:	08009c47 	.word	0x08009c47
 8009c8c:	08009c47 	.word	0x08009c47
 8009c90:	08009e27 	.word	0x08009e27
 8009c94:	08009dff 	.word	0x08009dff
 8009c98:	08009c47 	.word	0x08009c47
 8009c9c:	08009c47 	.word	0x08009c47
 8009ca0:	08009dd5 	.word	0x08009dd5
 8009ca4:	08009c47 	.word	0x08009c47
 8009ca8:	08009c47 	.word	0x08009c47
 8009cac:	08009c47 	.word	0x08009c47
 8009cb0:	08009c47 	.word	0x08009c47
 8009cb4:	08009d8d 	.word	0x08009d8d
 8009cb8:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8009cbc:	e7da      	b.n	8009c74 <_scanf_float+0x94>
 8009cbe:	290e      	cmp	r1, #14
 8009cc0:	d8c1      	bhi.n	8009c46 <_scanf_float+0x66>
 8009cc2:	a001      	add	r0, pc, #4	@ (adr r0, 8009cc8 <_scanf_float+0xe8>)
 8009cc4:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8009cc8:	08009d7d 	.word	0x08009d7d
 8009ccc:	08009c47 	.word	0x08009c47
 8009cd0:	08009d7d 	.word	0x08009d7d
 8009cd4:	08009e13 	.word	0x08009e13
 8009cd8:	08009c47 	.word	0x08009c47
 8009cdc:	08009d25 	.word	0x08009d25
 8009ce0:	08009d63 	.word	0x08009d63
 8009ce4:	08009d63 	.word	0x08009d63
 8009ce8:	08009d63 	.word	0x08009d63
 8009cec:	08009d63 	.word	0x08009d63
 8009cf0:	08009d63 	.word	0x08009d63
 8009cf4:	08009d63 	.word	0x08009d63
 8009cf8:	08009d63 	.word	0x08009d63
 8009cfc:	08009d63 	.word	0x08009d63
 8009d00:	08009d63 	.word	0x08009d63
 8009d04:	2b6e      	cmp	r3, #110	@ 0x6e
 8009d06:	d809      	bhi.n	8009d1c <_scanf_float+0x13c>
 8009d08:	2b60      	cmp	r3, #96	@ 0x60
 8009d0a:	d8b1      	bhi.n	8009c70 <_scanf_float+0x90>
 8009d0c:	2b54      	cmp	r3, #84	@ 0x54
 8009d0e:	d07b      	beq.n	8009e08 <_scanf_float+0x228>
 8009d10:	2b59      	cmp	r3, #89	@ 0x59
 8009d12:	d198      	bne.n	8009c46 <_scanf_float+0x66>
 8009d14:	2d07      	cmp	r5, #7
 8009d16:	d196      	bne.n	8009c46 <_scanf_float+0x66>
 8009d18:	2508      	movs	r5, #8
 8009d1a:	e02c      	b.n	8009d76 <_scanf_float+0x196>
 8009d1c:	2b74      	cmp	r3, #116	@ 0x74
 8009d1e:	d073      	beq.n	8009e08 <_scanf_float+0x228>
 8009d20:	2b79      	cmp	r3, #121	@ 0x79
 8009d22:	e7f6      	b.n	8009d12 <_scanf_float+0x132>
 8009d24:	6821      	ldr	r1, [r4, #0]
 8009d26:	05c8      	lsls	r0, r1, #23
 8009d28:	d51b      	bpl.n	8009d62 <_scanf_float+0x182>
 8009d2a:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8009d2e:	6021      	str	r1, [r4, #0]
 8009d30:	f109 0901 	add.w	r9, r9, #1
 8009d34:	f1bb 0f00 	cmp.w	fp, #0
 8009d38:	d003      	beq.n	8009d42 <_scanf_float+0x162>
 8009d3a:	3201      	adds	r2, #1
 8009d3c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009d40:	60a2      	str	r2, [r4, #8]
 8009d42:	68a3      	ldr	r3, [r4, #8]
 8009d44:	3b01      	subs	r3, #1
 8009d46:	60a3      	str	r3, [r4, #8]
 8009d48:	6923      	ldr	r3, [r4, #16]
 8009d4a:	3301      	adds	r3, #1
 8009d4c:	6123      	str	r3, [r4, #16]
 8009d4e:	687b      	ldr	r3, [r7, #4]
 8009d50:	3b01      	subs	r3, #1
 8009d52:	2b00      	cmp	r3, #0
 8009d54:	607b      	str	r3, [r7, #4]
 8009d56:	f340 8087 	ble.w	8009e68 <_scanf_float+0x288>
 8009d5a:	683b      	ldr	r3, [r7, #0]
 8009d5c:	3301      	adds	r3, #1
 8009d5e:	603b      	str	r3, [r7, #0]
 8009d60:	e764      	b.n	8009c2c <_scanf_float+0x4c>
 8009d62:	eb1a 0105 	adds.w	r1, sl, r5
 8009d66:	f47f af6e 	bne.w	8009c46 <_scanf_float+0x66>
 8009d6a:	460d      	mov	r5, r1
 8009d6c:	468a      	mov	sl, r1
 8009d6e:	6822      	ldr	r2, [r4, #0]
 8009d70:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8009d74:	6022      	str	r2, [r4, #0]
 8009d76:	f806 3b01 	strb.w	r3, [r6], #1
 8009d7a:	e7e2      	b.n	8009d42 <_scanf_float+0x162>
 8009d7c:	6822      	ldr	r2, [r4, #0]
 8009d7e:	0610      	lsls	r0, r2, #24
 8009d80:	f57f af61 	bpl.w	8009c46 <_scanf_float+0x66>
 8009d84:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8009d88:	6022      	str	r2, [r4, #0]
 8009d8a:	e7f4      	b.n	8009d76 <_scanf_float+0x196>
 8009d8c:	f1ba 0f00 	cmp.w	sl, #0
 8009d90:	d10e      	bne.n	8009db0 <_scanf_float+0x1d0>
 8009d92:	f1b9 0f00 	cmp.w	r9, #0
 8009d96:	d10e      	bne.n	8009db6 <_scanf_float+0x1d6>
 8009d98:	6822      	ldr	r2, [r4, #0]
 8009d9a:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8009d9e:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009da2:	d108      	bne.n	8009db6 <_scanf_float+0x1d6>
 8009da4:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8009da8:	f04f 0a01 	mov.w	sl, #1
 8009dac:	6022      	str	r2, [r4, #0]
 8009dae:	e7e2      	b.n	8009d76 <_scanf_float+0x196>
 8009db0:	f1ba 0f02 	cmp.w	sl, #2
 8009db4:	d055      	beq.n	8009e62 <_scanf_float+0x282>
 8009db6:	2d01      	cmp	r5, #1
 8009db8:	d002      	beq.n	8009dc0 <_scanf_float+0x1e0>
 8009dba:	2d04      	cmp	r5, #4
 8009dbc:	f47f af43 	bne.w	8009c46 <_scanf_float+0x66>
 8009dc0:	3501      	adds	r5, #1
 8009dc2:	b2ed      	uxtb	r5, r5
 8009dc4:	e7d7      	b.n	8009d76 <_scanf_float+0x196>
 8009dc6:	f1ba 0f01 	cmp.w	sl, #1
 8009dca:	f47f af3c 	bne.w	8009c46 <_scanf_float+0x66>
 8009dce:	f04f 0a02 	mov.w	sl, #2
 8009dd2:	e7d0      	b.n	8009d76 <_scanf_float+0x196>
 8009dd4:	b97d      	cbnz	r5, 8009df6 <_scanf_float+0x216>
 8009dd6:	f1b9 0f00 	cmp.w	r9, #0
 8009dda:	f47f af37 	bne.w	8009c4c <_scanf_float+0x6c>
 8009dde:	6822      	ldr	r2, [r4, #0]
 8009de0:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8009de4:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8009de8:	f040 8103 	bne.w	8009ff2 <_scanf_float+0x412>
 8009dec:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8009df0:	2501      	movs	r5, #1
 8009df2:	6022      	str	r2, [r4, #0]
 8009df4:	e7bf      	b.n	8009d76 <_scanf_float+0x196>
 8009df6:	2d03      	cmp	r5, #3
 8009df8:	d0e2      	beq.n	8009dc0 <_scanf_float+0x1e0>
 8009dfa:	2d05      	cmp	r5, #5
 8009dfc:	e7de      	b.n	8009dbc <_scanf_float+0x1dc>
 8009dfe:	2d02      	cmp	r5, #2
 8009e00:	f47f af21 	bne.w	8009c46 <_scanf_float+0x66>
 8009e04:	2503      	movs	r5, #3
 8009e06:	e7b6      	b.n	8009d76 <_scanf_float+0x196>
 8009e08:	2d06      	cmp	r5, #6
 8009e0a:	f47f af1c 	bne.w	8009c46 <_scanf_float+0x66>
 8009e0e:	2507      	movs	r5, #7
 8009e10:	e7b1      	b.n	8009d76 <_scanf_float+0x196>
 8009e12:	6822      	ldr	r2, [r4, #0]
 8009e14:	0591      	lsls	r1, r2, #22
 8009e16:	f57f af16 	bpl.w	8009c46 <_scanf_float+0x66>
 8009e1a:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8009e1e:	6022      	str	r2, [r4, #0]
 8009e20:	f8cd 9008 	str.w	r9, [sp, #8]
 8009e24:	e7a7      	b.n	8009d76 <_scanf_float+0x196>
 8009e26:	6822      	ldr	r2, [r4, #0]
 8009e28:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8009e2c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8009e30:	d006      	beq.n	8009e40 <_scanf_float+0x260>
 8009e32:	0550      	lsls	r0, r2, #21
 8009e34:	f57f af07 	bpl.w	8009c46 <_scanf_float+0x66>
 8009e38:	f1b9 0f00 	cmp.w	r9, #0
 8009e3c:	f000 80d9 	beq.w	8009ff2 <_scanf_float+0x412>
 8009e40:	0591      	lsls	r1, r2, #22
 8009e42:	bf58      	it	pl
 8009e44:	9902      	ldrpl	r1, [sp, #8]
 8009e46:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8009e4a:	bf58      	it	pl
 8009e4c:	eba9 0101 	subpl.w	r1, r9, r1
 8009e50:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8009e54:	f04f 0900 	mov.w	r9, #0
 8009e58:	bf58      	it	pl
 8009e5a:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8009e5e:	6022      	str	r2, [r4, #0]
 8009e60:	e789      	b.n	8009d76 <_scanf_float+0x196>
 8009e62:	f04f 0a03 	mov.w	sl, #3
 8009e66:	e786      	b.n	8009d76 <_scanf_float+0x196>
 8009e68:	4639      	mov	r1, r7
 8009e6a:	4640      	mov	r0, r8
 8009e6c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8009e70:	4798      	blx	r3
 8009e72:	2800      	cmp	r0, #0
 8009e74:	f43f aeda 	beq.w	8009c2c <_scanf_float+0x4c>
 8009e78:	e6e5      	b.n	8009c46 <_scanf_float+0x66>
 8009e7a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009e7e:	463a      	mov	r2, r7
 8009e80:	4640      	mov	r0, r8
 8009e82:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009e86:	4798      	blx	r3
 8009e88:	6923      	ldr	r3, [r4, #16]
 8009e8a:	3b01      	subs	r3, #1
 8009e8c:	6123      	str	r3, [r4, #16]
 8009e8e:	e6e7      	b.n	8009c60 <_scanf_float+0x80>
 8009e90:	1e6b      	subs	r3, r5, #1
 8009e92:	2b06      	cmp	r3, #6
 8009e94:	d824      	bhi.n	8009ee0 <_scanf_float+0x300>
 8009e96:	2d02      	cmp	r5, #2
 8009e98:	d836      	bhi.n	8009f08 <_scanf_float+0x328>
 8009e9a:	9b01      	ldr	r3, [sp, #4]
 8009e9c:	429e      	cmp	r6, r3
 8009e9e:	f67f aee3 	bls.w	8009c68 <_scanf_float+0x88>
 8009ea2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009ea6:	463a      	mov	r2, r7
 8009ea8:	4640      	mov	r0, r8
 8009eaa:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009eae:	4798      	blx	r3
 8009eb0:	6923      	ldr	r3, [r4, #16]
 8009eb2:	3b01      	subs	r3, #1
 8009eb4:	6123      	str	r3, [r4, #16]
 8009eb6:	e7f0      	b.n	8009e9a <_scanf_float+0x2ba>
 8009eb8:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009ebc:	463a      	mov	r2, r7
 8009ebe:	4640      	mov	r0, r8
 8009ec0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8009ec4:	4798      	blx	r3
 8009ec6:	6923      	ldr	r3, [r4, #16]
 8009ec8:	3b01      	subs	r3, #1
 8009eca:	6123      	str	r3, [r4, #16]
 8009ecc:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009ed0:	fa5f fa8a 	uxtb.w	sl, sl
 8009ed4:	f1ba 0f02 	cmp.w	sl, #2
 8009ed8:	d1ee      	bne.n	8009eb8 <_scanf_float+0x2d8>
 8009eda:	3d03      	subs	r5, #3
 8009edc:	b2ed      	uxtb	r5, r5
 8009ede:	1b76      	subs	r6, r6, r5
 8009ee0:	6823      	ldr	r3, [r4, #0]
 8009ee2:	05da      	lsls	r2, r3, #23
 8009ee4:	d530      	bpl.n	8009f48 <_scanf_float+0x368>
 8009ee6:	055b      	lsls	r3, r3, #21
 8009ee8:	d511      	bpl.n	8009f0e <_scanf_float+0x32e>
 8009eea:	9b01      	ldr	r3, [sp, #4]
 8009eec:	429e      	cmp	r6, r3
 8009eee:	f67f aebb 	bls.w	8009c68 <_scanf_float+0x88>
 8009ef2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009ef6:	463a      	mov	r2, r7
 8009ef8:	4640      	mov	r0, r8
 8009efa:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009efe:	4798      	blx	r3
 8009f00:	6923      	ldr	r3, [r4, #16]
 8009f02:	3b01      	subs	r3, #1
 8009f04:	6123      	str	r3, [r4, #16]
 8009f06:	e7f0      	b.n	8009eea <_scanf_float+0x30a>
 8009f08:	46aa      	mov	sl, r5
 8009f0a:	46b3      	mov	fp, r6
 8009f0c:	e7de      	b.n	8009ecc <_scanf_float+0x2ec>
 8009f0e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8009f12:	6923      	ldr	r3, [r4, #16]
 8009f14:	2965      	cmp	r1, #101	@ 0x65
 8009f16:	f103 33ff 	add.w	r3, r3, #4294967295
 8009f1a:	f106 35ff 	add.w	r5, r6, #4294967295
 8009f1e:	6123      	str	r3, [r4, #16]
 8009f20:	d00c      	beq.n	8009f3c <_scanf_float+0x35c>
 8009f22:	2945      	cmp	r1, #69	@ 0x45
 8009f24:	d00a      	beq.n	8009f3c <_scanf_float+0x35c>
 8009f26:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009f2a:	463a      	mov	r2, r7
 8009f2c:	4640      	mov	r0, r8
 8009f2e:	4798      	blx	r3
 8009f30:	6923      	ldr	r3, [r4, #16]
 8009f32:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8009f36:	3b01      	subs	r3, #1
 8009f38:	1eb5      	subs	r5, r6, #2
 8009f3a:	6123      	str	r3, [r4, #16]
 8009f3c:	463a      	mov	r2, r7
 8009f3e:	4640      	mov	r0, r8
 8009f40:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8009f44:	4798      	blx	r3
 8009f46:	462e      	mov	r6, r5
 8009f48:	6822      	ldr	r2, [r4, #0]
 8009f4a:	f012 0210 	ands.w	r2, r2, #16
 8009f4e:	d001      	beq.n	8009f54 <_scanf_float+0x374>
 8009f50:	2000      	movs	r0, #0
 8009f52:	e68a      	b.n	8009c6a <_scanf_float+0x8a>
 8009f54:	7032      	strb	r2, [r6, #0]
 8009f56:	6823      	ldr	r3, [r4, #0]
 8009f58:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8009f5c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8009f60:	d11c      	bne.n	8009f9c <_scanf_float+0x3bc>
 8009f62:	9b02      	ldr	r3, [sp, #8]
 8009f64:	454b      	cmp	r3, r9
 8009f66:	eba3 0209 	sub.w	r2, r3, r9
 8009f6a:	d123      	bne.n	8009fb4 <_scanf_float+0x3d4>
 8009f6c:	2200      	movs	r2, #0
 8009f6e:	4640      	mov	r0, r8
 8009f70:	9901      	ldr	r1, [sp, #4]
 8009f72:	f002 fd0d 	bl	800c990 <_strtod_r>
 8009f76:	9b03      	ldr	r3, [sp, #12]
 8009f78:	6825      	ldr	r5, [r4, #0]
 8009f7a:	681b      	ldr	r3, [r3, #0]
 8009f7c:	f015 0f02 	tst.w	r5, #2
 8009f80:	4606      	mov	r6, r0
 8009f82:	460f      	mov	r7, r1
 8009f84:	f103 0204 	add.w	r2, r3, #4
 8009f88:	d01f      	beq.n	8009fca <_scanf_float+0x3ea>
 8009f8a:	9903      	ldr	r1, [sp, #12]
 8009f8c:	600a      	str	r2, [r1, #0]
 8009f8e:	681b      	ldr	r3, [r3, #0]
 8009f90:	e9c3 6700 	strd	r6, r7, [r3]
 8009f94:	68e3      	ldr	r3, [r4, #12]
 8009f96:	3301      	adds	r3, #1
 8009f98:	60e3      	str	r3, [r4, #12]
 8009f9a:	e7d9      	b.n	8009f50 <_scanf_float+0x370>
 8009f9c:	9b04      	ldr	r3, [sp, #16]
 8009f9e:	2b00      	cmp	r3, #0
 8009fa0:	d0e4      	beq.n	8009f6c <_scanf_float+0x38c>
 8009fa2:	9905      	ldr	r1, [sp, #20]
 8009fa4:	230a      	movs	r3, #10
 8009fa6:	4640      	mov	r0, r8
 8009fa8:	3101      	adds	r1, #1
 8009faa:	f002 fd71 	bl	800ca90 <_strtol_r>
 8009fae:	9b04      	ldr	r3, [sp, #16]
 8009fb0:	9e05      	ldr	r6, [sp, #20]
 8009fb2:	1ac2      	subs	r2, r0, r3
 8009fb4:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8009fb8:	429e      	cmp	r6, r3
 8009fba:	bf28      	it	cs
 8009fbc:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8009fc0:	4630      	mov	r0, r6
 8009fc2:	490d      	ldr	r1, [pc, #52]	@ (8009ff8 <_scanf_float+0x418>)
 8009fc4:	f000 f93c 	bl	800a240 <siprintf>
 8009fc8:	e7d0      	b.n	8009f6c <_scanf_float+0x38c>
 8009fca:	076d      	lsls	r5, r5, #29
 8009fcc:	d4dd      	bmi.n	8009f8a <_scanf_float+0x3aa>
 8009fce:	9d03      	ldr	r5, [sp, #12]
 8009fd0:	602a      	str	r2, [r5, #0]
 8009fd2:	681d      	ldr	r5, [r3, #0]
 8009fd4:	4602      	mov	r2, r0
 8009fd6:	460b      	mov	r3, r1
 8009fd8:	f7f6 fd30 	bl	8000a3c <__aeabi_dcmpun>
 8009fdc:	b120      	cbz	r0, 8009fe8 <_scanf_float+0x408>
 8009fde:	4807      	ldr	r0, [pc, #28]	@ (8009ffc <_scanf_float+0x41c>)
 8009fe0:	f000 fac2 	bl	800a568 <nanf>
 8009fe4:	6028      	str	r0, [r5, #0]
 8009fe6:	e7d5      	b.n	8009f94 <_scanf_float+0x3b4>
 8009fe8:	4630      	mov	r0, r6
 8009fea:	4639      	mov	r1, r7
 8009fec:	f7f6 fd84 	bl	8000af8 <__aeabi_d2f>
 8009ff0:	e7f8      	b.n	8009fe4 <_scanf_float+0x404>
 8009ff2:	f04f 0900 	mov.w	r9, #0
 8009ff6:	e62d      	b.n	8009c54 <_scanf_float+0x74>
 8009ff8:	0800dc87 	.word	0x0800dc87
 8009ffc:	0800dcc7 	.word	0x0800dcc7

0800a000 <std>:
 800a000:	2300      	movs	r3, #0
 800a002:	b510      	push	{r4, lr}
 800a004:	4604      	mov	r4, r0
 800a006:	e9c0 3300 	strd	r3, r3, [r0]
 800a00a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800a00e:	6083      	str	r3, [r0, #8]
 800a010:	8181      	strh	r1, [r0, #12]
 800a012:	6643      	str	r3, [r0, #100]	@ 0x64
 800a014:	81c2      	strh	r2, [r0, #14]
 800a016:	6183      	str	r3, [r0, #24]
 800a018:	4619      	mov	r1, r3
 800a01a:	2208      	movs	r2, #8
 800a01c:	305c      	adds	r0, #92	@ 0x5c
 800a01e:	f000 fa07 	bl	800a430 <memset>
 800a022:	4b0d      	ldr	r3, [pc, #52]	@ (800a058 <std+0x58>)
 800a024:	6224      	str	r4, [r4, #32]
 800a026:	6263      	str	r3, [r4, #36]	@ 0x24
 800a028:	4b0c      	ldr	r3, [pc, #48]	@ (800a05c <std+0x5c>)
 800a02a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800a02c:	4b0c      	ldr	r3, [pc, #48]	@ (800a060 <std+0x60>)
 800a02e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800a030:	4b0c      	ldr	r3, [pc, #48]	@ (800a064 <std+0x64>)
 800a032:	6323      	str	r3, [r4, #48]	@ 0x30
 800a034:	4b0c      	ldr	r3, [pc, #48]	@ (800a068 <std+0x68>)
 800a036:	429c      	cmp	r4, r3
 800a038:	d006      	beq.n	800a048 <std+0x48>
 800a03a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800a03e:	4294      	cmp	r4, r2
 800a040:	d002      	beq.n	800a048 <std+0x48>
 800a042:	33d0      	adds	r3, #208	@ 0xd0
 800a044:	429c      	cmp	r4, r3
 800a046:	d105      	bne.n	800a054 <std+0x54>
 800a048:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800a04c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a050:	f000 ba6a 	b.w	800a528 <__retarget_lock_init_recursive>
 800a054:	bd10      	pop	{r4, pc}
 800a056:	bf00      	nop
 800a058:	0800a281 	.word	0x0800a281
 800a05c:	0800a2a3 	.word	0x0800a2a3
 800a060:	0800a2db 	.word	0x0800a2db
 800a064:	0800a2ff 	.word	0x0800a2ff
 800a068:	200007cc 	.word	0x200007cc

0800a06c <stdio_exit_handler>:
 800a06c:	4a02      	ldr	r2, [pc, #8]	@ (800a078 <stdio_exit_handler+0xc>)
 800a06e:	4903      	ldr	r1, [pc, #12]	@ (800a07c <stdio_exit_handler+0x10>)
 800a070:	4803      	ldr	r0, [pc, #12]	@ (800a080 <stdio_exit_handler+0x14>)
 800a072:	f000 b869 	b.w	800a148 <_fwalk_sglue>
 800a076:	bf00      	nop
 800a078:	20000028 	.word	0x20000028
 800a07c:	0800ce45 	.word	0x0800ce45
 800a080:	20000038 	.word	0x20000038

0800a084 <cleanup_stdio>:
 800a084:	6841      	ldr	r1, [r0, #4]
 800a086:	4b0c      	ldr	r3, [pc, #48]	@ (800a0b8 <cleanup_stdio+0x34>)
 800a088:	b510      	push	{r4, lr}
 800a08a:	4299      	cmp	r1, r3
 800a08c:	4604      	mov	r4, r0
 800a08e:	d001      	beq.n	800a094 <cleanup_stdio+0x10>
 800a090:	f002 fed8 	bl	800ce44 <_fflush_r>
 800a094:	68a1      	ldr	r1, [r4, #8]
 800a096:	4b09      	ldr	r3, [pc, #36]	@ (800a0bc <cleanup_stdio+0x38>)
 800a098:	4299      	cmp	r1, r3
 800a09a:	d002      	beq.n	800a0a2 <cleanup_stdio+0x1e>
 800a09c:	4620      	mov	r0, r4
 800a09e:	f002 fed1 	bl	800ce44 <_fflush_r>
 800a0a2:	68e1      	ldr	r1, [r4, #12]
 800a0a4:	4b06      	ldr	r3, [pc, #24]	@ (800a0c0 <cleanup_stdio+0x3c>)
 800a0a6:	4299      	cmp	r1, r3
 800a0a8:	d004      	beq.n	800a0b4 <cleanup_stdio+0x30>
 800a0aa:	4620      	mov	r0, r4
 800a0ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a0b0:	f002 bec8 	b.w	800ce44 <_fflush_r>
 800a0b4:	bd10      	pop	{r4, pc}
 800a0b6:	bf00      	nop
 800a0b8:	200007cc 	.word	0x200007cc
 800a0bc:	20000834 	.word	0x20000834
 800a0c0:	2000089c 	.word	0x2000089c

0800a0c4 <global_stdio_init.part.0>:
 800a0c4:	b510      	push	{r4, lr}
 800a0c6:	4b0b      	ldr	r3, [pc, #44]	@ (800a0f4 <global_stdio_init.part.0+0x30>)
 800a0c8:	4c0b      	ldr	r4, [pc, #44]	@ (800a0f8 <global_stdio_init.part.0+0x34>)
 800a0ca:	4a0c      	ldr	r2, [pc, #48]	@ (800a0fc <global_stdio_init.part.0+0x38>)
 800a0cc:	4620      	mov	r0, r4
 800a0ce:	601a      	str	r2, [r3, #0]
 800a0d0:	2104      	movs	r1, #4
 800a0d2:	2200      	movs	r2, #0
 800a0d4:	f7ff ff94 	bl	800a000 <std>
 800a0d8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800a0dc:	2201      	movs	r2, #1
 800a0de:	2109      	movs	r1, #9
 800a0e0:	f7ff ff8e 	bl	800a000 <std>
 800a0e4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800a0e8:	2202      	movs	r2, #2
 800a0ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a0ee:	2112      	movs	r1, #18
 800a0f0:	f7ff bf86 	b.w	800a000 <std>
 800a0f4:	20000904 	.word	0x20000904
 800a0f8:	200007cc 	.word	0x200007cc
 800a0fc:	0800a06d 	.word	0x0800a06d

0800a100 <__sfp_lock_acquire>:
 800a100:	4801      	ldr	r0, [pc, #4]	@ (800a108 <__sfp_lock_acquire+0x8>)
 800a102:	f000 ba12 	b.w	800a52a <__retarget_lock_acquire_recursive>
 800a106:	bf00      	nop
 800a108:	2000090d 	.word	0x2000090d

0800a10c <__sfp_lock_release>:
 800a10c:	4801      	ldr	r0, [pc, #4]	@ (800a114 <__sfp_lock_release+0x8>)
 800a10e:	f000 ba0d 	b.w	800a52c <__retarget_lock_release_recursive>
 800a112:	bf00      	nop
 800a114:	2000090d 	.word	0x2000090d

0800a118 <__sinit>:
 800a118:	b510      	push	{r4, lr}
 800a11a:	4604      	mov	r4, r0
 800a11c:	f7ff fff0 	bl	800a100 <__sfp_lock_acquire>
 800a120:	6a23      	ldr	r3, [r4, #32]
 800a122:	b11b      	cbz	r3, 800a12c <__sinit+0x14>
 800a124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a128:	f7ff bff0 	b.w	800a10c <__sfp_lock_release>
 800a12c:	4b04      	ldr	r3, [pc, #16]	@ (800a140 <__sinit+0x28>)
 800a12e:	6223      	str	r3, [r4, #32]
 800a130:	4b04      	ldr	r3, [pc, #16]	@ (800a144 <__sinit+0x2c>)
 800a132:	681b      	ldr	r3, [r3, #0]
 800a134:	2b00      	cmp	r3, #0
 800a136:	d1f5      	bne.n	800a124 <__sinit+0xc>
 800a138:	f7ff ffc4 	bl	800a0c4 <global_stdio_init.part.0>
 800a13c:	e7f2      	b.n	800a124 <__sinit+0xc>
 800a13e:	bf00      	nop
 800a140:	0800a085 	.word	0x0800a085
 800a144:	20000904 	.word	0x20000904

0800a148 <_fwalk_sglue>:
 800a148:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a14c:	4607      	mov	r7, r0
 800a14e:	4688      	mov	r8, r1
 800a150:	4614      	mov	r4, r2
 800a152:	2600      	movs	r6, #0
 800a154:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800a158:	f1b9 0901 	subs.w	r9, r9, #1
 800a15c:	d505      	bpl.n	800a16a <_fwalk_sglue+0x22>
 800a15e:	6824      	ldr	r4, [r4, #0]
 800a160:	2c00      	cmp	r4, #0
 800a162:	d1f7      	bne.n	800a154 <_fwalk_sglue+0xc>
 800a164:	4630      	mov	r0, r6
 800a166:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a16a:	89ab      	ldrh	r3, [r5, #12]
 800a16c:	2b01      	cmp	r3, #1
 800a16e:	d907      	bls.n	800a180 <_fwalk_sglue+0x38>
 800a170:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800a174:	3301      	adds	r3, #1
 800a176:	d003      	beq.n	800a180 <_fwalk_sglue+0x38>
 800a178:	4629      	mov	r1, r5
 800a17a:	4638      	mov	r0, r7
 800a17c:	47c0      	blx	r8
 800a17e:	4306      	orrs	r6, r0
 800a180:	3568      	adds	r5, #104	@ 0x68
 800a182:	e7e9      	b.n	800a158 <_fwalk_sglue+0x10>

0800a184 <_puts_r>:
 800a184:	6a03      	ldr	r3, [r0, #32]
 800a186:	b570      	push	{r4, r5, r6, lr}
 800a188:	4605      	mov	r5, r0
 800a18a:	460e      	mov	r6, r1
 800a18c:	6884      	ldr	r4, [r0, #8]
 800a18e:	b90b      	cbnz	r3, 800a194 <_puts_r+0x10>
 800a190:	f7ff ffc2 	bl	800a118 <__sinit>
 800a194:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800a196:	07db      	lsls	r3, r3, #31
 800a198:	d405      	bmi.n	800a1a6 <_puts_r+0x22>
 800a19a:	89a3      	ldrh	r3, [r4, #12]
 800a19c:	0598      	lsls	r0, r3, #22
 800a19e:	d402      	bmi.n	800a1a6 <_puts_r+0x22>
 800a1a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a1a2:	f000 f9c2 	bl	800a52a <__retarget_lock_acquire_recursive>
 800a1a6:	89a3      	ldrh	r3, [r4, #12]
 800a1a8:	0719      	lsls	r1, r3, #28
 800a1aa:	d502      	bpl.n	800a1b2 <_puts_r+0x2e>
 800a1ac:	6923      	ldr	r3, [r4, #16]
 800a1ae:	2b00      	cmp	r3, #0
 800a1b0:	d135      	bne.n	800a21e <_puts_r+0x9a>
 800a1b2:	4621      	mov	r1, r4
 800a1b4:	4628      	mov	r0, r5
 800a1b6:	f000 f8e5 	bl	800a384 <__swsetup_r>
 800a1ba:	b380      	cbz	r0, 800a21e <_puts_r+0x9a>
 800a1bc:	f04f 35ff 	mov.w	r5, #4294967295
 800a1c0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800a1c2:	07da      	lsls	r2, r3, #31
 800a1c4:	d405      	bmi.n	800a1d2 <_puts_r+0x4e>
 800a1c6:	89a3      	ldrh	r3, [r4, #12]
 800a1c8:	059b      	lsls	r3, r3, #22
 800a1ca:	d402      	bmi.n	800a1d2 <_puts_r+0x4e>
 800a1cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800a1ce:	f000 f9ad 	bl	800a52c <__retarget_lock_release_recursive>
 800a1d2:	4628      	mov	r0, r5
 800a1d4:	bd70      	pop	{r4, r5, r6, pc}
 800a1d6:	2b00      	cmp	r3, #0
 800a1d8:	da04      	bge.n	800a1e4 <_puts_r+0x60>
 800a1da:	69a2      	ldr	r2, [r4, #24]
 800a1dc:	429a      	cmp	r2, r3
 800a1de:	dc17      	bgt.n	800a210 <_puts_r+0x8c>
 800a1e0:	290a      	cmp	r1, #10
 800a1e2:	d015      	beq.n	800a210 <_puts_r+0x8c>
 800a1e4:	6823      	ldr	r3, [r4, #0]
 800a1e6:	1c5a      	adds	r2, r3, #1
 800a1e8:	6022      	str	r2, [r4, #0]
 800a1ea:	7019      	strb	r1, [r3, #0]
 800a1ec:	68a3      	ldr	r3, [r4, #8]
 800a1ee:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800a1f2:	3b01      	subs	r3, #1
 800a1f4:	60a3      	str	r3, [r4, #8]
 800a1f6:	2900      	cmp	r1, #0
 800a1f8:	d1ed      	bne.n	800a1d6 <_puts_r+0x52>
 800a1fa:	2b00      	cmp	r3, #0
 800a1fc:	da11      	bge.n	800a222 <_puts_r+0x9e>
 800a1fe:	4622      	mov	r2, r4
 800a200:	210a      	movs	r1, #10
 800a202:	4628      	mov	r0, r5
 800a204:	f000 f87f 	bl	800a306 <__swbuf_r>
 800a208:	3001      	adds	r0, #1
 800a20a:	d0d7      	beq.n	800a1bc <_puts_r+0x38>
 800a20c:	250a      	movs	r5, #10
 800a20e:	e7d7      	b.n	800a1c0 <_puts_r+0x3c>
 800a210:	4622      	mov	r2, r4
 800a212:	4628      	mov	r0, r5
 800a214:	f000 f877 	bl	800a306 <__swbuf_r>
 800a218:	3001      	adds	r0, #1
 800a21a:	d1e7      	bne.n	800a1ec <_puts_r+0x68>
 800a21c:	e7ce      	b.n	800a1bc <_puts_r+0x38>
 800a21e:	3e01      	subs	r6, #1
 800a220:	e7e4      	b.n	800a1ec <_puts_r+0x68>
 800a222:	6823      	ldr	r3, [r4, #0]
 800a224:	1c5a      	adds	r2, r3, #1
 800a226:	6022      	str	r2, [r4, #0]
 800a228:	220a      	movs	r2, #10
 800a22a:	701a      	strb	r2, [r3, #0]
 800a22c:	e7ee      	b.n	800a20c <_puts_r+0x88>
	...

0800a230 <puts>:
 800a230:	4b02      	ldr	r3, [pc, #8]	@ (800a23c <puts+0xc>)
 800a232:	4601      	mov	r1, r0
 800a234:	6818      	ldr	r0, [r3, #0]
 800a236:	f7ff bfa5 	b.w	800a184 <_puts_r>
 800a23a:	bf00      	nop
 800a23c:	20000034 	.word	0x20000034

0800a240 <siprintf>:
 800a240:	b40e      	push	{r1, r2, r3}
 800a242:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800a246:	b500      	push	{lr}
 800a248:	b09c      	sub	sp, #112	@ 0x70
 800a24a:	ab1d      	add	r3, sp, #116	@ 0x74
 800a24c:	9002      	str	r0, [sp, #8]
 800a24e:	9006      	str	r0, [sp, #24]
 800a250:	9107      	str	r1, [sp, #28]
 800a252:	9104      	str	r1, [sp, #16]
 800a254:	4808      	ldr	r0, [pc, #32]	@ (800a278 <siprintf+0x38>)
 800a256:	4909      	ldr	r1, [pc, #36]	@ (800a27c <siprintf+0x3c>)
 800a258:	f853 2b04 	ldr.w	r2, [r3], #4
 800a25c:	9105      	str	r1, [sp, #20]
 800a25e:	6800      	ldr	r0, [r0, #0]
 800a260:	a902      	add	r1, sp, #8
 800a262:	9301      	str	r3, [sp, #4]
 800a264:	f002 fc72 	bl	800cb4c <_svfiprintf_r>
 800a268:	2200      	movs	r2, #0
 800a26a:	9b02      	ldr	r3, [sp, #8]
 800a26c:	701a      	strb	r2, [r3, #0]
 800a26e:	b01c      	add	sp, #112	@ 0x70
 800a270:	f85d eb04 	ldr.w	lr, [sp], #4
 800a274:	b003      	add	sp, #12
 800a276:	4770      	bx	lr
 800a278:	20000034 	.word	0x20000034
 800a27c:	ffff0208 	.word	0xffff0208

0800a280 <__sread>:
 800a280:	b510      	push	{r4, lr}
 800a282:	460c      	mov	r4, r1
 800a284:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a288:	f000 f900 	bl	800a48c <_read_r>
 800a28c:	2800      	cmp	r0, #0
 800a28e:	bfab      	itete	ge
 800a290:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800a292:	89a3      	ldrhlt	r3, [r4, #12]
 800a294:	181b      	addge	r3, r3, r0
 800a296:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800a29a:	bfac      	ite	ge
 800a29c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800a29e:	81a3      	strhlt	r3, [r4, #12]
 800a2a0:	bd10      	pop	{r4, pc}

0800a2a2 <__swrite>:
 800a2a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2a6:	461f      	mov	r7, r3
 800a2a8:	898b      	ldrh	r3, [r1, #12]
 800a2aa:	4605      	mov	r5, r0
 800a2ac:	05db      	lsls	r3, r3, #23
 800a2ae:	460c      	mov	r4, r1
 800a2b0:	4616      	mov	r6, r2
 800a2b2:	d505      	bpl.n	800a2c0 <__swrite+0x1e>
 800a2b4:	2302      	movs	r3, #2
 800a2b6:	2200      	movs	r2, #0
 800a2b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a2bc:	f000 f8d4 	bl	800a468 <_lseek_r>
 800a2c0:	89a3      	ldrh	r3, [r4, #12]
 800a2c2:	4632      	mov	r2, r6
 800a2c4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800a2c8:	81a3      	strh	r3, [r4, #12]
 800a2ca:	4628      	mov	r0, r5
 800a2cc:	463b      	mov	r3, r7
 800a2ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a2d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a2d6:	f000 b8eb 	b.w	800a4b0 <_write_r>

0800a2da <__sseek>:
 800a2da:	b510      	push	{r4, lr}
 800a2dc:	460c      	mov	r4, r1
 800a2de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a2e2:	f000 f8c1 	bl	800a468 <_lseek_r>
 800a2e6:	1c43      	adds	r3, r0, #1
 800a2e8:	89a3      	ldrh	r3, [r4, #12]
 800a2ea:	bf15      	itete	ne
 800a2ec:	6560      	strne	r0, [r4, #84]	@ 0x54
 800a2ee:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800a2f2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800a2f6:	81a3      	strheq	r3, [r4, #12]
 800a2f8:	bf18      	it	ne
 800a2fa:	81a3      	strhne	r3, [r4, #12]
 800a2fc:	bd10      	pop	{r4, pc}

0800a2fe <__sclose>:
 800a2fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a302:	f000 b8a1 	b.w	800a448 <_close_r>

0800a306 <__swbuf_r>:
 800a306:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a308:	460e      	mov	r6, r1
 800a30a:	4614      	mov	r4, r2
 800a30c:	4605      	mov	r5, r0
 800a30e:	b118      	cbz	r0, 800a318 <__swbuf_r+0x12>
 800a310:	6a03      	ldr	r3, [r0, #32]
 800a312:	b90b      	cbnz	r3, 800a318 <__swbuf_r+0x12>
 800a314:	f7ff ff00 	bl	800a118 <__sinit>
 800a318:	69a3      	ldr	r3, [r4, #24]
 800a31a:	60a3      	str	r3, [r4, #8]
 800a31c:	89a3      	ldrh	r3, [r4, #12]
 800a31e:	071a      	lsls	r2, r3, #28
 800a320:	d501      	bpl.n	800a326 <__swbuf_r+0x20>
 800a322:	6923      	ldr	r3, [r4, #16]
 800a324:	b943      	cbnz	r3, 800a338 <__swbuf_r+0x32>
 800a326:	4621      	mov	r1, r4
 800a328:	4628      	mov	r0, r5
 800a32a:	f000 f82b 	bl	800a384 <__swsetup_r>
 800a32e:	b118      	cbz	r0, 800a338 <__swbuf_r+0x32>
 800a330:	f04f 37ff 	mov.w	r7, #4294967295
 800a334:	4638      	mov	r0, r7
 800a336:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a338:	6823      	ldr	r3, [r4, #0]
 800a33a:	6922      	ldr	r2, [r4, #16]
 800a33c:	b2f6      	uxtb	r6, r6
 800a33e:	1a98      	subs	r0, r3, r2
 800a340:	6963      	ldr	r3, [r4, #20]
 800a342:	4637      	mov	r7, r6
 800a344:	4283      	cmp	r3, r0
 800a346:	dc05      	bgt.n	800a354 <__swbuf_r+0x4e>
 800a348:	4621      	mov	r1, r4
 800a34a:	4628      	mov	r0, r5
 800a34c:	f002 fd7a 	bl	800ce44 <_fflush_r>
 800a350:	2800      	cmp	r0, #0
 800a352:	d1ed      	bne.n	800a330 <__swbuf_r+0x2a>
 800a354:	68a3      	ldr	r3, [r4, #8]
 800a356:	3b01      	subs	r3, #1
 800a358:	60a3      	str	r3, [r4, #8]
 800a35a:	6823      	ldr	r3, [r4, #0]
 800a35c:	1c5a      	adds	r2, r3, #1
 800a35e:	6022      	str	r2, [r4, #0]
 800a360:	701e      	strb	r6, [r3, #0]
 800a362:	6962      	ldr	r2, [r4, #20]
 800a364:	1c43      	adds	r3, r0, #1
 800a366:	429a      	cmp	r2, r3
 800a368:	d004      	beq.n	800a374 <__swbuf_r+0x6e>
 800a36a:	89a3      	ldrh	r3, [r4, #12]
 800a36c:	07db      	lsls	r3, r3, #31
 800a36e:	d5e1      	bpl.n	800a334 <__swbuf_r+0x2e>
 800a370:	2e0a      	cmp	r6, #10
 800a372:	d1df      	bne.n	800a334 <__swbuf_r+0x2e>
 800a374:	4621      	mov	r1, r4
 800a376:	4628      	mov	r0, r5
 800a378:	f002 fd64 	bl	800ce44 <_fflush_r>
 800a37c:	2800      	cmp	r0, #0
 800a37e:	d0d9      	beq.n	800a334 <__swbuf_r+0x2e>
 800a380:	e7d6      	b.n	800a330 <__swbuf_r+0x2a>
	...

0800a384 <__swsetup_r>:
 800a384:	b538      	push	{r3, r4, r5, lr}
 800a386:	4b29      	ldr	r3, [pc, #164]	@ (800a42c <__swsetup_r+0xa8>)
 800a388:	4605      	mov	r5, r0
 800a38a:	6818      	ldr	r0, [r3, #0]
 800a38c:	460c      	mov	r4, r1
 800a38e:	b118      	cbz	r0, 800a398 <__swsetup_r+0x14>
 800a390:	6a03      	ldr	r3, [r0, #32]
 800a392:	b90b      	cbnz	r3, 800a398 <__swsetup_r+0x14>
 800a394:	f7ff fec0 	bl	800a118 <__sinit>
 800a398:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a39c:	0719      	lsls	r1, r3, #28
 800a39e:	d422      	bmi.n	800a3e6 <__swsetup_r+0x62>
 800a3a0:	06da      	lsls	r2, r3, #27
 800a3a2:	d407      	bmi.n	800a3b4 <__swsetup_r+0x30>
 800a3a4:	2209      	movs	r2, #9
 800a3a6:	602a      	str	r2, [r5, #0]
 800a3a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a3ac:	f04f 30ff 	mov.w	r0, #4294967295
 800a3b0:	81a3      	strh	r3, [r4, #12]
 800a3b2:	e033      	b.n	800a41c <__swsetup_r+0x98>
 800a3b4:	0758      	lsls	r0, r3, #29
 800a3b6:	d512      	bpl.n	800a3de <__swsetup_r+0x5a>
 800a3b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800a3ba:	b141      	cbz	r1, 800a3ce <__swsetup_r+0x4a>
 800a3bc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800a3c0:	4299      	cmp	r1, r3
 800a3c2:	d002      	beq.n	800a3ca <__swsetup_r+0x46>
 800a3c4:	4628      	mov	r0, r5
 800a3c6:	f000 ff43 	bl	800b250 <_free_r>
 800a3ca:	2300      	movs	r3, #0
 800a3cc:	6363      	str	r3, [r4, #52]	@ 0x34
 800a3ce:	89a3      	ldrh	r3, [r4, #12]
 800a3d0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800a3d4:	81a3      	strh	r3, [r4, #12]
 800a3d6:	2300      	movs	r3, #0
 800a3d8:	6063      	str	r3, [r4, #4]
 800a3da:	6923      	ldr	r3, [r4, #16]
 800a3dc:	6023      	str	r3, [r4, #0]
 800a3de:	89a3      	ldrh	r3, [r4, #12]
 800a3e0:	f043 0308 	orr.w	r3, r3, #8
 800a3e4:	81a3      	strh	r3, [r4, #12]
 800a3e6:	6923      	ldr	r3, [r4, #16]
 800a3e8:	b94b      	cbnz	r3, 800a3fe <__swsetup_r+0x7a>
 800a3ea:	89a3      	ldrh	r3, [r4, #12]
 800a3ec:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800a3f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a3f4:	d003      	beq.n	800a3fe <__swsetup_r+0x7a>
 800a3f6:	4621      	mov	r1, r4
 800a3f8:	4628      	mov	r0, r5
 800a3fa:	f002 fd82 	bl	800cf02 <__smakebuf_r>
 800a3fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a402:	f013 0201 	ands.w	r2, r3, #1
 800a406:	d00a      	beq.n	800a41e <__swsetup_r+0x9a>
 800a408:	2200      	movs	r2, #0
 800a40a:	60a2      	str	r2, [r4, #8]
 800a40c:	6962      	ldr	r2, [r4, #20]
 800a40e:	4252      	negs	r2, r2
 800a410:	61a2      	str	r2, [r4, #24]
 800a412:	6922      	ldr	r2, [r4, #16]
 800a414:	b942      	cbnz	r2, 800a428 <__swsetup_r+0xa4>
 800a416:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800a41a:	d1c5      	bne.n	800a3a8 <__swsetup_r+0x24>
 800a41c:	bd38      	pop	{r3, r4, r5, pc}
 800a41e:	0799      	lsls	r1, r3, #30
 800a420:	bf58      	it	pl
 800a422:	6962      	ldrpl	r2, [r4, #20]
 800a424:	60a2      	str	r2, [r4, #8]
 800a426:	e7f4      	b.n	800a412 <__swsetup_r+0x8e>
 800a428:	2000      	movs	r0, #0
 800a42a:	e7f7      	b.n	800a41c <__swsetup_r+0x98>
 800a42c:	20000034 	.word	0x20000034

0800a430 <memset>:
 800a430:	4603      	mov	r3, r0
 800a432:	4402      	add	r2, r0
 800a434:	4293      	cmp	r3, r2
 800a436:	d100      	bne.n	800a43a <memset+0xa>
 800a438:	4770      	bx	lr
 800a43a:	f803 1b01 	strb.w	r1, [r3], #1
 800a43e:	e7f9      	b.n	800a434 <memset+0x4>

0800a440 <_localeconv_r>:
 800a440:	4800      	ldr	r0, [pc, #0]	@ (800a444 <_localeconv_r+0x4>)
 800a442:	4770      	bx	lr
 800a444:	20000174 	.word	0x20000174

0800a448 <_close_r>:
 800a448:	b538      	push	{r3, r4, r5, lr}
 800a44a:	2300      	movs	r3, #0
 800a44c:	4d05      	ldr	r5, [pc, #20]	@ (800a464 <_close_r+0x1c>)
 800a44e:	4604      	mov	r4, r0
 800a450:	4608      	mov	r0, r1
 800a452:	602b      	str	r3, [r5, #0]
 800a454:	f7f9 fe8d 	bl	8004172 <_close>
 800a458:	1c43      	adds	r3, r0, #1
 800a45a:	d102      	bne.n	800a462 <_close_r+0x1a>
 800a45c:	682b      	ldr	r3, [r5, #0]
 800a45e:	b103      	cbz	r3, 800a462 <_close_r+0x1a>
 800a460:	6023      	str	r3, [r4, #0]
 800a462:	bd38      	pop	{r3, r4, r5, pc}
 800a464:	20000908 	.word	0x20000908

0800a468 <_lseek_r>:
 800a468:	b538      	push	{r3, r4, r5, lr}
 800a46a:	4604      	mov	r4, r0
 800a46c:	4608      	mov	r0, r1
 800a46e:	4611      	mov	r1, r2
 800a470:	2200      	movs	r2, #0
 800a472:	4d05      	ldr	r5, [pc, #20]	@ (800a488 <_lseek_r+0x20>)
 800a474:	602a      	str	r2, [r5, #0]
 800a476:	461a      	mov	r2, r3
 800a478:	f7f9 fe9f 	bl	80041ba <_lseek>
 800a47c:	1c43      	adds	r3, r0, #1
 800a47e:	d102      	bne.n	800a486 <_lseek_r+0x1e>
 800a480:	682b      	ldr	r3, [r5, #0]
 800a482:	b103      	cbz	r3, 800a486 <_lseek_r+0x1e>
 800a484:	6023      	str	r3, [r4, #0]
 800a486:	bd38      	pop	{r3, r4, r5, pc}
 800a488:	20000908 	.word	0x20000908

0800a48c <_read_r>:
 800a48c:	b538      	push	{r3, r4, r5, lr}
 800a48e:	4604      	mov	r4, r0
 800a490:	4608      	mov	r0, r1
 800a492:	4611      	mov	r1, r2
 800a494:	2200      	movs	r2, #0
 800a496:	4d05      	ldr	r5, [pc, #20]	@ (800a4ac <_read_r+0x20>)
 800a498:	602a      	str	r2, [r5, #0]
 800a49a:	461a      	mov	r2, r3
 800a49c:	f7f9 fe30 	bl	8004100 <_read>
 800a4a0:	1c43      	adds	r3, r0, #1
 800a4a2:	d102      	bne.n	800a4aa <_read_r+0x1e>
 800a4a4:	682b      	ldr	r3, [r5, #0]
 800a4a6:	b103      	cbz	r3, 800a4aa <_read_r+0x1e>
 800a4a8:	6023      	str	r3, [r4, #0]
 800a4aa:	bd38      	pop	{r3, r4, r5, pc}
 800a4ac:	20000908 	.word	0x20000908

0800a4b0 <_write_r>:
 800a4b0:	b538      	push	{r3, r4, r5, lr}
 800a4b2:	4604      	mov	r4, r0
 800a4b4:	4608      	mov	r0, r1
 800a4b6:	4611      	mov	r1, r2
 800a4b8:	2200      	movs	r2, #0
 800a4ba:	4d05      	ldr	r5, [pc, #20]	@ (800a4d0 <_write_r+0x20>)
 800a4bc:	602a      	str	r2, [r5, #0]
 800a4be:	461a      	mov	r2, r3
 800a4c0:	f7f9 fe3b 	bl	800413a <_write>
 800a4c4:	1c43      	adds	r3, r0, #1
 800a4c6:	d102      	bne.n	800a4ce <_write_r+0x1e>
 800a4c8:	682b      	ldr	r3, [r5, #0]
 800a4ca:	b103      	cbz	r3, 800a4ce <_write_r+0x1e>
 800a4cc:	6023      	str	r3, [r4, #0]
 800a4ce:	bd38      	pop	{r3, r4, r5, pc}
 800a4d0:	20000908 	.word	0x20000908

0800a4d4 <__errno>:
 800a4d4:	4b01      	ldr	r3, [pc, #4]	@ (800a4dc <__errno+0x8>)
 800a4d6:	6818      	ldr	r0, [r3, #0]
 800a4d8:	4770      	bx	lr
 800a4da:	bf00      	nop
 800a4dc:	20000034 	.word	0x20000034

0800a4e0 <__libc_init_array>:
 800a4e0:	b570      	push	{r4, r5, r6, lr}
 800a4e2:	2600      	movs	r6, #0
 800a4e4:	4d0c      	ldr	r5, [pc, #48]	@ (800a518 <__libc_init_array+0x38>)
 800a4e6:	4c0d      	ldr	r4, [pc, #52]	@ (800a51c <__libc_init_array+0x3c>)
 800a4e8:	1b64      	subs	r4, r4, r5
 800a4ea:	10a4      	asrs	r4, r4, #2
 800a4ec:	42a6      	cmp	r6, r4
 800a4ee:	d109      	bne.n	800a504 <__libc_init_array+0x24>
 800a4f0:	f003 fb06 	bl	800db00 <_init>
 800a4f4:	2600      	movs	r6, #0
 800a4f6:	4d0a      	ldr	r5, [pc, #40]	@ (800a520 <__libc_init_array+0x40>)
 800a4f8:	4c0a      	ldr	r4, [pc, #40]	@ (800a524 <__libc_init_array+0x44>)
 800a4fa:	1b64      	subs	r4, r4, r5
 800a4fc:	10a4      	asrs	r4, r4, #2
 800a4fe:	42a6      	cmp	r6, r4
 800a500:	d105      	bne.n	800a50e <__libc_init_array+0x2e>
 800a502:	bd70      	pop	{r4, r5, r6, pc}
 800a504:	f855 3b04 	ldr.w	r3, [r5], #4
 800a508:	4798      	blx	r3
 800a50a:	3601      	adds	r6, #1
 800a50c:	e7ee      	b.n	800a4ec <__libc_init_array+0xc>
 800a50e:	f855 3b04 	ldr.w	r3, [r5], #4
 800a512:	4798      	blx	r3
 800a514:	3601      	adds	r6, #1
 800a516:	e7f2      	b.n	800a4fe <__libc_init_array+0x1e>
 800a518:	0800e074 	.word	0x0800e074
 800a51c:	0800e074 	.word	0x0800e074
 800a520:	0800e074 	.word	0x0800e074
 800a524:	0800e078 	.word	0x0800e078

0800a528 <__retarget_lock_init_recursive>:
 800a528:	4770      	bx	lr

0800a52a <__retarget_lock_acquire_recursive>:
 800a52a:	4770      	bx	lr

0800a52c <__retarget_lock_release_recursive>:
 800a52c:	4770      	bx	lr

0800a52e <memchr>:
 800a52e:	4603      	mov	r3, r0
 800a530:	b510      	push	{r4, lr}
 800a532:	b2c9      	uxtb	r1, r1
 800a534:	4402      	add	r2, r0
 800a536:	4293      	cmp	r3, r2
 800a538:	4618      	mov	r0, r3
 800a53a:	d101      	bne.n	800a540 <memchr+0x12>
 800a53c:	2000      	movs	r0, #0
 800a53e:	e003      	b.n	800a548 <memchr+0x1a>
 800a540:	7804      	ldrb	r4, [r0, #0]
 800a542:	3301      	adds	r3, #1
 800a544:	428c      	cmp	r4, r1
 800a546:	d1f6      	bne.n	800a536 <memchr+0x8>
 800a548:	bd10      	pop	{r4, pc}

0800a54a <memcpy>:
 800a54a:	440a      	add	r2, r1
 800a54c:	4291      	cmp	r1, r2
 800a54e:	f100 33ff 	add.w	r3, r0, #4294967295
 800a552:	d100      	bne.n	800a556 <memcpy+0xc>
 800a554:	4770      	bx	lr
 800a556:	b510      	push	{r4, lr}
 800a558:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a55c:	4291      	cmp	r1, r2
 800a55e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a562:	d1f9      	bne.n	800a558 <memcpy+0xe>
 800a564:	bd10      	pop	{r4, pc}
	...

0800a568 <nanf>:
 800a568:	4800      	ldr	r0, [pc, #0]	@ (800a56c <nanf+0x4>)
 800a56a:	4770      	bx	lr
 800a56c:	7fc00000 	.word	0x7fc00000

0800a570 <__assert_func>:
 800a570:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a572:	4614      	mov	r4, r2
 800a574:	461a      	mov	r2, r3
 800a576:	4b09      	ldr	r3, [pc, #36]	@ (800a59c <__assert_func+0x2c>)
 800a578:	4605      	mov	r5, r0
 800a57a:	681b      	ldr	r3, [r3, #0]
 800a57c:	68d8      	ldr	r0, [r3, #12]
 800a57e:	b954      	cbnz	r4, 800a596 <__assert_func+0x26>
 800a580:	4b07      	ldr	r3, [pc, #28]	@ (800a5a0 <__assert_func+0x30>)
 800a582:	461c      	mov	r4, r3
 800a584:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a588:	9100      	str	r1, [sp, #0]
 800a58a:	462b      	mov	r3, r5
 800a58c:	4905      	ldr	r1, [pc, #20]	@ (800a5a4 <__assert_func+0x34>)
 800a58e:	f002 fc81 	bl	800ce94 <fiprintf>
 800a592:	f002 fd57 	bl	800d044 <abort>
 800a596:	4b04      	ldr	r3, [pc, #16]	@ (800a5a8 <__assert_func+0x38>)
 800a598:	e7f4      	b.n	800a584 <__assert_func+0x14>
 800a59a:	bf00      	nop
 800a59c:	20000034 	.word	0x20000034
 800a5a0:	0800dcc7 	.word	0x0800dcc7
 800a5a4:	0800dc99 	.word	0x0800dc99
 800a5a8:	0800dc8c 	.word	0x0800dc8c

0800a5ac <quorem>:
 800a5ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5b0:	6903      	ldr	r3, [r0, #16]
 800a5b2:	690c      	ldr	r4, [r1, #16]
 800a5b4:	4607      	mov	r7, r0
 800a5b6:	42a3      	cmp	r3, r4
 800a5b8:	db7e      	blt.n	800a6b8 <quorem+0x10c>
 800a5ba:	3c01      	subs	r4, #1
 800a5bc:	00a3      	lsls	r3, r4, #2
 800a5be:	f100 0514 	add.w	r5, r0, #20
 800a5c2:	f101 0814 	add.w	r8, r1, #20
 800a5c6:	9300      	str	r3, [sp, #0]
 800a5c8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a5cc:	9301      	str	r3, [sp, #4]
 800a5ce:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800a5d2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a5d6:	3301      	adds	r3, #1
 800a5d8:	429a      	cmp	r2, r3
 800a5da:	fbb2 f6f3 	udiv	r6, r2, r3
 800a5de:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800a5e2:	d32e      	bcc.n	800a642 <quorem+0x96>
 800a5e4:	f04f 0a00 	mov.w	sl, #0
 800a5e8:	46c4      	mov	ip, r8
 800a5ea:	46ae      	mov	lr, r5
 800a5ec:	46d3      	mov	fp, sl
 800a5ee:	f85c 3b04 	ldr.w	r3, [ip], #4
 800a5f2:	b298      	uxth	r0, r3
 800a5f4:	fb06 a000 	mla	r0, r6, r0, sl
 800a5f8:	0c1b      	lsrs	r3, r3, #16
 800a5fa:	0c02      	lsrs	r2, r0, #16
 800a5fc:	fb06 2303 	mla	r3, r6, r3, r2
 800a600:	f8de 2000 	ldr.w	r2, [lr]
 800a604:	b280      	uxth	r0, r0
 800a606:	b292      	uxth	r2, r2
 800a608:	1a12      	subs	r2, r2, r0
 800a60a:	445a      	add	r2, fp
 800a60c:	f8de 0000 	ldr.w	r0, [lr]
 800a610:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800a614:	b29b      	uxth	r3, r3
 800a616:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800a61a:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800a61e:	b292      	uxth	r2, r2
 800a620:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800a624:	45e1      	cmp	r9, ip
 800a626:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800a62a:	f84e 2b04 	str.w	r2, [lr], #4
 800a62e:	d2de      	bcs.n	800a5ee <quorem+0x42>
 800a630:	9b00      	ldr	r3, [sp, #0]
 800a632:	58eb      	ldr	r3, [r5, r3]
 800a634:	b92b      	cbnz	r3, 800a642 <quorem+0x96>
 800a636:	9b01      	ldr	r3, [sp, #4]
 800a638:	3b04      	subs	r3, #4
 800a63a:	429d      	cmp	r5, r3
 800a63c:	461a      	mov	r2, r3
 800a63e:	d32f      	bcc.n	800a6a0 <quorem+0xf4>
 800a640:	613c      	str	r4, [r7, #16]
 800a642:	4638      	mov	r0, r7
 800a644:	f001 f9c4 	bl	800b9d0 <__mcmp>
 800a648:	2800      	cmp	r0, #0
 800a64a:	db25      	blt.n	800a698 <quorem+0xec>
 800a64c:	4629      	mov	r1, r5
 800a64e:	2000      	movs	r0, #0
 800a650:	f858 2b04 	ldr.w	r2, [r8], #4
 800a654:	f8d1 c000 	ldr.w	ip, [r1]
 800a658:	fa1f fe82 	uxth.w	lr, r2
 800a65c:	fa1f f38c 	uxth.w	r3, ip
 800a660:	eba3 030e 	sub.w	r3, r3, lr
 800a664:	4403      	add	r3, r0
 800a666:	0c12      	lsrs	r2, r2, #16
 800a668:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800a66c:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800a670:	b29b      	uxth	r3, r3
 800a672:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a676:	45c1      	cmp	r9, r8
 800a678:	ea4f 4022 	mov.w	r0, r2, asr #16
 800a67c:	f841 3b04 	str.w	r3, [r1], #4
 800a680:	d2e6      	bcs.n	800a650 <quorem+0xa4>
 800a682:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a686:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a68a:	b922      	cbnz	r2, 800a696 <quorem+0xea>
 800a68c:	3b04      	subs	r3, #4
 800a68e:	429d      	cmp	r5, r3
 800a690:	461a      	mov	r2, r3
 800a692:	d30b      	bcc.n	800a6ac <quorem+0x100>
 800a694:	613c      	str	r4, [r7, #16]
 800a696:	3601      	adds	r6, #1
 800a698:	4630      	mov	r0, r6
 800a69a:	b003      	add	sp, #12
 800a69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a6a0:	6812      	ldr	r2, [r2, #0]
 800a6a2:	3b04      	subs	r3, #4
 800a6a4:	2a00      	cmp	r2, #0
 800a6a6:	d1cb      	bne.n	800a640 <quorem+0x94>
 800a6a8:	3c01      	subs	r4, #1
 800a6aa:	e7c6      	b.n	800a63a <quorem+0x8e>
 800a6ac:	6812      	ldr	r2, [r2, #0]
 800a6ae:	3b04      	subs	r3, #4
 800a6b0:	2a00      	cmp	r2, #0
 800a6b2:	d1ef      	bne.n	800a694 <quorem+0xe8>
 800a6b4:	3c01      	subs	r4, #1
 800a6b6:	e7ea      	b.n	800a68e <quorem+0xe2>
 800a6b8:	2000      	movs	r0, #0
 800a6ba:	e7ee      	b.n	800a69a <quorem+0xee>
 800a6bc:	0000      	movs	r0, r0
	...

0800a6c0 <_dtoa_r>:
 800a6c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a6c4:	4614      	mov	r4, r2
 800a6c6:	461d      	mov	r5, r3
 800a6c8:	69c7      	ldr	r7, [r0, #28]
 800a6ca:	b097      	sub	sp, #92	@ 0x5c
 800a6cc:	4683      	mov	fp, r0
 800a6ce:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800a6d2:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 800a6d4:	b97f      	cbnz	r7, 800a6f6 <_dtoa_r+0x36>
 800a6d6:	2010      	movs	r0, #16
 800a6d8:	f000 fe02 	bl	800b2e0 <malloc>
 800a6dc:	4602      	mov	r2, r0
 800a6de:	f8cb 001c 	str.w	r0, [fp, #28]
 800a6e2:	b920      	cbnz	r0, 800a6ee <_dtoa_r+0x2e>
 800a6e4:	21ef      	movs	r1, #239	@ 0xef
 800a6e6:	4ba8      	ldr	r3, [pc, #672]	@ (800a988 <_dtoa_r+0x2c8>)
 800a6e8:	48a8      	ldr	r0, [pc, #672]	@ (800a98c <_dtoa_r+0x2cc>)
 800a6ea:	f7ff ff41 	bl	800a570 <__assert_func>
 800a6ee:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800a6f2:	6007      	str	r7, [r0, #0]
 800a6f4:	60c7      	str	r7, [r0, #12]
 800a6f6:	f8db 301c 	ldr.w	r3, [fp, #28]
 800a6fa:	6819      	ldr	r1, [r3, #0]
 800a6fc:	b159      	cbz	r1, 800a716 <_dtoa_r+0x56>
 800a6fe:	685a      	ldr	r2, [r3, #4]
 800a700:	2301      	movs	r3, #1
 800a702:	4093      	lsls	r3, r2
 800a704:	604a      	str	r2, [r1, #4]
 800a706:	608b      	str	r3, [r1, #8]
 800a708:	4658      	mov	r0, fp
 800a70a:	f000 fedf 	bl	800b4cc <_Bfree>
 800a70e:	2200      	movs	r2, #0
 800a710:	f8db 301c 	ldr.w	r3, [fp, #28]
 800a714:	601a      	str	r2, [r3, #0]
 800a716:	1e2b      	subs	r3, r5, #0
 800a718:	bfaf      	iteee	ge
 800a71a:	2300      	movge	r3, #0
 800a71c:	2201      	movlt	r2, #1
 800a71e:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800a722:	9303      	strlt	r3, [sp, #12]
 800a724:	bfa8      	it	ge
 800a726:	6033      	strge	r3, [r6, #0]
 800a728:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800a72c:	4b98      	ldr	r3, [pc, #608]	@ (800a990 <_dtoa_r+0x2d0>)
 800a72e:	bfb8      	it	lt
 800a730:	6032      	strlt	r2, [r6, #0]
 800a732:	ea33 0308 	bics.w	r3, r3, r8
 800a736:	d112      	bne.n	800a75e <_dtoa_r+0x9e>
 800a738:	f242 730f 	movw	r3, #9999	@ 0x270f
 800a73c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800a73e:	6013      	str	r3, [r2, #0]
 800a740:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800a744:	4323      	orrs	r3, r4
 800a746:	f000 8550 	beq.w	800b1ea <_dtoa_r+0xb2a>
 800a74a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800a74c:	f8df a244 	ldr.w	sl, [pc, #580]	@ 800a994 <_dtoa_r+0x2d4>
 800a750:	2b00      	cmp	r3, #0
 800a752:	f000 8552 	beq.w	800b1fa <_dtoa_r+0xb3a>
 800a756:	f10a 0303 	add.w	r3, sl, #3
 800a75a:	f000 bd4c 	b.w	800b1f6 <_dtoa_r+0xb36>
 800a75e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800a762:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800a766:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a76a:	2200      	movs	r2, #0
 800a76c:	2300      	movs	r3, #0
 800a76e:	f7f6 f933 	bl	80009d8 <__aeabi_dcmpeq>
 800a772:	4607      	mov	r7, r0
 800a774:	b158      	cbz	r0, 800a78e <_dtoa_r+0xce>
 800a776:	2301      	movs	r3, #1
 800a778:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800a77a:	6013      	str	r3, [r2, #0]
 800a77c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800a77e:	b113      	cbz	r3, 800a786 <_dtoa_r+0xc6>
 800a780:	4b85      	ldr	r3, [pc, #532]	@ (800a998 <_dtoa_r+0x2d8>)
 800a782:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800a784:	6013      	str	r3, [r2, #0]
 800a786:	f8df a214 	ldr.w	sl, [pc, #532]	@ 800a99c <_dtoa_r+0x2dc>
 800a78a:	f000 bd36 	b.w	800b1fa <_dtoa_r+0xb3a>
 800a78e:	ab14      	add	r3, sp, #80	@ 0x50
 800a790:	9301      	str	r3, [sp, #4]
 800a792:	ab15      	add	r3, sp, #84	@ 0x54
 800a794:	9300      	str	r3, [sp, #0]
 800a796:	4658      	mov	r0, fp
 800a798:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800a79c:	f001 fa30 	bl	800bc00 <__d2b>
 800a7a0:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800a7a4:	4681      	mov	r9, r0
 800a7a6:	2e00      	cmp	r6, #0
 800a7a8:	d077      	beq.n	800a89a <_dtoa_r+0x1da>
 800a7aa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a7ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800a7b0:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800a7b4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a7b8:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800a7bc:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800a7c0:	9712      	str	r7, [sp, #72]	@ 0x48
 800a7c2:	4619      	mov	r1, r3
 800a7c4:	2200      	movs	r2, #0
 800a7c6:	4b76      	ldr	r3, [pc, #472]	@ (800a9a0 <_dtoa_r+0x2e0>)
 800a7c8:	f7f5 fce6 	bl	8000198 <__aeabi_dsub>
 800a7cc:	a368      	add	r3, pc, #416	@ (adr r3, 800a970 <_dtoa_r+0x2b0>)
 800a7ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7d2:	f7f5 fe99 	bl	8000508 <__aeabi_dmul>
 800a7d6:	a368      	add	r3, pc, #416	@ (adr r3, 800a978 <_dtoa_r+0x2b8>)
 800a7d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7dc:	f7f5 fcde 	bl	800019c <__adddf3>
 800a7e0:	4604      	mov	r4, r0
 800a7e2:	4630      	mov	r0, r6
 800a7e4:	460d      	mov	r5, r1
 800a7e6:	f7f5 fe25 	bl	8000434 <__aeabi_i2d>
 800a7ea:	a365      	add	r3, pc, #404	@ (adr r3, 800a980 <_dtoa_r+0x2c0>)
 800a7ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7f0:	f7f5 fe8a 	bl	8000508 <__aeabi_dmul>
 800a7f4:	4602      	mov	r2, r0
 800a7f6:	460b      	mov	r3, r1
 800a7f8:	4620      	mov	r0, r4
 800a7fa:	4629      	mov	r1, r5
 800a7fc:	f7f5 fcce 	bl	800019c <__adddf3>
 800a800:	4604      	mov	r4, r0
 800a802:	460d      	mov	r5, r1
 800a804:	f7f6 f930 	bl	8000a68 <__aeabi_d2iz>
 800a808:	2200      	movs	r2, #0
 800a80a:	4607      	mov	r7, r0
 800a80c:	2300      	movs	r3, #0
 800a80e:	4620      	mov	r0, r4
 800a810:	4629      	mov	r1, r5
 800a812:	f7f6 f8eb 	bl	80009ec <__aeabi_dcmplt>
 800a816:	b140      	cbz	r0, 800a82a <_dtoa_r+0x16a>
 800a818:	4638      	mov	r0, r7
 800a81a:	f7f5 fe0b 	bl	8000434 <__aeabi_i2d>
 800a81e:	4622      	mov	r2, r4
 800a820:	462b      	mov	r3, r5
 800a822:	f7f6 f8d9 	bl	80009d8 <__aeabi_dcmpeq>
 800a826:	b900      	cbnz	r0, 800a82a <_dtoa_r+0x16a>
 800a828:	3f01      	subs	r7, #1
 800a82a:	2f16      	cmp	r7, #22
 800a82c:	d853      	bhi.n	800a8d6 <_dtoa_r+0x216>
 800a82e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a832:	4b5c      	ldr	r3, [pc, #368]	@ (800a9a4 <_dtoa_r+0x2e4>)
 800a834:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800a838:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a83c:	f7f6 f8d6 	bl	80009ec <__aeabi_dcmplt>
 800a840:	2800      	cmp	r0, #0
 800a842:	d04a      	beq.n	800a8da <_dtoa_r+0x21a>
 800a844:	2300      	movs	r3, #0
 800a846:	3f01      	subs	r7, #1
 800a848:	930f      	str	r3, [sp, #60]	@ 0x3c
 800a84a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800a84c:	1b9b      	subs	r3, r3, r6
 800a84e:	1e5a      	subs	r2, r3, #1
 800a850:	bf46      	itte	mi
 800a852:	f1c3 0801 	rsbmi	r8, r3, #1
 800a856:	2300      	movmi	r3, #0
 800a858:	f04f 0800 	movpl.w	r8, #0
 800a85c:	9209      	str	r2, [sp, #36]	@ 0x24
 800a85e:	bf48      	it	mi
 800a860:	9309      	strmi	r3, [sp, #36]	@ 0x24
 800a862:	2f00      	cmp	r7, #0
 800a864:	db3b      	blt.n	800a8de <_dtoa_r+0x21e>
 800a866:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a868:	970e      	str	r7, [sp, #56]	@ 0x38
 800a86a:	443b      	add	r3, r7
 800a86c:	9309      	str	r3, [sp, #36]	@ 0x24
 800a86e:	2300      	movs	r3, #0
 800a870:	930a      	str	r3, [sp, #40]	@ 0x28
 800a872:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800a874:	2b09      	cmp	r3, #9
 800a876:	d866      	bhi.n	800a946 <_dtoa_r+0x286>
 800a878:	2b05      	cmp	r3, #5
 800a87a:	bfc4      	itt	gt
 800a87c:	3b04      	subgt	r3, #4
 800a87e:	9320      	strgt	r3, [sp, #128]	@ 0x80
 800a880:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800a882:	bfc8      	it	gt
 800a884:	2400      	movgt	r4, #0
 800a886:	f1a3 0302 	sub.w	r3, r3, #2
 800a88a:	bfd8      	it	le
 800a88c:	2401      	movle	r4, #1
 800a88e:	2b03      	cmp	r3, #3
 800a890:	d864      	bhi.n	800a95c <_dtoa_r+0x29c>
 800a892:	e8df f003 	tbb	[pc, r3]
 800a896:	382b      	.short	0x382b
 800a898:	5636      	.short	0x5636
 800a89a:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800a89e:	441e      	add	r6, r3
 800a8a0:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800a8a4:	2b20      	cmp	r3, #32
 800a8a6:	bfc1      	itttt	gt
 800a8a8:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800a8ac:	fa08 f803 	lslgt.w	r8, r8, r3
 800a8b0:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800a8b4:	fa24 f303 	lsrgt.w	r3, r4, r3
 800a8b8:	bfd6      	itet	le
 800a8ba:	f1c3 0320 	rsble	r3, r3, #32
 800a8be:	ea48 0003 	orrgt.w	r0, r8, r3
 800a8c2:	fa04 f003 	lslle.w	r0, r4, r3
 800a8c6:	f7f5 fda5 	bl	8000414 <__aeabi_ui2d>
 800a8ca:	2201      	movs	r2, #1
 800a8cc:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800a8d0:	3e01      	subs	r6, #1
 800a8d2:	9212      	str	r2, [sp, #72]	@ 0x48
 800a8d4:	e775      	b.n	800a7c2 <_dtoa_r+0x102>
 800a8d6:	2301      	movs	r3, #1
 800a8d8:	e7b6      	b.n	800a848 <_dtoa_r+0x188>
 800a8da:	900f      	str	r0, [sp, #60]	@ 0x3c
 800a8dc:	e7b5      	b.n	800a84a <_dtoa_r+0x18a>
 800a8de:	427b      	negs	r3, r7
 800a8e0:	930a      	str	r3, [sp, #40]	@ 0x28
 800a8e2:	2300      	movs	r3, #0
 800a8e4:	eba8 0807 	sub.w	r8, r8, r7
 800a8e8:	930e      	str	r3, [sp, #56]	@ 0x38
 800a8ea:	e7c2      	b.n	800a872 <_dtoa_r+0x1b2>
 800a8ec:	2300      	movs	r3, #0
 800a8ee:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a8f0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800a8f2:	2b00      	cmp	r3, #0
 800a8f4:	dc35      	bgt.n	800a962 <_dtoa_r+0x2a2>
 800a8f6:	2301      	movs	r3, #1
 800a8f8:	461a      	mov	r2, r3
 800a8fa:	e9cd 3307 	strd	r3, r3, [sp, #28]
 800a8fe:	9221      	str	r2, [sp, #132]	@ 0x84
 800a900:	e00b      	b.n	800a91a <_dtoa_r+0x25a>
 800a902:	2301      	movs	r3, #1
 800a904:	e7f3      	b.n	800a8ee <_dtoa_r+0x22e>
 800a906:	2300      	movs	r3, #0
 800a908:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a90a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800a90c:	18fb      	adds	r3, r7, r3
 800a90e:	9308      	str	r3, [sp, #32]
 800a910:	3301      	adds	r3, #1
 800a912:	2b01      	cmp	r3, #1
 800a914:	9307      	str	r3, [sp, #28]
 800a916:	bfb8      	it	lt
 800a918:	2301      	movlt	r3, #1
 800a91a:	2100      	movs	r1, #0
 800a91c:	2204      	movs	r2, #4
 800a91e:	f8db 001c 	ldr.w	r0, [fp, #28]
 800a922:	f102 0514 	add.w	r5, r2, #20
 800a926:	429d      	cmp	r5, r3
 800a928:	d91f      	bls.n	800a96a <_dtoa_r+0x2aa>
 800a92a:	6041      	str	r1, [r0, #4]
 800a92c:	4658      	mov	r0, fp
 800a92e:	f000 fd8d 	bl	800b44c <_Balloc>
 800a932:	4682      	mov	sl, r0
 800a934:	2800      	cmp	r0, #0
 800a936:	d139      	bne.n	800a9ac <_dtoa_r+0x2ec>
 800a938:	4602      	mov	r2, r0
 800a93a:	f240 11af 	movw	r1, #431	@ 0x1af
 800a93e:	4b1a      	ldr	r3, [pc, #104]	@ (800a9a8 <_dtoa_r+0x2e8>)
 800a940:	e6d2      	b.n	800a6e8 <_dtoa_r+0x28>
 800a942:	2301      	movs	r3, #1
 800a944:	e7e0      	b.n	800a908 <_dtoa_r+0x248>
 800a946:	2401      	movs	r4, #1
 800a948:	2300      	movs	r3, #0
 800a94a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800a94c:	9320      	str	r3, [sp, #128]	@ 0x80
 800a94e:	f04f 33ff 	mov.w	r3, #4294967295
 800a952:	2200      	movs	r2, #0
 800a954:	e9cd 3307 	strd	r3, r3, [sp, #28]
 800a958:	2312      	movs	r3, #18
 800a95a:	e7d0      	b.n	800a8fe <_dtoa_r+0x23e>
 800a95c:	2301      	movs	r3, #1
 800a95e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a960:	e7f5      	b.n	800a94e <_dtoa_r+0x28e>
 800a962:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800a964:	e9cd 3307 	strd	r3, r3, [sp, #28]
 800a968:	e7d7      	b.n	800a91a <_dtoa_r+0x25a>
 800a96a:	3101      	adds	r1, #1
 800a96c:	0052      	lsls	r2, r2, #1
 800a96e:	e7d8      	b.n	800a922 <_dtoa_r+0x262>
 800a970:	636f4361 	.word	0x636f4361
 800a974:	3fd287a7 	.word	0x3fd287a7
 800a978:	8b60c8b3 	.word	0x8b60c8b3
 800a97c:	3fc68a28 	.word	0x3fc68a28
 800a980:	509f79fb 	.word	0x509f79fb
 800a984:	3fd34413 	.word	0x3fd34413
 800a988:	0800dbe4 	.word	0x0800dbe4
 800a98c:	0800dcd5 	.word	0x0800dcd5
 800a990:	7ff00000 	.word	0x7ff00000
 800a994:	0800dcd1 	.word	0x0800dcd1
 800a998:	0800dc64 	.word	0x0800dc64
 800a99c:	0800dc63 	.word	0x0800dc63
 800a9a0:	3ff80000 	.word	0x3ff80000
 800a9a4:	0800ddd0 	.word	0x0800ddd0
 800a9a8:	0800dd2d 	.word	0x0800dd2d
 800a9ac:	f8db 301c 	ldr.w	r3, [fp, #28]
 800a9b0:	6018      	str	r0, [r3, #0]
 800a9b2:	9b07      	ldr	r3, [sp, #28]
 800a9b4:	2b0e      	cmp	r3, #14
 800a9b6:	f200 80a4 	bhi.w	800ab02 <_dtoa_r+0x442>
 800a9ba:	2c00      	cmp	r4, #0
 800a9bc:	f000 80a1 	beq.w	800ab02 <_dtoa_r+0x442>
 800a9c0:	2f00      	cmp	r7, #0
 800a9c2:	dd33      	ble.n	800aa2c <_dtoa_r+0x36c>
 800a9c4:	4b86      	ldr	r3, [pc, #536]	@ (800abe0 <_dtoa_r+0x520>)
 800a9c6:	f007 020f 	and.w	r2, r7, #15
 800a9ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a9ce:	05f8      	lsls	r0, r7, #23
 800a9d0:	e9d3 3400 	ldrd	r3, r4, [r3]
 800a9d4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800a9d8:	ea4f 1427 	mov.w	r4, r7, asr #4
 800a9dc:	d516      	bpl.n	800aa0c <_dtoa_r+0x34c>
 800a9de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800a9e2:	4b80      	ldr	r3, [pc, #512]	@ (800abe4 <_dtoa_r+0x524>)
 800a9e4:	2603      	movs	r6, #3
 800a9e6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800a9ea:	f7f5 feb7 	bl	800075c <__aeabi_ddiv>
 800a9ee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a9f2:	f004 040f 	and.w	r4, r4, #15
 800a9f6:	4d7b      	ldr	r5, [pc, #492]	@ (800abe4 <_dtoa_r+0x524>)
 800a9f8:	b954      	cbnz	r4, 800aa10 <_dtoa_r+0x350>
 800a9fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a9fe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800aa02:	f7f5 feab 	bl	800075c <__aeabi_ddiv>
 800aa06:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800aa0a:	e028      	b.n	800aa5e <_dtoa_r+0x39e>
 800aa0c:	2602      	movs	r6, #2
 800aa0e:	e7f2      	b.n	800a9f6 <_dtoa_r+0x336>
 800aa10:	07e1      	lsls	r1, r4, #31
 800aa12:	d508      	bpl.n	800aa26 <_dtoa_r+0x366>
 800aa14:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800aa18:	e9d5 2300 	ldrd	r2, r3, [r5]
 800aa1c:	f7f5 fd74 	bl	8000508 <__aeabi_dmul>
 800aa20:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800aa24:	3601      	adds	r6, #1
 800aa26:	1064      	asrs	r4, r4, #1
 800aa28:	3508      	adds	r5, #8
 800aa2a:	e7e5      	b.n	800a9f8 <_dtoa_r+0x338>
 800aa2c:	f000 80d2 	beq.w	800abd4 <_dtoa_r+0x514>
 800aa30:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800aa34:	427c      	negs	r4, r7
 800aa36:	4b6a      	ldr	r3, [pc, #424]	@ (800abe0 <_dtoa_r+0x520>)
 800aa38:	f004 020f 	and.w	r2, r4, #15
 800aa3c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800aa40:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa44:	f7f5 fd60 	bl	8000508 <__aeabi_dmul>
 800aa48:	2602      	movs	r6, #2
 800aa4a:	2300      	movs	r3, #0
 800aa4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800aa50:	4d64      	ldr	r5, [pc, #400]	@ (800abe4 <_dtoa_r+0x524>)
 800aa52:	1124      	asrs	r4, r4, #4
 800aa54:	2c00      	cmp	r4, #0
 800aa56:	f040 80b2 	bne.w	800abbe <_dtoa_r+0x4fe>
 800aa5a:	2b00      	cmp	r3, #0
 800aa5c:	d1d3      	bne.n	800aa06 <_dtoa_r+0x346>
 800aa5e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800aa62:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800aa64:	2b00      	cmp	r3, #0
 800aa66:	f000 80b7 	beq.w	800abd8 <_dtoa_r+0x518>
 800aa6a:	2200      	movs	r2, #0
 800aa6c:	4620      	mov	r0, r4
 800aa6e:	4629      	mov	r1, r5
 800aa70:	4b5d      	ldr	r3, [pc, #372]	@ (800abe8 <_dtoa_r+0x528>)
 800aa72:	f7f5 ffbb 	bl	80009ec <__aeabi_dcmplt>
 800aa76:	2800      	cmp	r0, #0
 800aa78:	f000 80ae 	beq.w	800abd8 <_dtoa_r+0x518>
 800aa7c:	9b07      	ldr	r3, [sp, #28]
 800aa7e:	2b00      	cmp	r3, #0
 800aa80:	f000 80aa 	beq.w	800abd8 <_dtoa_r+0x518>
 800aa84:	9b08      	ldr	r3, [sp, #32]
 800aa86:	2b00      	cmp	r3, #0
 800aa88:	dd37      	ble.n	800aafa <_dtoa_r+0x43a>
 800aa8a:	1e7b      	subs	r3, r7, #1
 800aa8c:	4620      	mov	r0, r4
 800aa8e:	9304      	str	r3, [sp, #16]
 800aa90:	2200      	movs	r2, #0
 800aa92:	4629      	mov	r1, r5
 800aa94:	4b55      	ldr	r3, [pc, #340]	@ (800abec <_dtoa_r+0x52c>)
 800aa96:	f7f5 fd37 	bl	8000508 <__aeabi_dmul>
 800aa9a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800aa9e:	9c08      	ldr	r4, [sp, #32]
 800aaa0:	3601      	adds	r6, #1
 800aaa2:	4630      	mov	r0, r6
 800aaa4:	f7f5 fcc6 	bl	8000434 <__aeabi_i2d>
 800aaa8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800aaac:	f7f5 fd2c 	bl	8000508 <__aeabi_dmul>
 800aab0:	2200      	movs	r2, #0
 800aab2:	4b4f      	ldr	r3, [pc, #316]	@ (800abf0 <_dtoa_r+0x530>)
 800aab4:	f7f5 fb72 	bl	800019c <__adddf3>
 800aab8:	4605      	mov	r5, r0
 800aaba:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800aabe:	2c00      	cmp	r4, #0
 800aac0:	f040 809a 	bne.w	800abf8 <_dtoa_r+0x538>
 800aac4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800aac8:	2200      	movs	r2, #0
 800aaca:	4b4a      	ldr	r3, [pc, #296]	@ (800abf4 <_dtoa_r+0x534>)
 800aacc:	f7f5 fb64 	bl	8000198 <__aeabi_dsub>
 800aad0:	4602      	mov	r2, r0
 800aad2:	460b      	mov	r3, r1
 800aad4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800aad8:	462a      	mov	r2, r5
 800aada:	4633      	mov	r3, r6
 800aadc:	f7f5 ffa4 	bl	8000a28 <__aeabi_dcmpgt>
 800aae0:	2800      	cmp	r0, #0
 800aae2:	f040 828e 	bne.w	800b002 <_dtoa_r+0x942>
 800aae6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800aaea:	462a      	mov	r2, r5
 800aaec:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800aaf0:	f7f5 ff7c 	bl	80009ec <__aeabi_dcmplt>
 800aaf4:	2800      	cmp	r0, #0
 800aaf6:	f040 8127 	bne.w	800ad48 <_dtoa_r+0x688>
 800aafa:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800aafe:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800ab02:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800ab04:	2b00      	cmp	r3, #0
 800ab06:	f2c0 8163 	blt.w	800add0 <_dtoa_r+0x710>
 800ab0a:	2f0e      	cmp	r7, #14
 800ab0c:	f300 8160 	bgt.w	800add0 <_dtoa_r+0x710>
 800ab10:	4b33      	ldr	r3, [pc, #204]	@ (800abe0 <_dtoa_r+0x520>)
 800ab12:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800ab16:	e9d3 3400 	ldrd	r3, r4, [r3]
 800ab1a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800ab1e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800ab20:	2b00      	cmp	r3, #0
 800ab22:	da03      	bge.n	800ab2c <_dtoa_r+0x46c>
 800ab24:	9b07      	ldr	r3, [sp, #28]
 800ab26:	2b00      	cmp	r3, #0
 800ab28:	f340 8100 	ble.w	800ad2c <_dtoa_r+0x66c>
 800ab2c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800ab30:	4656      	mov	r6, sl
 800ab32:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ab36:	4620      	mov	r0, r4
 800ab38:	4629      	mov	r1, r5
 800ab3a:	f7f5 fe0f 	bl	800075c <__aeabi_ddiv>
 800ab3e:	f7f5 ff93 	bl	8000a68 <__aeabi_d2iz>
 800ab42:	4680      	mov	r8, r0
 800ab44:	f7f5 fc76 	bl	8000434 <__aeabi_i2d>
 800ab48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ab4c:	f7f5 fcdc 	bl	8000508 <__aeabi_dmul>
 800ab50:	4602      	mov	r2, r0
 800ab52:	460b      	mov	r3, r1
 800ab54:	4620      	mov	r0, r4
 800ab56:	4629      	mov	r1, r5
 800ab58:	f7f5 fb1e 	bl	8000198 <__aeabi_dsub>
 800ab5c:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800ab60:	9d07      	ldr	r5, [sp, #28]
 800ab62:	f806 4b01 	strb.w	r4, [r6], #1
 800ab66:	eba6 040a 	sub.w	r4, r6, sl
 800ab6a:	42a5      	cmp	r5, r4
 800ab6c:	4602      	mov	r2, r0
 800ab6e:	460b      	mov	r3, r1
 800ab70:	f040 8116 	bne.w	800ada0 <_dtoa_r+0x6e0>
 800ab74:	f7f5 fb12 	bl	800019c <__adddf3>
 800ab78:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ab7c:	4604      	mov	r4, r0
 800ab7e:	460d      	mov	r5, r1
 800ab80:	f7f5 ff52 	bl	8000a28 <__aeabi_dcmpgt>
 800ab84:	2800      	cmp	r0, #0
 800ab86:	f040 80f8 	bne.w	800ad7a <_dtoa_r+0x6ba>
 800ab8a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ab8e:	4620      	mov	r0, r4
 800ab90:	4629      	mov	r1, r5
 800ab92:	f7f5 ff21 	bl	80009d8 <__aeabi_dcmpeq>
 800ab96:	b118      	cbz	r0, 800aba0 <_dtoa_r+0x4e0>
 800ab98:	f018 0f01 	tst.w	r8, #1
 800ab9c:	f040 80ed 	bne.w	800ad7a <_dtoa_r+0x6ba>
 800aba0:	4649      	mov	r1, r9
 800aba2:	4658      	mov	r0, fp
 800aba4:	f000 fc92 	bl	800b4cc <_Bfree>
 800aba8:	2300      	movs	r3, #0
 800abaa:	7033      	strb	r3, [r6, #0]
 800abac:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800abae:	3701      	adds	r7, #1
 800abb0:	601f      	str	r7, [r3, #0]
 800abb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800abb4:	2b00      	cmp	r3, #0
 800abb6:	f000 8320 	beq.w	800b1fa <_dtoa_r+0xb3a>
 800abba:	601e      	str	r6, [r3, #0]
 800abbc:	e31d      	b.n	800b1fa <_dtoa_r+0xb3a>
 800abbe:	07e2      	lsls	r2, r4, #31
 800abc0:	d505      	bpl.n	800abce <_dtoa_r+0x50e>
 800abc2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800abc6:	f7f5 fc9f 	bl	8000508 <__aeabi_dmul>
 800abca:	2301      	movs	r3, #1
 800abcc:	3601      	adds	r6, #1
 800abce:	1064      	asrs	r4, r4, #1
 800abd0:	3508      	adds	r5, #8
 800abd2:	e73f      	b.n	800aa54 <_dtoa_r+0x394>
 800abd4:	2602      	movs	r6, #2
 800abd6:	e742      	b.n	800aa5e <_dtoa_r+0x39e>
 800abd8:	9c07      	ldr	r4, [sp, #28]
 800abda:	9704      	str	r7, [sp, #16]
 800abdc:	e761      	b.n	800aaa2 <_dtoa_r+0x3e2>
 800abde:	bf00      	nop
 800abe0:	0800ddd0 	.word	0x0800ddd0
 800abe4:	0800dda8 	.word	0x0800dda8
 800abe8:	3ff00000 	.word	0x3ff00000
 800abec:	40240000 	.word	0x40240000
 800abf0:	401c0000 	.word	0x401c0000
 800abf4:	40140000 	.word	0x40140000
 800abf8:	4b70      	ldr	r3, [pc, #448]	@ (800adbc <_dtoa_r+0x6fc>)
 800abfa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800abfc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800ac00:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800ac04:	4454      	add	r4, sl
 800ac06:	2900      	cmp	r1, #0
 800ac08:	d045      	beq.n	800ac96 <_dtoa_r+0x5d6>
 800ac0a:	2000      	movs	r0, #0
 800ac0c:	496c      	ldr	r1, [pc, #432]	@ (800adc0 <_dtoa_r+0x700>)
 800ac0e:	f7f5 fda5 	bl	800075c <__aeabi_ddiv>
 800ac12:	4633      	mov	r3, r6
 800ac14:	462a      	mov	r2, r5
 800ac16:	f7f5 fabf 	bl	8000198 <__aeabi_dsub>
 800ac1a:	4656      	mov	r6, sl
 800ac1c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800ac20:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ac24:	f7f5 ff20 	bl	8000a68 <__aeabi_d2iz>
 800ac28:	4605      	mov	r5, r0
 800ac2a:	f7f5 fc03 	bl	8000434 <__aeabi_i2d>
 800ac2e:	4602      	mov	r2, r0
 800ac30:	460b      	mov	r3, r1
 800ac32:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ac36:	f7f5 faaf 	bl	8000198 <__aeabi_dsub>
 800ac3a:	4602      	mov	r2, r0
 800ac3c:	460b      	mov	r3, r1
 800ac3e:	3530      	adds	r5, #48	@ 0x30
 800ac40:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800ac44:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800ac48:	f806 5b01 	strb.w	r5, [r6], #1
 800ac4c:	f7f5 fece 	bl	80009ec <__aeabi_dcmplt>
 800ac50:	2800      	cmp	r0, #0
 800ac52:	d163      	bne.n	800ad1c <_dtoa_r+0x65c>
 800ac54:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800ac58:	2000      	movs	r0, #0
 800ac5a:	495a      	ldr	r1, [pc, #360]	@ (800adc4 <_dtoa_r+0x704>)
 800ac5c:	f7f5 fa9c 	bl	8000198 <__aeabi_dsub>
 800ac60:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800ac64:	f7f5 fec2 	bl	80009ec <__aeabi_dcmplt>
 800ac68:	2800      	cmp	r0, #0
 800ac6a:	f040 8087 	bne.w	800ad7c <_dtoa_r+0x6bc>
 800ac6e:	42a6      	cmp	r6, r4
 800ac70:	f43f af43 	beq.w	800aafa <_dtoa_r+0x43a>
 800ac74:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800ac78:	2200      	movs	r2, #0
 800ac7a:	4b53      	ldr	r3, [pc, #332]	@ (800adc8 <_dtoa_r+0x708>)
 800ac7c:	f7f5 fc44 	bl	8000508 <__aeabi_dmul>
 800ac80:	2200      	movs	r2, #0
 800ac82:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800ac86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ac8a:	4b4f      	ldr	r3, [pc, #316]	@ (800adc8 <_dtoa_r+0x708>)
 800ac8c:	f7f5 fc3c 	bl	8000508 <__aeabi_dmul>
 800ac90:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ac94:	e7c4      	b.n	800ac20 <_dtoa_r+0x560>
 800ac96:	4631      	mov	r1, r6
 800ac98:	4628      	mov	r0, r5
 800ac9a:	f7f5 fc35 	bl	8000508 <__aeabi_dmul>
 800ac9e:	4656      	mov	r6, sl
 800aca0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800aca4:	9413      	str	r4, [sp, #76]	@ 0x4c
 800aca6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800acaa:	f7f5 fedd 	bl	8000a68 <__aeabi_d2iz>
 800acae:	4605      	mov	r5, r0
 800acb0:	f7f5 fbc0 	bl	8000434 <__aeabi_i2d>
 800acb4:	4602      	mov	r2, r0
 800acb6:	460b      	mov	r3, r1
 800acb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800acbc:	f7f5 fa6c 	bl	8000198 <__aeabi_dsub>
 800acc0:	4602      	mov	r2, r0
 800acc2:	460b      	mov	r3, r1
 800acc4:	3530      	adds	r5, #48	@ 0x30
 800acc6:	f806 5b01 	strb.w	r5, [r6], #1
 800acca:	42a6      	cmp	r6, r4
 800accc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800acd0:	f04f 0200 	mov.w	r2, #0
 800acd4:	d124      	bne.n	800ad20 <_dtoa_r+0x660>
 800acd6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800acda:	4b39      	ldr	r3, [pc, #228]	@ (800adc0 <_dtoa_r+0x700>)
 800acdc:	f7f5 fa5e 	bl	800019c <__adddf3>
 800ace0:	4602      	mov	r2, r0
 800ace2:	460b      	mov	r3, r1
 800ace4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ace8:	f7f5 fe9e 	bl	8000a28 <__aeabi_dcmpgt>
 800acec:	2800      	cmp	r0, #0
 800acee:	d145      	bne.n	800ad7c <_dtoa_r+0x6bc>
 800acf0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800acf4:	2000      	movs	r0, #0
 800acf6:	4932      	ldr	r1, [pc, #200]	@ (800adc0 <_dtoa_r+0x700>)
 800acf8:	f7f5 fa4e 	bl	8000198 <__aeabi_dsub>
 800acfc:	4602      	mov	r2, r0
 800acfe:	460b      	mov	r3, r1
 800ad00:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ad04:	f7f5 fe72 	bl	80009ec <__aeabi_dcmplt>
 800ad08:	2800      	cmp	r0, #0
 800ad0a:	f43f aef6 	beq.w	800aafa <_dtoa_r+0x43a>
 800ad0e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800ad10:	1e73      	subs	r3, r6, #1
 800ad12:	9313      	str	r3, [sp, #76]	@ 0x4c
 800ad14:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800ad18:	2b30      	cmp	r3, #48	@ 0x30
 800ad1a:	d0f8      	beq.n	800ad0e <_dtoa_r+0x64e>
 800ad1c:	9f04      	ldr	r7, [sp, #16]
 800ad1e:	e73f      	b.n	800aba0 <_dtoa_r+0x4e0>
 800ad20:	4b29      	ldr	r3, [pc, #164]	@ (800adc8 <_dtoa_r+0x708>)
 800ad22:	f7f5 fbf1 	bl	8000508 <__aeabi_dmul>
 800ad26:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ad2a:	e7bc      	b.n	800aca6 <_dtoa_r+0x5e6>
 800ad2c:	d10c      	bne.n	800ad48 <_dtoa_r+0x688>
 800ad2e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ad32:	2200      	movs	r2, #0
 800ad34:	4b25      	ldr	r3, [pc, #148]	@ (800adcc <_dtoa_r+0x70c>)
 800ad36:	f7f5 fbe7 	bl	8000508 <__aeabi_dmul>
 800ad3a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800ad3e:	f7f5 fe69 	bl	8000a14 <__aeabi_dcmpge>
 800ad42:	2800      	cmp	r0, #0
 800ad44:	f000 815b 	beq.w	800affe <_dtoa_r+0x93e>
 800ad48:	2400      	movs	r4, #0
 800ad4a:	4625      	mov	r5, r4
 800ad4c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800ad4e:	4656      	mov	r6, sl
 800ad50:	43db      	mvns	r3, r3
 800ad52:	9304      	str	r3, [sp, #16]
 800ad54:	2700      	movs	r7, #0
 800ad56:	4621      	mov	r1, r4
 800ad58:	4658      	mov	r0, fp
 800ad5a:	f000 fbb7 	bl	800b4cc <_Bfree>
 800ad5e:	2d00      	cmp	r5, #0
 800ad60:	d0dc      	beq.n	800ad1c <_dtoa_r+0x65c>
 800ad62:	b12f      	cbz	r7, 800ad70 <_dtoa_r+0x6b0>
 800ad64:	42af      	cmp	r7, r5
 800ad66:	d003      	beq.n	800ad70 <_dtoa_r+0x6b0>
 800ad68:	4639      	mov	r1, r7
 800ad6a:	4658      	mov	r0, fp
 800ad6c:	f000 fbae 	bl	800b4cc <_Bfree>
 800ad70:	4629      	mov	r1, r5
 800ad72:	4658      	mov	r0, fp
 800ad74:	f000 fbaa 	bl	800b4cc <_Bfree>
 800ad78:	e7d0      	b.n	800ad1c <_dtoa_r+0x65c>
 800ad7a:	9704      	str	r7, [sp, #16]
 800ad7c:	4633      	mov	r3, r6
 800ad7e:	461e      	mov	r6, r3
 800ad80:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ad84:	2a39      	cmp	r2, #57	@ 0x39
 800ad86:	d107      	bne.n	800ad98 <_dtoa_r+0x6d8>
 800ad88:	459a      	cmp	sl, r3
 800ad8a:	d1f8      	bne.n	800ad7e <_dtoa_r+0x6be>
 800ad8c:	9a04      	ldr	r2, [sp, #16]
 800ad8e:	3201      	adds	r2, #1
 800ad90:	9204      	str	r2, [sp, #16]
 800ad92:	2230      	movs	r2, #48	@ 0x30
 800ad94:	f88a 2000 	strb.w	r2, [sl]
 800ad98:	781a      	ldrb	r2, [r3, #0]
 800ad9a:	3201      	adds	r2, #1
 800ad9c:	701a      	strb	r2, [r3, #0]
 800ad9e:	e7bd      	b.n	800ad1c <_dtoa_r+0x65c>
 800ada0:	2200      	movs	r2, #0
 800ada2:	4b09      	ldr	r3, [pc, #36]	@ (800adc8 <_dtoa_r+0x708>)
 800ada4:	f7f5 fbb0 	bl	8000508 <__aeabi_dmul>
 800ada8:	2200      	movs	r2, #0
 800adaa:	2300      	movs	r3, #0
 800adac:	4604      	mov	r4, r0
 800adae:	460d      	mov	r5, r1
 800adb0:	f7f5 fe12 	bl	80009d8 <__aeabi_dcmpeq>
 800adb4:	2800      	cmp	r0, #0
 800adb6:	f43f aebc 	beq.w	800ab32 <_dtoa_r+0x472>
 800adba:	e6f1      	b.n	800aba0 <_dtoa_r+0x4e0>
 800adbc:	0800ddd0 	.word	0x0800ddd0
 800adc0:	3fe00000 	.word	0x3fe00000
 800adc4:	3ff00000 	.word	0x3ff00000
 800adc8:	40240000 	.word	0x40240000
 800adcc:	40140000 	.word	0x40140000
 800add0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800add2:	2a00      	cmp	r2, #0
 800add4:	f000 80db 	beq.w	800af8e <_dtoa_r+0x8ce>
 800add8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800adda:	2a01      	cmp	r2, #1
 800addc:	f300 80bf 	bgt.w	800af5e <_dtoa_r+0x89e>
 800ade0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800ade2:	2a00      	cmp	r2, #0
 800ade4:	f000 80b7 	beq.w	800af56 <_dtoa_r+0x896>
 800ade8:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800adec:	4646      	mov	r6, r8
 800adee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800adf0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800adf2:	2101      	movs	r1, #1
 800adf4:	441a      	add	r2, r3
 800adf6:	4658      	mov	r0, fp
 800adf8:	4498      	add	r8, r3
 800adfa:	9209      	str	r2, [sp, #36]	@ 0x24
 800adfc:	f000 fc64 	bl	800b6c8 <__i2b>
 800ae00:	4605      	mov	r5, r0
 800ae02:	b15e      	cbz	r6, 800ae1c <_dtoa_r+0x75c>
 800ae04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ae06:	2b00      	cmp	r3, #0
 800ae08:	dd08      	ble.n	800ae1c <_dtoa_r+0x75c>
 800ae0a:	42b3      	cmp	r3, r6
 800ae0c:	bfa8      	it	ge
 800ae0e:	4633      	movge	r3, r6
 800ae10:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ae12:	eba8 0803 	sub.w	r8, r8, r3
 800ae16:	1af6      	subs	r6, r6, r3
 800ae18:	1ad3      	subs	r3, r2, r3
 800ae1a:	9309      	str	r3, [sp, #36]	@ 0x24
 800ae1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ae1e:	b1f3      	cbz	r3, 800ae5e <_dtoa_r+0x79e>
 800ae20:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800ae22:	2b00      	cmp	r3, #0
 800ae24:	f000 80b7 	beq.w	800af96 <_dtoa_r+0x8d6>
 800ae28:	b18c      	cbz	r4, 800ae4e <_dtoa_r+0x78e>
 800ae2a:	4629      	mov	r1, r5
 800ae2c:	4622      	mov	r2, r4
 800ae2e:	4658      	mov	r0, fp
 800ae30:	f000 fd08 	bl	800b844 <__pow5mult>
 800ae34:	464a      	mov	r2, r9
 800ae36:	4601      	mov	r1, r0
 800ae38:	4605      	mov	r5, r0
 800ae3a:	4658      	mov	r0, fp
 800ae3c:	f000 fc5a 	bl	800b6f4 <__multiply>
 800ae40:	4649      	mov	r1, r9
 800ae42:	9004      	str	r0, [sp, #16]
 800ae44:	4658      	mov	r0, fp
 800ae46:	f000 fb41 	bl	800b4cc <_Bfree>
 800ae4a:	9b04      	ldr	r3, [sp, #16]
 800ae4c:	4699      	mov	r9, r3
 800ae4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ae50:	1b1a      	subs	r2, r3, r4
 800ae52:	d004      	beq.n	800ae5e <_dtoa_r+0x79e>
 800ae54:	4649      	mov	r1, r9
 800ae56:	4658      	mov	r0, fp
 800ae58:	f000 fcf4 	bl	800b844 <__pow5mult>
 800ae5c:	4681      	mov	r9, r0
 800ae5e:	2101      	movs	r1, #1
 800ae60:	4658      	mov	r0, fp
 800ae62:	f000 fc31 	bl	800b6c8 <__i2b>
 800ae66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ae68:	4604      	mov	r4, r0
 800ae6a:	2b00      	cmp	r3, #0
 800ae6c:	f000 81c9 	beq.w	800b202 <_dtoa_r+0xb42>
 800ae70:	461a      	mov	r2, r3
 800ae72:	4601      	mov	r1, r0
 800ae74:	4658      	mov	r0, fp
 800ae76:	f000 fce5 	bl	800b844 <__pow5mult>
 800ae7a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800ae7c:	4604      	mov	r4, r0
 800ae7e:	2b01      	cmp	r3, #1
 800ae80:	f300 808f 	bgt.w	800afa2 <_dtoa_r+0x8e2>
 800ae84:	9b02      	ldr	r3, [sp, #8]
 800ae86:	2b00      	cmp	r3, #0
 800ae88:	f040 8087 	bne.w	800af9a <_dtoa_r+0x8da>
 800ae8c:	9b03      	ldr	r3, [sp, #12]
 800ae8e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800ae92:	2b00      	cmp	r3, #0
 800ae94:	f040 8083 	bne.w	800af9e <_dtoa_r+0x8de>
 800ae98:	9b03      	ldr	r3, [sp, #12]
 800ae9a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800ae9e:	0d1b      	lsrs	r3, r3, #20
 800aea0:	051b      	lsls	r3, r3, #20
 800aea2:	b12b      	cbz	r3, 800aeb0 <_dtoa_r+0x7f0>
 800aea4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800aea6:	f108 0801 	add.w	r8, r8, #1
 800aeaa:	3301      	adds	r3, #1
 800aeac:	9309      	str	r3, [sp, #36]	@ 0x24
 800aeae:	2301      	movs	r3, #1
 800aeb0:	930a      	str	r3, [sp, #40]	@ 0x28
 800aeb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800aeb4:	2b00      	cmp	r3, #0
 800aeb6:	f000 81aa 	beq.w	800b20e <_dtoa_r+0xb4e>
 800aeba:	6923      	ldr	r3, [r4, #16]
 800aebc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800aec0:	6918      	ldr	r0, [r3, #16]
 800aec2:	f000 fbb5 	bl	800b630 <__hi0bits>
 800aec6:	f1c0 0020 	rsb	r0, r0, #32
 800aeca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800aecc:	4418      	add	r0, r3
 800aece:	f010 001f 	ands.w	r0, r0, #31
 800aed2:	d071      	beq.n	800afb8 <_dtoa_r+0x8f8>
 800aed4:	f1c0 0320 	rsb	r3, r0, #32
 800aed8:	2b04      	cmp	r3, #4
 800aeda:	dd65      	ble.n	800afa8 <_dtoa_r+0x8e8>
 800aedc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800aede:	f1c0 001c 	rsb	r0, r0, #28
 800aee2:	4403      	add	r3, r0
 800aee4:	4480      	add	r8, r0
 800aee6:	4406      	add	r6, r0
 800aee8:	9309      	str	r3, [sp, #36]	@ 0x24
 800aeea:	f1b8 0f00 	cmp.w	r8, #0
 800aeee:	dd05      	ble.n	800aefc <_dtoa_r+0x83c>
 800aef0:	4649      	mov	r1, r9
 800aef2:	4642      	mov	r2, r8
 800aef4:	4658      	mov	r0, fp
 800aef6:	f000 fcff 	bl	800b8f8 <__lshift>
 800aefa:	4681      	mov	r9, r0
 800aefc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800aefe:	2b00      	cmp	r3, #0
 800af00:	dd05      	ble.n	800af0e <_dtoa_r+0x84e>
 800af02:	4621      	mov	r1, r4
 800af04:	461a      	mov	r2, r3
 800af06:	4658      	mov	r0, fp
 800af08:	f000 fcf6 	bl	800b8f8 <__lshift>
 800af0c:	4604      	mov	r4, r0
 800af0e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800af10:	2b00      	cmp	r3, #0
 800af12:	d053      	beq.n	800afbc <_dtoa_r+0x8fc>
 800af14:	4621      	mov	r1, r4
 800af16:	4648      	mov	r0, r9
 800af18:	f000 fd5a 	bl	800b9d0 <__mcmp>
 800af1c:	2800      	cmp	r0, #0
 800af1e:	da4d      	bge.n	800afbc <_dtoa_r+0x8fc>
 800af20:	1e7b      	subs	r3, r7, #1
 800af22:	4649      	mov	r1, r9
 800af24:	9304      	str	r3, [sp, #16]
 800af26:	220a      	movs	r2, #10
 800af28:	2300      	movs	r3, #0
 800af2a:	4658      	mov	r0, fp
 800af2c:	f000 faf0 	bl	800b510 <__multadd>
 800af30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800af32:	4681      	mov	r9, r0
 800af34:	2b00      	cmp	r3, #0
 800af36:	f000 816c 	beq.w	800b212 <_dtoa_r+0xb52>
 800af3a:	2300      	movs	r3, #0
 800af3c:	4629      	mov	r1, r5
 800af3e:	220a      	movs	r2, #10
 800af40:	4658      	mov	r0, fp
 800af42:	f000 fae5 	bl	800b510 <__multadd>
 800af46:	9b08      	ldr	r3, [sp, #32]
 800af48:	4605      	mov	r5, r0
 800af4a:	2b00      	cmp	r3, #0
 800af4c:	dc61      	bgt.n	800b012 <_dtoa_r+0x952>
 800af4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800af50:	2b02      	cmp	r3, #2
 800af52:	dc3b      	bgt.n	800afcc <_dtoa_r+0x90c>
 800af54:	e05d      	b.n	800b012 <_dtoa_r+0x952>
 800af56:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800af58:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800af5c:	e746      	b.n	800adec <_dtoa_r+0x72c>
 800af5e:	9b07      	ldr	r3, [sp, #28]
 800af60:	1e5c      	subs	r4, r3, #1
 800af62:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800af64:	42a3      	cmp	r3, r4
 800af66:	bfbf      	itttt	lt
 800af68:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800af6a:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 800af6c:	1ae3      	sublt	r3, r4, r3
 800af6e:	18d2      	addlt	r2, r2, r3
 800af70:	bfa8      	it	ge
 800af72:	1b1c      	subge	r4, r3, r4
 800af74:	9b07      	ldr	r3, [sp, #28]
 800af76:	bfbe      	ittt	lt
 800af78:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800af7a:	920e      	strlt	r2, [sp, #56]	@ 0x38
 800af7c:	2400      	movlt	r4, #0
 800af7e:	2b00      	cmp	r3, #0
 800af80:	bfb5      	itete	lt
 800af82:	eba8 0603 	sublt.w	r6, r8, r3
 800af86:	4646      	movge	r6, r8
 800af88:	2300      	movlt	r3, #0
 800af8a:	9b07      	ldrge	r3, [sp, #28]
 800af8c:	e730      	b.n	800adf0 <_dtoa_r+0x730>
 800af8e:	4646      	mov	r6, r8
 800af90:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800af92:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800af94:	e735      	b.n	800ae02 <_dtoa_r+0x742>
 800af96:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800af98:	e75c      	b.n	800ae54 <_dtoa_r+0x794>
 800af9a:	2300      	movs	r3, #0
 800af9c:	e788      	b.n	800aeb0 <_dtoa_r+0x7f0>
 800af9e:	9b02      	ldr	r3, [sp, #8]
 800afa0:	e786      	b.n	800aeb0 <_dtoa_r+0x7f0>
 800afa2:	2300      	movs	r3, #0
 800afa4:	930a      	str	r3, [sp, #40]	@ 0x28
 800afa6:	e788      	b.n	800aeba <_dtoa_r+0x7fa>
 800afa8:	d09f      	beq.n	800aeea <_dtoa_r+0x82a>
 800afaa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800afac:	331c      	adds	r3, #28
 800afae:	441a      	add	r2, r3
 800afb0:	4498      	add	r8, r3
 800afb2:	441e      	add	r6, r3
 800afb4:	9209      	str	r2, [sp, #36]	@ 0x24
 800afb6:	e798      	b.n	800aeea <_dtoa_r+0x82a>
 800afb8:	4603      	mov	r3, r0
 800afba:	e7f6      	b.n	800afaa <_dtoa_r+0x8ea>
 800afbc:	9b07      	ldr	r3, [sp, #28]
 800afbe:	9704      	str	r7, [sp, #16]
 800afc0:	2b00      	cmp	r3, #0
 800afc2:	dc20      	bgt.n	800b006 <_dtoa_r+0x946>
 800afc4:	9308      	str	r3, [sp, #32]
 800afc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800afc8:	2b02      	cmp	r3, #2
 800afca:	dd1e      	ble.n	800b00a <_dtoa_r+0x94a>
 800afcc:	9b08      	ldr	r3, [sp, #32]
 800afce:	2b00      	cmp	r3, #0
 800afd0:	f47f aebc 	bne.w	800ad4c <_dtoa_r+0x68c>
 800afd4:	4621      	mov	r1, r4
 800afd6:	2205      	movs	r2, #5
 800afd8:	4658      	mov	r0, fp
 800afda:	f000 fa99 	bl	800b510 <__multadd>
 800afde:	4601      	mov	r1, r0
 800afe0:	4604      	mov	r4, r0
 800afe2:	4648      	mov	r0, r9
 800afe4:	f000 fcf4 	bl	800b9d0 <__mcmp>
 800afe8:	2800      	cmp	r0, #0
 800afea:	f77f aeaf 	ble.w	800ad4c <_dtoa_r+0x68c>
 800afee:	2331      	movs	r3, #49	@ 0x31
 800aff0:	4656      	mov	r6, sl
 800aff2:	f806 3b01 	strb.w	r3, [r6], #1
 800aff6:	9b04      	ldr	r3, [sp, #16]
 800aff8:	3301      	adds	r3, #1
 800affa:	9304      	str	r3, [sp, #16]
 800affc:	e6aa      	b.n	800ad54 <_dtoa_r+0x694>
 800affe:	9c07      	ldr	r4, [sp, #28]
 800b000:	9704      	str	r7, [sp, #16]
 800b002:	4625      	mov	r5, r4
 800b004:	e7f3      	b.n	800afee <_dtoa_r+0x92e>
 800b006:	9b07      	ldr	r3, [sp, #28]
 800b008:	9308      	str	r3, [sp, #32]
 800b00a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b00c:	2b00      	cmp	r3, #0
 800b00e:	f000 8104 	beq.w	800b21a <_dtoa_r+0xb5a>
 800b012:	2e00      	cmp	r6, #0
 800b014:	dd05      	ble.n	800b022 <_dtoa_r+0x962>
 800b016:	4629      	mov	r1, r5
 800b018:	4632      	mov	r2, r6
 800b01a:	4658      	mov	r0, fp
 800b01c:	f000 fc6c 	bl	800b8f8 <__lshift>
 800b020:	4605      	mov	r5, r0
 800b022:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b024:	2b00      	cmp	r3, #0
 800b026:	d05a      	beq.n	800b0de <_dtoa_r+0xa1e>
 800b028:	4658      	mov	r0, fp
 800b02a:	6869      	ldr	r1, [r5, #4]
 800b02c:	f000 fa0e 	bl	800b44c <_Balloc>
 800b030:	4606      	mov	r6, r0
 800b032:	b928      	cbnz	r0, 800b040 <_dtoa_r+0x980>
 800b034:	4602      	mov	r2, r0
 800b036:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800b03a:	4b83      	ldr	r3, [pc, #524]	@ (800b248 <_dtoa_r+0xb88>)
 800b03c:	f7ff bb54 	b.w	800a6e8 <_dtoa_r+0x28>
 800b040:	692a      	ldr	r2, [r5, #16]
 800b042:	f105 010c 	add.w	r1, r5, #12
 800b046:	3202      	adds	r2, #2
 800b048:	0092      	lsls	r2, r2, #2
 800b04a:	300c      	adds	r0, #12
 800b04c:	f7ff fa7d 	bl	800a54a <memcpy>
 800b050:	2201      	movs	r2, #1
 800b052:	4631      	mov	r1, r6
 800b054:	4658      	mov	r0, fp
 800b056:	f000 fc4f 	bl	800b8f8 <__lshift>
 800b05a:	462f      	mov	r7, r5
 800b05c:	4605      	mov	r5, r0
 800b05e:	f10a 0301 	add.w	r3, sl, #1
 800b062:	9307      	str	r3, [sp, #28]
 800b064:	9b08      	ldr	r3, [sp, #32]
 800b066:	4453      	add	r3, sl
 800b068:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b06a:	9b02      	ldr	r3, [sp, #8]
 800b06c:	f003 0301 	and.w	r3, r3, #1
 800b070:	930a      	str	r3, [sp, #40]	@ 0x28
 800b072:	9b07      	ldr	r3, [sp, #28]
 800b074:	4621      	mov	r1, r4
 800b076:	3b01      	subs	r3, #1
 800b078:	4648      	mov	r0, r9
 800b07a:	9302      	str	r3, [sp, #8]
 800b07c:	f7ff fa96 	bl	800a5ac <quorem>
 800b080:	4639      	mov	r1, r7
 800b082:	9008      	str	r0, [sp, #32]
 800b084:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800b088:	4648      	mov	r0, r9
 800b08a:	f000 fca1 	bl	800b9d0 <__mcmp>
 800b08e:	462a      	mov	r2, r5
 800b090:	9009      	str	r0, [sp, #36]	@ 0x24
 800b092:	4621      	mov	r1, r4
 800b094:	4658      	mov	r0, fp
 800b096:	f000 fcb7 	bl	800ba08 <__mdiff>
 800b09a:	68c2      	ldr	r2, [r0, #12]
 800b09c:	4606      	mov	r6, r0
 800b09e:	bb02      	cbnz	r2, 800b0e2 <_dtoa_r+0xa22>
 800b0a0:	4601      	mov	r1, r0
 800b0a2:	4648      	mov	r0, r9
 800b0a4:	f000 fc94 	bl	800b9d0 <__mcmp>
 800b0a8:	4602      	mov	r2, r0
 800b0aa:	4631      	mov	r1, r6
 800b0ac:	4658      	mov	r0, fp
 800b0ae:	920c      	str	r2, [sp, #48]	@ 0x30
 800b0b0:	f000 fa0c 	bl	800b4cc <_Bfree>
 800b0b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800b0b6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800b0b8:	9e07      	ldr	r6, [sp, #28]
 800b0ba:	ea43 0102 	orr.w	r1, r3, r2
 800b0be:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b0c0:	4319      	orrs	r1, r3
 800b0c2:	d110      	bne.n	800b0e6 <_dtoa_r+0xa26>
 800b0c4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800b0c8:	d029      	beq.n	800b11e <_dtoa_r+0xa5e>
 800b0ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b0cc:	2b00      	cmp	r3, #0
 800b0ce:	dd02      	ble.n	800b0d6 <_dtoa_r+0xa16>
 800b0d0:	9b08      	ldr	r3, [sp, #32]
 800b0d2:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800b0d6:	9b02      	ldr	r3, [sp, #8]
 800b0d8:	f883 8000 	strb.w	r8, [r3]
 800b0dc:	e63b      	b.n	800ad56 <_dtoa_r+0x696>
 800b0de:	4628      	mov	r0, r5
 800b0e0:	e7bb      	b.n	800b05a <_dtoa_r+0x99a>
 800b0e2:	2201      	movs	r2, #1
 800b0e4:	e7e1      	b.n	800b0aa <_dtoa_r+0x9ea>
 800b0e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b0e8:	2b00      	cmp	r3, #0
 800b0ea:	db04      	blt.n	800b0f6 <_dtoa_r+0xa36>
 800b0ec:	9920      	ldr	r1, [sp, #128]	@ 0x80
 800b0ee:	430b      	orrs	r3, r1
 800b0f0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800b0f2:	430b      	orrs	r3, r1
 800b0f4:	d120      	bne.n	800b138 <_dtoa_r+0xa78>
 800b0f6:	2a00      	cmp	r2, #0
 800b0f8:	dded      	ble.n	800b0d6 <_dtoa_r+0xa16>
 800b0fa:	4649      	mov	r1, r9
 800b0fc:	2201      	movs	r2, #1
 800b0fe:	4658      	mov	r0, fp
 800b100:	f000 fbfa 	bl	800b8f8 <__lshift>
 800b104:	4621      	mov	r1, r4
 800b106:	4681      	mov	r9, r0
 800b108:	f000 fc62 	bl	800b9d0 <__mcmp>
 800b10c:	2800      	cmp	r0, #0
 800b10e:	dc03      	bgt.n	800b118 <_dtoa_r+0xa58>
 800b110:	d1e1      	bne.n	800b0d6 <_dtoa_r+0xa16>
 800b112:	f018 0f01 	tst.w	r8, #1
 800b116:	d0de      	beq.n	800b0d6 <_dtoa_r+0xa16>
 800b118:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800b11c:	d1d8      	bne.n	800b0d0 <_dtoa_r+0xa10>
 800b11e:	2339      	movs	r3, #57	@ 0x39
 800b120:	9a02      	ldr	r2, [sp, #8]
 800b122:	7013      	strb	r3, [r2, #0]
 800b124:	4633      	mov	r3, r6
 800b126:	461e      	mov	r6, r3
 800b128:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800b12c:	3b01      	subs	r3, #1
 800b12e:	2a39      	cmp	r2, #57	@ 0x39
 800b130:	d052      	beq.n	800b1d8 <_dtoa_r+0xb18>
 800b132:	3201      	adds	r2, #1
 800b134:	701a      	strb	r2, [r3, #0]
 800b136:	e60e      	b.n	800ad56 <_dtoa_r+0x696>
 800b138:	2a00      	cmp	r2, #0
 800b13a:	dd07      	ble.n	800b14c <_dtoa_r+0xa8c>
 800b13c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800b140:	d0ed      	beq.n	800b11e <_dtoa_r+0xa5e>
 800b142:	9a02      	ldr	r2, [sp, #8]
 800b144:	f108 0301 	add.w	r3, r8, #1
 800b148:	7013      	strb	r3, [r2, #0]
 800b14a:	e604      	b.n	800ad56 <_dtoa_r+0x696>
 800b14c:	9b07      	ldr	r3, [sp, #28]
 800b14e:	9a07      	ldr	r2, [sp, #28]
 800b150:	f803 8c01 	strb.w	r8, [r3, #-1]
 800b154:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b156:	4293      	cmp	r3, r2
 800b158:	d028      	beq.n	800b1ac <_dtoa_r+0xaec>
 800b15a:	4649      	mov	r1, r9
 800b15c:	2300      	movs	r3, #0
 800b15e:	220a      	movs	r2, #10
 800b160:	4658      	mov	r0, fp
 800b162:	f000 f9d5 	bl	800b510 <__multadd>
 800b166:	42af      	cmp	r7, r5
 800b168:	4681      	mov	r9, r0
 800b16a:	f04f 0300 	mov.w	r3, #0
 800b16e:	f04f 020a 	mov.w	r2, #10
 800b172:	4639      	mov	r1, r7
 800b174:	4658      	mov	r0, fp
 800b176:	d107      	bne.n	800b188 <_dtoa_r+0xac8>
 800b178:	f000 f9ca 	bl	800b510 <__multadd>
 800b17c:	4607      	mov	r7, r0
 800b17e:	4605      	mov	r5, r0
 800b180:	9b07      	ldr	r3, [sp, #28]
 800b182:	3301      	adds	r3, #1
 800b184:	9307      	str	r3, [sp, #28]
 800b186:	e774      	b.n	800b072 <_dtoa_r+0x9b2>
 800b188:	f000 f9c2 	bl	800b510 <__multadd>
 800b18c:	4629      	mov	r1, r5
 800b18e:	4607      	mov	r7, r0
 800b190:	2300      	movs	r3, #0
 800b192:	220a      	movs	r2, #10
 800b194:	4658      	mov	r0, fp
 800b196:	f000 f9bb 	bl	800b510 <__multadd>
 800b19a:	4605      	mov	r5, r0
 800b19c:	e7f0      	b.n	800b180 <_dtoa_r+0xac0>
 800b19e:	9b08      	ldr	r3, [sp, #32]
 800b1a0:	2700      	movs	r7, #0
 800b1a2:	2b00      	cmp	r3, #0
 800b1a4:	bfcc      	ite	gt
 800b1a6:	461e      	movgt	r6, r3
 800b1a8:	2601      	movle	r6, #1
 800b1aa:	4456      	add	r6, sl
 800b1ac:	4649      	mov	r1, r9
 800b1ae:	2201      	movs	r2, #1
 800b1b0:	4658      	mov	r0, fp
 800b1b2:	f000 fba1 	bl	800b8f8 <__lshift>
 800b1b6:	4621      	mov	r1, r4
 800b1b8:	4681      	mov	r9, r0
 800b1ba:	f000 fc09 	bl	800b9d0 <__mcmp>
 800b1be:	2800      	cmp	r0, #0
 800b1c0:	dcb0      	bgt.n	800b124 <_dtoa_r+0xa64>
 800b1c2:	d102      	bne.n	800b1ca <_dtoa_r+0xb0a>
 800b1c4:	f018 0f01 	tst.w	r8, #1
 800b1c8:	d1ac      	bne.n	800b124 <_dtoa_r+0xa64>
 800b1ca:	4633      	mov	r3, r6
 800b1cc:	461e      	mov	r6, r3
 800b1ce:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800b1d2:	2a30      	cmp	r2, #48	@ 0x30
 800b1d4:	d0fa      	beq.n	800b1cc <_dtoa_r+0xb0c>
 800b1d6:	e5be      	b.n	800ad56 <_dtoa_r+0x696>
 800b1d8:	459a      	cmp	sl, r3
 800b1da:	d1a4      	bne.n	800b126 <_dtoa_r+0xa66>
 800b1dc:	9b04      	ldr	r3, [sp, #16]
 800b1de:	3301      	adds	r3, #1
 800b1e0:	9304      	str	r3, [sp, #16]
 800b1e2:	2331      	movs	r3, #49	@ 0x31
 800b1e4:	f88a 3000 	strb.w	r3, [sl]
 800b1e8:	e5b5      	b.n	800ad56 <_dtoa_r+0x696>
 800b1ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800b1ec:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800b24c <_dtoa_r+0xb8c>
 800b1f0:	b11b      	cbz	r3, 800b1fa <_dtoa_r+0xb3a>
 800b1f2:	f10a 0308 	add.w	r3, sl, #8
 800b1f6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800b1f8:	6013      	str	r3, [r2, #0]
 800b1fa:	4650      	mov	r0, sl
 800b1fc:	b017      	add	sp, #92	@ 0x5c
 800b1fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b202:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800b204:	2b01      	cmp	r3, #1
 800b206:	f77f ae3d 	ble.w	800ae84 <_dtoa_r+0x7c4>
 800b20a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b20c:	930a      	str	r3, [sp, #40]	@ 0x28
 800b20e:	2001      	movs	r0, #1
 800b210:	e65b      	b.n	800aeca <_dtoa_r+0x80a>
 800b212:	9b08      	ldr	r3, [sp, #32]
 800b214:	2b00      	cmp	r3, #0
 800b216:	f77f aed6 	ble.w	800afc6 <_dtoa_r+0x906>
 800b21a:	4656      	mov	r6, sl
 800b21c:	4621      	mov	r1, r4
 800b21e:	4648      	mov	r0, r9
 800b220:	f7ff f9c4 	bl	800a5ac <quorem>
 800b224:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800b228:	9b08      	ldr	r3, [sp, #32]
 800b22a:	f806 8b01 	strb.w	r8, [r6], #1
 800b22e:	eba6 020a 	sub.w	r2, r6, sl
 800b232:	4293      	cmp	r3, r2
 800b234:	ddb3      	ble.n	800b19e <_dtoa_r+0xade>
 800b236:	4649      	mov	r1, r9
 800b238:	2300      	movs	r3, #0
 800b23a:	220a      	movs	r2, #10
 800b23c:	4658      	mov	r0, fp
 800b23e:	f000 f967 	bl	800b510 <__multadd>
 800b242:	4681      	mov	r9, r0
 800b244:	e7ea      	b.n	800b21c <_dtoa_r+0xb5c>
 800b246:	bf00      	nop
 800b248:	0800dd2d 	.word	0x0800dd2d
 800b24c:	0800dcc8 	.word	0x0800dcc8

0800b250 <_free_r>:
 800b250:	b538      	push	{r3, r4, r5, lr}
 800b252:	4605      	mov	r5, r0
 800b254:	2900      	cmp	r1, #0
 800b256:	d040      	beq.n	800b2da <_free_r+0x8a>
 800b258:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800b25c:	1f0c      	subs	r4, r1, #4
 800b25e:	2b00      	cmp	r3, #0
 800b260:	bfb8      	it	lt
 800b262:	18e4      	addlt	r4, r4, r3
 800b264:	f000 f8e6 	bl	800b434 <__malloc_lock>
 800b268:	4a1c      	ldr	r2, [pc, #112]	@ (800b2dc <_free_r+0x8c>)
 800b26a:	6813      	ldr	r3, [r2, #0]
 800b26c:	b933      	cbnz	r3, 800b27c <_free_r+0x2c>
 800b26e:	6063      	str	r3, [r4, #4]
 800b270:	6014      	str	r4, [r2, #0]
 800b272:	4628      	mov	r0, r5
 800b274:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b278:	f000 b8e2 	b.w	800b440 <__malloc_unlock>
 800b27c:	42a3      	cmp	r3, r4
 800b27e:	d908      	bls.n	800b292 <_free_r+0x42>
 800b280:	6820      	ldr	r0, [r4, #0]
 800b282:	1821      	adds	r1, r4, r0
 800b284:	428b      	cmp	r3, r1
 800b286:	bf01      	itttt	eq
 800b288:	6819      	ldreq	r1, [r3, #0]
 800b28a:	685b      	ldreq	r3, [r3, #4]
 800b28c:	1809      	addeq	r1, r1, r0
 800b28e:	6021      	streq	r1, [r4, #0]
 800b290:	e7ed      	b.n	800b26e <_free_r+0x1e>
 800b292:	461a      	mov	r2, r3
 800b294:	685b      	ldr	r3, [r3, #4]
 800b296:	b10b      	cbz	r3, 800b29c <_free_r+0x4c>
 800b298:	42a3      	cmp	r3, r4
 800b29a:	d9fa      	bls.n	800b292 <_free_r+0x42>
 800b29c:	6811      	ldr	r1, [r2, #0]
 800b29e:	1850      	adds	r0, r2, r1
 800b2a0:	42a0      	cmp	r0, r4
 800b2a2:	d10b      	bne.n	800b2bc <_free_r+0x6c>
 800b2a4:	6820      	ldr	r0, [r4, #0]
 800b2a6:	4401      	add	r1, r0
 800b2a8:	1850      	adds	r0, r2, r1
 800b2aa:	4283      	cmp	r3, r0
 800b2ac:	6011      	str	r1, [r2, #0]
 800b2ae:	d1e0      	bne.n	800b272 <_free_r+0x22>
 800b2b0:	6818      	ldr	r0, [r3, #0]
 800b2b2:	685b      	ldr	r3, [r3, #4]
 800b2b4:	4408      	add	r0, r1
 800b2b6:	6010      	str	r0, [r2, #0]
 800b2b8:	6053      	str	r3, [r2, #4]
 800b2ba:	e7da      	b.n	800b272 <_free_r+0x22>
 800b2bc:	d902      	bls.n	800b2c4 <_free_r+0x74>
 800b2be:	230c      	movs	r3, #12
 800b2c0:	602b      	str	r3, [r5, #0]
 800b2c2:	e7d6      	b.n	800b272 <_free_r+0x22>
 800b2c4:	6820      	ldr	r0, [r4, #0]
 800b2c6:	1821      	adds	r1, r4, r0
 800b2c8:	428b      	cmp	r3, r1
 800b2ca:	bf01      	itttt	eq
 800b2cc:	6819      	ldreq	r1, [r3, #0]
 800b2ce:	685b      	ldreq	r3, [r3, #4]
 800b2d0:	1809      	addeq	r1, r1, r0
 800b2d2:	6021      	streq	r1, [r4, #0]
 800b2d4:	6063      	str	r3, [r4, #4]
 800b2d6:	6054      	str	r4, [r2, #4]
 800b2d8:	e7cb      	b.n	800b272 <_free_r+0x22>
 800b2da:	bd38      	pop	{r3, r4, r5, pc}
 800b2dc:	20000914 	.word	0x20000914

0800b2e0 <malloc>:
 800b2e0:	4b02      	ldr	r3, [pc, #8]	@ (800b2ec <malloc+0xc>)
 800b2e2:	4601      	mov	r1, r0
 800b2e4:	6818      	ldr	r0, [r3, #0]
 800b2e6:	f000 b825 	b.w	800b334 <_malloc_r>
 800b2ea:	bf00      	nop
 800b2ec:	20000034 	.word	0x20000034

0800b2f0 <sbrk_aligned>:
 800b2f0:	b570      	push	{r4, r5, r6, lr}
 800b2f2:	4e0f      	ldr	r6, [pc, #60]	@ (800b330 <sbrk_aligned+0x40>)
 800b2f4:	460c      	mov	r4, r1
 800b2f6:	6831      	ldr	r1, [r6, #0]
 800b2f8:	4605      	mov	r5, r0
 800b2fa:	b911      	cbnz	r1, 800b302 <sbrk_aligned+0x12>
 800b2fc:	f001 fe8c 	bl	800d018 <_sbrk_r>
 800b300:	6030      	str	r0, [r6, #0]
 800b302:	4621      	mov	r1, r4
 800b304:	4628      	mov	r0, r5
 800b306:	f001 fe87 	bl	800d018 <_sbrk_r>
 800b30a:	1c43      	adds	r3, r0, #1
 800b30c:	d103      	bne.n	800b316 <sbrk_aligned+0x26>
 800b30e:	f04f 34ff 	mov.w	r4, #4294967295
 800b312:	4620      	mov	r0, r4
 800b314:	bd70      	pop	{r4, r5, r6, pc}
 800b316:	1cc4      	adds	r4, r0, #3
 800b318:	f024 0403 	bic.w	r4, r4, #3
 800b31c:	42a0      	cmp	r0, r4
 800b31e:	d0f8      	beq.n	800b312 <sbrk_aligned+0x22>
 800b320:	1a21      	subs	r1, r4, r0
 800b322:	4628      	mov	r0, r5
 800b324:	f001 fe78 	bl	800d018 <_sbrk_r>
 800b328:	3001      	adds	r0, #1
 800b32a:	d1f2      	bne.n	800b312 <sbrk_aligned+0x22>
 800b32c:	e7ef      	b.n	800b30e <sbrk_aligned+0x1e>
 800b32e:	bf00      	nop
 800b330:	20000910 	.word	0x20000910

0800b334 <_malloc_r>:
 800b334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b338:	1ccd      	adds	r5, r1, #3
 800b33a:	f025 0503 	bic.w	r5, r5, #3
 800b33e:	3508      	adds	r5, #8
 800b340:	2d0c      	cmp	r5, #12
 800b342:	bf38      	it	cc
 800b344:	250c      	movcc	r5, #12
 800b346:	2d00      	cmp	r5, #0
 800b348:	4606      	mov	r6, r0
 800b34a:	db01      	blt.n	800b350 <_malloc_r+0x1c>
 800b34c:	42a9      	cmp	r1, r5
 800b34e:	d904      	bls.n	800b35a <_malloc_r+0x26>
 800b350:	230c      	movs	r3, #12
 800b352:	6033      	str	r3, [r6, #0]
 800b354:	2000      	movs	r0, #0
 800b356:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b35a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800b430 <_malloc_r+0xfc>
 800b35e:	f000 f869 	bl	800b434 <__malloc_lock>
 800b362:	f8d8 3000 	ldr.w	r3, [r8]
 800b366:	461c      	mov	r4, r3
 800b368:	bb44      	cbnz	r4, 800b3bc <_malloc_r+0x88>
 800b36a:	4629      	mov	r1, r5
 800b36c:	4630      	mov	r0, r6
 800b36e:	f7ff ffbf 	bl	800b2f0 <sbrk_aligned>
 800b372:	1c43      	adds	r3, r0, #1
 800b374:	4604      	mov	r4, r0
 800b376:	d158      	bne.n	800b42a <_malloc_r+0xf6>
 800b378:	f8d8 4000 	ldr.w	r4, [r8]
 800b37c:	4627      	mov	r7, r4
 800b37e:	2f00      	cmp	r7, #0
 800b380:	d143      	bne.n	800b40a <_malloc_r+0xd6>
 800b382:	2c00      	cmp	r4, #0
 800b384:	d04b      	beq.n	800b41e <_malloc_r+0xea>
 800b386:	6823      	ldr	r3, [r4, #0]
 800b388:	4639      	mov	r1, r7
 800b38a:	4630      	mov	r0, r6
 800b38c:	eb04 0903 	add.w	r9, r4, r3
 800b390:	f001 fe42 	bl	800d018 <_sbrk_r>
 800b394:	4581      	cmp	r9, r0
 800b396:	d142      	bne.n	800b41e <_malloc_r+0xea>
 800b398:	6821      	ldr	r1, [r4, #0]
 800b39a:	4630      	mov	r0, r6
 800b39c:	1a6d      	subs	r5, r5, r1
 800b39e:	4629      	mov	r1, r5
 800b3a0:	f7ff ffa6 	bl	800b2f0 <sbrk_aligned>
 800b3a4:	3001      	adds	r0, #1
 800b3a6:	d03a      	beq.n	800b41e <_malloc_r+0xea>
 800b3a8:	6823      	ldr	r3, [r4, #0]
 800b3aa:	442b      	add	r3, r5
 800b3ac:	6023      	str	r3, [r4, #0]
 800b3ae:	f8d8 3000 	ldr.w	r3, [r8]
 800b3b2:	685a      	ldr	r2, [r3, #4]
 800b3b4:	bb62      	cbnz	r2, 800b410 <_malloc_r+0xdc>
 800b3b6:	f8c8 7000 	str.w	r7, [r8]
 800b3ba:	e00f      	b.n	800b3dc <_malloc_r+0xa8>
 800b3bc:	6822      	ldr	r2, [r4, #0]
 800b3be:	1b52      	subs	r2, r2, r5
 800b3c0:	d420      	bmi.n	800b404 <_malloc_r+0xd0>
 800b3c2:	2a0b      	cmp	r2, #11
 800b3c4:	d917      	bls.n	800b3f6 <_malloc_r+0xc2>
 800b3c6:	1961      	adds	r1, r4, r5
 800b3c8:	42a3      	cmp	r3, r4
 800b3ca:	6025      	str	r5, [r4, #0]
 800b3cc:	bf18      	it	ne
 800b3ce:	6059      	strne	r1, [r3, #4]
 800b3d0:	6863      	ldr	r3, [r4, #4]
 800b3d2:	bf08      	it	eq
 800b3d4:	f8c8 1000 	streq.w	r1, [r8]
 800b3d8:	5162      	str	r2, [r4, r5]
 800b3da:	604b      	str	r3, [r1, #4]
 800b3dc:	4630      	mov	r0, r6
 800b3de:	f000 f82f 	bl	800b440 <__malloc_unlock>
 800b3e2:	f104 000b 	add.w	r0, r4, #11
 800b3e6:	1d23      	adds	r3, r4, #4
 800b3e8:	f020 0007 	bic.w	r0, r0, #7
 800b3ec:	1ac2      	subs	r2, r0, r3
 800b3ee:	bf1c      	itt	ne
 800b3f0:	1a1b      	subne	r3, r3, r0
 800b3f2:	50a3      	strne	r3, [r4, r2]
 800b3f4:	e7af      	b.n	800b356 <_malloc_r+0x22>
 800b3f6:	6862      	ldr	r2, [r4, #4]
 800b3f8:	42a3      	cmp	r3, r4
 800b3fa:	bf0c      	ite	eq
 800b3fc:	f8c8 2000 	streq.w	r2, [r8]
 800b400:	605a      	strne	r2, [r3, #4]
 800b402:	e7eb      	b.n	800b3dc <_malloc_r+0xa8>
 800b404:	4623      	mov	r3, r4
 800b406:	6864      	ldr	r4, [r4, #4]
 800b408:	e7ae      	b.n	800b368 <_malloc_r+0x34>
 800b40a:	463c      	mov	r4, r7
 800b40c:	687f      	ldr	r7, [r7, #4]
 800b40e:	e7b6      	b.n	800b37e <_malloc_r+0x4a>
 800b410:	461a      	mov	r2, r3
 800b412:	685b      	ldr	r3, [r3, #4]
 800b414:	42a3      	cmp	r3, r4
 800b416:	d1fb      	bne.n	800b410 <_malloc_r+0xdc>
 800b418:	2300      	movs	r3, #0
 800b41a:	6053      	str	r3, [r2, #4]
 800b41c:	e7de      	b.n	800b3dc <_malloc_r+0xa8>
 800b41e:	230c      	movs	r3, #12
 800b420:	4630      	mov	r0, r6
 800b422:	6033      	str	r3, [r6, #0]
 800b424:	f000 f80c 	bl	800b440 <__malloc_unlock>
 800b428:	e794      	b.n	800b354 <_malloc_r+0x20>
 800b42a:	6005      	str	r5, [r0, #0]
 800b42c:	e7d6      	b.n	800b3dc <_malloc_r+0xa8>
 800b42e:	bf00      	nop
 800b430:	20000914 	.word	0x20000914

0800b434 <__malloc_lock>:
 800b434:	4801      	ldr	r0, [pc, #4]	@ (800b43c <__malloc_lock+0x8>)
 800b436:	f7ff b878 	b.w	800a52a <__retarget_lock_acquire_recursive>
 800b43a:	bf00      	nop
 800b43c:	2000090c 	.word	0x2000090c

0800b440 <__malloc_unlock>:
 800b440:	4801      	ldr	r0, [pc, #4]	@ (800b448 <__malloc_unlock+0x8>)
 800b442:	f7ff b873 	b.w	800a52c <__retarget_lock_release_recursive>
 800b446:	bf00      	nop
 800b448:	2000090c 	.word	0x2000090c

0800b44c <_Balloc>:
 800b44c:	b570      	push	{r4, r5, r6, lr}
 800b44e:	69c6      	ldr	r6, [r0, #28]
 800b450:	4604      	mov	r4, r0
 800b452:	460d      	mov	r5, r1
 800b454:	b976      	cbnz	r6, 800b474 <_Balloc+0x28>
 800b456:	2010      	movs	r0, #16
 800b458:	f7ff ff42 	bl	800b2e0 <malloc>
 800b45c:	4602      	mov	r2, r0
 800b45e:	61e0      	str	r0, [r4, #28]
 800b460:	b920      	cbnz	r0, 800b46c <_Balloc+0x20>
 800b462:	216b      	movs	r1, #107	@ 0x6b
 800b464:	4b17      	ldr	r3, [pc, #92]	@ (800b4c4 <_Balloc+0x78>)
 800b466:	4818      	ldr	r0, [pc, #96]	@ (800b4c8 <_Balloc+0x7c>)
 800b468:	f7ff f882 	bl	800a570 <__assert_func>
 800b46c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b470:	6006      	str	r6, [r0, #0]
 800b472:	60c6      	str	r6, [r0, #12]
 800b474:	69e6      	ldr	r6, [r4, #28]
 800b476:	68f3      	ldr	r3, [r6, #12]
 800b478:	b183      	cbz	r3, 800b49c <_Balloc+0x50>
 800b47a:	69e3      	ldr	r3, [r4, #28]
 800b47c:	68db      	ldr	r3, [r3, #12]
 800b47e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800b482:	b9b8      	cbnz	r0, 800b4b4 <_Balloc+0x68>
 800b484:	2101      	movs	r1, #1
 800b486:	fa01 f605 	lsl.w	r6, r1, r5
 800b48a:	1d72      	adds	r2, r6, #5
 800b48c:	4620      	mov	r0, r4
 800b48e:	0092      	lsls	r2, r2, #2
 800b490:	f001 fddf 	bl	800d052 <_calloc_r>
 800b494:	b160      	cbz	r0, 800b4b0 <_Balloc+0x64>
 800b496:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800b49a:	e00e      	b.n	800b4ba <_Balloc+0x6e>
 800b49c:	2221      	movs	r2, #33	@ 0x21
 800b49e:	2104      	movs	r1, #4
 800b4a0:	4620      	mov	r0, r4
 800b4a2:	f001 fdd6 	bl	800d052 <_calloc_r>
 800b4a6:	69e3      	ldr	r3, [r4, #28]
 800b4a8:	60f0      	str	r0, [r6, #12]
 800b4aa:	68db      	ldr	r3, [r3, #12]
 800b4ac:	2b00      	cmp	r3, #0
 800b4ae:	d1e4      	bne.n	800b47a <_Balloc+0x2e>
 800b4b0:	2000      	movs	r0, #0
 800b4b2:	bd70      	pop	{r4, r5, r6, pc}
 800b4b4:	6802      	ldr	r2, [r0, #0]
 800b4b6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b4ba:	2300      	movs	r3, #0
 800b4bc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800b4c0:	e7f7      	b.n	800b4b2 <_Balloc+0x66>
 800b4c2:	bf00      	nop
 800b4c4:	0800dbe4 	.word	0x0800dbe4
 800b4c8:	0800dd3e 	.word	0x0800dd3e

0800b4cc <_Bfree>:
 800b4cc:	b570      	push	{r4, r5, r6, lr}
 800b4ce:	69c6      	ldr	r6, [r0, #28]
 800b4d0:	4605      	mov	r5, r0
 800b4d2:	460c      	mov	r4, r1
 800b4d4:	b976      	cbnz	r6, 800b4f4 <_Bfree+0x28>
 800b4d6:	2010      	movs	r0, #16
 800b4d8:	f7ff ff02 	bl	800b2e0 <malloc>
 800b4dc:	4602      	mov	r2, r0
 800b4de:	61e8      	str	r0, [r5, #28]
 800b4e0:	b920      	cbnz	r0, 800b4ec <_Bfree+0x20>
 800b4e2:	218f      	movs	r1, #143	@ 0x8f
 800b4e4:	4b08      	ldr	r3, [pc, #32]	@ (800b508 <_Bfree+0x3c>)
 800b4e6:	4809      	ldr	r0, [pc, #36]	@ (800b50c <_Bfree+0x40>)
 800b4e8:	f7ff f842 	bl	800a570 <__assert_func>
 800b4ec:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b4f0:	6006      	str	r6, [r0, #0]
 800b4f2:	60c6      	str	r6, [r0, #12]
 800b4f4:	b13c      	cbz	r4, 800b506 <_Bfree+0x3a>
 800b4f6:	69eb      	ldr	r3, [r5, #28]
 800b4f8:	6862      	ldr	r2, [r4, #4]
 800b4fa:	68db      	ldr	r3, [r3, #12]
 800b4fc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800b500:	6021      	str	r1, [r4, #0]
 800b502:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800b506:	bd70      	pop	{r4, r5, r6, pc}
 800b508:	0800dbe4 	.word	0x0800dbe4
 800b50c:	0800dd3e 	.word	0x0800dd3e

0800b510 <__multadd>:
 800b510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b514:	4607      	mov	r7, r0
 800b516:	460c      	mov	r4, r1
 800b518:	461e      	mov	r6, r3
 800b51a:	2000      	movs	r0, #0
 800b51c:	690d      	ldr	r5, [r1, #16]
 800b51e:	f101 0c14 	add.w	ip, r1, #20
 800b522:	f8dc 3000 	ldr.w	r3, [ip]
 800b526:	3001      	adds	r0, #1
 800b528:	b299      	uxth	r1, r3
 800b52a:	fb02 6101 	mla	r1, r2, r1, r6
 800b52e:	0c1e      	lsrs	r6, r3, #16
 800b530:	0c0b      	lsrs	r3, r1, #16
 800b532:	fb02 3306 	mla	r3, r2, r6, r3
 800b536:	b289      	uxth	r1, r1
 800b538:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800b53c:	4285      	cmp	r5, r0
 800b53e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800b542:	f84c 1b04 	str.w	r1, [ip], #4
 800b546:	dcec      	bgt.n	800b522 <__multadd+0x12>
 800b548:	b30e      	cbz	r6, 800b58e <__multadd+0x7e>
 800b54a:	68a3      	ldr	r3, [r4, #8]
 800b54c:	42ab      	cmp	r3, r5
 800b54e:	dc19      	bgt.n	800b584 <__multadd+0x74>
 800b550:	6861      	ldr	r1, [r4, #4]
 800b552:	4638      	mov	r0, r7
 800b554:	3101      	adds	r1, #1
 800b556:	f7ff ff79 	bl	800b44c <_Balloc>
 800b55a:	4680      	mov	r8, r0
 800b55c:	b928      	cbnz	r0, 800b56a <__multadd+0x5a>
 800b55e:	4602      	mov	r2, r0
 800b560:	21ba      	movs	r1, #186	@ 0xba
 800b562:	4b0c      	ldr	r3, [pc, #48]	@ (800b594 <__multadd+0x84>)
 800b564:	480c      	ldr	r0, [pc, #48]	@ (800b598 <__multadd+0x88>)
 800b566:	f7ff f803 	bl	800a570 <__assert_func>
 800b56a:	6922      	ldr	r2, [r4, #16]
 800b56c:	f104 010c 	add.w	r1, r4, #12
 800b570:	3202      	adds	r2, #2
 800b572:	0092      	lsls	r2, r2, #2
 800b574:	300c      	adds	r0, #12
 800b576:	f7fe ffe8 	bl	800a54a <memcpy>
 800b57a:	4621      	mov	r1, r4
 800b57c:	4638      	mov	r0, r7
 800b57e:	f7ff ffa5 	bl	800b4cc <_Bfree>
 800b582:	4644      	mov	r4, r8
 800b584:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800b588:	3501      	adds	r5, #1
 800b58a:	615e      	str	r6, [r3, #20]
 800b58c:	6125      	str	r5, [r4, #16]
 800b58e:	4620      	mov	r0, r4
 800b590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b594:	0800dd2d 	.word	0x0800dd2d
 800b598:	0800dd3e 	.word	0x0800dd3e

0800b59c <__s2b>:
 800b59c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b5a0:	4615      	mov	r5, r2
 800b5a2:	2209      	movs	r2, #9
 800b5a4:	461f      	mov	r7, r3
 800b5a6:	3308      	adds	r3, #8
 800b5a8:	460c      	mov	r4, r1
 800b5aa:	fb93 f3f2 	sdiv	r3, r3, r2
 800b5ae:	4606      	mov	r6, r0
 800b5b0:	2201      	movs	r2, #1
 800b5b2:	2100      	movs	r1, #0
 800b5b4:	429a      	cmp	r2, r3
 800b5b6:	db09      	blt.n	800b5cc <__s2b+0x30>
 800b5b8:	4630      	mov	r0, r6
 800b5ba:	f7ff ff47 	bl	800b44c <_Balloc>
 800b5be:	b940      	cbnz	r0, 800b5d2 <__s2b+0x36>
 800b5c0:	4602      	mov	r2, r0
 800b5c2:	21d3      	movs	r1, #211	@ 0xd3
 800b5c4:	4b18      	ldr	r3, [pc, #96]	@ (800b628 <__s2b+0x8c>)
 800b5c6:	4819      	ldr	r0, [pc, #100]	@ (800b62c <__s2b+0x90>)
 800b5c8:	f7fe ffd2 	bl	800a570 <__assert_func>
 800b5cc:	0052      	lsls	r2, r2, #1
 800b5ce:	3101      	adds	r1, #1
 800b5d0:	e7f0      	b.n	800b5b4 <__s2b+0x18>
 800b5d2:	9b08      	ldr	r3, [sp, #32]
 800b5d4:	2d09      	cmp	r5, #9
 800b5d6:	6143      	str	r3, [r0, #20]
 800b5d8:	f04f 0301 	mov.w	r3, #1
 800b5dc:	6103      	str	r3, [r0, #16]
 800b5de:	dd16      	ble.n	800b60e <__s2b+0x72>
 800b5e0:	f104 0909 	add.w	r9, r4, #9
 800b5e4:	46c8      	mov	r8, r9
 800b5e6:	442c      	add	r4, r5
 800b5e8:	f818 3b01 	ldrb.w	r3, [r8], #1
 800b5ec:	4601      	mov	r1, r0
 800b5ee:	220a      	movs	r2, #10
 800b5f0:	4630      	mov	r0, r6
 800b5f2:	3b30      	subs	r3, #48	@ 0x30
 800b5f4:	f7ff ff8c 	bl	800b510 <__multadd>
 800b5f8:	45a0      	cmp	r8, r4
 800b5fa:	d1f5      	bne.n	800b5e8 <__s2b+0x4c>
 800b5fc:	f1a5 0408 	sub.w	r4, r5, #8
 800b600:	444c      	add	r4, r9
 800b602:	1b2d      	subs	r5, r5, r4
 800b604:	1963      	adds	r3, r4, r5
 800b606:	42bb      	cmp	r3, r7
 800b608:	db04      	blt.n	800b614 <__s2b+0x78>
 800b60a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b60e:	2509      	movs	r5, #9
 800b610:	340a      	adds	r4, #10
 800b612:	e7f6      	b.n	800b602 <__s2b+0x66>
 800b614:	f814 3b01 	ldrb.w	r3, [r4], #1
 800b618:	4601      	mov	r1, r0
 800b61a:	220a      	movs	r2, #10
 800b61c:	4630      	mov	r0, r6
 800b61e:	3b30      	subs	r3, #48	@ 0x30
 800b620:	f7ff ff76 	bl	800b510 <__multadd>
 800b624:	e7ee      	b.n	800b604 <__s2b+0x68>
 800b626:	bf00      	nop
 800b628:	0800dd2d 	.word	0x0800dd2d
 800b62c:	0800dd3e 	.word	0x0800dd3e

0800b630 <__hi0bits>:
 800b630:	4603      	mov	r3, r0
 800b632:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800b636:	bf3a      	itte	cc
 800b638:	0403      	lslcc	r3, r0, #16
 800b63a:	2010      	movcc	r0, #16
 800b63c:	2000      	movcs	r0, #0
 800b63e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800b642:	bf3c      	itt	cc
 800b644:	021b      	lslcc	r3, r3, #8
 800b646:	3008      	addcc	r0, #8
 800b648:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800b64c:	bf3c      	itt	cc
 800b64e:	011b      	lslcc	r3, r3, #4
 800b650:	3004      	addcc	r0, #4
 800b652:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800b656:	bf3c      	itt	cc
 800b658:	009b      	lslcc	r3, r3, #2
 800b65a:	3002      	addcc	r0, #2
 800b65c:	2b00      	cmp	r3, #0
 800b65e:	db05      	blt.n	800b66c <__hi0bits+0x3c>
 800b660:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800b664:	f100 0001 	add.w	r0, r0, #1
 800b668:	bf08      	it	eq
 800b66a:	2020      	moveq	r0, #32
 800b66c:	4770      	bx	lr

0800b66e <__lo0bits>:
 800b66e:	6803      	ldr	r3, [r0, #0]
 800b670:	4602      	mov	r2, r0
 800b672:	f013 0007 	ands.w	r0, r3, #7
 800b676:	d00b      	beq.n	800b690 <__lo0bits+0x22>
 800b678:	07d9      	lsls	r1, r3, #31
 800b67a:	d421      	bmi.n	800b6c0 <__lo0bits+0x52>
 800b67c:	0798      	lsls	r0, r3, #30
 800b67e:	bf49      	itett	mi
 800b680:	085b      	lsrmi	r3, r3, #1
 800b682:	089b      	lsrpl	r3, r3, #2
 800b684:	2001      	movmi	r0, #1
 800b686:	6013      	strmi	r3, [r2, #0]
 800b688:	bf5c      	itt	pl
 800b68a:	2002      	movpl	r0, #2
 800b68c:	6013      	strpl	r3, [r2, #0]
 800b68e:	4770      	bx	lr
 800b690:	b299      	uxth	r1, r3
 800b692:	b909      	cbnz	r1, 800b698 <__lo0bits+0x2a>
 800b694:	2010      	movs	r0, #16
 800b696:	0c1b      	lsrs	r3, r3, #16
 800b698:	b2d9      	uxtb	r1, r3
 800b69a:	b909      	cbnz	r1, 800b6a0 <__lo0bits+0x32>
 800b69c:	3008      	adds	r0, #8
 800b69e:	0a1b      	lsrs	r3, r3, #8
 800b6a0:	0719      	lsls	r1, r3, #28
 800b6a2:	bf04      	itt	eq
 800b6a4:	091b      	lsreq	r3, r3, #4
 800b6a6:	3004      	addeq	r0, #4
 800b6a8:	0799      	lsls	r1, r3, #30
 800b6aa:	bf04      	itt	eq
 800b6ac:	089b      	lsreq	r3, r3, #2
 800b6ae:	3002      	addeq	r0, #2
 800b6b0:	07d9      	lsls	r1, r3, #31
 800b6b2:	d403      	bmi.n	800b6bc <__lo0bits+0x4e>
 800b6b4:	085b      	lsrs	r3, r3, #1
 800b6b6:	f100 0001 	add.w	r0, r0, #1
 800b6ba:	d003      	beq.n	800b6c4 <__lo0bits+0x56>
 800b6bc:	6013      	str	r3, [r2, #0]
 800b6be:	4770      	bx	lr
 800b6c0:	2000      	movs	r0, #0
 800b6c2:	4770      	bx	lr
 800b6c4:	2020      	movs	r0, #32
 800b6c6:	4770      	bx	lr

0800b6c8 <__i2b>:
 800b6c8:	b510      	push	{r4, lr}
 800b6ca:	460c      	mov	r4, r1
 800b6cc:	2101      	movs	r1, #1
 800b6ce:	f7ff febd 	bl	800b44c <_Balloc>
 800b6d2:	4602      	mov	r2, r0
 800b6d4:	b928      	cbnz	r0, 800b6e2 <__i2b+0x1a>
 800b6d6:	f240 1145 	movw	r1, #325	@ 0x145
 800b6da:	4b04      	ldr	r3, [pc, #16]	@ (800b6ec <__i2b+0x24>)
 800b6dc:	4804      	ldr	r0, [pc, #16]	@ (800b6f0 <__i2b+0x28>)
 800b6de:	f7fe ff47 	bl	800a570 <__assert_func>
 800b6e2:	2301      	movs	r3, #1
 800b6e4:	6144      	str	r4, [r0, #20]
 800b6e6:	6103      	str	r3, [r0, #16]
 800b6e8:	bd10      	pop	{r4, pc}
 800b6ea:	bf00      	nop
 800b6ec:	0800dd2d 	.word	0x0800dd2d
 800b6f0:	0800dd3e 	.word	0x0800dd3e

0800b6f4 <__multiply>:
 800b6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6f8:	4614      	mov	r4, r2
 800b6fa:	690a      	ldr	r2, [r1, #16]
 800b6fc:	6923      	ldr	r3, [r4, #16]
 800b6fe:	460f      	mov	r7, r1
 800b700:	429a      	cmp	r2, r3
 800b702:	bfa2      	ittt	ge
 800b704:	4623      	movge	r3, r4
 800b706:	460c      	movge	r4, r1
 800b708:	461f      	movge	r7, r3
 800b70a:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800b70e:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800b712:	68a3      	ldr	r3, [r4, #8]
 800b714:	6861      	ldr	r1, [r4, #4]
 800b716:	eb0a 0609 	add.w	r6, sl, r9
 800b71a:	42b3      	cmp	r3, r6
 800b71c:	b085      	sub	sp, #20
 800b71e:	bfb8      	it	lt
 800b720:	3101      	addlt	r1, #1
 800b722:	f7ff fe93 	bl	800b44c <_Balloc>
 800b726:	b930      	cbnz	r0, 800b736 <__multiply+0x42>
 800b728:	4602      	mov	r2, r0
 800b72a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800b72e:	4b43      	ldr	r3, [pc, #268]	@ (800b83c <__multiply+0x148>)
 800b730:	4843      	ldr	r0, [pc, #268]	@ (800b840 <__multiply+0x14c>)
 800b732:	f7fe ff1d 	bl	800a570 <__assert_func>
 800b736:	f100 0514 	add.w	r5, r0, #20
 800b73a:	462b      	mov	r3, r5
 800b73c:	2200      	movs	r2, #0
 800b73e:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800b742:	4543      	cmp	r3, r8
 800b744:	d321      	bcc.n	800b78a <__multiply+0x96>
 800b746:	f107 0114 	add.w	r1, r7, #20
 800b74a:	f104 0214 	add.w	r2, r4, #20
 800b74e:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800b752:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800b756:	9302      	str	r3, [sp, #8]
 800b758:	1b13      	subs	r3, r2, r4
 800b75a:	3b15      	subs	r3, #21
 800b75c:	f023 0303 	bic.w	r3, r3, #3
 800b760:	3304      	adds	r3, #4
 800b762:	f104 0715 	add.w	r7, r4, #21
 800b766:	42ba      	cmp	r2, r7
 800b768:	bf38      	it	cc
 800b76a:	2304      	movcc	r3, #4
 800b76c:	9301      	str	r3, [sp, #4]
 800b76e:	9b02      	ldr	r3, [sp, #8]
 800b770:	9103      	str	r1, [sp, #12]
 800b772:	428b      	cmp	r3, r1
 800b774:	d80c      	bhi.n	800b790 <__multiply+0x9c>
 800b776:	2e00      	cmp	r6, #0
 800b778:	dd03      	ble.n	800b782 <__multiply+0x8e>
 800b77a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800b77e:	2b00      	cmp	r3, #0
 800b780:	d05a      	beq.n	800b838 <__multiply+0x144>
 800b782:	6106      	str	r6, [r0, #16]
 800b784:	b005      	add	sp, #20
 800b786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b78a:	f843 2b04 	str.w	r2, [r3], #4
 800b78e:	e7d8      	b.n	800b742 <__multiply+0x4e>
 800b790:	f8b1 a000 	ldrh.w	sl, [r1]
 800b794:	f1ba 0f00 	cmp.w	sl, #0
 800b798:	d023      	beq.n	800b7e2 <__multiply+0xee>
 800b79a:	46a9      	mov	r9, r5
 800b79c:	f04f 0c00 	mov.w	ip, #0
 800b7a0:	f104 0e14 	add.w	lr, r4, #20
 800b7a4:	f85e 7b04 	ldr.w	r7, [lr], #4
 800b7a8:	f8d9 3000 	ldr.w	r3, [r9]
 800b7ac:	fa1f fb87 	uxth.w	fp, r7
 800b7b0:	b29b      	uxth	r3, r3
 800b7b2:	fb0a 330b 	mla	r3, sl, fp, r3
 800b7b6:	4463      	add	r3, ip
 800b7b8:	f8d9 c000 	ldr.w	ip, [r9]
 800b7bc:	0c3f      	lsrs	r7, r7, #16
 800b7be:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800b7c2:	fb0a c707 	mla	r7, sl, r7, ip
 800b7c6:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800b7ca:	b29b      	uxth	r3, r3
 800b7cc:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800b7d0:	4572      	cmp	r2, lr
 800b7d2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800b7d6:	f849 3b04 	str.w	r3, [r9], #4
 800b7da:	d8e3      	bhi.n	800b7a4 <__multiply+0xb0>
 800b7dc:	9b01      	ldr	r3, [sp, #4]
 800b7de:	f845 c003 	str.w	ip, [r5, r3]
 800b7e2:	9b03      	ldr	r3, [sp, #12]
 800b7e4:	3104      	adds	r1, #4
 800b7e6:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800b7ea:	f1b9 0f00 	cmp.w	r9, #0
 800b7ee:	d021      	beq.n	800b834 <__multiply+0x140>
 800b7f0:	46ae      	mov	lr, r5
 800b7f2:	f04f 0a00 	mov.w	sl, #0
 800b7f6:	682b      	ldr	r3, [r5, #0]
 800b7f8:	f104 0c14 	add.w	ip, r4, #20
 800b7fc:	f8bc b000 	ldrh.w	fp, [ip]
 800b800:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800b804:	b29b      	uxth	r3, r3
 800b806:	fb09 770b 	mla	r7, r9, fp, r7
 800b80a:	4457      	add	r7, sl
 800b80c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800b810:	f84e 3b04 	str.w	r3, [lr], #4
 800b814:	f85c 3b04 	ldr.w	r3, [ip], #4
 800b818:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800b81c:	f8be 3000 	ldrh.w	r3, [lr]
 800b820:	4562      	cmp	r2, ip
 800b822:	fb09 330a 	mla	r3, r9, sl, r3
 800b826:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800b82a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800b82e:	d8e5      	bhi.n	800b7fc <__multiply+0x108>
 800b830:	9f01      	ldr	r7, [sp, #4]
 800b832:	51eb      	str	r3, [r5, r7]
 800b834:	3504      	adds	r5, #4
 800b836:	e79a      	b.n	800b76e <__multiply+0x7a>
 800b838:	3e01      	subs	r6, #1
 800b83a:	e79c      	b.n	800b776 <__multiply+0x82>
 800b83c:	0800dd2d 	.word	0x0800dd2d
 800b840:	0800dd3e 	.word	0x0800dd3e

0800b844 <__pow5mult>:
 800b844:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b848:	4615      	mov	r5, r2
 800b84a:	f012 0203 	ands.w	r2, r2, #3
 800b84e:	4607      	mov	r7, r0
 800b850:	460e      	mov	r6, r1
 800b852:	d007      	beq.n	800b864 <__pow5mult+0x20>
 800b854:	4c25      	ldr	r4, [pc, #148]	@ (800b8ec <__pow5mult+0xa8>)
 800b856:	3a01      	subs	r2, #1
 800b858:	2300      	movs	r3, #0
 800b85a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800b85e:	f7ff fe57 	bl	800b510 <__multadd>
 800b862:	4606      	mov	r6, r0
 800b864:	10ad      	asrs	r5, r5, #2
 800b866:	d03d      	beq.n	800b8e4 <__pow5mult+0xa0>
 800b868:	69fc      	ldr	r4, [r7, #28]
 800b86a:	b97c      	cbnz	r4, 800b88c <__pow5mult+0x48>
 800b86c:	2010      	movs	r0, #16
 800b86e:	f7ff fd37 	bl	800b2e0 <malloc>
 800b872:	4602      	mov	r2, r0
 800b874:	61f8      	str	r0, [r7, #28]
 800b876:	b928      	cbnz	r0, 800b884 <__pow5mult+0x40>
 800b878:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800b87c:	4b1c      	ldr	r3, [pc, #112]	@ (800b8f0 <__pow5mult+0xac>)
 800b87e:	481d      	ldr	r0, [pc, #116]	@ (800b8f4 <__pow5mult+0xb0>)
 800b880:	f7fe fe76 	bl	800a570 <__assert_func>
 800b884:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800b888:	6004      	str	r4, [r0, #0]
 800b88a:	60c4      	str	r4, [r0, #12]
 800b88c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800b890:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800b894:	b94c      	cbnz	r4, 800b8aa <__pow5mult+0x66>
 800b896:	f240 2171 	movw	r1, #625	@ 0x271
 800b89a:	4638      	mov	r0, r7
 800b89c:	f7ff ff14 	bl	800b6c8 <__i2b>
 800b8a0:	2300      	movs	r3, #0
 800b8a2:	4604      	mov	r4, r0
 800b8a4:	f8c8 0008 	str.w	r0, [r8, #8]
 800b8a8:	6003      	str	r3, [r0, #0]
 800b8aa:	f04f 0900 	mov.w	r9, #0
 800b8ae:	07eb      	lsls	r3, r5, #31
 800b8b0:	d50a      	bpl.n	800b8c8 <__pow5mult+0x84>
 800b8b2:	4631      	mov	r1, r6
 800b8b4:	4622      	mov	r2, r4
 800b8b6:	4638      	mov	r0, r7
 800b8b8:	f7ff ff1c 	bl	800b6f4 <__multiply>
 800b8bc:	4680      	mov	r8, r0
 800b8be:	4631      	mov	r1, r6
 800b8c0:	4638      	mov	r0, r7
 800b8c2:	f7ff fe03 	bl	800b4cc <_Bfree>
 800b8c6:	4646      	mov	r6, r8
 800b8c8:	106d      	asrs	r5, r5, #1
 800b8ca:	d00b      	beq.n	800b8e4 <__pow5mult+0xa0>
 800b8cc:	6820      	ldr	r0, [r4, #0]
 800b8ce:	b938      	cbnz	r0, 800b8e0 <__pow5mult+0x9c>
 800b8d0:	4622      	mov	r2, r4
 800b8d2:	4621      	mov	r1, r4
 800b8d4:	4638      	mov	r0, r7
 800b8d6:	f7ff ff0d 	bl	800b6f4 <__multiply>
 800b8da:	6020      	str	r0, [r4, #0]
 800b8dc:	f8c0 9000 	str.w	r9, [r0]
 800b8e0:	4604      	mov	r4, r0
 800b8e2:	e7e4      	b.n	800b8ae <__pow5mult+0x6a>
 800b8e4:	4630      	mov	r0, r6
 800b8e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b8ea:	bf00      	nop
 800b8ec:	0800dd98 	.word	0x0800dd98
 800b8f0:	0800dbe4 	.word	0x0800dbe4
 800b8f4:	0800dd3e 	.word	0x0800dd3e

0800b8f8 <__lshift>:
 800b8f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b8fc:	460c      	mov	r4, r1
 800b8fe:	4607      	mov	r7, r0
 800b900:	4691      	mov	r9, r2
 800b902:	6923      	ldr	r3, [r4, #16]
 800b904:	6849      	ldr	r1, [r1, #4]
 800b906:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800b90a:	68a3      	ldr	r3, [r4, #8]
 800b90c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800b910:	f108 0601 	add.w	r6, r8, #1
 800b914:	42b3      	cmp	r3, r6
 800b916:	db0b      	blt.n	800b930 <__lshift+0x38>
 800b918:	4638      	mov	r0, r7
 800b91a:	f7ff fd97 	bl	800b44c <_Balloc>
 800b91e:	4605      	mov	r5, r0
 800b920:	b948      	cbnz	r0, 800b936 <__lshift+0x3e>
 800b922:	4602      	mov	r2, r0
 800b924:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800b928:	4b27      	ldr	r3, [pc, #156]	@ (800b9c8 <__lshift+0xd0>)
 800b92a:	4828      	ldr	r0, [pc, #160]	@ (800b9cc <__lshift+0xd4>)
 800b92c:	f7fe fe20 	bl	800a570 <__assert_func>
 800b930:	3101      	adds	r1, #1
 800b932:	005b      	lsls	r3, r3, #1
 800b934:	e7ee      	b.n	800b914 <__lshift+0x1c>
 800b936:	2300      	movs	r3, #0
 800b938:	f100 0114 	add.w	r1, r0, #20
 800b93c:	f100 0210 	add.w	r2, r0, #16
 800b940:	4618      	mov	r0, r3
 800b942:	4553      	cmp	r3, sl
 800b944:	db33      	blt.n	800b9ae <__lshift+0xb6>
 800b946:	6920      	ldr	r0, [r4, #16]
 800b948:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800b94c:	f104 0314 	add.w	r3, r4, #20
 800b950:	f019 091f 	ands.w	r9, r9, #31
 800b954:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800b958:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800b95c:	d02b      	beq.n	800b9b6 <__lshift+0xbe>
 800b95e:	468a      	mov	sl, r1
 800b960:	2200      	movs	r2, #0
 800b962:	f1c9 0e20 	rsb	lr, r9, #32
 800b966:	6818      	ldr	r0, [r3, #0]
 800b968:	fa00 f009 	lsl.w	r0, r0, r9
 800b96c:	4310      	orrs	r0, r2
 800b96e:	f84a 0b04 	str.w	r0, [sl], #4
 800b972:	f853 2b04 	ldr.w	r2, [r3], #4
 800b976:	459c      	cmp	ip, r3
 800b978:	fa22 f20e 	lsr.w	r2, r2, lr
 800b97c:	d8f3      	bhi.n	800b966 <__lshift+0x6e>
 800b97e:	ebac 0304 	sub.w	r3, ip, r4
 800b982:	3b15      	subs	r3, #21
 800b984:	f023 0303 	bic.w	r3, r3, #3
 800b988:	3304      	adds	r3, #4
 800b98a:	f104 0015 	add.w	r0, r4, #21
 800b98e:	4584      	cmp	ip, r0
 800b990:	bf38      	it	cc
 800b992:	2304      	movcc	r3, #4
 800b994:	50ca      	str	r2, [r1, r3]
 800b996:	b10a      	cbz	r2, 800b99c <__lshift+0xa4>
 800b998:	f108 0602 	add.w	r6, r8, #2
 800b99c:	3e01      	subs	r6, #1
 800b99e:	4638      	mov	r0, r7
 800b9a0:	4621      	mov	r1, r4
 800b9a2:	612e      	str	r6, [r5, #16]
 800b9a4:	f7ff fd92 	bl	800b4cc <_Bfree>
 800b9a8:	4628      	mov	r0, r5
 800b9aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b9ae:	f842 0f04 	str.w	r0, [r2, #4]!
 800b9b2:	3301      	adds	r3, #1
 800b9b4:	e7c5      	b.n	800b942 <__lshift+0x4a>
 800b9b6:	3904      	subs	r1, #4
 800b9b8:	f853 2b04 	ldr.w	r2, [r3], #4
 800b9bc:	459c      	cmp	ip, r3
 800b9be:	f841 2f04 	str.w	r2, [r1, #4]!
 800b9c2:	d8f9      	bhi.n	800b9b8 <__lshift+0xc0>
 800b9c4:	e7ea      	b.n	800b99c <__lshift+0xa4>
 800b9c6:	bf00      	nop
 800b9c8:	0800dd2d 	.word	0x0800dd2d
 800b9cc:	0800dd3e 	.word	0x0800dd3e

0800b9d0 <__mcmp>:
 800b9d0:	4603      	mov	r3, r0
 800b9d2:	690a      	ldr	r2, [r1, #16]
 800b9d4:	6900      	ldr	r0, [r0, #16]
 800b9d6:	b530      	push	{r4, r5, lr}
 800b9d8:	1a80      	subs	r0, r0, r2
 800b9da:	d10e      	bne.n	800b9fa <__mcmp+0x2a>
 800b9dc:	3314      	adds	r3, #20
 800b9de:	3114      	adds	r1, #20
 800b9e0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800b9e4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800b9e8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800b9ec:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800b9f0:	4295      	cmp	r5, r2
 800b9f2:	d003      	beq.n	800b9fc <__mcmp+0x2c>
 800b9f4:	d205      	bcs.n	800ba02 <__mcmp+0x32>
 800b9f6:	f04f 30ff 	mov.w	r0, #4294967295
 800b9fa:	bd30      	pop	{r4, r5, pc}
 800b9fc:	42a3      	cmp	r3, r4
 800b9fe:	d3f3      	bcc.n	800b9e8 <__mcmp+0x18>
 800ba00:	e7fb      	b.n	800b9fa <__mcmp+0x2a>
 800ba02:	2001      	movs	r0, #1
 800ba04:	e7f9      	b.n	800b9fa <__mcmp+0x2a>
	...

0800ba08 <__mdiff>:
 800ba08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba0c:	4689      	mov	r9, r1
 800ba0e:	4606      	mov	r6, r0
 800ba10:	4611      	mov	r1, r2
 800ba12:	4648      	mov	r0, r9
 800ba14:	4614      	mov	r4, r2
 800ba16:	f7ff ffdb 	bl	800b9d0 <__mcmp>
 800ba1a:	1e05      	subs	r5, r0, #0
 800ba1c:	d112      	bne.n	800ba44 <__mdiff+0x3c>
 800ba1e:	4629      	mov	r1, r5
 800ba20:	4630      	mov	r0, r6
 800ba22:	f7ff fd13 	bl	800b44c <_Balloc>
 800ba26:	4602      	mov	r2, r0
 800ba28:	b928      	cbnz	r0, 800ba36 <__mdiff+0x2e>
 800ba2a:	f240 2137 	movw	r1, #567	@ 0x237
 800ba2e:	4b3e      	ldr	r3, [pc, #248]	@ (800bb28 <__mdiff+0x120>)
 800ba30:	483e      	ldr	r0, [pc, #248]	@ (800bb2c <__mdiff+0x124>)
 800ba32:	f7fe fd9d 	bl	800a570 <__assert_func>
 800ba36:	2301      	movs	r3, #1
 800ba38:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800ba3c:	4610      	mov	r0, r2
 800ba3e:	b003      	add	sp, #12
 800ba40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba44:	bfbc      	itt	lt
 800ba46:	464b      	movlt	r3, r9
 800ba48:	46a1      	movlt	r9, r4
 800ba4a:	4630      	mov	r0, r6
 800ba4c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800ba50:	bfba      	itte	lt
 800ba52:	461c      	movlt	r4, r3
 800ba54:	2501      	movlt	r5, #1
 800ba56:	2500      	movge	r5, #0
 800ba58:	f7ff fcf8 	bl	800b44c <_Balloc>
 800ba5c:	4602      	mov	r2, r0
 800ba5e:	b918      	cbnz	r0, 800ba68 <__mdiff+0x60>
 800ba60:	f240 2145 	movw	r1, #581	@ 0x245
 800ba64:	4b30      	ldr	r3, [pc, #192]	@ (800bb28 <__mdiff+0x120>)
 800ba66:	e7e3      	b.n	800ba30 <__mdiff+0x28>
 800ba68:	f100 0b14 	add.w	fp, r0, #20
 800ba6c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800ba70:	f109 0310 	add.w	r3, r9, #16
 800ba74:	60c5      	str	r5, [r0, #12]
 800ba76:	f04f 0c00 	mov.w	ip, #0
 800ba7a:	f109 0514 	add.w	r5, r9, #20
 800ba7e:	46d9      	mov	r9, fp
 800ba80:	6926      	ldr	r6, [r4, #16]
 800ba82:	f104 0e14 	add.w	lr, r4, #20
 800ba86:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800ba8a:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800ba8e:	9301      	str	r3, [sp, #4]
 800ba90:	9b01      	ldr	r3, [sp, #4]
 800ba92:	f85e 0b04 	ldr.w	r0, [lr], #4
 800ba96:	f853 af04 	ldr.w	sl, [r3, #4]!
 800ba9a:	b281      	uxth	r1, r0
 800ba9c:	9301      	str	r3, [sp, #4]
 800ba9e:	fa1f f38a 	uxth.w	r3, sl
 800baa2:	1a5b      	subs	r3, r3, r1
 800baa4:	0c00      	lsrs	r0, r0, #16
 800baa6:	4463      	add	r3, ip
 800baa8:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800baac:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800bab0:	b29b      	uxth	r3, r3
 800bab2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bab6:	4576      	cmp	r6, lr
 800bab8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800babc:	f849 3b04 	str.w	r3, [r9], #4
 800bac0:	d8e6      	bhi.n	800ba90 <__mdiff+0x88>
 800bac2:	1b33      	subs	r3, r6, r4
 800bac4:	3b15      	subs	r3, #21
 800bac6:	f023 0303 	bic.w	r3, r3, #3
 800baca:	3415      	adds	r4, #21
 800bacc:	3304      	adds	r3, #4
 800bace:	42a6      	cmp	r6, r4
 800bad0:	bf38      	it	cc
 800bad2:	2304      	movcc	r3, #4
 800bad4:	441d      	add	r5, r3
 800bad6:	445b      	add	r3, fp
 800bad8:	461e      	mov	r6, r3
 800bada:	462c      	mov	r4, r5
 800badc:	4544      	cmp	r4, r8
 800bade:	d30e      	bcc.n	800bafe <__mdiff+0xf6>
 800bae0:	f108 0103 	add.w	r1, r8, #3
 800bae4:	1b49      	subs	r1, r1, r5
 800bae6:	f021 0103 	bic.w	r1, r1, #3
 800baea:	3d03      	subs	r5, #3
 800baec:	45a8      	cmp	r8, r5
 800baee:	bf38      	it	cc
 800baf0:	2100      	movcc	r1, #0
 800baf2:	440b      	add	r3, r1
 800baf4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800baf8:	b199      	cbz	r1, 800bb22 <__mdiff+0x11a>
 800bafa:	6117      	str	r7, [r2, #16]
 800bafc:	e79e      	b.n	800ba3c <__mdiff+0x34>
 800bafe:	46e6      	mov	lr, ip
 800bb00:	f854 1b04 	ldr.w	r1, [r4], #4
 800bb04:	fa1f fc81 	uxth.w	ip, r1
 800bb08:	44f4      	add	ip, lr
 800bb0a:	0c08      	lsrs	r0, r1, #16
 800bb0c:	4471      	add	r1, lr
 800bb0e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800bb12:	b289      	uxth	r1, r1
 800bb14:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800bb18:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800bb1c:	f846 1b04 	str.w	r1, [r6], #4
 800bb20:	e7dc      	b.n	800badc <__mdiff+0xd4>
 800bb22:	3f01      	subs	r7, #1
 800bb24:	e7e6      	b.n	800baf4 <__mdiff+0xec>
 800bb26:	bf00      	nop
 800bb28:	0800dd2d 	.word	0x0800dd2d
 800bb2c:	0800dd3e 	.word	0x0800dd3e

0800bb30 <__ulp>:
 800bb30:	4b0e      	ldr	r3, [pc, #56]	@ (800bb6c <__ulp+0x3c>)
 800bb32:	400b      	ands	r3, r1
 800bb34:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800bb38:	2b00      	cmp	r3, #0
 800bb3a:	dc08      	bgt.n	800bb4e <__ulp+0x1e>
 800bb3c:	425b      	negs	r3, r3
 800bb3e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800bb42:	ea4f 5223 	mov.w	r2, r3, asr #20
 800bb46:	da04      	bge.n	800bb52 <__ulp+0x22>
 800bb48:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800bb4c:	4113      	asrs	r3, r2
 800bb4e:	2200      	movs	r2, #0
 800bb50:	e008      	b.n	800bb64 <__ulp+0x34>
 800bb52:	f1a2 0314 	sub.w	r3, r2, #20
 800bb56:	2b1e      	cmp	r3, #30
 800bb58:	bfd6      	itet	le
 800bb5a:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800bb5e:	2201      	movgt	r2, #1
 800bb60:	40da      	lsrle	r2, r3
 800bb62:	2300      	movs	r3, #0
 800bb64:	4619      	mov	r1, r3
 800bb66:	4610      	mov	r0, r2
 800bb68:	4770      	bx	lr
 800bb6a:	bf00      	nop
 800bb6c:	7ff00000 	.word	0x7ff00000

0800bb70 <__b2d>:
 800bb70:	6902      	ldr	r2, [r0, #16]
 800bb72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb74:	f100 0614 	add.w	r6, r0, #20
 800bb78:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 800bb7c:	f852 4c04 	ldr.w	r4, [r2, #-4]
 800bb80:	4f1e      	ldr	r7, [pc, #120]	@ (800bbfc <__b2d+0x8c>)
 800bb82:	4620      	mov	r0, r4
 800bb84:	f7ff fd54 	bl	800b630 <__hi0bits>
 800bb88:	4603      	mov	r3, r0
 800bb8a:	f1c0 0020 	rsb	r0, r0, #32
 800bb8e:	2b0a      	cmp	r3, #10
 800bb90:	f1a2 0504 	sub.w	r5, r2, #4
 800bb94:	6008      	str	r0, [r1, #0]
 800bb96:	dc12      	bgt.n	800bbbe <__b2d+0x4e>
 800bb98:	42ae      	cmp	r6, r5
 800bb9a:	bf2c      	ite	cs
 800bb9c:	2200      	movcs	r2, #0
 800bb9e:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 800bba2:	f1c3 0c0b 	rsb	ip, r3, #11
 800bba6:	3315      	adds	r3, #21
 800bba8:	fa24 fe0c 	lsr.w	lr, r4, ip
 800bbac:	fa04 f303 	lsl.w	r3, r4, r3
 800bbb0:	fa22 f20c 	lsr.w	r2, r2, ip
 800bbb4:	ea4e 0107 	orr.w	r1, lr, r7
 800bbb8:	431a      	orrs	r2, r3
 800bbba:	4610      	mov	r0, r2
 800bbbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bbbe:	42ae      	cmp	r6, r5
 800bbc0:	bf36      	itet	cc
 800bbc2:	f1a2 0508 	subcc.w	r5, r2, #8
 800bbc6:	2200      	movcs	r2, #0
 800bbc8:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 800bbcc:	3b0b      	subs	r3, #11
 800bbce:	d012      	beq.n	800bbf6 <__b2d+0x86>
 800bbd0:	f1c3 0720 	rsb	r7, r3, #32
 800bbd4:	fa22 f107 	lsr.w	r1, r2, r7
 800bbd8:	409c      	lsls	r4, r3
 800bbda:	430c      	orrs	r4, r1
 800bbdc:	42b5      	cmp	r5, r6
 800bbde:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 800bbe2:	bf94      	ite	ls
 800bbe4:	2400      	movls	r4, #0
 800bbe6:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 800bbea:	409a      	lsls	r2, r3
 800bbec:	40fc      	lsrs	r4, r7
 800bbee:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 800bbf2:	4322      	orrs	r2, r4
 800bbf4:	e7e1      	b.n	800bbba <__b2d+0x4a>
 800bbf6:	ea44 0107 	orr.w	r1, r4, r7
 800bbfa:	e7de      	b.n	800bbba <__b2d+0x4a>
 800bbfc:	3ff00000 	.word	0x3ff00000

0800bc00 <__d2b>:
 800bc00:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 800bc04:	2101      	movs	r1, #1
 800bc06:	4690      	mov	r8, r2
 800bc08:	4699      	mov	r9, r3
 800bc0a:	9e08      	ldr	r6, [sp, #32]
 800bc0c:	f7ff fc1e 	bl	800b44c <_Balloc>
 800bc10:	4604      	mov	r4, r0
 800bc12:	b930      	cbnz	r0, 800bc22 <__d2b+0x22>
 800bc14:	4602      	mov	r2, r0
 800bc16:	f240 310f 	movw	r1, #783	@ 0x30f
 800bc1a:	4b23      	ldr	r3, [pc, #140]	@ (800bca8 <__d2b+0xa8>)
 800bc1c:	4823      	ldr	r0, [pc, #140]	@ (800bcac <__d2b+0xac>)
 800bc1e:	f7fe fca7 	bl	800a570 <__assert_func>
 800bc22:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800bc26:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800bc2a:	b10d      	cbz	r5, 800bc30 <__d2b+0x30>
 800bc2c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800bc30:	9301      	str	r3, [sp, #4]
 800bc32:	f1b8 0300 	subs.w	r3, r8, #0
 800bc36:	d024      	beq.n	800bc82 <__d2b+0x82>
 800bc38:	4668      	mov	r0, sp
 800bc3a:	9300      	str	r3, [sp, #0]
 800bc3c:	f7ff fd17 	bl	800b66e <__lo0bits>
 800bc40:	e9dd 1200 	ldrd	r1, r2, [sp]
 800bc44:	b1d8      	cbz	r0, 800bc7e <__d2b+0x7e>
 800bc46:	f1c0 0320 	rsb	r3, r0, #32
 800bc4a:	fa02 f303 	lsl.w	r3, r2, r3
 800bc4e:	430b      	orrs	r3, r1
 800bc50:	40c2      	lsrs	r2, r0
 800bc52:	6163      	str	r3, [r4, #20]
 800bc54:	9201      	str	r2, [sp, #4]
 800bc56:	9b01      	ldr	r3, [sp, #4]
 800bc58:	2b00      	cmp	r3, #0
 800bc5a:	bf0c      	ite	eq
 800bc5c:	2201      	moveq	r2, #1
 800bc5e:	2202      	movne	r2, #2
 800bc60:	61a3      	str	r3, [r4, #24]
 800bc62:	6122      	str	r2, [r4, #16]
 800bc64:	b1ad      	cbz	r5, 800bc92 <__d2b+0x92>
 800bc66:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800bc6a:	4405      	add	r5, r0
 800bc6c:	6035      	str	r5, [r6, #0]
 800bc6e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800bc72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bc74:	6018      	str	r0, [r3, #0]
 800bc76:	4620      	mov	r0, r4
 800bc78:	b002      	add	sp, #8
 800bc7a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800bc7e:	6161      	str	r1, [r4, #20]
 800bc80:	e7e9      	b.n	800bc56 <__d2b+0x56>
 800bc82:	a801      	add	r0, sp, #4
 800bc84:	f7ff fcf3 	bl	800b66e <__lo0bits>
 800bc88:	9b01      	ldr	r3, [sp, #4]
 800bc8a:	2201      	movs	r2, #1
 800bc8c:	6163      	str	r3, [r4, #20]
 800bc8e:	3020      	adds	r0, #32
 800bc90:	e7e7      	b.n	800bc62 <__d2b+0x62>
 800bc92:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800bc96:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800bc9a:	6030      	str	r0, [r6, #0]
 800bc9c:	6918      	ldr	r0, [r3, #16]
 800bc9e:	f7ff fcc7 	bl	800b630 <__hi0bits>
 800bca2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800bca6:	e7e4      	b.n	800bc72 <__d2b+0x72>
 800bca8:	0800dd2d 	.word	0x0800dd2d
 800bcac:	0800dd3e 	.word	0x0800dd3e

0800bcb0 <__ratio>:
 800bcb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcb4:	b085      	sub	sp, #20
 800bcb6:	e9cd 1000 	strd	r1, r0, [sp]
 800bcba:	a902      	add	r1, sp, #8
 800bcbc:	f7ff ff58 	bl	800bb70 <__b2d>
 800bcc0:	468b      	mov	fp, r1
 800bcc2:	4606      	mov	r6, r0
 800bcc4:	460f      	mov	r7, r1
 800bcc6:	9800      	ldr	r0, [sp, #0]
 800bcc8:	a903      	add	r1, sp, #12
 800bcca:	f7ff ff51 	bl	800bb70 <__b2d>
 800bcce:	460d      	mov	r5, r1
 800bcd0:	9b01      	ldr	r3, [sp, #4]
 800bcd2:	4689      	mov	r9, r1
 800bcd4:	6919      	ldr	r1, [r3, #16]
 800bcd6:	9b00      	ldr	r3, [sp, #0]
 800bcd8:	4604      	mov	r4, r0
 800bcda:	691b      	ldr	r3, [r3, #16]
 800bcdc:	4630      	mov	r0, r6
 800bcde:	1ac9      	subs	r1, r1, r3
 800bce0:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800bce4:	1a9b      	subs	r3, r3, r2
 800bce6:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800bcea:	2b00      	cmp	r3, #0
 800bcec:	bfcd      	iteet	gt
 800bcee:	463a      	movgt	r2, r7
 800bcf0:	462a      	movle	r2, r5
 800bcf2:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800bcf6:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 800bcfa:	bfd8      	it	le
 800bcfc:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800bd00:	464b      	mov	r3, r9
 800bd02:	4622      	mov	r2, r4
 800bd04:	4659      	mov	r1, fp
 800bd06:	f7f4 fd29 	bl	800075c <__aeabi_ddiv>
 800bd0a:	b005      	add	sp, #20
 800bd0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bd10 <__copybits>:
 800bd10:	3901      	subs	r1, #1
 800bd12:	b570      	push	{r4, r5, r6, lr}
 800bd14:	1149      	asrs	r1, r1, #5
 800bd16:	6914      	ldr	r4, [r2, #16]
 800bd18:	3101      	adds	r1, #1
 800bd1a:	f102 0314 	add.w	r3, r2, #20
 800bd1e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800bd22:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800bd26:	1f05      	subs	r5, r0, #4
 800bd28:	42a3      	cmp	r3, r4
 800bd2a:	d30c      	bcc.n	800bd46 <__copybits+0x36>
 800bd2c:	1aa3      	subs	r3, r4, r2
 800bd2e:	3b11      	subs	r3, #17
 800bd30:	f023 0303 	bic.w	r3, r3, #3
 800bd34:	3211      	adds	r2, #17
 800bd36:	42a2      	cmp	r2, r4
 800bd38:	bf88      	it	hi
 800bd3a:	2300      	movhi	r3, #0
 800bd3c:	4418      	add	r0, r3
 800bd3e:	2300      	movs	r3, #0
 800bd40:	4288      	cmp	r0, r1
 800bd42:	d305      	bcc.n	800bd50 <__copybits+0x40>
 800bd44:	bd70      	pop	{r4, r5, r6, pc}
 800bd46:	f853 6b04 	ldr.w	r6, [r3], #4
 800bd4a:	f845 6f04 	str.w	r6, [r5, #4]!
 800bd4e:	e7eb      	b.n	800bd28 <__copybits+0x18>
 800bd50:	f840 3b04 	str.w	r3, [r0], #4
 800bd54:	e7f4      	b.n	800bd40 <__copybits+0x30>

0800bd56 <__any_on>:
 800bd56:	f100 0214 	add.w	r2, r0, #20
 800bd5a:	6900      	ldr	r0, [r0, #16]
 800bd5c:	114b      	asrs	r3, r1, #5
 800bd5e:	4298      	cmp	r0, r3
 800bd60:	b510      	push	{r4, lr}
 800bd62:	db11      	blt.n	800bd88 <__any_on+0x32>
 800bd64:	dd0a      	ble.n	800bd7c <__any_on+0x26>
 800bd66:	f011 011f 	ands.w	r1, r1, #31
 800bd6a:	d007      	beq.n	800bd7c <__any_on+0x26>
 800bd6c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800bd70:	fa24 f001 	lsr.w	r0, r4, r1
 800bd74:	fa00 f101 	lsl.w	r1, r0, r1
 800bd78:	428c      	cmp	r4, r1
 800bd7a:	d10b      	bne.n	800bd94 <__any_on+0x3e>
 800bd7c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800bd80:	4293      	cmp	r3, r2
 800bd82:	d803      	bhi.n	800bd8c <__any_on+0x36>
 800bd84:	2000      	movs	r0, #0
 800bd86:	bd10      	pop	{r4, pc}
 800bd88:	4603      	mov	r3, r0
 800bd8a:	e7f7      	b.n	800bd7c <__any_on+0x26>
 800bd8c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800bd90:	2900      	cmp	r1, #0
 800bd92:	d0f5      	beq.n	800bd80 <__any_on+0x2a>
 800bd94:	2001      	movs	r0, #1
 800bd96:	e7f6      	b.n	800bd86 <__any_on+0x30>

0800bd98 <sulp>:
 800bd98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd9c:	460f      	mov	r7, r1
 800bd9e:	4690      	mov	r8, r2
 800bda0:	f7ff fec6 	bl	800bb30 <__ulp>
 800bda4:	4604      	mov	r4, r0
 800bda6:	460d      	mov	r5, r1
 800bda8:	f1b8 0f00 	cmp.w	r8, #0
 800bdac:	d011      	beq.n	800bdd2 <sulp+0x3a>
 800bdae:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800bdb2:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800bdb6:	2b00      	cmp	r3, #0
 800bdb8:	dd0b      	ble.n	800bdd2 <sulp+0x3a>
 800bdba:	2400      	movs	r4, #0
 800bdbc:	051b      	lsls	r3, r3, #20
 800bdbe:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 800bdc2:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800bdc6:	4622      	mov	r2, r4
 800bdc8:	462b      	mov	r3, r5
 800bdca:	f7f4 fb9d 	bl	8000508 <__aeabi_dmul>
 800bdce:	4604      	mov	r4, r0
 800bdd0:	460d      	mov	r5, r1
 800bdd2:	4620      	mov	r0, r4
 800bdd4:	4629      	mov	r1, r5
 800bdd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bdda:	0000      	movs	r0, r0
 800bddc:	0000      	movs	r0, r0
	...

0800bde0 <_strtod_l>:
 800bde0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bde4:	b09f      	sub	sp, #124	@ 0x7c
 800bde6:	9217      	str	r2, [sp, #92]	@ 0x5c
 800bde8:	2200      	movs	r2, #0
 800bdea:	460c      	mov	r4, r1
 800bdec:	921a      	str	r2, [sp, #104]	@ 0x68
 800bdee:	f04f 0a00 	mov.w	sl, #0
 800bdf2:	f04f 0b00 	mov.w	fp, #0
 800bdf6:	460a      	mov	r2, r1
 800bdf8:	9005      	str	r0, [sp, #20]
 800bdfa:	9219      	str	r2, [sp, #100]	@ 0x64
 800bdfc:	7811      	ldrb	r1, [r2, #0]
 800bdfe:	292b      	cmp	r1, #43	@ 0x2b
 800be00:	d048      	beq.n	800be94 <_strtod_l+0xb4>
 800be02:	d836      	bhi.n	800be72 <_strtod_l+0x92>
 800be04:	290d      	cmp	r1, #13
 800be06:	d830      	bhi.n	800be6a <_strtod_l+0x8a>
 800be08:	2908      	cmp	r1, #8
 800be0a:	d830      	bhi.n	800be6e <_strtod_l+0x8e>
 800be0c:	2900      	cmp	r1, #0
 800be0e:	d039      	beq.n	800be84 <_strtod_l+0xa4>
 800be10:	2200      	movs	r2, #0
 800be12:	920b      	str	r2, [sp, #44]	@ 0x2c
 800be14:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 800be16:	782a      	ldrb	r2, [r5, #0]
 800be18:	2a30      	cmp	r2, #48	@ 0x30
 800be1a:	f040 80b1 	bne.w	800bf80 <_strtod_l+0x1a0>
 800be1e:	786a      	ldrb	r2, [r5, #1]
 800be20:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800be24:	2a58      	cmp	r2, #88	@ 0x58
 800be26:	d16c      	bne.n	800bf02 <_strtod_l+0x122>
 800be28:	9302      	str	r3, [sp, #8]
 800be2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800be2c:	4a8e      	ldr	r2, [pc, #568]	@ (800c068 <_strtod_l+0x288>)
 800be2e:	9301      	str	r3, [sp, #4]
 800be30:	ab1a      	add	r3, sp, #104	@ 0x68
 800be32:	9300      	str	r3, [sp, #0]
 800be34:	9805      	ldr	r0, [sp, #20]
 800be36:	ab1b      	add	r3, sp, #108	@ 0x6c
 800be38:	a919      	add	r1, sp, #100	@ 0x64
 800be3a:	f001 f987 	bl	800d14c <__gethex>
 800be3e:	f010 060f 	ands.w	r6, r0, #15
 800be42:	4604      	mov	r4, r0
 800be44:	d005      	beq.n	800be52 <_strtod_l+0x72>
 800be46:	2e06      	cmp	r6, #6
 800be48:	d126      	bne.n	800be98 <_strtod_l+0xb8>
 800be4a:	2300      	movs	r3, #0
 800be4c:	3501      	adds	r5, #1
 800be4e:	9519      	str	r5, [sp, #100]	@ 0x64
 800be50:	930b      	str	r3, [sp, #44]	@ 0x2c
 800be52:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800be54:	2b00      	cmp	r3, #0
 800be56:	f040 8584 	bne.w	800c962 <_strtod_l+0xb82>
 800be5a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800be5c:	b1bb      	cbz	r3, 800be8e <_strtod_l+0xae>
 800be5e:	4650      	mov	r0, sl
 800be60:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 800be64:	b01f      	add	sp, #124	@ 0x7c
 800be66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be6a:	2920      	cmp	r1, #32
 800be6c:	d1d0      	bne.n	800be10 <_strtod_l+0x30>
 800be6e:	3201      	adds	r2, #1
 800be70:	e7c3      	b.n	800bdfa <_strtod_l+0x1a>
 800be72:	292d      	cmp	r1, #45	@ 0x2d
 800be74:	d1cc      	bne.n	800be10 <_strtod_l+0x30>
 800be76:	2101      	movs	r1, #1
 800be78:	910b      	str	r1, [sp, #44]	@ 0x2c
 800be7a:	1c51      	adds	r1, r2, #1
 800be7c:	9119      	str	r1, [sp, #100]	@ 0x64
 800be7e:	7852      	ldrb	r2, [r2, #1]
 800be80:	2a00      	cmp	r2, #0
 800be82:	d1c7      	bne.n	800be14 <_strtod_l+0x34>
 800be84:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800be86:	9419      	str	r4, [sp, #100]	@ 0x64
 800be88:	2b00      	cmp	r3, #0
 800be8a:	f040 8568 	bne.w	800c95e <_strtod_l+0xb7e>
 800be8e:	4650      	mov	r0, sl
 800be90:	4659      	mov	r1, fp
 800be92:	e7e7      	b.n	800be64 <_strtod_l+0x84>
 800be94:	2100      	movs	r1, #0
 800be96:	e7ef      	b.n	800be78 <_strtod_l+0x98>
 800be98:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800be9a:	b13a      	cbz	r2, 800beac <_strtod_l+0xcc>
 800be9c:	2135      	movs	r1, #53	@ 0x35
 800be9e:	a81c      	add	r0, sp, #112	@ 0x70
 800bea0:	f7ff ff36 	bl	800bd10 <__copybits>
 800bea4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800bea6:	9805      	ldr	r0, [sp, #20]
 800bea8:	f7ff fb10 	bl	800b4cc <_Bfree>
 800beac:	3e01      	subs	r6, #1
 800beae:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800beb0:	2e04      	cmp	r6, #4
 800beb2:	d806      	bhi.n	800bec2 <_strtod_l+0xe2>
 800beb4:	e8df f006 	tbb	[pc, r6]
 800beb8:	201d0314 	.word	0x201d0314
 800bebc:	14          	.byte	0x14
 800bebd:	00          	.byte	0x00
 800bebe:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800bec2:	05e1      	lsls	r1, r4, #23
 800bec4:	bf48      	it	mi
 800bec6:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800beca:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800bece:	0d1b      	lsrs	r3, r3, #20
 800bed0:	051b      	lsls	r3, r3, #20
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	d1bd      	bne.n	800be52 <_strtod_l+0x72>
 800bed6:	f7fe fafd 	bl	800a4d4 <__errno>
 800beda:	2322      	movs	r3, #34	@ 0x22
 800bedc:	6003      	str	r3, [r0, #0]
 800bede:	e7b8      	b.n	800be52 <_strtod_l+0x72>
 800bee0:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800bee4:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 800bee8:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800beec:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800bef0:	e7e7      	b.n	800bec2 <_strtod_l+0xe2>
 800bef2:	f8df b178 	ldr.w	fp, [pc, #376]	@ 800c06c <_strtod_l+0x28c>
 800bef6:	e7e4      	b.n	800bec2 <_strtod_l+0xe2>
 800bef8:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800befc:	f04f 3aff 	mov.w	sl, #4294967295
 800bf00:	e7df      	b.n	800bec2 <_strtod_l+0xe2>
 800bf02:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800bf04:	1c5a      	adds	r2, r3, #1
 800bf06:	9219      	str	r2, [sp, #100]	@ 0x64
 800bf08:	785b      	ldrb	r3, [r3, #1]
 800bf0a:	2b30      	cmp	r3, #48	@ 0x30
 800bf0c:	d0f9      	beq.n	800bf02 <_strtod_l+0x122>
 800bf0e:	2b00      	cmp	r3, #0
 800bf10:	d09f      	beq.n	800be52 <_strtod_l+0x72>
 800bf12:	2301      	movs	r3, #1
 800bf14:	9309      	str	r3, [sp, #36]	@ 0x24
 800bf16:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800bf18:	220a      	movs	r2, #10
 800bf1a:	930c      	str	r3, [sp, #48]	@ 0x30
 800bf1c:	2300      	movs	r3, #0
 800bf1e:	461f      	mov	r7, r3
 800bf20:	9308      	str	r3, [sp, #32]
 800bf22:	930a      	str	r3, [sp, #40]	@ 0x28
 800bf24:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800bf26:	7805      	ldrb	r5, [r0, #0]
 800bf28:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800bf2c:	b2d9      	uxtb	r1, r3
 800bf2e:	2909      	cmp	r1, #9
 800bf30:	d928      	bls.n	800bf84 <_strtod_l+0x1a4>
 800bf32:	2201      	movs	r2, #1
 800bf34:	494e      	ldr	r1, [pc, #312]	@ (800c070 <_strtod_l+0x290>)
 800bf36:	f001 f83a 	bl	800cfae <strncmp>
 800bf3a:	2800      	cmp	r0, #0
 800bf3c:	d032      	beq.n	800bfa4 <_strtod_l+0x1c4>
 800bf3e:	2000      	movs	r0, #0
 800bf40:	462a      	mov	r2, r5
 800bf42:	4681      	mov	r9, r0
 800bf44:	463d      	mov	r5, r7
 800bf46:	4603      	mov	r3, r0
 800bf48:	2a65      	cmp	r2, #101	@ 0x65
 800bf4a:	d001      	beq.n	800bf50 <_strtod_l+0x170>
 800bf4c:	2a45      	cmp	r2, #69	@ 0x45
 800bf4e:	d114      	bne.n	800bf7a <_strtod_l+0x19a>
 800bf50:	b91d      	cbnz	r5, 800bf5a <_strtod_l+0x17a>
 800bf52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bf54:	4302      	orrs	r2, r0
 800bf56:	d095      	beq.n	800be84 <_strtod_l+0xa4>
 800bf58:	2500      	movs	r5, #0
 800bf5a:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800bf5c:	1c62      	adds	r2, r4, #1
 800bf5e:	9219      	str	r2, [sp, #100]	@ 0x64
 800bf60:	7862      	ldrb	r2, [r4, #1]
 800bf62:	2a2b      	cmp	r2, #43	@ 0x2b
 800bf64:	d077      	beq.n	800c056 <_strtod_l+0x276>
 800bf66:	2a2d      	cmp	r2, #45	@ 0x2d
 800bf68:	d07b      	beq.n	800c062 <_strtod_l+0x282>
 800bf6a:	f04f 0c00 	mov.w	ip, #0
 800bf6e:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800bf72:	2909      	cmp	r1, #9
 800bf74:	f240 8082 	bls.w	800c07c <_strtod_l+0x29c>
 800bf78:	9419      	str	r4, [sp, #100]	@ 0x64
 800bf7a:	f04f 0800 	mov.w	r8, #0
 800bf7e:	e0a2      	b.n	800c0c6 <_strtod_l+0x2e6>
 800bf80:	2300      	movs	r3, #0
 800bf82:	e7c7      	b.n	800bf14 <_strtod_l+0x134>
 800bf84:	2f08      	cmp	r7, #8
 800bf86:	bfd5      	itete	le
 800bf88:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 800bf8a:	9908      	ldrgt	r1, [sp, #32]
 800bf8c:	fb02 3301 	mlale	r3, r2, r1, r3
 800bf90:	fb02 3301 	mlagt	r3, r2, r1, r3
 800bf94:	f100 0001 	add.w	r0, r0, #1
 800bf98:	bfd4      	ite	le
 800bf9a:	930a      	strle	r3, [sp, #40]	@ 0x28
 800bf9c:	9308      	strgt	r3, [sp, #32]
 800bf9e:	3701      	adds	r7, #1
 800bfa0:	9019      	str	r0, [sp, #100]	@ 0x64
 800bfa2:	e7bf      	b.n	800bf24 <_strtod_l+0x144>
 800bfa4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800bfa6:	1c5a      	adds	r2, r3, #1
 800bfa8:	9219      	str	r2, [sp, #100]	@ 0x64
 800bfaa:	785a      	ldrb	r2, [r3, #1]
 800bfac:	b37f      	cbz	r7, 800c00e <_strtod_l+0x22e>
 800bfae:	4681      	mov	r9, r0
 800bfb0:	463d      	mov	r5, r7
 800bfb2:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800bfb6:	2b09      	cmp	r3, #9
 800bfb8:	d912      	bls.n	800bfe0 <_strtod_l+0x200>
 800bfba:	2301      	movs	r3, #1
 800bfbc:	e7c4      	b.n	800bf48 <_strtod_l+0x168>
 800bfbe:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800bfc0:	3001      	adds	r0, #1
 800bfc2:	1c5a      	adds	r2, r3, #1
 800bfc4:	9219      	str	r2, [sp, #100]	@ 0x64
 800bfc6:	785a      	ldrb	r2, [r3, #1]
 800bfc8:	2a30      	cmp	r2, #48	@ 0x30
 800bfca:	d0f8      	beq.n	800bfbe <_strtod_l+0x1de>
 800bfcc:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800bfd0:	2b08      	cmp	r3, #8
 800bfd2:	f200 84cb 	bhi.w	800c96c <_strtod_l+0xb8c>
 800bfd6:	4681      	mov	r9, r0
 800bfd8:	2000      	movs	r0, #0
 800bfda:	4605      	mov	r5, r0
 800bfdc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800bfde:	930c      	str	r3, [sp, #48]	@ 0x30
 800bfe0:	3a30      	subs	r2, #48	@ 0x30
 800bfe2:	f100 0301 	add.w	r3, r0, #1
 800bfe6:	d02a      	beq.n	800c03e <_strtod_l+0x25e>
 800bfe8:	4499      	add	r9, r3
 800bfea:	210a      	movs	r1, #10
 800bfec:	462b      	mov	r3, r5
 800bfee:	eb00 0c05 	add.w	ip, r0, r5
 800bff2:	4563      	cmp	r3, ip
 800bff4:	d10d      	bne.n	800c012 <_strtod_l+0x232>
 800bff6:	1c69      	adds	r1, r5, #1
 800bff8:	4401      	add	r1, r0
 800bffa:	4428      	add	r0, r5
 800bffc:	2808      	cmp	r0, #8
 800bffe:	dc16      	bgt.n	800c02e <_strtod_l+0x24e>
 800c000:	230a      	movs	r3, #10
 800c002:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800c004:	fb03 2300 	mla	r3, r3, r0, r2
 800c008:	930a      	str	r3, [sp, #40]	@ 0x28
 800c00a:	2300      	movs	r3, #0
 800c00c:	e018      	b.n	800c040 <_strtod_l+0x260>
 800c00e:	4638      	mov	r0, r7
 800c010:	e7da      	b.n	800bfc8 <_strtod_l+0x1e8>
 800c012:	2b08      	cmp	r3, #8
 800c014:	f103 0301 	add.w	r3, r3, #1
 800c018:	dc03      	bgt.n	800c022 <_strtod_l+0x242>
 800c01a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800c01c:	434e      	muls	r6, r1
 800c01e:	960a      	str	r6, [sp, #40]	@ 0x28
 800c020:	e7e7      	b.n	800bff2 <_strtod_l+0x212>
 800c022:	2b10      	cmp	r3, #16
 800c024:	bfde      	ittt	le
 800c026:	9e08      	ldrle	r6, [sp, #32]
 800c028:	434e      	mulle	r6, r1
 800c02a:	9608      	strle	r6, [sp, #32]
 800c02c:	e7e1      	b.n	800bff2 <_strtod_l+0x212>
 800c02e:	280f      	cmp	r0, #15
 800c030:	dceb      	bgt.n	800c00a <_strtod_l+0x22a>
 800c032:	230a      	movs	r3, #10
 800c034:	9808      	ldr	r0, [sp, #32]
 800c036:	fb03 2300 	mla	r3, r3, r0, r2
 800c03a:	9308      	str	r3, [sp, #32]
 800c03c:	e7e5      	b.n	800c00a <_strtod_l+0x22a>
 800c03e:	4629      	mov	r1, r5
 800c040:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c042:	460d      	mov	r5, r1
 800c044:	1c50      	adds	r0, r2, #1
 800c046:	9019      	str	r0, [sp, #100]	@ 0x64
 800c048:	7852      	ldrb	r2, [r2, #1]
 800c04a:	4618      	mov	r0, r3
 800c04c:	e7b1      	b.n	800bfb2 <_strtod_l+0x1d2>
 800c04e:	f04f 0900 	mov.w	r9, #0
 800c052:	2301      	movs	r3, #1
 800c054:	e77d      	b.n	800bf52 <_strtod_l+0x172>
 800c056:	f04f 0c00 	mov.w	ip, #0
 800c05a:	1ca2      	adds	r2, r4, #2
 800c05c:	9219      	str	r2, [sp, #100]	@ 0x64
 800c05e:	78a2      	ldrb	r2, [r4, #2]
 800c060:	e785      	b.n	800bf6e <_strtod_l+0x18e>
 800c062:	f04f 0c01 	mov.w	ip, #1
 800c066:	e7f8      	b.n	800c05a <_strtod_l+0x27a>
 800c068:	0800deb0 	.word	0x0800deb0
 800c06c:	7ff00000 	.word	0x7ff00000
 800c070:	0800de98 	.word	0x0800de98
 800c074:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c076:	1c51      	adds	r1, r2, #1
 800c078:	9119      	str	r1, [sp, #100]	@ 0x64
 800c07a:	7852      	ldrb	r2, [r2, #1]
 800c07c:	2a30      	cmp	r2, #48	@ 0x30
 800c07e:	d0f9      	beq.n	800c074 <_strtod_l+0x294>
 800c080:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800c084:	2908      	cmp	r1, #8
 800c086:	f63f af78 	bhi.w	800bf7a <_strtod_l+0x19a>
 800c08a:	f04f 080a 	mov.w	r8, #10
 800c08e:	3a30      	subs	r2, #48	@ 0x30
 800c090:	920e      	str	r2, [sp, #56]	@ 0x38
 800c092:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c094:	920f      	str	r2, [sp, #60]	@ 0x3c
 800c096:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c098:	1c56      	adds	r6, r2, #1
 800c09a:	9619      	str	r6, [sp, #100]	@ 0x64
 800c09c:	7852      	ldrb	r2, [r2, #1]
 800c09e:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800c0a2:	f1be 0f09 	cmp.w	lr, #9
 800c0a6:	d939      	bls.n	800c11c <_strtod_l+0x33c>
 800c0a8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800c0aa:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 800c0ae:	1a76      	subs	r6, r6, r1
 800c0b0:	2e08      	cmp	r6, #8
 800c0b2:	dc03      	bgt.n	800c0bc <_strtod_l+0x2dc>
 800c0b4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800c0b6:	4588      	cmp	r8, r1
 800c0b8:	bfa8      	it	ge
 800c0ba:	4688      	movge	r8, r1
 800c0bc:	f1bc 0f00 	cmp.w	ip, #0
 800c0c0:	d001      	beq.n	800c0c6 <_strtod_l+0x2e6>
 800c0c2:	f1c8 0800 	rsb	r8, r8, #0
 800c0c6:	2d00      	cmp	r5, #0
 800c0c8:	d14e      	bne.n	800c168 <_strtod_l+0x388>
 800c0ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800c0cc:	4308      	orrs	r0, r1
 800c0ce:	f47f aec0 	bne.w	800be52 <_strtod_l+0x72>
 800c0d2:	2b00      	cmp	r3, #0
 800c0d4:	f47f aed6 	bne.w	800be84 <_strtod_l+0xa4>
 800c0d8:	2a69      	cmp	r2, #105	@ 0x69
 800c0da:	d028      	beq.n	800c12e <_strtod_l+0x34e>
 800c0dc:	dc25      	bgt.n	800c12a <_strtod_l+0x34a>
 800c0de:	2a49      	cmp	r2, #73	@ 0x49
 800c0e0:	d025      	beq.n	800c12e <_strtod_l+0x34e>
 800c0e2:	2a4e      	cmp	r2, #78	@ 0x4e
 800c0e4:	f47f aece 	bne.w	800be84 <_strtod_l+0xa4>
 800c0e8:	499a      	ldr	r1, [pc, #616]	@ (800c354 <_strtod_l+0x574>)
 800c0ea:	a819      	add	r0, sp, #100	@ 0x64
 800c0ec:	f001 fa50 	bl	800d590 <__match>
 800c0f0:	2800      	cmp	r0, #0
 800c0f2:	f43f aec7 	beq.w	800be84 <_strtod_l+0xa4>
 800c0f6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c0f8:	781b      	ldrb	r3, [r3, #0]
 800c0fa:	2b28      	cmp	r3, #40	@ 0x28
 800c0fc:	d12e      	bne.n	800c15c <_strtod_l+0x37c>
 800c0fe:	4996      	ldr	r1, [pc, #600]	@ (800c358 <_strtod_l+0x578>)
 800c100:	aa1c      	add	r2, sp, #112	@ 0x70
 800c102:	a819      	add	r0, sp, #100	@ 0x64
 800c104:	f001 fa58 	bl	800d5b8 <__hexnan>
 800c108:	2805      	cmp	r0, #5
 800c10a:	d127      	bne.n	800c15c <_strtod_l+0x37c>
 800c10c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800c10e:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800c112:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 800c116:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800c11a:	e69a      	b.n	800be52 <_strtod_l+0x72>
 800c11c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800c11e:	fb08 2101 	mla	r1, r8, r1, r2
 800c122:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 800c126:	920e      	str	r2, [sp, #56]	@ 0x38
 800c128:	e7b5      	b.n	800c096 <_strtod_l+0x2b6>
 800c12a:	2a6e      	cmp	r2, #110	@ 0x6e
 800c12c:	e7da      	b.n	800c0e4 <_strtod_l+0x304>
 800c12e:	498b      	ldr	r1, [pc, #556]	@ (800c35c <_strtod_l+0x57c>)
 800c130:	a819      	add	r0, sp, #100	@ 0x64
 800c132:	f001 fa2d 	bl	800d590 <__match>
 800c136:	2800      	cmp	r0, #0
 800c138:	f43f aea4 	beq.w	800be84 <_strtod_l+0xa4>
 800c13c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c13e:	4988      	ldr	r1, [pc, #544]	@ (800c360 <_strtod_l+0x580>)
 800c140:	3b01      	subs	r3, #1
 800c142:	a819      	add	r0, sp, #100	@ 0x64
 800c144:	9319      	str	r3, [sp, #100]	@ 0x64
 800c146:	f001 fa23 	bl	800d590 <__match>
 800c14a:	b910      	cbnz	r0, 800c152 <_strtod_l+0x372>
 800c14c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c14e:	3301      	adds	r3, #1
 800c150:	9319      	str	r3, [sp, #100]	@ 0x64
 800c152:	f04f 0a00 	mov.w	sl, #0
 800c156:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 800c364 <_strtod_l+0x584>
 800c15a:	e67a      	b.n	800be52 <_strtod_l+0x72>
 800c15c:	4882      	ldr	r0, [pc, #520]	@ (800c368 <_strtod_l+0x588>)
 800c15e:	f000 ff6b 	bl	800d038 <nan>
 800c162:	4682      	mov	sl, r0
 800c164:	468b      	mov	fp, r1
 800c166:	e674      	b.n	800be52 <_strtod_l+0x72>
 800c168:	eba8 0309 	sub.w	r3, r8, r9
 800c16c:	2f00      	cmp	r7, #0
 800c16e:	bf08      	it	eq
 800c170:	462f      	moveq	r7, r5
 800c172:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800c174:	2d10      	cmp	r5, #16
 800c176:	462c      	mov	r4, r5
 800c178:	9309      	str	r3, [sp, #36]	@ 0x24
 800c17a:	bfa8      	it	ge
 800c17c:	2410      	movge	r4, #16
 800c17e:	f7f4 f949 	bl	8000414 <__aeabi_ui2d>
 800c182:	2d09      	cmp	r5, #9
 800c184:	4682      	mov	sl, r0
 800c186:	468b      	mov	fp, r1
 800c188:	dc11      	bgt.n	800c1ae <_strtod_l+0x3ce>
 800c18a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c18c:	2b00      	cmp	r3, #0
 800c18e:	f43f ae60 	beq.w	800be52 <_strtod_l+0x72>
 800c192:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c194:	dd76      	ble.n	800c284 <_strtod_l+0x4a4>
 800c196:	2b16      	cmp	r3, #22
 800c198:	dc5d      	bgt.n	800c256 <_strtod_l+0x476>
 800c19a:	4974      	ldr	r1, [pc, #464]	@ (800c36c <_strtod_l+0x58c>)
 800c19c:	4652      	mov	r2, sl
 800c19e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c1a2:	465b      	mov	r3, fp
 800c1a4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c1a8:	f7f4 f9ae 	bl	8000508 <__aeabi_dmul>
 800c1ac:	e7d9      	b.n	800c162 <_strtod_l+0x382>
 800c1ae:	4b6f      	ldr	r3, [pc, #444]	@ (800c36c <_strtod_l+0x58c>)
 800c1b0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c1b4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 800c1b8:	f7f4 f9a6 	bl	8000508 <__aeabi_dmul>
 800c1bc:	4682      	mov	sl, r0
 800c1be:	9808      	ldr	r0, [sp, #32]
 800c1c0:	468b      	mov	fp, r1
 800c1c2:	f7f4 f927 	bl	8000414 <__aeabi_ui2d>
 800c1c6:	4602      	mov	r2, r0
 800c1c8:	460b      	mov	r3, r1
 800c1ca:	4650      	mov	r0, sl
 800c1cc:	4659      	mov	r1, fp
 800c1ce:	f7f3 ffe5 	bl	800019c <__adddf3>
 800c1d2:	2d0f      	cmp	r5, #15
 800c1d4:	4682      	mov	sl, r0
 800c1d6:	468b      	mov	fp, r1
 800c1d8:	ddd7      	ble.n	800c18a <_strtod_l+0x3aa>
 800c1da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c1dc:	1b2c      	subs	r4, r5, r4
 800c1de:	441c      	add	r4, r3
 800c1e0:	2c00      	cmp	r4, #0
 800c1e2:	f340 8096 	ble.w	800c312 <_strtod_l+0x532>
 800c1e6:	f014 030f 	ands.w	r3, r4, #15
 800c1ea:	d00a      	beq.n	800c202 <_strtod_l+0x422>
 800c1ec:	495f      	ldr	r1, [pc, #380]	@ (800c36c <_strtod_l+0x58c>)
 800c1ee:	4652      	mov	r2, sl
 800c1f0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c1f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c1f8:	465b      	mov	r3, fp
 800c1fa:	f7f4 f985 	bl	8000508 <__aeabi_dmul>
 800c1fe:	4682      	mov	sl, r0
 800c200:	468b      	mov	fp, r1
 800c202:	f034 040f 	bics.w	r4, r4, #15
 800c206:	d073      	beq.n	800c2f0 <_strtod_l+0x510>
 800c208:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800c20c:	dd48      	ble.n	800c2a0 <_strtod_l+0x4c0>
 800c20e:	2400      	movs	r4, #0
 800c210:	46a0      	mov	r8, r4
 800c212:	46a1      	mov	r9, r4
 800c214:	940a      	str	r4, [sp, #40]	@ 0x28
 800c216:	2322      	movs	r3, #34	@ 0x22
 800c218:	f04f 0a00 	mov.w	sl, #0
 800c21c:	9a05      	ldr	r2, [sp, #20]
 800c21e:	f8df b144 	ldr.w	fp, [pc, #324]	@ 800c364 <_strtod_l+0x584>
 800c222:	6013      	str	r3, [r2, #0]
 800c224:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c226:	2b00      	cmp	r3, #0
 800c228:	f43f ae13 	beq.w	800be52 <_strtod_l+0x72>
 800c22c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c22e:	9805      	ldr	r0, [sp, #20]
 800c230:	f7ff f94c 	bl	800b4cc <_Bfree>
 800c234:	4649      	mov	r1, r9
 800c236:	9805      	ldr	r0, [sp, #20]
 800c238:	f7ff f948 	bl	800b4cc <_Bfree>
 800c23c:	4641      	mov	r1, r8
 800c23e:	9805      	ldr	r0, [sp, #20]
 800c240:	f7ff f944 	bl	800b4cc <_Bfree>
 800c244:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800c246:	9805      	ldr	r0, [sp, #20]
 800c248:	f7ff f940 	bl	800b4cc <_Bfree>
 800c24c:	4621      	mov	r1, r4
 800c24e:	9805      	ldr	r0, [sp, #20]
 800c250:	f7ff f93c 	bl	800b4cc <_Bfree>
 800c254:	e5fd      	b.n	800be52 <_strtod_l+0x72>
 800c256:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c258:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800c25c:	4293      	cmp	r3, r2
 800c25e:	dbbc      	blt.n	800c1da <_strtod_l+0x3fa>
 800c260:	4c42      	ldr	r4, [pc, #264]	@ (800c36c <_strtod_l+0x58c>)
 800c262:	f1c5 050f 	rsb	r5, r5, #15
 800c266:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800c26a:	4652      	mov	r2, sl
 800c26c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c270:	465b      	mov	r3, fp
 800c272:	f7f4 f949 	bl	8000508 <__aeabi_dmul>
 800c276:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c278:	1b5d      	subs	r5, r3, r5
 800c27a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800c27e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c282:	e791      	b.n	800c1a8 <_strtod_l+0x3c8>
 800c284:	3316      	adds	r3, #22
 800c286:	dba8      	blt.n	800c1da <_strtod_l+0x3fa>
 800c288:	4b38      	ldr	r3, [pc, #224]	@ (800c36c <_strtod_l+0x58c>)
 800c28a:	eba9 0808 	sub.w	r8, r9, r8
 800c28e:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800c292:	4650      	mov	r0, sl
 800c294:	e9d8 2300 	ldrd	r2, r3, [r8]
 800c298:	4659      	mov	r1, fp
 800c29a:	f7f4 fa5f 	bl	800075c <__aeabi_ddiv>
 800c29e:	e760      	b.n	800c162 <_strtod_l+0x382>
 800c2a0:	4b33      	ldr	r3, [pc, #204]	@ (800c370 <_strtod_l+0x590>)
 800c2a2:	4650      	mov	r0, sl
 800c2a4:	9308      	str	r3, [sp, #32]
 800c2a6:	2300      	movs	r3, #0
 800c2a8:	4659      	mov	r1, fp
 800c2aa:	461e      	mov	r6, r3
 800c2ac:	1124      	asrs	r4, r4, #4
 800c2ae:	2c01      	cmp	r4, #1
 800c2b0:	dc21      	bgt.n	800c2f6 <_strtod_l+0x516>
 800c2b2:	b10b      	cbz	r3, 800c2b8 <_strtod_l+0x4d8>
 800c2b4:	4682      	mov	sl, r0
 800c2b6:	468b      	mov	fp, r1
 800c2b8:	492d      	ldr	r1, [pc, #180]	@ (800c370 <_strtod_l+0x590>)
 800c2ba:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800c2be:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800c2c2:	4652      	mov	r2, sl
 800c2c4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c2c8:	465b      	mov	r3, fp
 800c2ca:	f7f4 f91d 	bl	8000508 <__aeabi_dmul>
 800c2ce:	4b25      	ldr	r3, [pc, #148]	@ (800c364 <_strtod_l+0x584>)
 800c2d0:	460a      	mov	r2, r1
 800c2d2:	400b      	ands	r3, r1
 800c2d4:	4927      	ldr	r1, [pc, #156]	@ (800c374 <_strtod_l+0x594>)
 800c2d6:	4682      	mov	sl, r0
 800c2d8:	428b      	cmp	r3, r1
 800c2da:	d898      	bhi.n	800c20e <_strtod_l+0x42e>
 800c2dc:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 800c2e0:	428b      	cmp	r3, r1
 800c2e2:	bf86      	itte	hi
 800c2e4:	f04f 3aff 	movhi.w	sl, #4294967295
 800c2e8:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 800c378 <_strtod_l+0x598>
 800c2ec:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 800c2f0:	2300      	movs	r3, #0
 800c2f2:	9308      	str	r3, [sp, #32]
 800c2f4:	e07a      	b.n	800c3ec <_strtod_l+0x60c>
 800c2f6:	07e2      	lsls	r2, r4, #31
 800c2f8:	d505      	bpl.n	800c306 <_strtod_l+0x526>
 800c2fa:	9b08      	ldr	r3, [sp, #32]
 800c2fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c300:	f7f4 f902 	bl	8000508 <__aeabi_dmul>
 800c304:	2301      	movs	r3, #1
 800c306:	9a08      	ldr	r2, [sp, #32]
 800c308:	3601      	adds	r6, #1
 800c30a:	3208      	adds	r2, #8
 800c30c:	1064      	asrs	r4, r4, #1
 800c30e:	9208      	str	r2, [sp, #32]
 800c310:	e7cd      	b.n	800c2ae <_strtod_l+0x4ce>
 800c312:	d0ed      	beq.n	800c2f0 <_strtod_l+0x510>
 800c314:	4264      	negs	r4, r4
 800c316:	f014 020f 	ands.w	r2, r4, #15
 800c31a:	d00a      	beq.n	800c332 <_strtod_l+0x552>
 800c31c:	4b13      	ldr	r3, [pc, #76]	@ (800c36c <_strtod_l+0x58c>)
 800c31e:	4650      	mov	r0, sl
 800c320:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c324:	4659      	mov	r1, fp
 800c326:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c32a:	f7f4 fa17 	bl	800075c <__aeabi_ddiv>
 800c32e:	4682      	mov	sl, r0
 800c330:	468b      	mov	fp, r1
 800c332:	1124      	asrs	r4, r4, #4
 800c334:	d0dc      	beq.n	800c2f0 <_strtod_l+0x510>
 800c336:	2c1f      	cmp	r4, #31
 800c338:	dd20      	ble.n	800c37c <_strtod_l+0x59c>
 800c33a:	2400      	movs	r4, #0
 800c33c:	46a0      	mov	r8, r4
 800c33e:	46a1      	mov	r9, r4
 800c340:	940a      	str	r4, [sp, #40]	@ 0x28
 800c342:	2322      	movs	r3, #34	@ 0x22
 800c344:	9a05      	ldr	r2, [sp, #20]
 800c346:	f04f 0a00 	mov.w	sl, #0
 800c34a:	f04f 0b00 	mov.w	fp, #0
 800c34e:	6013      	str	r3, [r2, #0]
 800c350:	e768      	b.n	800c224 <_strtod_l+0x444>
 800c352:	bf00      	nop
 800c354:	0800dc60 	.word	0x0800dc60
 800c358:	0800de9c 	.word	0x0800de9c
 800c35c:	0800dc58 	.word	0x0800dc58
 800c360:	0800dccb 	.word	0x0800dccb
 800c364:	7ff00000 	.word	0x7ff00000
 800c368:	0800dcc7 	.word	0x0800dcc7
 800c36c:	0800ddd0 	.word	0x0800ddd0
 800c370:	0800dda8 	.word	0x0800dda8
 800c374:	7ca00000 	.word	0x7ca00000
 800c378:	7fefffff 	.word	0x7fefffff
 800c37c:	f014 0310 	ands.w	r3, r4, #16
 800c380:	bf18      	it	ne
 800c382:	236a      	movne	r3, #106	@ 0x6a
 800c384:	4650      	mov	r0, sl
 800c386:	9308      	str	r3, [sp, #32]
 800c388:	4659      	mov	r1, fp
 800c38a:	2300      	movs	r3, #0
 800c38c:	4ea9      	ldr	r6, [pc, #676]	@ (800c634 <_strtod_l+0x854>)
 800c38e:	07e2      	lsls	r2, r4, #31
 800c390:	d504      	bpl.n	800c39c <_strtod_l+0x5bc>
 800c392:	e9d6 2300 	ldrd	r2, r3, [r6]
 800c396:	f7f4 f8b7 	bl	8000508 <__aeabi_dmul>
 800c39a:	2301      	movs	r3, #1
 800c39c:	1064      	asrs	r4, r4, #1
 800c39e:	f106 0608 	add.w	r6, r6, #8
 800c3a2:	d1f4      	bne.n	800c38e <_strtod_l+0x5ae>
 800c3a4:	b10b      	cbz	r3, 800c3aa <_strtod_l+0x5ca>
 800c3a6:	4682      	mov	sl, r0
 800c3a8:	468b      	mov	fp, r1
 800c3aa:	9b08      	ldr	r3, [sp, #32]
 800c3ac:	b1b3      	cbz	r3, 800c3dc <_strtod_l+0x5fc>
 800c3ae:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800c3b2:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800c3b6:	2b00      	cmp	r3, #0
 800c3b8:	4659      	mov	r1, fp
 800c3ba:	dd0f      	ble.n	800c3dc <_strtod_l+0x5fc>
 800c3bc:	2b1f      	cmp	r3, #31
 800c3be:	dd57      	ble.n	800c470 <_strtod_l+0x690>
 800c3c0:	2b34      	cmp	r3, #52	@ 0x34
 800c3c2:	bfd8      	it	le
 800c3c4:	f04f 33ff 	movle.w	r3, #4294967295
 800c3c8:	f04f 0a00 	mov.w	sl, #0
 800c3cc:	bfcf      	iteee	gt
 800c3ce:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800c3d2:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800c3d6:	4093      	lslle	r3, r2
 800c3d8:	ea03 0b01 	andle.w	fp, r3, r1
 800c3dc:	2200      	movs	r2, #0
 800c3de:	2300      	movs	r3, #0
 800c3e0:	4650      	mov	r0, sl
 800c3e2:	4659      	mov	r1, fp
 800c3e4:	f7f4 faf8 	bl	80009d8 <__aeabi_dcmpeq>
 800c3e8:	2800      	cmp	r0, #0
 800c3ea:	d1a6      	bne.n	800c33a <_strtod_l+0x55a>
 800c3ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c3ee:	463a      	mov	r2, r7
 800c3f0:	9300      	str	r3, [sp, #0]
 800c3f2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c3f4:	462b      	mov	r3, r5
 800c3f6:	9805      	ldr	r0, [sp, #20]
 800c3f8:	f7ff f8d0 	bl	800b59c <__s2b>
 800c3fc:	900a      	str	r0, [sp, #40]	@ 0x28
 800c3fe:	2800      	cmp	r0, #0
 800c400:	f43f af05 	beq.w	800c20e <_strtod_l+0x42e>
 800c404:	2400      	movs	r4, #0
 800c406:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c408:	eba9 0308 	sub.w	r3, r9, r8
 800c40c:	2a00      	cmp	r2, #0
 800c40e:	bfa8      	it	ge
 800c410:	2300      	movge	r3, #0
 800c412:	46a0      	mov	r8, r4
 800c414:	9312      	str	r3, [sp, #72]	@ 0x48
 800c416:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800c41a:	9316      	str	r3, [sp, #88]	@ 0x58
 800c41c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c41e:	9805      	ldr	r0, [sp, #20]
 800c420:	6859      	ldr	r1, [r3, #4]
 800c422:	f7ff f813 	bl	800b44c <_Balloc>
 800c426:	4681      	mov	r9, r0
 800c428:	2800      	cmp	r0, #0
 800c42a:	f43f aef4 	beq.w	800c216 <_strtod_l+0x436>
 800c42e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c430:	300c      	adds	r0, #12
 800c432:	691a      	ldr	r2, [r3, #16]
 800c434:	f103 010c 	add.w	r1, r3, #12
 800c438:	3202      	adds	r2, #2
 800c43a:	0092      	lsls	r2, r2, #2
 800c43c:	f7fe f885 	bl	800a54a <memcpy>
 800c440:	ab1c      	add	r3, sp, #112	@ 0x70
 800c442:	9301      	str	r3, [sp, #4]
 800c444:	ab1b      	add	r3, sp, #108	@ 0x6c
 800c446:	9300      	str	r3, [sp, #0]
 800c448:	4652      	mov	r2, sl
 800c44a:	465b      	mov	r3, fp
 800c44c:	9805      	ldr	r0, [sp, #20]
 800c44e:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800c452:	f7ff fbd5 	bl	800bc00 <__d2b>
 800c456:	901a      	str	r0, [sp, #104]	@ 0x68
 800c458:	2800      	cmp	r0, #0
 800c45a:	f43f aedc 	beq.w	800c216 <_strtod_l+0x436>
 800c45e:	2101      	movs	r1, #1
 800c460:	9805      	ldr	r0, [sp, #20]
 800c462:	f7ff f931 	bl	800b6c8 <__i2b>
 800c466:	4680      	mov	r8, r0
 800c468:	b948      	cbnz	r0, 800c47e <_strtod_l+0x69e>
 800c46a:	f04f 0800 	mov.w	r8, #0
 800c46e:	e6d2      	b.n	800c216 <_strtod_l+0x436>
 800c470:	f04f 32ff 	mov.w	r2, #4294967295
 800c474:	fa02 f303 	lsl.w	r3, r2, r3
 800c478:	ea03 0a0a 	and.w	sl, r3, sl
 800c47c:	e7ae      	b.n	800c3dc <_strtod_l+0x5fc>
 800c47e:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 800c480:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800c482:	2d00      	cmp	r5, #0
 800c484:	bfab      	itete	ge
 800c486:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800c488:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800c48a:	18ef      	addge	r7, r5, r3
 800c48c:	1b5e      	sublt	r6, r3, r5
 800c48e:	9b08      	ldr	r3, [sp, #32]
 800c490:	bfa8      	it	ge
 800c492:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800c494:	eba5 0503 	sub.w	r5, r5, r3
 800c498:	4415      	add	r5, r2
 800c49a:	4b67      	ldr	r3, [pc, #412]	@ (800c638 <_strtod_l+0x858>)
 800c49c:	f105 35ff 	add.w	r5, r5, #4294967295
 800c4a0:	bfb8      	it	lt
 800c4a2:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800c4a4:	429d      	cmp	r5, r3
 800c4a6:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800c4aa:	da50      	bge.n	800c54e <_strtod_l+0x76e>
 800c4ac:	1b5b      	subs	r3, r3, r5
 800c4ae:	2b1f      	cmp	r3, #31
 800c4b0:	f04f 0101 	mov.w	r1, #1
 800c4b4:	eba2 0203 	sub.w	r2, r2, r3
 800c4b8:	dc3d      	bgt.n	800c536 <_strtod_l+0x756>
 800c4ba:	fa01 f303 	lsl.w	r3, r1, r3
 800c4be:	9313      	str	r3, [sp, #76]	@ 0x4c
 800c4c0:	2300      	movs	r3, #0
 800c4c2:	9310      	str	r3, [sp, #64]	@ 0x40
 800c4c4:	18bd      	adds	r5, r7, r2
 800c4c6:	9b08      	ldr	r3, [sp, #32]
 800c4c8:	42af      	cmp	r7, r5
 800c4ca:	4416      	add	r6, r2
 800c4cc:	441e      	add	r6, r3
 800c4ce:	463b      	mov	r3, r7
 800c4d0:	bfa8      	it	ge
 800c4d2:	462b      	movge	r3, r5
 800c4d4:	42b3      	cmp	r3, r6
 800c4d6:	bfa8      	it	ge
 800c4d8:	4633      	movge	r3, r6
 800c4da:	2b00      	cmp	r3, #0
 800c4dc:	bfc2      	ittt	gt
 800c4de:	1aed      	subgt	r5, r5, r3
 800c4e0:	1af6      	subgt	r6, r6, r3
 800c4e2:	1aff      	subgt	r7, r7, r3
 800c4e4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800c4e6:	2b00      	cmp	r3, #0
 800c4e8:	dd16      	ble.n	800c518 <_strtod_l+0x738>
 800c4ea:	4641      	mov	r1, r8
 800c4ec:	461a      	mov	r2, r3
 800c4ee:	9805      	ldr	r0, [sp, #20]
 800c4f0:	f7ff f9a8 	bl	800b844 <__pow5mult>
 800c4f4:	4680      	mov	r8, r0
 800c4f6:	2800      	cmp	r0, #0
 800c4f8:	d0b7      	beq.n	800c46a <_strtod_l+0x68a>
 800c4fa:	4601      	mov	r1, r0
 800c4fc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800c4fe:	9805      	ldr	r0, [sp, #20]
 800c500:	f7ff f8f8 	bl	800b6f4 <__multiply>
 800c504:	900e      	str	r0, [sp, #56]	@ 0x38
 800c506:	2800      	cmp	r0, #0
 800c508:	f43f ae85 	beq.w	800c216 <_strtod_l+0x436>
 800c50c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c50e:	9805      	ldr	r0, [sp, #20]
 800c510:	f7fe ffdc 	bl	800b4cc <_Bfree>
 800c514:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c516:	931a      	str	r3, [sp, #104]	@ 0x68
 800c518:	2d00      	cmp	r5, #0
 800c51a:	dc1d      	bgt.n	800c558 <_strtod_l+0x778>
 800c51c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c51e:	2b00      	cmp	r3, #0
 800c520:	dd23      	ble.n	800c56a <_strtod_l+0x78a>
 800c522:	4649      	mov	r1, r9
 800c524:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800c526:	9805      	ldr	r0, [sp, #20]
 800c528:	f7ff f98c 	bl	800b844 <__pow5mult>
 800c52c:	4681      	mov	r9, r0
 800c52e:	b9e0      	cbnz	r0, 800c56a <_strtod_l+0x78a>
 800c530:	f04f 0900 	mov.w	r9, #0
 800c534:	e66f      	b.n	800c216 <_strtod_l+0x436>
 800c536:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800c53a:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800c53e:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 800c542:	35e2      	adds	r5, #226	@ 0xe2
 800c544:	fa01 f305 	lsl.w	r3, r1, r5
 800c548:	9310      	str	r3, [sp, #64]	@ 0x40
 800c54a:	9113      	str	r1, [sp, #76]	@ 0x4c
 800c54c:	e7ba      	b.n	800c4c4 <_strtod_l+0x6e4>
 800c54e:	2300      	movs	r3, #0
 800c550:	9310      	str	r3, [sp, #64]	@ 0x40
 800c552:	2301      	movs	r3, #1
 800c554:	9313      	str	r3, [sp, #76]	@ 0x4c
 800c556:	e7b5      	b.n	800c4c4 <_strtod_l+0x6e4>
 800c558:	462a      	mov	r2, r5
 800c55a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c55c:	9805      	ldr	r0, [sp, #20]
 800c55e:	f7ff f9cb 	bl	800b8f8 <__lshift>
 800c562:	901a      	str	r0, [sp, #104]	@ 0x68
 800c564:	2800      	cmp	r0, #0
 800c566:	d1d9      	bne.n	800c51c <_strtod_l+0x73c>
 800c568:	e655      	b.n	800c216 <_strtod_l+0x436>
 800c56a:	2e00      	cmp	r6, #0
 800c56c:	dd07      	ble.n	800c57e <_strtod_l+0x79e>
 800c56e:	4649      	mov	r1, r9
 800c570:	4632      	mov	r2, r6
 800c572:	9805      	ldr	r0, [sp, #20]
 800c574:	f7ff f9c0 	bl	800b8f8 <__lshift>
 800c578:	4681      	mov	r9, r0
 800c57a:	2800      	cmp	r0, #0
 800c57c:	d0d8      	beq.n	800c530 <_strtod_l+0x750>
 800c57e:	2f00      	cmp	r7, #0
 800c580:	dd08      	ble.n	800c594 <_strtod_l+0x7b4>
 800c582:	4641      	mov	r1, r8
 800c584:	463a      	mov	r2, r7
 800c586:	9805      	ldr	r0, [sp, #20]
 800c588:	f7ff f9b6 	bl	800b8f8 <__lshift>
 800c58c:	4680      	mov	r8, r0
 800c58e:	2800      	cmp	r0, #0
 800c590:	f43f ae41 	beq.w	800c216 <_strtod_l+0x436>
 800c594:	464a      	mov	r2, r9
 800c596:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c598:	9805      	ldr	r0, [sp, #20]
 800c59a:	f7ff fa35 	bl	800ba08 <__mdiff>
 800c59e:	4604      	mov	r4, r0
 800c5a0:	2800      	cmp	r0, #0
 800c5a2:	f43f ae38 	beq.w	800c216 <_strtod_l+0x436>
 800c5a6:	68c3      	ldr	r3, [r0, #12]
 800c5a8:	4641      	mov	r1, r8
 800c5aa:	930f      	str	r3, [sp, #60]	@ 0x3c
 800c5ac:	2300      	movs	r3, #0
 800c5ae:	60c3      	str	r3, [r0, #12]
 800c5b0:	f7ff fa0e 	bl	800b9d0 <__mcmp>
 800c5b4:	2800      	cmp	r0, #0
 800c5b6:	da45      	bge.n	800c644 <_strtod_l+0x864>
 800c5b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c5ba:	ea53 030a 	orrs.w	r3, r3, sl
 800c5be:	d16b      	bne.n	800c698 <_strtod_l+0x8b8>
 800c5c0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c5c4:	2b00      	cmp	r3, #0
 800c5c6:	d167      	bne.n	800c698 <_strtod_l+0x8b8>
 800c5c8:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800c5cc:	0d1b      	lsrs	r3, r3, #20
 800c5ce:	051b      	lsls	r3, r3, #20
 800c5d0:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800c5d4:	d960      	bls.n	800c698 <_strtod_l+0x8b8>
 800c5d6:	6963      	ldr	r3, [r4, #20]
 800c5d8:	b913      	cbnz	r3, 800c5e0 <_strtod_l+0x800>
 800c5da:	6923      	ldr	r3, [r4, #16]
 800c5dc:	2b01      	cmp	r3, #1
 800c5de:	dd5b      	ble.n	800c698 <_strtod_l+0x8b8>
 800c5e0:	4621      	mov	r1, r4
 800c5e2:	2201      	movs	r2, #1
 800c5e4:	9805      	ldr	r0, [sp, #20]
 800c5e6:	f7ff f987 	bl	800b8f8 <__lshift>
 800c5ea:	4641      	mov	r1, r8
 800c5ec:	4604      	mov	r4, r0
 800c5ee:	f7ff f9ef 	bl	800b9d0 <__mcmp>
 800c5f2:	2800      	cmp	r0, #0
 800c5f4:	dd50      	ble.n	800c698 <_strtod_l+0x8b8>
 800c5f6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800c5fa:	9a08      	ldr	r2, [sp, #32]
 800c5fc:	0d1b      	lsrs	r3, r3, #20
 800c5fe:	051b      	lsls	r3, r3, #20
 800c600:	2a00      	cmp	r2, #0
 800c602:	d06a      	beq.n	800c6da <_strtod_l+0x8fa>
 800c604:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800c608:	d867      	bhi.n	800c6da <_strtod_l+0x8fa>
 800c60a:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800c60e:	f67f ae98 	bls.w	800c342 <_strtod_l+0x562>
 800c612:	4650      	mov	r0, sl
 800c614:	4659      	mov	r1, fp
 800c616:	4b09      	ldr	r3, [pc, #36]	@ (800c63c <_strtod_l+0x85c>)
 800c618:	2200      	movs	r2, #0
 800c61a:	f7f3 ff75 	bl	8000508 <__aeabi_dmul>
 800c61e:	4b08      	ldr	r3, [pc, #32]	@ (800c640 <_strtod_l+0x860>)
 800c620:	4682      	mov	sl, r0
 800c622:	400b      	ands	r3, r1
 800c624:	468b      	mov	fp, r1
 800c626:	2b00      	cmp	r3, #0
 800c628:	f47f ae00 	bne.w	800c22c <_strtod_l+0x44c>
 800c62c:	2322      	movs	r3, #34	@ 0x22
 800c62e:	9a05      	ldr	r2, [sp, #20]
 800c630:	6013      	str	r3, [r2, #0]
 800c632:	e5fb      	b.n	800c22c <_strtod_l+0x44c>
 800c634:	0800dec8 	.word	0x0800dec8
 800c638:	fffffc02 	.word	0xfffffc02
 800c63c:	39500000 	.word	0x39500000
 800c640:	7ff00000 	.word	0x7ff00000
 800c644:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800c648:	d165      	bne.n	800c716 <_strtod_l+0x936>
 800c64a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800c64c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c650:	b35a      	cbz	r2, 800c6aa <_strtod_l+0x8ca>
 800c652:	4a99      	ldr	r2, [pc, #612]	@ (800c8b8 <_strtod_l+0xad8>)
 800c654:	4293      	cmp	r3, r2
 800c656:	d12b      	bne.n	800c6b0 <_strtod_l+0x8d0>
 800c658:	9b08      	ldr	r3, [sp, #32]
 800c65a:	4651      	mov	r1, sl
 800c65c:	b303      	cbz	r3, 800c6a0 <_strtod_l+0x8c0>
 800c65e:	465a      	mov	r2, fp
 800c660:	4b96      	ldr	r3, [pc, #600]	@ (800c8bc <_strtod_l+0xadc>)
 800c662:	4013      	ands	r3, r2
 800c664:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800c668:	f04f 32ff 	mov.w	r2, #4294967295
 800c66c:	d81b      	bhi.n	800c6a6 <_strtod_l+0x8c6>
 800c66e:	0d1b      	lsrs	r3, r3, #20
 800c670:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800c674:	fa02 f303 	lsl.w	r3, r2, r3
 800c678:	4299      	cmp	r1, r3
 800c67a:	d119      	bne.n	800c6b0 <_strtod_l+0x8d0>
 800c67c:	4b90      	ldr	r3, [pc, #576]	@ (800c8c0 <_strtod_l+0xae0>)
 800c67e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c680:	429a      	cmp	r2, r3
 800c682:	d102      	bne.n	800c68a <_strtod_l+0x8aa>
 800c684:	3101      	adds	r1, #1
 800c686:	f43f adc6 	beq.w	800c216 <_strtod_l+0x436>
 800c68a:	f04f 0a00 	mov.w	sl, #0
 800c68e:	4b8b      	ldr	r3, [pc, #556]	@ (800c8bc <_strtod_l+0xadc>)
 800c690:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c692:	401a      	ands	r2, r3
 800c694:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800c698:	9b08      	ldr	r3, [sp, #32]
 800c69a:	2b00      	cmp	r3, #0
 800c69c:	d1b9      	bne.n	800c612 <_strtod_l+0x832>
 800c69e:	e5c5      	b.n	800c22c <_strtod_l+0x44c>
 800c6a0:	f04f 33ff 	mov.w	r3, #4294967295
 800c6a4:	e7e8      	b.n	800c678 <_strtod_l+0x898>
 800c6a6:	4613      	mov	r3, r2
 800c6a8:	e7e6      	b.n	800c678 <_strtod_l+0x898>
 800c6aa:	ea53 030a 	orrs.w	r3, r3, sl
 800c6ae:	d0a2      	beq.n	800c5f6 <_strtod_l+0x816>
 800c6b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800c6b2:	b1db      	cbz	r3, 800c6ec <_strtod_l+0x90c>
 800c6b4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c6b6:	4213      	tst	r3, r2
 800c6b8:	d0ee      	beq.n	800c698 <_strtod_l+0x8b8>
 800c6ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c6bc:	4650      	mov	r0, sl
 800c6be:	4659      	mov	r1, fp
 800c6c0:	9a08      	ldr	r2, [sp, #32]
 800c6c2:	b1bb      	cbz	r3, 800c6f4 <_strtod_l+0x914>
 800c6c4:	f7ff fb68 	bl	800bd98 <sulp>
 800c6c8:	4602      	mov	r2, r0
 800c6ca:	460b      	mov	r3, r1
 800c6cc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800c6d0:	f7f3 fd64 	bl	800019c <__adddf3>
 800c6d4:	4682      	mov	sl, r0
 800c6d6:	468b      	mov	fp, r1
 800c6d8:	e7de      	b.n	800c698 <_strtod_l+0x8b8>
 800c6da:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800c6de:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800c6e2:	f04f 3aff 	mov.w	sl, #4294967295
 800c6e6:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800c6ea:	e7d5      	b.n	800c698 <_strtod_l+0x8b8>
 800c6ec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800c6ee:	ea13 0f0a 	tst.w	r3, sl
 800c6f2:	e7e1      	b.n	800c6b8 <_strtod_l+0x8d8>
 800c6f4:	f7ff fb50 	bl	800bd98 <sulp>
 800c6f8:	4602      	mov	r2, r0
 800c6fa:	460b      	mov	r3, r1
 800c6fc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800c700:	f7f3 fd4a 	bl	8000198 <__aeabi_dsub>
 800c704:	2200      	movs	r2, #0
 800c706:	2300      	movs	r3, #0
 800c708:	4682      	mov	sl, r0
 800c70a:	468b      	mov	fp, r1
 800c70c:	f7f4 f964 	bl	80009d8 <__aeabi_dcmpeq>
 800c710:	2800      	cmp	r0, #0
 800c712:	d0c1      	beq.n	800c698 <_strtod_l+0x8b8>
 800c714:	e615      	b.n	800c342 <_strtod_l+0x562>
 800c716:	4641      	mov	r1, r8
 800c718:	4620      	mov	r0, r4
 800c71a:	f7ff fac9 	bl	800bcb0 <__ratio>
 800c71e:	2200      	movs	r2, #0
 800c720:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800c724:	4606      	mov	r6, r0
 800c726:	460f      	mov	r7, r1
 800c728:	f7f4 f96a 	bl	8000a00 <__aeabi_dcmple>
 800c72c:	2800      	cmp	r0, #0
 800c72e:	d06d      	beq.n	800c80c <_strtod_l+0xa2c>
 800c730:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c732:	2b00      	cmp	r3, #0
 800c734:	d178      	bne.n	800c828 <_strtod_l+0xa48>
 800c736:	f1ba 0f00 	cmp.w	sl, #0
 800c73a:	d156      	bne.n	800c7ea <_strtod_l+0xa0a>
 800c73c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c73e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c742:	2b00      	cmp	r3, #0
 800c744:	d158      	bne.n	800c7f8 <_strtod_l+0xa18>
 800c746:	2200      	movs	r2, #0
 800c748:	4630      	mov	r0, r6
 800c74a:	4639      	mov	r1, r7
 800c74c:	4b5d      	ldr	r3, [pc, #372]	@ (800c8c4 <_strtod_l+0xae4>)
 800c74e:	f7f4 f94d 	bl	80009ec <__aeabi_dcmplt>
 800c752:	2800      	cmp	r0, #0
 800c754:	d157      	bne.n	800c806 <_strtod_l+0xa26>
 800c756:	4630      	mov	r0, r6
 800c758:	4639      	mov	r1, r7
 800c75a:	2200      	movs	r2, #0
 800c75c:	4b5a      	ldr	r3, [pc, #360]	@ (800c8c8 <_strtod_l+0xae8>)
 800c75e:	f7f3 fed3 	bl	8000508 <__aeabi_dmul>
 800c762:	4606      	mov	r6, r0
 800c764:	460f      	mov	r7, r1
 800c766:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800c76a:	9606      	str	r6, [sp, #24]
 800c76c:	9307      	str	r3, [sp, #28]
 800c76e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c772:	4d52      	ldr	r5, [pc, #328]	@ (800c8bc <_strtod_l+0xadc>)
 800c774:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800c778:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c77a:	401d      	ands	r5, r3
 800c77c:	4b53      	ldr	r3, [pc, #332]	@ (800c8cc <_strtod_l+0xaec>)
 800c77e:	429d      	cmp	r5, r3
 800c780:	f040 80aa 	bne.w	800c8d8 <_strtod_l+0xaf8>
 800c784:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c786:	4650      	mov	r0, sl
 800c788:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800c78c:	4659      	mov	r1, fp
 800c78e:	f7ff f9cf 	bl	800bb30 <__ulp>
 800c792:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c796:	f7f3 feb7 	bl	8000508 <__aeabi_dmul>
 800c79a:	4652      	mov	r2, sl
 800c79c:	465b      	mov	r3, fp
 800c79e:	f7f3 fcfd 	bl	800019c <__adddf3>
 800c7a2:	460b      	mov	r3, r1
 800c7a4:	4945      	ldr	r1, [pc, #276]	@ (800c8bc <_strtod_l+0xadc>)
 800c7a6:	4a4a      	ldr	r2, [pc, #296]	@ (800c8d0 <_strtod_l+0xaf0>)
 800c7a8:	4019      	ands	r1, r3
 800c7aa:	4291      	cmp	r1, r2
 800c7ac:	4682      	mov	sl, r0
 800c7ae:	d942      	bls.n	800c836 <_strtod_l+0xa56>
 800c7b0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800c7b2:	4b43      	ldr	r3, [pc, #268]	@ (800c8c0 <_strtod_l+0xae0>)
 800c7b4:	429a      	cmp	r2, r3
 800c7b6:	d103      	bne.n	800c7c0 <_strtod_l+0x9e0>
 800c7b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c7ba:	3301      	adds	r3, #1
 800c7bc:	f43f ad2b 	beq.w	800c216 <_strtod_l+0x436>
 800c7c0:	f04f 3aff 	mov.w	sl, #4294967295
 800c7c4:	f8df b0f8 	ldr.w	fp, [pc, #248]	@ 800c8c0 <_strtod_l+0xae0>
 800c7c8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c7ca:	9805      	ldr	r0, [sp, #20]
 800c7cc:	f7fe fe7e 	bl	800b4cc <_Bfree>
 800c7d0:	4649      	mov	r1, r9
 800c7d2:	9805      	ldr	r0, [sp, #20]
 800c7d4:	f7fe fe7a 	bl	800b4cc <_Bfree>
 800c7d8:	4641      	mov	r1, r8
 800c7da:	9805      	ldr	r0, [sp, #20]
 800c7dc:	f7fe fe76 	bl	800b4cc <_Bfree>
 800c7e0:	4621      	mov	r1, r4
 800c7e2:	9805      	ldr	r0, [sp, #20]
 800c7e4:	f7fe fe72 	bl	800b4cc <_Bfree>
 800c7e8:	e618      	b.n	800c41c <_strtod_l+0x63c>
 800c7ea:	f1ba 0f01 	cmp.w	sl, #1
 800c7ee:	d103      	bne.n	800c7f8 <_strtod_l+0xa18>
 800c7f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c7f2:	2b00      	cmp	r3, #0
 800c7f4:	f43f ada5 	beq.w	800c342 <_strtod_l+0x562>
 800c7f8:	2200      	movs	r2, #0
 800c7fa:	4b36      	ldr	r3, [pc, #216]	@ (800c8d4 <_strtod_l+0xaf4>)
 800c7fc:	2600      	movs	r6, #0
 800c7fe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800c802:	4f30      	ldr	r7, [pc, #192]	@ (800c8c4 <_strtod_l+0xae4>)
 800c804:	e7b3      	b.n	800c76e <_strtod_l+0x98e>
 800c806:	2600      	movs	r6, #0
 800c808:	4f2f      	ldr	r7, [pc, #188]	@ (800c8c8 <_strtod_l+0xae8>)
 800c80a:	e7ac      	b.n	800c766 <_strtod_l+0x986>
 800c80c:	4630      	mov	r0, r6
 800c80e:	4639      	mov	r1, r7
 800c810:	4b2d      	ldr	r3, [pc, #180]	@ (800c8c8 <_strtod_l+0xae8>)
 800c812:	2200      	movs	r2, #0
 800c814:	f7f3 fe78 	bl	8000508 <__aeabi_dmul>
 800c818:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c81a:	4606      	mov	r6, r0
 800c81c:	460f      	mov	r7, r1
 800c81e:	2b00      	cmp	r3, #0
 800c820:	d0a1      	beq.n	800c766 <_strtod_l+0x986>
 800c822:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800c826:	e7a2      	b.n	800c76e <_strtod_l+0x98e>
 800c828:	2200      	movs	r2, #0
 800c82a:	4b26      	ldr	r3, [pc, #152]	@ (800c8c4 <_strtod_l+0xae4>)
 800c82c:	4616      	mov	r6, r2
 800c82e:	461f      	mov	r7, r3
 800c830:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800c834:	e79b      	b.n	800c76e <_strtod_l+0x98e>
 800c836:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800c83a:	9b08      	ldr	r3, [sp, #32]
 800c83c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800c840:	2b00      	cmp	r3, #0
 800c842:	d1c1      	bne.n	800c7c8 <_strtod_l+0x9e8>
 800c844:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800c848:	0d1b      	lsrs	r3, r3, #20
 800c84a:	051b      	lsls	r3, r3, #20
 800c84c:	429d      	cmp	r5, r3
 800c84e:	d1bb      	bne.n	800c7c8 <_strtod_l+0x9e8>
 800c850:	4630      	mov	r0, r6
 800c852:	4639      	mov	r1, r7
 800c854:	f7f4 fcd2 	bl	80011fc <__aeabi_d2lz>
 800c858:	f7f3 fe28 	bl	80004ac <__aeabi_l2d>
 800c85c:	4602      	mov	r2, r0
 800c85e:	460b      	mov	r3, r1
 800c860:	4630      	mov	r0, r6
 800c862:	4639      	mov	r1, r7
 800c864:	f7f3 fc98 	bl	8000198 <__aeabi_dsub>
 800c868:	460b      	mov	r3, r1
 800c86a:	4602      	mov	r2, r0
 800c86c:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800c870:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800c874:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c876:	ea46 060a 	orr.w	r6, r6, sl
 800c87a:	431e      	orrs	r6, r3
 800c87c:	d069      	beq.n	800c952 <_strtod_l+0xb72>
 800c87e:	a30a      	add	r3, pc, #40	@ (adr r3, 800c8a8 <_strtod_l+0xac8>)
 800c880:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c884:	f7f4 f8b2 	bl	80009ec <__aeabi_dcmplt>
 800c888:	2800      	cmp	r0, #0
 800c88a:	f47f accf 	bne.w	800c22c <_strtod_l+0x44c>
 800c88e:	a308      	add	r3, pc, #32	@ (adr r3, 800c8b0 <_strtod_l+0xad0>)
 800c890:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c894:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800c898:	f7f4 f8c6 	bl	8000a28 <__aeabi_dcmpgt>
 800c89c:	2800      	cmp	r0, #0
 800c89e:	d093      	beq.n	800c7c8 <_strtod_l+0x9e8>
 800c8a0:	e4c4      	b.n	800c22c <_strtod_l+0x44c>
 800c8a2:	bf00      	nop
 800c8a4:	f3af 8000 	nop.w
 800c8a8:	94a03595 	.word	0x94a03595
 800c8ac:	3fdfffff 	.word	0x3fdfffff
 800c8b0:	35afe535 	.word	0x35afe535
 800c8b4:	3fe00000 	.word	0x3fe00000
 800c8b8:	000fffff 	.word	0x000fffff
 800c8bc:	7ff00000 	.word	0x7ff00000
 800c8c0:	7fefffff 	.word	0x7fefffff
 800c8c4:	3ff00000 	.word	0x3ff00000
 800c8c8:	3fe00000 	.word	0x3fe00000
 800c8cc:	7fe00000 	.word	0x7fe00000
 800c8d0:	7c9fffff 	.word	0x7c9fffff
 800c8d4:	bff00000 	.word	0xbff00000
 800c8d8:	9b08      	ldr	r3, [sp, #32]
 800c8da:	b323      	cbz	r3, 800c926 <_strtod_l+0xb46>
 800c8dc:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800c8e0:	d821      	bhi.n	800c926 <_strtod_l+0xb46>
 800c8e2:	a327      	add	r3, pc, #156	@ (adr r3, 800c980 <_strtod_l+0xba0>)
 800c8e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c8e8:	4630      	mov	r0, r6
 800c8ea:	4639      	mov	r1, r7
 800c8ec:	f7f4 f888 	bl	8000a00 <__aeabi_dcmple>
 800c8f0:	b1a0      	cbz	r0, 800c91c <_strtod_l+0xb3c>
 800c8f2:	4639      	mov	r1, r7
 800c8f4:	4630      	mov	r0, r6
 800c8f6:	f7f4 f8df 	bl	8000ab8 <__aeabi_d2uiz>
 800c8fa:	2801      	cmp	r0, #1
 800c8fc:	bf38      	it	cc
 800c8fe:	2001      	movcc	r0, #1
 800c900:	f7f3 fd88 	bl	8000414 <__aeabi_ui2d>
 800c904:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c906:	4606      	mov	r6, r0
 800c908:	460f      	mov	r7, r1
 800c90a:	b9fb      	cbnz	r3, 800c94c <_strtod_l+0xb6c>
 800c90c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800c910:	9014      	str	r0, [sp, #80]	@ 0x50
 800c912:	9315      	str	r3, [sp, #84]	@ 0x54
 800c914:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800c918:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800c91c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800c91e:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800c922:	1b5b      	subs	r3, r3, r5
 800c924:	9311      	str	r3, [sp, #68]	@ 0x44
 800c926:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800c92a:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800c92e:	f7ff f8ff 	bl	800bb30 <__ulp>
 800c932:	4602      	mov	r2, r0
 800c934:	460b      	mov	r3, r1
 800c936:	4650      	mov	r0, sl
 800c938:	4659      	mov	r1, fp
 800c93a:	f7f3 fde5 	bl	8000508 <__aeabi_dmul>
 800c93e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800c942:	f7f3 fc2b 	bl	800019c <__adddf3>
 800c946:	4682      	mov	sl, r0
 800c948:	468b      	mov	fp, r1
 800c94a:	e776      	b.n	800c83a <_strtod_l+0xa5a>
 800c94c:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800c950:	e7e0      	b.n	800c914 <_strtod_l+0xb34>
 800c952:	a30d      	add	r3, pc, #52	@ (adr r3, 800c988 <_strtod_l+0xba8>)
 800c954:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c958:	f7f4 f848 	bl	80009ec <__aeabi_dcmplt>
 800c95c:	e79e      	b.n	800c89c <_strtod_l+0xabc>
 800c95e:	2300      	movs	r3, #0
 800c960:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c962:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c964:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800c966:	6013      	str	r3, [r2, #0]
 800c968:	f7ff ba77 	b.w	800be5a <_strtod_l+0x7a>
 800c96c:	2a65      	cmp	r2, #101	@ 0x65
 800c96e:	f43f ab6e 	beq.w	800c04e <_strtod_l+0x26e>
 800c972:	2a45      	cmp	r2, #69	@ 0x45
 800c974:	f43f ab6b 	beq.w	800c04e <_strtod_l+0x26e>
 800c978:	2301      	movs	r3, #1
 800c97a:	f7ff bba6 	b.w	800c0ca <_strtod_l+0x2ea>
 800c97e:	bf00      	nop
 800c980:	ffc00000 	.word	0xffc00000
 800c984:	41dfffff 	.word	0x41dfffff
 800c988:	94a03595 	.word	0x94a03595
 800c98c:	3fcfffff 	.word	0x3fcfffff

0800c990 <_strtod_r>:
 800c990:	4b01      	ldr	r3, [pc, #4]	@ (800c998 <_strtod_r+0x8>)
 800c992:	f7ff ba25 	b.w	800bde0 <_strtod_l>
 800c996:	bf00      	nop
 800c998:	20000084 	.word	0x20000084

0800c99c <_strtol_l.constprop.0>:
 800c99c:	2b24      	cmp	r3, #36	@ 0x24
 800c99e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9a2:	4686      	mov	lr, r0
 800c9a4:	4690      	mov	r8, r2
 800c9a6:	d801      	bhi.n	800c9ac <_strtol_l.constprop.0+0x10>
 800c9a8:	2b01      	cmp	r3, #1
 800c9aa:	d106      	bne.n	800c9ba <_strtol_l.constprop.0+0x1e>
 800c9ac:	f7fd fd92 	bl	800a4d4 <__errno>
 800c9b0:	2316      	movs	r3, #22
 800c9b2:	6003      	str	r3, [r0, #0]
 800c9b4:	2000      	movs	r0, #0
 800c9b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c9ba:	460d      	mov	r5, r1
 800c9bc:	4833      	ldr	r0, [pc, #204]	@ (800ca8c <_strtol_l.constprop.0+0xf0>)
 800c9be:	462a      	mov	r2, r5
 800c9c0:	f815 4b01 	ldrb.w	r4, [r5], #1
 800c9c4:	5d06      	ldrb	r6, [r0, r4]
 800c9c6:	f016 0608 	ands.w	r6, r6, #8
 800c9ca:	d1f8      	bne.n	800c9be <_strtol_l.constprop.0+0x22>
 800c9cc:	2c2d      	cmp	r4, #45	@ 0x2d
 800c9ce:	d12d      	bne.n	800ca2c <_strtol_l.constprop.0+0x90>
 800c9d0:	2601      	movs	r6, #1
 800c9d2:	782c      	ldrb	r4, [r5, #0]
 800c9d4:	1c95      	adds	r5, r2, #2
 800c9d6:	f033 0210 	bics.w	r2, r3, #16
 800c9da:	d109      	bne.n	800c9f0 <_strtol_l.constprop.0+0x54>
 800c9dc:	2c30      	cmp	r4, #48	@ 0x30
 800c9de:	d12a      	bne.n	800ca36 <_strtol_l.constprop.0+0x9a>
 800c9e0:	782a      	ldrb	r2, [r5, #0]
 800c9e2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800c9e6:	2a58      	cmp	r2, #88	@ 0x58
 800c9e8:	d125      	bne.n	800ca36 <_strtol_l.constprop.0+0x9a>
 800c9ea:	2310      	movs	r3, #16
 800c9ec:	786c      	ldrb	r4, [r5, #1]
 800c9ee:	3502      	adds	r5, #2
 800c9f0:	2200      	movs	r2, #0
 800c9f2:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800c9f6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c9fa:	fbbc f9f3 	udiv	r9, ip, r3
 800c9fe:	4610      	mov	r0, r2
 800ca00:	fb03 ca19 	mls	sl, r3, r9, ip
 800ca04:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 800ca08:	2f09      	cmp	r7, #9
 800ca0a:	d81b      	bhi.n	800ca44 <_strtol_l.constprop.0+0xa8>
 800ca0c:	463c      	mov	r4, r7
 800ca0e:	42a3      	cmp	r3, r4
 800ca10:	dd27      	ble.n	800ca62 <_strtol_l.constprop.0+0xc6>
 800ca12:	1c57      	adds	r7, r2, #1
 800ca14:	d007      	beq.n	800ca26 <_strtol_l.constprop.0+0x8a>
 800ca16:	4581      	cmp	r9, r0
 800ca18:	d320      	bcc.n	800ca5c <_strtol_l.constprop.0+0xc0>
 800ca1a:	d101      	bne.n	800ca20 <_strtol_l.constprop.0+0x84>
 800ca1c:	45a2      	cmp	sl, r4
 800ca1e:	db1d      	blt.n	800ca5c <_strtol_l.constprop.0+0xc0>
 800ca20:	2201      	movs	r2, #1
 800ca22:	fb00 4003 	mla	r0, r0, r3, r4
 800ca26:	f815 4b01 	ldrb.w	r4, [r5], #1
 800ca2a:	e7eb      	b.n	800ca04 <_strtol_l.constprop.0+0x68>
 800ca2c:	2c2b      	cmp	r4, #43	@ 0x2b
 800ca2e:	bf04      	itt	eq
 800ca30:	782c      	ldrbeq	r4, [r5, #0]
 800ca32:	1c95      	addeq	r5, r2, #2
 800ca34:	e7cf      	b.n	800c9d6 <_strtol_l.constprop.0+0x3a>
 800ca36:	2b00      	cmp	r3, #0
 800ca38:	d1da      	bne.n	800c9f0 <_strtol_l.constprop.0+0x54>
 800ca3a:	2c30      	cmp	r4, #48	@ 0x30
 800ca3c:	bf0c      	ite	eq
 800ca3e:	2308      	moveq	r3, #8
 800ca40:	230a      	movne	r3, #10
 800ca42:	e7d5      	b.n	800c9f0 <_strtol_l.constprop.0+0x54>
 800ca44:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 800ca48:	2f19      	cmp	r7, #25
 800ca4a:	d801      	bhi.n	800ca50 <_strtol_l.constprop.0+0xb4>
 800ca4c:	3c37      	subs	r4, #55	@ 0x37
 800ca4e:	e7de      	b.n	800ca0e <_strtol_l.constprop.0+0x72>
 800ca50:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800ca54:	2f19      	cmp	r7, #25
 800ca56:	d804      	bhi.n	800ca62 <_strtol_l.constprop.0+0xc6>
 800ca58:	3c57      	subs	r4, #87	@ 0x57
 800ca5a:	e7d8      	b.n	800ca0e <_strtol_l.constprop.0+0x72>
 800ca5c:	f04f 32ff 	mov.w	r2, #4294967295
 800ca60:	e7e1      	b.n	800ca26 <_strtol_l.constprop.0+0x8a>
 800ca62:	1c53      	adds	r3, r2, #1
 800ca64:	d108      	bne.n	800ca78 <_strtol_l.constprop.0+0xdc>
 800ca66:	2322      	movs	r3, #34	@ 0x22
 800ca68:	4660      	mov	r0, ip
 800ca6a:	f8ce 3000 	str.w	r3, [lr]
 800ca6e:	f1b8 0f00 	cmp.w	r8, #0
 800ca72:	d0a0      	beq.n	800c9b6 <_strtol_l.constprop.0+0x1a>
 800ca74:	1e69      	subs	r1, r5, #1
 800ca76:	e006      	b.n	800ca86 <_strtol_l.constprop.0+0xea>
 800ca78:	b106      	cbz	r6, 800ca7c <_strtol_l.constprop.0+0xe0>
 800ca7a:	4240      	negs	r0, r0
 800ca7c:	f1b8 0f00 	cmp.w	r8, #0
 800ca80:	d099      	beq.n	800c9b6 <_strtol_l.constprop.0+0x1a>
 800ca82:	2a00      	cmp	r2, #0
 800ca84:	d1f6      	bne.n	800ca74 <_strtol_l.constprop.0+0xd8>
 800ca86:	f8c8 1000 	str.w	r1, [r8]
 800ca8a:	e794      	b.n	800c9b6 <_strtol_l.constprop.0+0x1a>
 800ca8c:	0800def1 	.word	0x0800def1

0800ca90 <_strtol_r>:
 800ca90:	f7ff bf84 	b.w	800c99c <_strtol_l.constprop.0>

0800ca94 <__ssputs_r>:
 800ca94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca98:	461f      	mov	r7, r3
 800ca9a:	688e      	ldr	r6, [r1, #8]
 800ca9c:	4682      	mov	sl, r0
 800ca9e:	42be      	cmp	r6, r7
 800caa0:	460c      	mov	r4, r1
 800caa2:	4690      	mov	r8, r2
 800caa4:	680b      	ldr	r3, [r1, #0]
 800caa6:	d82d      	bhi.n	800cb04 <__ssputs_r+0x70>
 800caa8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800caac:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800cab0:	d026      	beq.n	800cb00 <__ssputs_r+0x6c>
 800cab2:	6965      	ldr	r5, [r4, #20]
 800cab4:	6909      	ldr	r1, [r1, #16]
 800cab6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800caba:	eba3 0901 	sub.w	r9, r3, r1
 800cabe:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800cac2:	1c7b      	adds	r3, r7, #1
 800cac4:	444b      	add	r3, r9
 800cac6:	106d      	asrs	r5, r5, #1
 800cac8:	429d      	cmp	r5, r3
 800caca:	bf38      	it	cc
 800cacc:	461d      	movcc	r5, r3
 800cace:	0553      	lsls	r3, r2, #21
 800cad0:	d527      	bpl.n	800cb22 <__ssputs_r+0x8e>
 800cad2:	4629      	mov	r1, r5
 800cad4:	f7fe fc2e 	bl	800b334 <_malloc_r>
 800cad8:	4606      	mov	r6, r0
 800cada:	b360      	cbz	r0, 800cb36 <__ssputs_r+0xa2>
 800cadc:	464a      	mov	r2, r9
 800cade:	6921      	ldr	r1, [r4, #16]
 800cae0:	f7fd fd33 	bl	800a54a <memcpy>
 800cae4:	89a3      	ldrh	r3, [r4, #12]
 800cae6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800caea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800caee:	81a3      	strh	r3, [r4, #12]
 800caf0:	6126      	str	r6, [r4, #16]
 800caf2:	444e      	add	r6, r9
 800caf4:	6026      	str	r6, [r4, #0]
 800caf6:	463e      	mov	r6, r7
 800caf8:	6165      	str	r5, [r4, #20]
 800cafa:	eba5 0509 	sub.w	r5, r5, r9
 800cafe:	60a5      	str	r5, [r4, #8]
 800cb00:	42be      	cmp	r6, r7
 800cb02:	d900      	bls.n	800cb06 <__ssputs_r+0x72>
 800cb04:	463e      	mov	r6, r7
 800cb06:	4632      	mov	r2, r6
 800cb08:	4641      	mov	r1, r8
 800cb0a:	6820      	ldr	r0, [r4, #0]
 800cb0c:	f000 fa35 	bl	800cf7a <memmove>
 800cb10:	2000      	movs	r0, #0
 800cb12:	68a3      	ldr	r3, [r4, #8]
 800cb14:	1b9b      	subs	r3, r3, r6
 800cb16:	60a3      	str	r3, [r4, #8]
 800cb18:	6823      	ldr	r3, [r4, #0]
 800cb1a:	4433      	add	r3, r6
 800cb1c:	6023      	str	r3, [r4, #0]
 800cb1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cb22:	462a      	mov	r2, r5
 800cb24:	f000 fdf5 	bl	800d712 <_realloc_r>
 800cb28:	4606      	mov	r6, r0
 800cb2a:	2800      	cmp	r0, #0
 800cb2c:	d1e0      	bne.n	800caf0 <__ssputs_r+0x5c>
 800cb2e:	4650      	mov	r0, sl
 800cb30:	6921      	ldr	r1, [r4, #16]
 800cb32:	f7fe fb8d 	bl	800b250 <_free_r>
 800cb36:	230c      	movs	r3, #12
 800cb38:	f8ca 3000 	str.w	r3, [sl]
 800cb3c:	89a3      	ldrh	r3, [r4, #12]
 800cb3e:	f04f 30ff 	mov.w	r0, #4294967295
 800cb42:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800cb46:	81a3      	strh	r3, [r4, #12]
 800cb48:	e7e9      	b.n	800cb1e <__ssputs_r+0x8a>
	...

0800cb4c <_svfiprintf_r>:
 800cb4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb50:	4698      	mov	r8, r3
 800cb52:	898b      	ldrh	r3, [r1, #12]
 800cb54:	4607      	mov	r7, r0
 800cb56:	061b      	lsls	r3, r3, #24
 800cb58:	460d      	mov	r5, r1
 800cb5a:	4614      	mov	r4, r2
 800cb5c:	b09d      	sub	sp, #116	@ 0x74
 800cb5e:	d510      	bpl.n	800cb82 <_svfiprintf_r+0x36>
 800cb60:	690b      	ldr	r3, [r1, #16]
 800cb62:	b973      	cbnz	r3, 800cb82 <_svfiprintf_r+0x36>
 800cb64:	2140      	movs	r1, #64	@ 0x40
 800cb66:	f7fe fbe5 	bl	800b334 <_malloc_r>
 800cb6a:	6028      	str	r0, [r5, #0]
 800cb6c:	6128      	str	r0, [r5, #16]
 800cb6e:	b930      	cbnz	r0, 800cb7e <_svfiprintf_r+0x32>
 800cb70:	230c      	movs	r3, #12
 800cb72:	603b      	str	r3, [r7, #0]
 800cb74:	f04f 30ff 	mov.w	r0, #4294967295
 800cb78:	b01d      	add	sp, #116	@ 0x74
 800cb7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb7e:	2340      	movs	r3, #64	@ 0x40
 800cb80:	616b      	str	r3, [r5, #20]
 800cb82:	2300      	movs	r3, #0
 800cb84:	9309      	str	r3, [sp, #36]	@ 0x24
 800cb86:	2320      	movs	r3, #32
 800cb88:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800cb8c:	2330      	movs	r3, #48	@ 0x30
 800cb8e:	f04f 0901 	mov.w	r9, #1
 800cb92:	f8cd 800c 	str.w	r8, [sp, #12]
 800cb96:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 800cd30 <_svfiprintf_r+0x1e4>
 800cb9a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800cb9e:	4623      	mov	r3, r4
 800cba0:	469a      	mov	sl, r3
 800cba2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800cba6:	b10a      	cbz	r2, 800cbac <_svfiprintf_r+0x60>
 800cba8:	2a25      	cmp	r2, #37	@ 0x25
 800cbaa:	d1f9      	bne.n	800cba0 <_svfiprintf_r+0x54>
 800cbac:	ebba 0b04 	subs.w	fp, sl, r4
 800cbb0:	d00b      	beq.n	800cbca <_svfiprintf_r+0x7e>
 800cbb2:	465b      	mov	r3, fp
 800cbb4:	4622      	mov	r2, r4
 800cbb6:	4629      	mov	r1, r5
 800cbb8:	4638      	mov	r0, r7
 800cbba:	f7ff ff6b 	bl	800ca94 <__ssputs_r>
 800cbbe:	3001      	adds	r0, #1
 800cbc0:	f000 80a7 	beq.w	800cd12 <_svfiprintf_r+0x1c6>
 800cbc4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800cbc6:	445a      	add	r2, fp
 800cbc8:	9209      	str	r2, [sp, #36]	@ 0x24
 800cbca:	f89a 3000 	ldrb.w	r3, [sl]
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	f000 809f 	beq.w	800cd12 <_svfiprintf_r+0x1c6>
 800cbd4:	2300      	movs	r3, #0
 800cbd6:	f04f 32ff 	mov.w	r2, #4294967295
 800cbda:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800cbde:	f10a 0a01 	add.w	sl, sl, #1
 800cbe2:	9304      	str	r3, [sp, #16]
 800cbe4:	9307      	str	r3, [sp, #28]
 800cbe6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800cbea:	931a      	str	r3, [sp, #104]	@ 0x68
 800cbec:	4654      	mov	r4, sl
 800cbee:	2205      	movs	r2, #5
 800cbf0:	f814 1b01 	ldrb.w	r1, [r4], #1
 800cbf4:	484e      	ldr	r0, [pc, #312]	@ (800cd30 <_svfiprintf_r+0x1e4>)
 800cbf6:	f7fd fc9a 	bl	800a52e <memchr>
 800cbfa:	9a04      	ldr	r2, [sp, #16]
 800cbfc:	b9d8      	cbnz	r0, 800cc36 <_svfiprintf_r+0xea>
 800cbfe:	06d0      	lsls	r0, r2, #27
 800cc00:	bf44      	itt	mi
 800cc02:	2320      	movmi	r3, #32
 800cc04:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800cc08:	0711      	lsls	r1, r2, #28
 800cc0a:	bf44      	itt	mi
 800cc0c:	232b      	movmi	r3, #43	@ 0x2b
 800cc0e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800cc12:	f89a 3000 	ldrb.w	r3, [sl]
 800cc16:	2b2a      	cmp	r3, #42	@ 0x2a
 800cc18:	d015      	beq.n	800cc46 <_svfiprintf_r+0xfa>
 800cc1a:	4654      	mov	r4, sl
 800cc1c:	2000      	movs	r0, #0
 800cc1e:	f04f 0c0a 	mov.w	ip, #10
 800cc22:	9a07      	ldr	r2, [sp, #28]
 800cc24:	4621      	mov	r1, r4
 800cc26:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cc2a:	3b30      	subs	r3, #48	@ 0x30
 800cc2c:	2b09      	cmp	r3, #9
 800cc2e:	d94b      	bls.n	800ccc8 <_svfiprintf_r+0x17c>
 800cc30:	b1b0      	cbz	r0, 800cc60 <_svfiprintf_r+0x114>
 800cc32:	9207      	str	r2, [sp, #28]
 800cc34:	e014      	b.n	800cc60 <_svfiprintf_r+0x114>
 800cc36:	eba0 0308 	sub.w	r3, r0, r8
 800cc3a:	fa09 f303 	lsl.w	r3, r9, r3
 800cc3e:	4313      	orrs	r3, r2
 800cc40:	46a2      	mov	sl, r4
 800cc42:	9304      	str	r3, [sp, #16]
 800cc44:	e7d2      	b.n	800cbec <_svfiprintf_r+0xa0>
 800cc46:	9b03      	ldr	r3, [sp, #12]
 800cc48:	1d19      	adds	r1, r3, #4
 800cc4a:	681b      	ldr	r3, [r3, #0]
 800cc4c:	9103      	str	r1, [sp, #12]
 800cc4e:	2b00      	cmp	r3, #0
 800cc50:	bfbb      	ittet	lt
 800cc52:	425b      	neglt	r3, r3
 800cc54:	f042 0202 	orrlt.w	r2, r2, #2
 800cc58:	9307      	strge	r3, [sp, #28]
 800cc5a:	9307      	strlt	r3, [sp, #28]
 800cc5c:	bfb8      	it	lt
 800cc5e:	9204      	strlt	r2, [sp, #16]
 800cc60:	7823      	ldrb	r3, [r4, #0]
 800cc62:	2b2e      	cmp	r3, #46	@ 0x2e
 800cc64:	d10a      	bne.n	800cc7c <_svfiprintf_r+0x130>
 800cc66:	7863      	ldrb	r3, [r4, #1]
 800cc68:	2b2a      	cmp	r3, #42	@ 0x2a
 800cc6a:	d132      	bne.n	800ccd2 <_svfiprintf_r+0x186>
 800cc6c:	9b03      	ldr	r3, [sp, #12]
 800cc6e:	3402      	adds	r4, #2
 800cc70:	1d1a      	adds	r2, r3, #4
 800cc72:	681b      	ldr	r3, [r3, #0]
 800cc74:	9203      	str	r2, [sp, #12]
 800cc76:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800cc7a:	9305      	str	r3, [sp, #20]
 800cc7c:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 800cd34 <_svfiprintf_r+0x1e8>
 800cc80:	2203      	movs	r2, #3
 800cc82:	4650      	mov	r0, sl
 800cc84:	7821      	ldrb	r1, [r4, #0]
 800cc86:	f7fd fc52 	bl	800a52e <memchr>
 800cc8a:	b138      	cbz	r0, 800cc9c <_svfiprintf_r+0x150>
 800cc8c:	2240      	movs	r2, #64	@ 0x40
 800cc8e:	9b04      	ldr	r3, [sp, #16]
 800cc90:	eba0 000a 	sub.w	r0, r0, sl
 800cc94:	4082      	lsls	r2, r0
 800cc96:	4313      	orrs	r3, r2
 800cc98:	3401      	adds	r4, #1
 800cc9a:	9304      	str	r3, [sp, #16]
 800cc9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800cca0:	2206      	movs	r2, #6
 800cca2:	4825      	ldr	r0, [pc, #148]	@ (800cd38 <_svfiprintf_r+0x1ec>)
 800cca4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800cca8:	f7fd fc41 	bl	800a52e <memchr>
 800ccac:	2800      	cmp	r0, #0
 800ccae:	d036      	beq.n	800cd1e <_svfiprintf_r+0x1d2>
 800ccb0:	4b22      	ldr	r3, [pc, #136]	@ (800cd3c <_svfiprintf_r+0x1f0>)
 800ccb2:	bb1b      	cbnz	r3, 800ccfc <_svfiprintf_r+0x1b0>
 800ccb4:	9b03      	ldr	r3, [sp, #12]
 800ccb6:	3307      	adds	r3, #7
 800ccb8:	f023 0307 	bic.w	r3, r3, #7
 800ccbc:	3308      	adds	r3, #8
 800ccbe:	9303      	str	r3, [sp, #12]
 800ccc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ccc2:	4433      	add	r3, r6
 800ccc4:	9309      	str	r3, [sp, #36]	@ 0x24
 800ccc6:	e76a      	b.n	800cb9e <_svfiprintf_r+0x52>
 800ccc8:	460c      	mov	r4, r1
 800ccca:	2001      	movs	r0, #1
 800cccc:	fb0c 3202 	mla	r2, ip, r2, r3
 800ccd0:	e7a8      	b.n	800cc24 <_svfiprintf_r+0xd8>
 800ccd2:	2300      	movs	r3, #0
 800ccd4:	f04f 0c0a 	mov.w	ip, #10
 800ccd8:	4619      	mov	r1, r3
 800ccda:	3401      	adds	r4, #1
 800ccdc:	9305      	str	r3, [sp, #20]
 800ccde:	4620      	mov	r0, r4
 800cce0:	f810 2b01 	ldrb.w	r2, [r0], #1
 800cce4:	3a30      	subs	r2, #48	@ 0x30
 800cce6:	2a09      	cmp	r2, #9
 800cce8:	d903      	bls.n	800ccf2 <_svfiprintf_r+0x1a6>
 800ccea:	2b00      	cmp	r3, #0
 800ccec:	d0c6      	beq.n	800cc7c <_svfiprintf_r+0x130>
 800ccee:	9105      	str	r1, [sp, #20]
 800ccf0:	e7c4      	b.n	800cc7c <_svfiprintf_r+0x130>
 800ccf2:	4604      	mov	r4, r0
 800ccf4:	2301      	movs	r3, #1
 800ccf6:	fb0c 2101 	mla	r1, ip, r1, r2
 800ccfa:	e7f0      	b.n	800ccde <_svfiprintf_r+0x192>
 800ccfc:	ab03      	add	r3, sp, #12
 800ccfe:	9300      	str	r3, [sp, #0]
 800cd00:	462a      	mov	r2, r5
 800cd02:	4638      	mov	r0, r7
 800cd04:	4b0e      	ldr	r3, [pc, #56]	@ (800cd40 <_svfiprintf_r+0x1f4>)
 800cd06:	a904      	add	r1, sp, #16
 800cd08:	f7fc fbac 	bl	8009464 <_printf_float>
 800cd0c:	1c42      	adds	r2, r0, #1
 800cd0e:	4606      	mov	r6, r0
 800cd10:	d1d6      	bne.n	800ccc0 <_svfiprintf_r+0x174>
 800cd12:	89ab      	ldrh	r3, [r5, #12]
 800cd14:	065b      	lsls	r3, r3, #25
 800cd16:	f53f af2d 	bmi.w	800cb74 <_svfiprintf_r+0x28>
 800cd1a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800cd1c:	e72c      	b.n	800cb78 <_svfiprintf_r+0x2c>
 800cd1e:	ab03      	add	r3, sp, #12
 800cd20:	9300      	str	r3, [sp, #0]
 800cd22:	462a      	mov	r2, r5
 800cd24:	4638      	mov	r0, r7
 800cd26:	4b06      	ldr	r3, [pc, #24]	@ (800cd40 <_svfiprintf_r+0x1f4>)
 800cd28:	a904      	add	r1, sp, #16
 800cd2a:	f7fc fe39 	bl	80099a0 <_printf_i>
 800cd2e:	e7ed      	b.n	800cd0c <_svfiprintf_r+0x1c0>
 800cd30:	0800dff1 	.word	0x0800dff1
 800cd34:	0800dff7 	.word	0x0800dff7
 800cd38:	0800dffb 	.word	0x0800dffb
 800cd3c:	08009465 	.word	0x08009465
 800cd40:	0800ca95 	.word	0x0800ca95

0800cd44 <__sflush_r>:
 800cd44:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800cd48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd4a:	0716      	lsls	r6, r2, #28
 800cd4c:	4605      	mov	r5, r0
 800cd4e:	460c      	mov	r4, r1
 800cd50:	d454      	bmi.n	800cdfc <__sflush_r+0xb8>
 800cd52:	684b      	ldr	r3, [r1, #4]
 800cd54:	2b00      	cmp	r3, #0
 800cd56:	dc02      	bgt.n	800cd5e <__sflush_r+0x1a>
 800cd58:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800cd5a:	2b00      	cmp	r3, #0
 800cd5c:	dd48      	ble.n	800cdf0 <__sflush_r+0xac>
 800cd5e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800cd60:	2e00      	cmp	r6, #0
 800cd62:	d045      	beq.n	800cdf0 <__sflush_r+0xac>
 800cd64:	2300      	movs	r3, #0
 800cd66:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800cd6a:	682f      	ldr	r7, [r5, #0]
 800cd6c:	6a21      	ldr	r1, [r4, #32]
 800cd6e:	602b      	str	r3, [r5, #0]
 800cd70:	d030      	beq.n	800cdd4 <__sflush_r+0x90>
 800cd72:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800cd74:	89a3      	ldrh	r3, [r4, #12]
 800cd76:	0759      	lsls	r1, r3, #29
 800cd78:	d505      	bpl.n	800cd86 <__sflush_r+0x42>
 800cd7a:	6863      	ldr	r3, [r4, #4]
 800cd7c:	1ad2      	subs	r2, r2, r3
 800cd7e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800cd80:	b10b      	cbz	r3, 800cd86 <__sflush_r+0x42>
 800cd82:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800cd84:	1ad2      	subs	r2, r2, r3
 800cd86:	2300      	movs	r3, #0
 800cd88:	4628      	mov	r0, r5
 800cd8a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800cd8c:	6a21      	ldr	r1, [r4, #32]
 800cd8e:	47b0      	blx	r6
 800cd90:	1c43      	adds	r3, r0, #1
 800cd92:	89a3      	ldrh	r3, [r4, #12]
 800cd94:	d106      	bne.n	800cda4 <__sflush_r+0x60>
 800cd96:	6829      	ldr	r1, [r5, #0]
 800cd98:	291d      	cmp	r1, #29
 800cd9a:	d82b      	bhi.n	800cdf4 <__sflush_r+0xb0>
 800cd9c:	4a28      	ldr	r2, [pc, #160]	@ (800ce40 <__sflush_r+0xfc>)
 800cd9e:	410a      	asrs	r2, r1
 800cda0:	07d6      	lsls	r6, r2, #31
 800cda2:	d427      	bmi.n	800cdf4 <__sflush_r+0xb0>
 800cda4:	2200      	movs	r2, #0
 800cda6:	6062      	str	r2, [r4, #4]
 800cda8:	6922      	ldr	r2, [r4, #16]
 800cdaa:	04d9      	lsls	r1, r3, #19
 800cdac:	6022      	str	r2, [r4, #0]
 800cdae:	d504      	bpl.n	800cdba <__sflush_r+0x76>
 800cdb0:	1c42      	adds	r2, r0, #1
 800cdb2:	d101      	bne.n	800cdb8 <__sflush_r+0x74>
 800cdb4:	682b      	ldr	r3, [r5, #0]
 800cdb6:	b903      	cbnz	r3, 800cdba <__sflush_r+0x76>
 800cdb8:	6560      	str	r0, [r4, #84]	@ 0x54
 800cdba:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800cdbc:	602f      	str	r7, [r5, #0]
 800cdbe:	b1b9      	cbz	r1, 800cdf0 <__sflush_r+0xac>
 800cdc0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800cdc4:	4299      	cmp	r1, r3
 800cdc6:	d002      	beq.n	800cdce <__sflush_r+0x8a>
 800cdc8:	4628      	mov	r0, r5
 800cdca:	f7fe fa41 	bl	800b250 <_free_r>
 800cdce:	2300      	movs	r3, #0
 800cdd0:	6363      	str	r3, [r4, #52]	@ 0x34
 800cdd2:	e00d      	b.n	800cdf0 <__sflush_r+0xac>
 800cdd4:	2301      	movs	r3, #1
 800cdd6:	4628      	mov	r0, r5
 800cdd8:	47b0      	blx	r6
 800cdda:	4602      	mov	r2, r0
 800cddc:	1c50      	adds	r0, r2, #1
 800cdde:	d1c9      	bne.n	800cd74 <__sflush_r+0x30>
 800cde0:	682b      	ldr	r3, [r5, #0]
 800cde2:	2b00      	cmp	r3, #0
 800cde4:	d0c6      	beq.n	800cd74 <__sflush_r+0x30>
 800cde6:	2b1d      	cmp	r3, #29
 800cde8:	d001      	beq.n	800cdee <__sflush_r+0xaa>
 800cdea:	2b16      	cmp	r3, #22
 800cdec:	d11d      	bne.n	800ce2a <__sflush_r+0xe6>
 800cdee:	602f      	str	r7, [r5, #0]
 800cdf0:	2000      	movs	r0, #0
 800cdf2:	e021      	b.n	800ce38 <__sflush_r+0xf4>
 800cdf4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800cdf8:	b21b      	sxth	r3, r3
 800cdfa:	e01a      	b.n	800ce32 <__sflush_r+0xee>
 800cdfc:	690f      	ldr	r7, [r1, #16]
 800cdfe:	2f00      	cmp	r7, #0
 800ce00:	d0f6      	beq.n	800cdf0 <__sflush_r+0xac>
 800ce02:	0793      	lsls	r3, r2, #30
 800ce04:	bf18      	it	ne
 800ce06:	2300      	movne	r3, #0
 800ce08:	680e      	ldr	r6, [r1, #0]
 800ce0a:	bf08      	it	eq
 800ce0c:	694b      	ldreq	r3, [r1, #20]
 800ce0e:	1bf6      	subs	r6, r6, r7
 800ce10:	600f      	str	r7, [r1, #0]
 800ce12:	608b      	str	r3, [r1, #8]
 800ce14:	2e00      	cmp	r6, #0
 800ce16:	ddeb      	ble.n	800cdf0 <__sflush_r+0xac>
 800ce18:	4633      	mov	r3, r6
 800ce1a:	463a      	mov	r2, r7
 800ce1c:	4628      	mov	r0, r5
 800ce1e:	6a21      	ldr	r1, [r4, #32]
 800ce20:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800ce24:	47e0      	blx	ip
 800ce26:	2800      	cmp	r0, #0
 800ce28:	dc07      	bgt.n	800ce3a <__sflush_r+0xf6>
 800ce2a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ce2e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ce32:	f04f 30ff 	mov.w	r0, #4294967295
 800ce36:	81a3      	strh	r3, [r4, #12]
 800ce38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce3a:	4407      	add	r7, r0
 800ce3c:	1a36      	subs	r6, r6, r0
 800ce3e:	e7e9      	b.n	800ce14 <__sflush_r+0xd0>
 800ce40:	dfbffffe 	.word	0xdfbffffe

0800ce44 <_fflush_r>:
 800ce44:	b538      	push	{r3, r4, r5, lr}
 800ce46:	690b      	ldr	r3, [r1, #16]
 800ce48:	4605      	mov	r5, r0
 800ce4a:	460c      	mov	r4, r1
 800ce4c:	b913      	cbnz	r3, 800ce54 <_fflush_r+0x10>
 800ce4e:	2500      	movs	r5, #0
 800ce50:	4628      	mov	r0, r5
 800ce52:	bd38      	pop	{r3, r4, r5, pc}
 800ce54:	b118      	cbz	r0, 800ce5e <_fflush_r+0x1a>
 800ce56:	6a03      	ldr	r3, [r0, #32]
 800ce58:	b90b      	cbnz	r3, 800ce5e <_fflush_r+0x1a>
 800ce5a:	f7fd f95d 	bl	800a118 <__sinit>
 800ce5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ce62:	2b00      	cmp	r3, #0
 800ce64:	d0f3      	beq.n	800ce4e <_fflush_r+0xa>
 800ce66:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800ce68:	07d0      	lsls	r0, r2, #31
 800ce6a:	d404      	bmi.n	800ce76 <_fflush_r+0x32>
 800ce6c:	0599      	lsls	r1, r3, #22
 800ce6e:	d402      	bmi.n	800ce76 <_fflush_r+0x32>
 800ce70:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800ce72:	f7fd fb5a 	bl	800a52a <__retarget_lock_acquire_recursive>
 800ce76:	4628      	mov	r0, r5
 800ce78:	4621      	mov	r1, r4
 800ce7a:	f7ff ff63 	bl	800cd44 <__sflush_r>
 800ce7e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800ce80:	4605      	mov	r5, r0
 800ce82:	07da      	lsls	r2, r3, #31
 800ce84:	d4e4      	bmi.n	800ce50 <_fflush_r+0xc>
 800ce86:	89a3      	ldrh	r3, [r4, #12]
 800ce88:	059b      	lsls	r3, r3, #22
 800ce8a:	d4e1      	bmi.n	800ce50 <_fflush_r+0xc>
 800ce8c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800ce8e:	f7fd fb4d 	bl	800a52c <__retarget_lock_release_recursive>
 800ce92:	e7dd      	b.n	800ce50 <_fflush_r+0xc>

0800ce94 <fiprintf>:
 800ce94:	b40e      	push	{r1, r2, r3}
 800ce96:	b503      	push	{r0, r1, lr}
 800ce98:	4601      	mov	r1, r0
 800ce9a:	ab03      	add	r3, sp, #12
 800ce9c:	4805      	ldr	r0, [pc, #20]	@ (800ceb4 <fiprintf+0x20>)
 800ce9e:	f853 2b04 	ldr.w	r2, [r3], #4
 800cea2:	6800      	ldr	r0, [r0, #0]
 800cea4:	9301      	str	r3, [sp, #4]
 800cea6:	f000 fc97 	bl	800d7d8 <_vfiprintf_r>
 800ceaa:	b002      	add	sp, #8
 800ceac:	f85d eb04 	ldr.w	lr, [sp], #4
 800ceb0:	b003      	add	sp, #12
 800ceb2:	4770      	bx	lr
 800ceb4:	20000034 	.word	0x20000034

0800ceb8 <__swhatbuf_r>:
 800ceb8:	b570      	push	{r4, r5, r6, lr}
 800ceba:	460c      	mov	r4, r1
 800cebc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cec0:	4615      	mov	r5, r2
 800cec2:	2900      	cmp	r1, #0
 800cec4:	461e      	mov	r6, r3
 800cec6:	b096      	sub	sp, #88	@ 0x58
 800cec8:	da0c      	bge.n	800cee4 <__swhatbuf_r+0x2c>
 800ceca:	89a3      	ldrh	r3, [r4, #12]
 800cecc:	2100      	movs	r1, #0
 800cece:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800ced2:	bf14      	ite	ne
 800ced4:	2340      	movne	r3, #64	@ 0x40
 800ced6:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800ceda:	2000      	movs	r0, #0
 800cedc:	6031      	str	r1, [r6, #0]
 800cede:	602b      	str	r3, [r5, #0]
 800cee0:	b016      	add	sp, #88	@ 0x58
 800cee2:	bd70      	pop	{r4, r5, r6, pc}
 800cee4:	466a      	mov	r2, sp
 800cee6:	f000 f875 	bl	800cfd4 <_fstat_r>
 800ceea:	2800      	cmp	r0, #0
 800ceec:	dbed      	blt.n	800ceca <__swhatbuf_r+0x12>
 800ceee:	9901      	ldr	r1, [sp, #4]
 800cef0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800cef4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800cef8:	4259      	negs	r1, r3
 800cefa:	4159      	adcs	r1, r3
 800cefc:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800cf00:	e7eb      	b.n	800ceda <__swhatbuf_r+0x22>

0800cf02 <__smakebuf_r>:
 800cf02:	898b      	ldrh	r3, [r1, #12]
 800cf04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cf06:	079d      	lsls	r5, r3, #30
 800cf08:	4606      	mov	r6, r0
 800cf0a:	460c      	mov	r4, r1
 800cf0c:	d507      	bpl.n	800cf1e <__smakebuf_r+0x1c>
 800cf0e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800cf12:	6023      	str	r3, [r4, #0]
 800cf14:	6123      	str	r3, [r4, #16]
 800cf16:	2301      	movs	r3, #1
 800cf18:	6163      	str	r3, [r4, #20]
 800cf1a:	b003      	add	sp, #12
 800cf1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf1e:	466a      	mov	r2, sp
 800cf20:	ab01      	add	r3, sp, #4
 800cf22:	f7ff ffc9 	bl	800ceb8 <__swhatbuf_r>
 800cf26:	9f00      	ldr	r7, [sp, #0]
 800cf28:	4605      	mov	r5, r0
 800cf2a:	4639      	mov	r1, r7
 800cf2c:	4630      	mov	r0, r6
 800cf2e:	f7fe fa01 	bl	800b334 <_malloc_r>
 800cf32:	b948      	cbnz	r0, 800cf48 <__smakebuf_r+0x46>
 800cf34:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cf38:	059a      	lsls	r2, r3, #22
 800cf3a:	d4ee      	bmi.n	800cf1a <__smakebuf_r+0x18>
 800cf3c:	f023 0303 	bic.w	r3, r3, #3
 800cf40:	f043 0302 	orr.w	r3, r3, #2
 800cf44:	81a3      	strh	r3, [r4, #12]
 800cf46:	e7e2      	b.n	800cf0e <__smakebuf_r+0xc>
 800cf48:	89a3      	ldrh	r3, [r4, #12]
 800cf4a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800cf4e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800cf52:	81a3      	strh	r3, [r4, #12]
 800cf54:	9b01      	ldr	r3, [sp, #4]
 800cf56:	6020      	str	r0, [r4, #0]
 800cf58:	b15b      	cbz	r3, 800cf72 <__smakebuf_r+0x70>
 800cf5a:	4630      	mov	r0, r6
 800cf5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800cf60:	f000 f84a 	bl	800cff8 <_isatty_r>
 800cf64:	b128      	cbz	r0, 800cf72 <__smakebuf_r+0x70>
 800cf66:	89a3      	ldrh	r3, [r4, #12]
 800cf68:	f023 0303 	bic.w	r3, r3, #3
 800cf6c:	f043 0301 	orr.w	r3, r3, #1
 800cf70:	81a3      	strh	r3, [r4, #12]
 800cf72:	89a3      	ldrh	r3, [r4, #12]
 800cf74:	431d      	orrs	r5, r3
 800cf76:	81a5      	strh	r5, [r4, #12]
 800cf78:	e7cf      	b.n	800cf1a <__smakebuf_r+0x18>

0800cf7a <memmove>:
 800cf7a:	4288      	cmp	r0, r1
 800cf7c:	b510      	push	{r4, lr}
 800cf7e:	eb01 0402 	add.w	r4, r1, r2
 800cf82:	d902      	bls.n	800cf8a <memmove+0x10>
 800cf84:	4284      	cmp	r4, r0
 800cf86:	4623      	mov	r3, r4
 800cf88:	d807      	bhi.n	800cf9a <memmove+0x20>
 800cf8a:	1e43      	subs	r3, r0, #1
 800cf8c:	42a1      	cmp	r1, r4
 800cf8e:	d008      	beq.n	800cfa2 <memmove+0x28>
 800cf90:	f811 2b01 	ldrb.w	r2, [r1], #1
 800cf94:	f803 2f01 	strb.w	r2, [r3, #1]!
 800cf98:	e7f8      	b.n	800cf8c <memmove+0x12>
 800cf9a:	4601      	mov	r1, r0
 800cf9c:	4402      	add	r2, r0
 800cf9e:	428a      	cmp	r2, r1
 800cfa0:	d100      	bne.n	800cfa4 <memmove+0x2a>
 800cfa2:	bd10      	pop	{r4, pc}
 800cfa4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800cfa8:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800cfac:	e7f7      	b.n	800cf9e <memmove+0x24>

0800cfae <strncmp>:
 800cfae:	b510      	push	{r4, lr}
 800cfb0:	b16a      	cbz	r2, 800cfce <strncmp+0x20>
 800cfb2:	3901      	subs	r1, #1
 800cfb4:	1884      	adds	r4, r0, r2
 800cfb6:	f810 2b01 	ldrb.w	r2, [r0], #1
 800cfba:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800cfbe:	429a      	cmp	r2, r3
 800cfc0:	d103      	bne.n	800cfca <strncmp+0x1c>
 800cfc2:	42a0      	cmp	r0, r4
 800cfc4:	d001      	beq.n	800cfca <strncmp+0x1c>
 800cfc6:	2a00      	cmp	r2, #0
 800cfc8:	d1f5      	bne.n	800cfb6 <strncmp+0x8>
 800cfca:	1ad0      	subs	r0, r2, r3
 800cfcc:	bd10      	pop	{r4, pc}
 800cfce:	4610      	mov	r0, r2
 800cfd0:	e7fc      	b.n	800cfcc <strncmp+0x1e>
	...

0800cfd4 <_fstat_r>:
 800cfd4:	b538      	push	{r3, r4, r5, lr}
 800cfd6:	2300      	movs	r3, #0
 800cfd8:	4d06      	ldr	r5, [pc, #24]	@ (800cff4 <_fstat_r+0x20>)
 800cfda:	4604      	mov	r4, r0
 800cfdc:	4608      	mov	r0, r1
 800cfde:	4611      	mov	r1, r2
 800cfe0:	602b      	str	r3, [r5, #0]
 800cfe2:	f7f7 f8d1 	bl	8004188 <_fstat>
 800cfe6:	1c43      	adds	r3, r0, #1
 800cfe8:	d102      	bne.n	800cff0 <_fstat_r+0x1c>
 800cfea:	682b      	ldr	r3, [r5, #0]
 800cfec:	b103      	cbz	r3, 800cff0 <_fstat_r+0x1c>
 800cfee:	6023      	str	r3, [r4, #0]
 800cff0:	bd38      	pop	{r3, r4, r5, pc}
 800cff2:	bf00      	nop
 800cff4:	20000908 	.word	0x20000908

0800cff8 <_isatty_r>:
 800cff8:	b538      	push	{r3, r4, r5, lr}
 800cffa:	2300      	movs	r3, #0
 800cffc:	4d05      	ldr	r5, [pc, #20]	@ (800d014 <_isatty_r+0x1c>)
 800cffe:	4604      	mov	r4, r0
 800d000:	4608      	mov	r0, r1
 800d002:	602b      	str	r3, [r5, #0]
 800d004:	f7f7 f8cf 	bl	80041a6 <_isatty>
 800d008:	1c43      	adds	r3, r0, #1
 800d00a:	d102      	bne.n	800d012 <_isatty_r+0x1a>
 800d00c:	682b      	ldr	r3, [r5, #0]
 800d00e:	b103      	cbz	r3, 800d012 <_isatty_r+0x1a>
 800d010:	6023      	str	r3, [r4, #0]
 800d012:	bd38      	pop	{r3, r4, r5, pc}
 800d014:	20000908 	.word	0x20000908

0800d018 <_sbrk_r>:
 800d018:	b538      	push	{r3, r4, r5, lr}
 800d01a:	2300      	movs	r3, #0
 800d01c:	4d05      	ldr	r5, [pc, #20]	@ (800d034 <_sbrk_r+0x1c>)
 800d01e:	4604      	mov	r4, r0
 800d020:	4608      	mov	r0, r1
 800d022:	602b      	str	r3, [r5, #0]
 800d024:	f7f7 f8d6 	bl	80041d4 <_sbrk>
 800d028:	1c43      	adds	r3, r0, #1
 800d02a:	d102      	bne.n	800d032 <_sbrk_r+0x1a>
 800d02c:	682b      	ldr	r3, [r5, #0]
 800d02e:	b103      	cbz	r3, 800d032 <_sbrk_r+0x1a>
 800d030:	6023      	str	r3, [r4, #0]
 800d032:	bd38      	pop	{r3, r4, r5, pc}
 800d034:	20000908 	.word	0x20000908

0800d038 <nan>:
 800d038:	2000      	movs	r0, #0
 800d03a:	4901      	ldr	r1, [pc, #4]	@ (800d040 <nan+0x8>)
 800d03c:	4770      	bx	lr
 800d03e:	bf00      	nop
 800d040:	7ff80000 	.word	0x7ff80000

0800d044 <abort>:
 800d044:	2006      	movs	r0, #6
 800d046:	b508      	push	{r3, lr}
 800d048:	f000 fd06 	bl	800da58 <raise>
 800d04c:	2001      	movs	r0, #1
 800d04e:	f7f7 f84c 	bl	80040ea <_exit>

0800d052 <_calloc_r>:
 800d052:	b570      	push	{r4, r5, r6, lr}
 800d054:	fba1 5402 	umull	r5, r4, r1, r2
 800d058:	b93c      	cbnz	r4, 800d06a <_calloc_r+0x18>
 800d05a:	4629      	mov	r1, r5
 800d05c:	f7fe f96a 	bl	800b334 <_malloc_r>
 800d060:	4606      	mov	r6, r0
 800d062:	b928      	cbnz	r0, 800d070 <_calloc_r+0x1e>
 800d064:	2600      	movs	r6, #0
 800d066:	4630      	mov	r0, r6
 800d068:	bd70      	pop	{r4, r5, r6, pc}
 800d06a:	220c      	movs	r2, #12
 800d06c:	6002      	str	r2, [r0, #0]
 800d06e:	e7f9      	b.n	800d064 <_calloc_r+0x12>
 800d070:	462a      	mov	r2, r5
 800d072:	4621      	mov	r1, r4
 800d074:	f7fd f9dc 	bl	800a430 <memset>
 800d078:	e7f5      	b.n	800d066 <_calloc_r+0x14>

0800d07a <rshift>:
 800d07a:	6903      	ldr	r3, [r0, #16]
 800d07c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d080:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800d084:	f100 0414 	add.w	r4, r0, #20
 800d088:	ea4f 1261 	mov.w	r2, r1, asr #5
 800d08c:	dd46      	ble.n	800d11c <rshift+0xa2>
 800d08e:	f011 011f 	ands.w	r1, r1, #31
 800d092:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800d096:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800d09a:	d10c      	bne.n	800d0b6 <rshift+0x3c>
 800d09c:	4629      	mov	r1, r5
 800d09e:	f100 0710 	add.w	r7, r0, #16
 800d0a2:	42b1      	cmp	r1, r6
 800d0a4:	d335      	bcc.n	800d112 <rshift+0x98>
 800d0a6:	1a9b      	subs	r3, r3, r2
 800d0a8:	009b      	lsls	r3, r3, #2
 800d0aa:	1eea      	subs	r2, r5, #3
 800d0ac:	4296      	cmp	r6, r2
 800d0ae:	bf38      	it	cc
 800d0b0:	2300      	movcc	r3, #0
 800d0b2:	4423      	add	r3, r4
 800d0b4:	e015      	b.n	800d0e2 <rshift+0x68>
 800d0b6:	46a1      	mov	r9, r4
 800d0b8:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800d0bc:	f1c1 0820 	rsb	r8, r1, #32
 800d0c0:	40cf      	lsrs	r7, r1
 800d0c2:	f105 0e04 	add.w	lr, r5, #4
 800d0c6:	4576      	cmp	r6, lr
 800d0c8:	46f4      	mov	ip, lr
 800d0ca:	d816      	bhi.n	800d0fa <rshift+0x80>
 800d0cc:	1a9a      	subs	r2, r3, r2
 800d0ce:	0092      	lsls	r2, r2, #2
 800d0d0:	3a04      	subs	r2, #4
 800d0d2:	3501      	adds	r5, #1
 800d0d4:	42ae      	cmp	r6, r5
 800d0d6:	bf38      	it	cc
 800d0d8:	2200      	movcc	r2, #0
 800d0da:	18a3      	adds	r3, r4, r2
 800d0dc:	50a7      	str	r7, [r4, r2]
 800d0de:	b107      	cbz	r7, 800d0e2 <rshift+0x68>
 800d0e0:	3304      	adds	r3, #4
 800d0e2:	42a3      	cmp	r3, r4
 800d0e4:	eba3 0204 	sub.w	r2, r3, r4
 800d0e8:	bf08      	it	eq
 800d0ea:	2300      	moveq	r3, #0
 800d0ec:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800d0f0:	6102      	str	r2, [r0, #16]
 800d0f2:	bf08      	it	eq
 800d0f4:	6143      	streq	r3, [r0, #20]
 800d0f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d0fa:	f8dc c000 	ldr.w	ip, [ip]
 800d0fe:	fa0c fc08 	lsl.w	ip, ip, r8
 800d102:	ea4c 0707 	orr.w	r7, ip, r7
 800d106:	f849 7b04 	str.w	r7, [r9], #4
 800d10a:	f85e 7b04 	ldr.w	r7, [lr], #4
 800d10e:	40cf      	lsrs	r7, r1
 800d110:	e7d9      	b.n	800d0c6 <rshift+0x4c>
 800d112:	f851 cb04 	ldr.w	ip, [r1], #4
 800d116:	f847 cf04 	str.w	ip, [r7, #4]!
 800d11a:	e7c2      	b.n	800d0a2 <rshift+0x28>
 800d11c:	4623      	mov	r3, r4
 800d11e:	e7e0      	b.n	800d0e2 <rshift+0x68>

0800d120 <__hexdig_fun>:
 800d120:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800d124:	2b09      	cmp	r3, #9
 800d126:	d802      	bhi.n	800d12e <__hexdig_fun+0xe>
 800d128:	3820      	subs	r0, #32
 800d12a:	b2c0      	uxtb	r0, r0
 800d12c:	4770      	bx	lr
 800d12e:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800d132:	2b05      	cmp	r3, #5
 800d134:	d801      	bhi.n	800d13a <__hexdig_fun+0x1a>
 800d136:	3847      	subs	r0, #71	@ 0x47
 800d138:	e7f7      	b.n	800d12a <__hexdig_fun+0xa>
 800d13a:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800d13e:	2b05      	cmp	r3, #5
 800d140:	d801      	bhi.n	800d146 <__hexdig_fun+0x26>
 800d142:	3827      	subs	r0, #39	@ 0x27
 800d144:	e7f1      	b.n	800d12a <__hexdig_fun+0xa>
 800d146:	2000      	movs	r0, #0
 800d148:	4770      	bx	lr
	...

0800d14c <__gethex>:
 800d14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d150:	468a      	mov	sl, r1
 800d152:	4690      	mov	r8, r2
 800d154:	b085      	sub	sp, #20
 800d156:	9302      	str	r3, [sp, #8]
 800d158:	680b      	ldr	r3, [r1, #0]
 800d15a:	9001      	str	r0, [sp, #4]
 800d15c:	1c9c      	adds	r4, r3, #2
 800d15e:	46a1      	mov	r9, r4
 800d160:	f814 0b01 	ldrb.w	r0, [r4], #1
 800d164:	2830      	cmp	r0, #48	@ 0x30
 800d166:	d0fa      	beq.n	800d15e <__gethex+0x12>
 800d168:	eba9 0303 	sub.w	r3, r9, r3
 800d16c:	f1a3 0b02 	sub.w	fp, r3, #2
 800d170:	f7ff ffd6 	bl	800d120 <__hexdig_fun>
 800d174:	4605      	mov	r5, r0
 800d176:	2800      	cmp	r0, #0
 800d178:	d168      	bne.n	800d24c <__gethex+0x100>
 800d17a:	2201      	movs	r2, #1
 800d17c:	4648      	mov	r0, r9
 800d17e:	499f      	ldr	r1, [pc, #636]	@ (800d3fc <__gethex+0x2b0>)
 800d180:	f7ff ff15 	bl	800cfae <strncmp>
 800d184:	4607      	mov	r7, r0
 800d186:	2800      	cmp	r0, #0
 800d188:	d167      	bne.n	800d25a <__gethex+0x10e>
 800d18a:	f899 0001 	ldrb.w	r0, [r9, #1]
 800d18e:	4626      	mov	r6, r4
 800d190:	f7ff ffc6 	bl	800d120 <__hexdig_fun>
 800d194:	2800      	cmp	r0, #0
 800d196:	d062      	beq.n	800d25e <__gethex+0x112>
 800d198:	4623      	mov	r3, r4
 800d19a:	7818      	ldrb	r0, [r3, #0]
 800d19c:	4699      	mov	r9, r3
 800d19e:	2830      	cmp	r0, #48	@ 0x30
 800d1a0:	f103 0301 	add.w	r3, r3, #1
 800d1a4:	d0f9      	beq.n	800d19a <__gethex+0x4e>
 800d1a6:	f7ff ffbb 	bl	800d120 <__hexdig_fun>
 800d1aa:	fab0 f580 	clz	r5, r0
 800d1ae:	f04f 0b01 	mov.w	fp, #1
 800d1b2:	096d      	lsrs	r5, r5, #5
 800d1b4:	464a      	mov	r2, r9
 800d1b6:	4616      	mov	r6, r2
 800d1b8:	7830      	ldrb	r0, [r6, #0]
 800d1ba:	3201      	adds	r2, #1
 800d1bc:	f7ff ffb0 	bl	800d120 <__hexdig_fun>
 800d1c0:	2800      	cmp	r0, #0
 800d1c2:	d1f8      	bne.n	800d1b6 <__gethex+0x6a>
 800d1c4:	2201      	movs	r2, #1
 800d1c6:	4630      	mov	r0, r6
 800d1c8:	498c      	ldr	r1, [pc, #560]	@ (800d3fc <__gethex+0x2b0>)
 800d1ca:	f7ff fef0 	bl	800cfae <strncmp>
 800d1ce:	2800      	cmp	r0, #0
 800d1d0:	d13f      	bne.n	800d252 <__gethex+0x106>
 800d1d2:	b944      	cbnz	r4, 800d1e6 <__gethex+0x9a>
 800d1d4:	1c74      	adds	r4, r6, #1
 800d1d6:	4622      	mov	r2, r4
 800d1d8:	4616      	mov	r6, r2
 800d1da:	7830      	ldrb	r0, [r6, #0]
 800d1dc:	3201      	adds	r2, #1
 800d1de:	f7ff ff9f 	bl	800d120 <__hexdig_fun>
 800d1e2:	2800      	cmp	r0, #0
 800d1e4:	d1f8      	bne.n	800d1d8 <__gethex+0x8c>
 800d1e6:	1ba4      	subs	r4, r4, r6
 800d1e8:	00a7      	lsls	r7, r4, #2
 800d1ea:	7833      	ldrb	r3, [r6, #0]
 800d1ec:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 800d1f0:	2b50      	cmp	r3, #80	@ 0x50
 800d1f2:	d13e      	bne.n	800d272 <__gethex+0x126>
 800d1f4:	7873      	ldrb	r3, [r6, #1]
 800d1f6:	2b2b      	cmp	r3, #43	@ 0x2b
 800d1f8:	d033      	beq.n	800d262 <__gethex+0x116>
 800d1fa:	2b2d      	cmp	r3, #45	@ 0x2d
 800d1fc:	d034      	beq.n	800d268 <__gethex+0x11c>
 800d1fe:	2400      	movs	r4, #0
 800d200:	1c71      	adds	r1, r6, #1
 800d202:	7808      	ldrb	r0, [r1, #0]
 800d204:	f7ff ff8c 	bl	800d120 <__hexdig_fun>
 800d208:	1e43      	subs	r3, r0, #1
 800d20a:	b2db      	uxtb	r3, r3
 800d20c:	2b18      	cmp	r3, #24
 800d20e:	d830      	bhi.n	800d272 <__gethex+0x126>
 800d210:	f1a0 0210 	sub.w	r2, r0, #16
 800d214:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d218:	f7ff ff82 	bl	800d120 <__hexdig_fun>
 800d21c:	f100 3cff 	add.w	ip, r0, #4294967295
 800d220:	fa5f fc8c 	uxtb.w	ip, ip
 800d224:	f1bc 0f18 	cmp.w	ip, #24
 800d228:	f04f 030a 	mov.w	r3, #10
 800d22c:	d91e      	bls.n	800d26c <__gethex+0x120>
 800d22e:	b104      	cbz	r4, 800d232 <__gethex+0xe6>
 800d230:	4252      	negs	r2, r2
 800d232:	4417      	add	r7, r2
 800d234:	f8ca 1000 	str.w	r1, [sl]
 800d238:	b1ed      	cbz	r5, 800d276 <__gethex+0x12a>
 800d23a:	f1bb 0f00 	cmp.w	fp, #0
 800d23e:	bf0c      	ite	eq
 800d240:	2506      	moveq	r5, #6
 800d242:	2500      	movne	r5, #0
 800d244:	4628      	mov	r0, r5
 800d246:	b005      	add	sp, #20
 800d248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d24c:	2500      	movs	r5, #0
 800d24e:	462c      	mov	r4, r5
 800d250:	e7b0      	b.n	800d1b4 <__gethex+0x68>
 800d252:	2c00      	cmp	r4, #0
 800d254:	d1c7      	bne.n	800d1e6 <__gethex+0x9a>
 800d256:	4627      	mov	r7, r4
 800d258:	e7c7      	b.n	800d1ea <__gethex+0x9e>
 800d25a:	464e      	mov	r6, r9
 800d25c:	462f      	mov	r7, r5
 800d25e:	2501      	movs	r5, #1
 800d260:	e7c3      	b.n	800d1ea <__gethex+0x9e>
 800d262:	2400      	movs	r4, #0
 800d264:	1cb1      	adds	r1, r6, #2
 800d266:	e7cc      	b.n	800d202 <__gethex+0xb6>
 800d268:	2401      	movs	r4, #1
 800d26a:	e7fb      	b.n	800d264 <__gethex+0x118>
 800d26c:	fb03 0002 	mla	r0, r3, r2, r0
 800d270:	e7ce      	b.n	800d210 <__gethex+0xc4>
 800d272:	4631      	mov	r1, r6
 800d274:	e7de      	b.n	800d234 <__gethex+0xe8>
 800d276:	4629      	mov	r1, r5
 800d278:	eba6 0309 	sub.w	r3, r6, r9
 800d27c:	3b01      	subs	r3, #1
 800d27e:	2b07      	cmp	r3, #7
 800d280:	dc0a      	bgt.n	800d298 <__gethex+0x14c>
 800d282:	9801      	ldr	r0, [sp, #4]
 800d284:	f7fe f8e2 	bl	800b44c <_Balloc>
 800d288:	4604      	mov	r4, r0
 800d28a:	b940      	cbnz	r0, 800d29e <__gethex+0x152>
 800d28c:	4602      	mov	r2, r0
 800d28e:	21e4      	movs	r1, #228	@ 0xe4
 800d290:	4b5b      	ldr	r3, [pc, #364]	@ (800d400 <__gethex+0x2b4>)
 800d292:	485c      	ldr	r0, [pc, #368]	@ (800d404 <__gethex+0x2b8>)
 800d294:	f7fd f96c 	bl	800a570 <__assert_func>
 800d298:	3101      	adds	r1, #1
 800d29a:	105b      	asrs	r3, r3, #1
 800d29c:	e7ef      	b.n	800d27e <__gethex+0x132>
 800d29e:	2300      	movs	r3, #0
 800d2a0:	f100 0a14 	add.w	sl, r0, #20
 800d2a4:	4655      	mov	r5, sl
 800d2a6:	469b      	mov	fp, r3
 800d2a8:	45b1      	cmp	r9, r6
 800d2aa:	d337      	bcc.n	800d31c <__gethex+0x1d0>
 800d2ac:	f845 bb04 	str.w	fp, [r5], #4
 800d2b0:	eba5 050a 	sub.w	r5, r5, sl
 800d2b4:	10ad      	asrs	r5, r5, #2
 800d2b6:	6125      	str	r5, [r4, #16]
 800d2b8:	4658      	mov	r0, fp
 800d2ba:	f7fe f9b9 	bl	800b630 <__hi0bits>
 800d2be:	016d      	lsls	r5, r5, #5
 800d2c0:	f8d8 6000 	ldr.w	r6, [r8]
 800d2c4:	1a2d      	subs	r5, r5, r0
 800d2c6:	42b5      	cmp	r5, r6
 800d2c8:	dd54      	ble.n	800d374 <__gethex+0x228>
 800d2ca:	1bad      	subs	r5, r5, r6
 800d2cc:	4629      	mov	r1, r5
 800d2ce:	4620      	mov	r0, r4
 800d2d0:	f7fe fd41 	bl	800bd56 <__any_on>
 800d2d4:	4681      	mov	r9, r0
 800d2d6:	b178      	cbz	r0, 800d2f8 <__gethex+0x1ac>
 800d2d8:	f04f 0901 	mov.w	r9, #1
 800d2dc:	1e6b      	subs	r3, r5, #1
 800d2de:	1159      	asrs	r1, r3, #5
 800d2e0:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800d2e4:	f003 021f 	and.w	r2, r3, #31
 800d2e8:	fa09 f202 	lsl.w	r2, r9, r2
 800d2ec:	420a      	tst	r2, r1
 800d2ee:	d003      	beq.n	800d2f8 <__gethex+0x1ac>
 800d2f0:	454b      	cmp	r3, r9
 800d2f2:	dc36      	bgt.n	800d362 <__gethex+0x216>
 800d2f4:	f04f 0902 	mov.w	r9, #2
 800d2f8:	4629      	mov	r1, r5
 800d2fa:	4620      	mov	r0, r4
 800d2fc:	f7ff febd 	bl	800d07a <rshift>
 800d300:	442f      	add	r7, r5
 800d302:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d306:	42bb      	cmp	r3, r7
 800d308:	da42      	bge.n	800d390 <__gethex+0x244>
 800d30a:	4621      	mov	r1, r4
 800d30c:	9801      	ldr	r0, [sp, #4]
 800d30e:	f7fe f8dd 	bl	800b4cc <_Bfree>
 800d312:	2300      	movs	r3, #0
 800d314:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800d316:	25a3      	movs	r5, #163	@ 0xa3
 800d318:	6013      	str	r3, [r2, #0]
 800d31a:	e793      	b.n	800d244 <__gethex+0xf8>
 800d31c:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800d320:	2a2e      	cmp	r2, #46	@ 0x2e
 800d322:	d012      	beq.n	800d34a <__gethex+0x1fe>
 800d324:	2b20      	cmp	r3, #32
 800d326:	d104      	bne.n	800d332 <__gethex+0x1e6>
 800d328:	f845 bb04 	str.w	fp, [r5], #4
 800d32c:	f04f 0b00 	mov.w	fp, #0
 800d330:	465b      	mov	r3, fp
 800d332:	7830      	ldrb	r0, [r6, #0]
 800d334:	9303      	str	r3, [sp, #12]
 800d336:	f7ff fef3 	bl	800d120 <__hexdig_fun>
 800d33a:	9b03      	ldr	r3, [sp, #12]
 800d33c:	f000 000f 	and.w	r0, r0, #15
 800d340:	4098      	lsls	r0, r3
 800d342:	ea4b 0b00 	orr.w	fp, fp, r0
 800d346:	3304      	adds	r3, #4
 800d348:	e7ae      	b.n	800d2a8 <__gethex+0x15c>
 800d34a:	45b1      	cmp	r9, r6
 800d34c:	d8ea      	bhi.n	800d324 <__gethex+0x1d8>
 800d34e:	2201      	movs	r2, #1
 800d350:	4630      	mov	r0, r6
 800d352:	492a      	ldr	r1, [pc, #168]	@ (800d3fc <__gethex+0x2b0>)
 800d354:	9303      	str	r3, [sp, #12]
 800d356:	f7ff fe2a 	bl	800cfae <strncmp>
 800d35a:	9b03      	ldr	r3, [sp, #12]
 800d35c:	2800      	cmp	r0, #0
 800d35e:	d1e1      	bne.n	800d324 <__gethex+0x1d8>
 800d360:	e7a2      	b.n	800d2a8 <__gethex+0x15c>
 800d362:	4620      	mov	r0, r4
 800d364:	1ea9      	subs	r1, r5, #2
 800d366:	f7fe fcf6 	bl	800bd56 <__any_on>
 800d36a:	2800      	cmp	r0, #0
 800d36c:	d0c2      	beq.n	800d2f4 <__gethex+0x1a8>
 800d36e:	f04f 0903 	mov.w	r9, #3
 800d372:	e7c1      	b.n	800d2f8 <__gethex+0x1ac>
 800d374:	da09      	bge.n	800d38a <__gethex+0x23e>
 800d376:	1b75      	subs	r5, r6, r5
 800d378:	4621      	mov	r1, r4
 800d37a:	462a      	mov	r2, r5
 800d37c:	9801      	ldr	r0, [sp, #4]
 800d37e:	f7fe fabb 	bl	800b8f8 <__lshift>
 800d382:	4604      	mov	r4, r0
 800d384:	1b7f      	subs	r7, r7, r5
 800d386:	f100 0a14 	add.w	sl, r0, #20
 800d38a:	f04f 0900 	mov.w	r9, #0
 800d38e:	e7b8      	b.n	800d302 <__gethex+0x1b6>
 800d390:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d394:	42bd      	cmp	r5, r7
 800d396:	dd6f      	ble.n	800d478 <__gethex+0x32c>
 800d398:	1bed      	subs	r5, r5, r7
 800d39a:	42ae      	cmp	r6, r5
 800d39c:	dc34      	bgt.n	800d408 <__gethex+0x2bc>
 800d39e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d3a2:	2b02      	cmp	r3, #2
 800d3a4:	d022      	beq.n	800d3ec <__gethex+0x2a0>
 800d3a6:	2b03      	cmp	r3, #3
 800d3a8:	d024      	beq.n	800d3f4 <__gethex+0x2a8>
 800d3aa:	2b01      	cmp	r3, #1
 800d3ac:	d115      	bne.n	800d3da <__gethex+0x28e>
 800d3ae:	42ae      	cmp	r6, r5
 800d3b0:	d113      	bne.n	800d3da <__gethex+0x28e>
 800d3b2:	2e01      	cmp	r6, #1
 800d3b4:	d10b      	bne.n	800d3ce <__gethex+0x282>
 800d3b6:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d3ba:	9a02      	ldr	r2, [sp, #8]
 800d3bc:	2562      	movs	r5, #98	@ 0x62
 800d3be:	6013      	str	r3, [r2, #0]
 800d3c0:	2301      	movs	r3, #1
 800d3c2:	6123      	str	r3, [r4, #16]
 800d3c4:	f8ca 3000 	str.w	r3, [sl]
 800d3c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d3ca:	601c      	str	r4, [r3, #0]
 800d3cc:	e73a      	b.n	800d244 <__gethex+0xf8>
 800d3ce:	4620      	mov	r0, r4
 800d3d0:	1e71      	subs	r1, r6, #1
 800d3d2:	f7fe fcc0 	bl	800bd56 <__any_on>
 800d3d6:	2800      	cmp	r0, #0
 800d3d8:	d1ed      	bne.n	800d3b6 <__gethex+0x26a>
 800d3da:	4621      	mov	r1, r4
 800d3dc:	9801      	ldr	r0, [sp, #4]
 800d3de:	f7fe f875 	bl	800b4cc <_Bfree>
 800d3e2:	2300      	movs	r3, #0
 800d3e4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800d3e6:	2550      	movs	r5, #80	@ 0x50
 800d3e8:	6013      	str	r3, [r2, #0]
 800d3ea:	e72b      	b.n	800d244 <__gethex+0xf8>
 800d3ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d3ee:	2b00      	cmp	r3, #0
 800d3f0:	d1f3      	bne.n	800d3da <__gethex+0x28e>
 800d3f2:	e7e0      	b.n	800d3b6 <__gethex+0x26a>
 800d3f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d3f6:	2b00      	cmp	r3, #0
 800d3f8:	d1dd      	bne.n	800d3b6 <__gethex+0x26a>
 800d3fa:	e7ee      	b.n	800d3da <__gethex+0x28e>
 800d3fc:	0800de98 	.word	0x0800de98
 800d400:	0800dd2d 	.word	0x0800dd2d
 800d404:	0800e00a 	.word	0x0800e00a
 800d408:	1e6f      	subs	r7, r5, #1
 800d40a:	f1b9 0f00 	cmp.w	r9, #0
 800d40e:	d130      	bne.n	800d472 <__gethex+0x326>
 800d410:	b127      	cbz	r7, 800d41c <__gethex+0x2d0>
 800d412:	4639      	mov	r1, r7
 800d414:	4620      	mov	r0, r4
 800d416:	f7fe fc9e 	bl	800bd56 <__any_on>
 800d41a:	4681      	mov	r9, r0
 800d41c:	2301      	movs	r3, #1
 800d41e:	4629      	mov	r1, r5
 800d420:	1b76      	subs	r6, r6, r5
 800d422:	2502      	movs	r5, #2
 800d424:	117a      	asrs	r2, r7, #5
 800d426:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800d42a:	f007 071f 	and.w	r7, r7, #31
 800d42e:	40bb      	lsls	r3, r7
 800d430:	4213      	tst	r3, r2
 800d432:	4620      	mov	r0, r4
 800d434:	bf18      	it	ne
 800d436:	f049 0902 	orrne.w	r9, r9, #2
 800d43a:	f7ff fe1e 	bl	800d07a <rshift>
 800d43e:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800d442:	f1b9 0f00 	cmp.w	r9, #0
 800d446:	d047      	beq.n	800d4d8 <__gethex+0x38c>
 800d448:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d44c:	2b02      	cmp	r3, #2
 800d44e:	d015      	beq.n	800d47c <__gethex+0x330>
 800d450:	2b03      	cmp	r3, #3
 800d452:	d017      	beq.n	800d484 <__gethex+0x338>
 800d454:	2b01      	cmp	r3, #1
 800d456:	d109      	bne.n	800d46c <__gethex+0x320>
 800d458:	f019 0f02 	tst.w	r9, #2
 800d45c:	d006      	beq.n	800d46c <__gethex+0x320>
 800d45e:	f8da 3000 	ldr.w	r3, [sl]
 800d462:	ea49 0903 	orr.w	r9, r9, r3
 800d466:	f019 0f01 	tst.w	r9, #1
 800d46a:	d10e      	bne.n	800d48a <__gethex+0x33e>
 800d46c:	f045 0510 	orr.w	r5, r5, #16
 800d470:	e032      	b.n	800d4d8 <__gethex+0x38c>
 800d472:	f04f 0901 	mov.w	r9, #1
 800d476:	e7d1      	b.n	800d41c <__gethex+0x2d0>
 800d478:	2501      	movs	r5, #1
 800d47a:	e7e2      	b.n	800d442 <__gethex+0x2f6>
 800d47c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d47e:	f1c3 0301 	rsb	r3, r3, #1
 800d482:	930f      	str	r3, [sp, #60]	@ 0x3c
 800d484:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d486:	2b00      	cmp	r3, #0
 800d488:	d0f0      	beq.n	800d46c <__gethex+0x320>
 800d48a:	f04f 0c00 	mov.w	ip, #0
 800d48e:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800d492:	f104 0314 	add.w	r3, r4, #20
 800d496:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800d49a:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800d49e:	4618      	mov	r0, r3
 800d4a0:	f853 2b04 	ldr.w	r2, [r3], #4
 800d4a4:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d4a8:	d01b      	beq.n	800d4e2 <__gethex+0x396>
 800d4aa:	3201      	adds	r2, #1
 800d4ac:	6002      	str	r2, [r0, #0]
 800d4ae:	2d02      	cmp	r5, #2
 800d4b0:	f104 0314 	add.w	r3, r4, #20
 800d4b4:	d13c      	bne.n	800d530 <__gethex+0x3e4>
 800d4b6:	f8d8 2000 	ldr.w	r2, [r8]
 800d4ba:	3a01      	subs	r2, #1
 800d4bc:	42b2      	cmp	r2, r6
 800d4be:	d109      	bne.n	800d4d4 <__gethex+0x388>
 800d4c0:	2201      	movs	r2, #1
 800d4c2:	1171      	asrs	r1, r6, #5
 800d4c4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d4c8:	f006 061f 	and.w	r6, r6, #31
 800d4cc:	fa02 f606 	lsl.w	r6, r2, r6
 800d4d0:	421e      	tst	r6, r3
 800d4d2:	d13a      	bne.n	800d54a <__gethex+0x3fe>
 800d4d4:	f045 0520 	orr.w	r5, r5, #32
 800d4d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d4da:	601c      	str	r4, [r3, #0]
 800d4dc:	9b02      	ldr	r3, [sp, #8]
 800d4de:	601f      	str	r7, [r3, #0]
 800d4e0:	e6b0      	b.n	800d244 <__gethex+0xf8>
 800d4e2:	4299      	cmp	r1, r3
 800d4e4:	f843 cc04 	str.w	ip, [r3, #-4]
 800d4e8:	d8d9      	bhi.n	800d49e <__gethex+0x352>
 800d4ea:	68a3      	ldr	r3, [r4, #8]
 800d4ec:	459b      	cmp	fp, r3
 800d4ee:	db17      	blt.n	800d520 <__gethex+0x3d4>
 800d4f0:	6861      	ldr	r1, [r4, #4]
 800d4f2:	9801      	ldr	r0, [sp, #4]
 800d4f4:	3101      	adds	r1, #1
 800d4f6:	f7fd ffa9 	bl	800b44c <_Balloc>
 800d4fa:	4681      	mov	r9, r0
 800d4fc:	b918      	cbnz	r0, 800d506 <__gethex+0x3ba>
 800d4fe:	4602      	mov	r2, r0
 800d500:	2184      	movs	r1, #132	@ 0x84
 800d502:	4b19      	ldr	r3, [pc, #100]	@ (800d568 <__gethex+0x41c>)
 800d504:	e6c5      	b.n	800d292 <__gethex+0x146>
 800d506:	6922      	ldr	r2, [r4, #16]
 800d508:	f104 010c 	add.w	r1, r4, #12
 800d50c:	3202      	adds	r2, #2
 800d50e:	0092      	lsls	r2, r2, #2
 800d510:	300c      	adds	r0, #12
 800d512:	f7fd f81a 	bl	800a54a <memcpy>
 800d516:	4621      	mov	r1, r4
 800d518:	9801      	ldr	r0, [sp, #4]
 800d51a:	f7fd ffd7 	bl	800b4cc <_Bfree>
 800d51e:	464c      	mov	r4, r9
 800d520:	6923      	ldr	r3, [r4, #16]
 800d522:	1c5a      	adds	r2, r3, #1
 800d524:	6122      	str	r2, [r4, #16]
 800d526:	2201      	movs	r2, #1
 800d528:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d52c:	615a      	str	r2, [r3, #20]
 800d52e:	e7be      	b.n	800d4ae <__gethex+0x362>
 800d530:	6922      	ldr	r2, [r4, #16]
 800d532:	455a      	cmp	r2, fp
 800d534:	dd0b      	ble.n	800d54e <__gethex+0x402>
 800d536:	2101      	movs	r1, #1
 800d538:	4620      	mov	r0, r4
 800d53a:	f7ff fd9e 	bl	800d07a <rshift>
 800d53e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d542:	3701      	adds	r7, #1
 800d544:	42bb      	cmp	r3, r7
 800d546:	f6ff aee0 	blt.w	800d30a <__gethex+0x1be>
 800d54a:	2501      	movs	r5, #1
 800d54c:	e7c2      	b.n	800d4d4 <__gethex+0x388>
 800d54e:	f016 061f 	ands.w	r6, r6, #31
 800d552:	d0fa      	beq.n	800d54a <__gethex+0x3fe>
 800d554:	4453      	add	r3, sl
 800d556:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800d55a:	f7fe f869 	bl	800b630 <__hi0bits>
 800d55e:	f1c6 0620 	rsb	r6, r6, #32
 800d562:	42b0      	cmp	r0, r6
 800d564:	dbe7      	blt.n	800d536 <__gethex+0x3ea>
 800d566:	e7f0      	b.n	800d54a <__gethex+0x3fe>
 800d568:	0800dd2d 	.word	0x0800dd2d

0800d56c <L_shift>:
 800d56c:	f1c2 0208 	rsb	r2, r2, #8
 800d570:	0092      	lsls	r2, r2, #2
 800d572:	b570      	push	{r4, r5, r6, lr}
 800d574:	f1c2 0620 	rsb	r6, r2, #32
 800d578:	6843      	ldr	r3, [r0, #4]
 800d57a:	6804      	ldr	r4, [r0, #0]
 800d57c:	fa03 f506 	lsl.w	r5, r3, r6
 800d580:	432c      	orrs	r4, r5
 800d582:	40d3      	lsrs	r3, r2
 800d584:	6004      	str	r4, [r0, #0]
 800d586:	f840 3f04 	str.w	r3, [r0, #4]!
 800d58a:	4288      	cmp	r0, r1
 800d58c:	d3f4      	bcc.n	800d578 <L_shift+0xc>
 800d58e:	bd70      	pop	{r4, r5, r6, pc}

0800d590 <__match>:
 800d590:	b530      	push	{r4, r5, lr}
 800d592:	6803      	ldr	r3, [r0, #0]
 800d594:	3301      	adds	r3, #1
 800d596:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d59a:	b914      	cbnz	r4, 800d5a2 <__match+0x12>
 800d59c:	6003      	str	r3, [r0, #0]
 800d59e:	2001      	movs	r0, #1
 800d5a0:	bd30      	pop	{r4, r5, pc}
 800d5a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d5a6:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800d5aa:	2d19      	cmp	r5, #25
 800d5ac:	bf98      	it	ls
 800d5ae:	3220      	addls	r2, #32
 800d5b0:	42a2      	cmp	r2, r4
 800d5b2:	d0f0      	beq.n	800d596 <__match+0x6>
 800d5b4:	2000      	movs	r0, #0
 800d5b6:	e7f3      	b.n	800d5a0 <__match+0x10>

0800d5b8 <__hexnan>:
 800d5b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5bc:	2500      	movs	r5, #0
 800d5be:	680b      	ldr	r3, [r1, #0]
 800d5c0:	4682      	mov	sl, r0
 800d5c2:	115e      	asrs	r6, r3, #5
 800d5c4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800d5c8:	f013 031f 	ands.w	r3, r3, #31
 800d5cc:	bf18      	it	ne
 800d5ce:	3604      	addne	r6, #4
 800d5d0:	1f37      	subs	r7, r6, #4
 800d5d2:	4690      	mov	r8, r2
 800d5d4:	46b9      	mov	r9, r7
 800d5d6:	463c      	mov	r4, r7
 800d5d8:	46ab      	mov	fp, r5
 800d5da:	b087      	sub	sp, #28
 800d5dc:	6801      	ldr	r1, [r0, #0]
 800d5de:	9301      	str	r3, [sp, #4]
 800d5e0:	f846 5c04 	str.w	r5, [r6, #-4]
 800d5e4:	9502      	str	r5, [sp, #8]
 800d5e6:	784a      	ldrb	r2, [r1, #1]
 800d5e8:	1c4b      	adds	r3, r1, #1
 800d5ea:	9303      	str	r3, [sp, #12]
 800d5ec:	b342      	cbz	r2, 800d640 <__hexnan+0x88>
 800d5ee:	4610      	mov	r0, r2
 800d5f0:	9105      	str	r1, [sp, #20]
 800d5f2:	9204      	str	r2, [sp, #16]
 800d5f4:	f7ff fd94 	bl	800d120 <__hexdig_fun>
 800d5f8:	2800      	cmp	r0, #0
 800d5fa:	d151      	bne.n	800d6a0 <__hexnan+0xe8>
 800d5fc:	9a04      	ldr	r2, [sp, #16]
 800d5fe:	9905      	ldr	r1, [sp, #20]
 800d600:	2a20      	cmp	r2, #32
 800d602:	d818      	bhi.n	800d636 <__hexnan+0x7e>
 800d604:	9b02      	ldr	r3, [sp, #8]
 800d606:	459b      	cmp	fp, r3
 800d608:	dd13      	ble.n	800d632 <__hexnan+0x7a>
 800d60a:	454c      	cmp	r4, r9
 800d60c:	d206      	bcs.n	800d61c <__hexnan+0x64>
 800d60e:	2d07      	cmp	r5, #7
 800d610:	dc04      	bgt.n	800d61c <__hexnan+0x64>
 800d612:	462a      	mov	r2, r5
 800d614:	4649      	mov	r1, r9
 800d616:	4620      	mov	r0, r4
 800d618:	f7ff ffa8 	bl	800d56c <L_shift>
 800d61c:	4544      	cmp	r4, r8
 800d61e:	d952      	bls.n	800d6c6 <__hexnan+0x10e>
 800d620:	2300      	movs	r3, #0
 800d622:	f1a4 0904 	sub.w	r9, r4, #4
 800d626:	f844 3c04 	str.w	r3, [r4, #-4]
 800d62a:	461d      	mov	r5, r3
 800d62c:	464c      	mov	r4, r9
 800d62e:	f8cd b008 	str.w	fp, [sp, #8]
 800d632:	9903      	ldr	r1, [sp, #12]
 800d634:	e7d7      	b.n	800d5e6 <__hexnan+0x2e>
 800d636:	2a29      	cmp	r2, #41	@ 0x29
 800d638:	d157      	bne.n	800d6ea <__hexnan+0x132>
 800d63a:	3102      	adds	r1, #2
 800d63c:	f8ca 1000 	str.w	r1, [sl]
 800d640:	f1bb 0f00 	cmp.w	fp, #0
 800d644:	d051      	beq.n	800d6ea <__hexnan+0x132>
 800d646:	454c      	cmp	r4, r9
 800d648:	d206      	bcs.n	800d658 <__hexnan+0xa0>
 800d64a:	2d07      	cmp	r5, #7
 800d64c:	dc04      	bgt.n	800d658 <__hexnan+0xa0>
 800d64e:	462a      	mov	r2, r5
 800d650:	4649      	mov	r1, r9
 800d652:	4620      	mov	r0, r4
 800d654:	f7ff ff8a 	bl	800d56c <L_shift>
 800d658:	4544      	cmp	r4, r8
 800d65a:	d936      	bls.n	800d6ca <__hexnan+0x112>
 800d65c:	4623      	mov	r3, r4
 800d65e:	f1a8 0204 	sub.w	r2, r8, #4
 800d662:	f853 1b04 	ldr.w	r1, [r3], #4
 800d666:	429f      	cmp	r7, r3
 800d668:	f842 1f04 	str.w	r1, [r2, #4]!
 800d66c:	d2f9      	bcs.n	800d662 <__hexnan+0xaa>
 800d66e:	1b3b      	subs	r3, r7, r4
 800d670:	f023 0303 	bic.w	r3, r3, #3
 800d674:	3304      	adds	r3, #4
 800d676:	3401      	adds	r4, #1
 800d678:	3e03      	subs	r6, #3
 800d67a:	42b4      	cmp	r4, r6
 800d67c:	bf88      	it	hi
 800d67e:	2304      	movhi	r3, #4
 800d680:	2200      	movs	r2, #0
 800d682:	4443      	add	r3, r8
 800d684:	f843 2b04 	str.w	r2, [r3], #4
 800d688:	429f      	cmp	r7, r3
 800d68a:	d2fb      	bcs.n	800d684 <__hexnan+0xcc>
 800d68c:	683b      	ldr	r3, [r7, #0]
 800d68e:	b91b      	cbnz	r3, 800d698 <__hexnan+0xe0>
 800d690:	4547      	cmp	r7, r8
 800d692:	d128      	bne.n	800d6e6 <__hexnan+0x12e>
 800d694:	2301      	movs	r3, #1
 800d696:	603b      	str	r3, [r7, #0]
 800d698:	2005      	movs	r0, #5
 800d69a:	b007      	add	sp, #28
 800d69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6a0:	3501      	adds	r5, #1
 800d6a2:	2d08      	cmp	r5, #8
 800d6a4:	f10b 0b01 	add.w	fp, fp, #1
 800d6a8:	dd06      	ble.n	800d6b8 <__hexnan+0x100>
 800d6aa:	4544      	cmp	r4, r8
 800d6ac:	d9c1      	bls.n	800d632 <__hexnan+0x7a>
 800d6ae:	2300      	movs	r3, #0
 800d6b0:	2501      	movs	r5, #1
 800d6b2:	f844 3c04 	str.w	r3, [r4, #-4]
 800d6b6:	3c04      	subs	r4, #4
 800d6b8:	6822      	ldr	r2, [r4, #0]
 800d6ba:	f000 000f 	and.w	r0, r0, #15
 800d6be:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800d6c2:	6020      	str	r0, [r4, #0]
 800d6c4:	e7b5      	b.n	800d632 <__hexnan+0x7a>
 800d6c6:	2508      	movs	r5, #8
 800d6c8:	e7b3      	b.n	800d632 <__hexnan+0x7a>
 800d6ca:	9b01      	ldr	r3, [sp, #4]
 800d6cc:	2b00      	cmp	r3, #0
 800d6ce:	d0dd      	beq.n	800d68c <__hexnan+0xd4>
 800d6d0:	f04f 32ff 	mov.w	r2, #4294967295
 800d6d4:	f1c3 0320 	rsb	r3, r3, #32
 800d6d8:	40da      	lsrs	r2, r3
 800d6da:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800d6de:	4013      	ands	r3, r2
 800d6e0:	f846 3c04 	str.w	r3, [r6, #-4]
 800d6e4:	e7d2      	b.n	800d68c <__hexnan+0xd4>
 800d6e6:	3f04      	subs	r7, #4
 800d6e8:	e7d0      	b.n	800d68c <__hexnan+0xd4>
 800d6ea:	2004      	movs	r0, #4
 800d6ec:	e7d5      	b.n	800d69a <__hexnan+0xe2>

0800d6ee <__ascii_mbtowc>:
 800d6ee:	b082      	sub	sp, #8
 800d6f0:	b901      	cbnz	r1, 800d6f4 <__ascii_mbtowc+0x6>
 800d6f2:	a901      	add	r1, sp, #4
 800d6f4:	b142      	cbz	r2, 800d708 <__ascii_mbtowc+0x1a>
 800d6f6:	b14b      	cbz	r3, 800d70c <__ascii_mbtowc+0x1e>
 800d6f8:	7813      	ldrb	r3, [r2, #0]
 800d6fa:	600b      	str	r3, [r1, #0]
 800d6fc:	7812      	ldrb	r2, [r2, #0]
 800d6fe:	1e10      	subs	r0, r2, #0
 800d700:	bf18      	it	ne
 800d702:	2001      	movne	r0, #1
 800d704:	b002      	add	sp, #8
 800d706:	4770      	bx	lr
 800d708:	4610      	mov	r0, r2
 800d70a:	e7fb      	b.n	800d704 <__ascii_mbtowc+0x16>
 800d70c:	f06f 0001 	mvn.w	r0, #1
 800d710:	e7f8      	b.n	800d704 <__ascii_mbtowc+0x16>

0800d712 <_realloc_r>:
 800d712:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d716:	4680      	mov	r8, r0
 800d718:	4615      	mov	r5, r2
 800d71a:	460c      	mov	r4, r1
 800d71c:	b921      	cbnz	r1, 800d728 <_realloc_r+0x16>
 800d71e:	4611      	mov	r1, r2
 800d720:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d724:	f7fd be06 	b.w	800b334 <_malloc_r>
 800d728:	b92a      	cbnz	r2, 800d736 <_realloc_r+0x24>
 800d72a:	f7fd fd91 	bl	800b250 <_free_r>
 800d72e:	2400      	movs	r4, #0
 800d730:	4620      	mov	r0, r4
 800d732:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d736:	f000 f9ab 	bl	800da90 <_malloc_usable_size_r>
 800d73a:	4285      	cmp	r5, r0
 800d73c:	4606      	mov	r6, r0
 800d73e:	d802      	bhi.n	800d746 <_realloc_r+0x34>
 800d740:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800d744:	d8f4      	bhi.n	800d730 <_realloc_r+0x1e>
 800d746:	4629      	mov	r1, r5
 800d748:	4640      	mov	r0, r8
 800d74a:	f7fd fdf3 	bl	800b334 <_malloc_r>
 800d74e:	4607      	mov	r7, r0
 800d750:	2800      	cmp	r0, #0
 800d752:	d0ec      	beq.n	800d72e <_realloc_r+0x1c>
 800d754:	42b5      	cmp	r5, r6
 800d756:	462a      	mov	r2, r5
 800d758:	4621      	mov	r1, r4
 800d75a:	bf28      	it	cs
 800d75c:	4632      	movcs	r2, r6
 800d75e:	f7fc fef4 	bl	800a54a <memcpy>
 800d762:	4621      	mov	r1, r4
 800d764:	4640      	mov	r0, r8
 800d766:	f7fd fd73 	bl	800b250 <_free_r>
 800d76a:	463c      	mov	r4, r7
 800d76c:	e7e0      	b.n	800d730 <_realloc_r+0x1e>

0800d76e <__ascii_wctomb>:
 800d76e:	4603      	mov	r3, r0
 800d770:	4608      	mov	r0, r1
 800d772:	b141      	cbz	r1, 800d786 <__ascii_wctomb+0x18>
 800d774:	2aff      	cmp	r2, #255	@ 0xff
 800d776:	d904      	bls.n	800d782 <__ascii_wctomb+0x14>
 800d778:	228a      	movs	r2, #138	@ 0x8a
 800d77a:	f04f 30ff 	mov.w	r0, #4294967295
 800d77e:	601a      	str	r2, [r3, #0]
 800d780:	4770      	bx	lr
 800d782:	2001      	movs	r0, #1
 800d784:	700a      	strb	r2, [r1, #0]
 800d786:	4770      	bx	lr

0800d788 <__sfputc_r>:
 800d788:	6893      	ldr	r3, [r2, #8]
 800d78a:	b410      	push	{r4}
 800d78c:	3b01      	subs	r3, #1
 800d78e:	2b00      	cmp	r3, #0
 800d790:	6093      	str	r3, [r2, #8]
 800d792:	da07      	bge.n	800d7a4 <__sfputc_r+0x1c>
 800d794:	6994      	ldr	r4, [r2, #24]
 800d796:	42a3      	cmp	r3, r4
 800d798:	db01      	blt.n	800d79e <__sfputc_r+0x16>
 800d79a:	290a      	cmp	r1, #10
 800d79c:	d102      	bne.n	800d7a4 <__sfputc_r+0x1c>
 800d79e:	bc10      	pop	{r4}
 800d7a0:	f7fc bdb1 	b.w	800a306 <__swbuf_r>
 800d7a4:	6813      	ldr	r3, [r2, #0]
 800d7a6:	1c58      	adds	r0, r3, #1
 800d7a8:	6010      	str	r0, [r2, #0]
 800d7aa:	7019      	strb	r1, [r3, #0]
 800d7ac:	4608      	mov	r0, r1
 800d7ae:	bc10      	pop	{r4}
 800d7b0:	4770      	bx	lr

0800d7b2 <__sfputs_r>:
 800d7b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d7b4:	4606      	mov	r6, r0
 800d7b6:	460f      	mov	r7, r1
 800d7b8:	4614      	mov	r4, r2
 800d7ba:	18d5      	adds	r5, r2, r3
 800d7bc:	42ac      	cmp	r4, r5
 800d7be:	d101      	bne.n	800d7c4 <__sfputs_r+0x12>
 800d7c0:	2000      	movs	r0, #0
 800d7c2:	e007      	b.n	800d7d4 <__sfputs_r+0x22>
 800d7c4:	463a      	mov	r2, r7
 800d7c6:	4630      	mov	r0, r6
 800d7c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d7cc:	f7ff ffdc 	bl	800d788 <__sfputc_r>
 800d7d0:	1c43      	adds	r3, r0, #1
 800d7d2:	d1f3      	bne.n	800d7bc <__sfputs_r+0xa>
 800d7d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800d7d8 <_vfiprintf_r>:
 800d7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7dc:	460d      	mov	r5, r1
 800d7de:	4614      	mov	r4, r2
 800d7e0:	4698      	mov	r8, r3
 800d7e2:	4606      	mov	r6, r0
 800d7e4:	b09d      	sub	sp, #116	@ 0x74
 800d7e6:	b118      	cbz	r0, 800d7f0 <_vfiprintf_r+0x18>
 800d7e8:	6a03      	ldr	r3, [r0, #32]
 800d7ea:	b90b      	cbnz	r3, 800d7f0 <_vfiprintf_r+0x18>
 800d7ec:	f7fc fc94 	bl	800a118 <__sinit>
 800d7f0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d7f2:	07d9      	lsls	r1, r3, #31
 800d7f4:	d405      	bmi.n	800d802 <_vfiprintf_r+0x2a>
 800d7f6:	89ab      	ldrh	r3, [r5, #12]
 800d7f8:	059a      	lsls	r2, r3, #22
 800d7fa:	d402      	bmi.n	800d802 <_vfiprintf_r+0x2a>
 800d7fc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d7fe:	f7fc fe94 	bl	800a52a <__retarget_lock_acquire_recursive>
 800d802:	89ab      	ldrh	r3, [r5, #12]
 800d804:	071b      	lsls	r3, r3, #28
 800d806:	d501      	bpl.n	800d80c <_vfiprintf_r+0x34>
 800d808:	692b      	ldr	r3, [r5, #16]
 800d80a:	b99b      	cbnz	r3, 800d834 <_vfiprintf_r+0x5c>
 800d80c:	4629      	mov	r1, r5
 800d80e:	4630      	mov	r0, r6
 800d810:	f7fc fdb8 	bl	800a384 <__swsetup_r>
 800d814:	b170      	cbz	r0, 800d834 <_vfiprintf_r+0x5c>
 800d816:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d818:	07dc      	lsls	r4, r3, #31
 800d81a:	d504      	bpl.n	800d826 <_vfiprintf_r+0x4e>
 800d81c:	f04f 30ff 	mov.w	r0, #4294967295
 800d820:	b01d      	add	sp, #116	@ 0x74
 800d822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d826:	89ab      	ldrh	r3, [r5, #12]
 800d828:	0598      	lsls	r0, r3, #22
 800d82a:	d4f7      	bmi.n	800d81c <_vfiprintf_r+0x44>
 800d82c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d82e:	f7fc fe7d 	bl	800a52c <__retarget_lock_release_recursive>
 800d832:	e7f3      	b.n	800d81c <_vfiprintf_r+0x44>
 800d834:	2300      	movs	r3, #0
 800d836:	9309      	str	r3, [sp, #36]	@ 0x24
 800d838:	2320      	movs	r3, #32
 800d83a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800d83e:	2330      	movs	r3, #48	@ 0x30
 800d840:	f04f 0901 	mov.w	r9, #1
 800d844:	f8cd 800c 	str.w	r8, [sp, #12]
 800d848:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 800d9f4 <_vfiprintf_r+0x21c>
 800d84c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800d850:	4623      	mov	r3, r4
 800d852:	469a      	mov	sl, r3
 800d854:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d858:	b10a      	cbz	r2, 800d85e <_vfiprintf_r+0x86>
 800d85a:	2a25      	cmp	r2, #37	@ 0x25
 800d85c:	d1f9      	bne.n	800d852 <_vfiprintf_r+0x7a>
 800d85e:	ebba 0b04 	subs.w	fp, sl, r4
 800d862:	d00b      	beq.n	800d87c <_vfiprintf_r+0xa4>
 800d864:	465b      	mov	r3, fp
 800d866:	4622      	mov	r2, r4
 800d868:	4629      	mov	r1, r5
 800d86a:	4630      	mov	r0, r6
 800d86c:	f7ff ffa1 	bl	800d7b2 <__sfputs_r>
 800d870:	3001      	adds	r0, #1
 800d872:	f000 80a7 	beq.w	800d9c4 <_vfiprintf_r+0x1ec>
 800d876:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d878:	445a      	add	r2, fp
 800d87a:	9209      	str	r2, [sp, #36]	@ 0x24
 800d87c:	f89a 3000 	ldrb.w	r3, [sl]
 800d880:	2b00      	cmp	r3, #0
 800d882:	f000 809f 	beq.w	800d9c4 <_vfiprintf_r+0x1ec>
 800d886:	2300      	movs	r3, #0
 800d888:	f04f 32ff 	mov.w	r2, #4294967295
 800d88c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800d890:	f10a 0a01 	add.w	sl, sl, #1
 800d894:	9304      	str	r3, [sp, #16]
 800d896:	9307      	str	r3, [sp, #28]
 800d898:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800d89c:	931a      	str	r3, [sp, #104]	@ 0x68
 800d89e:	4654      	mov	r4, sl
 800d8a0:	2205      	movs	r2, #5
 800d8a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d8a6:	4853      	ldr	r0, [pc, #332]	@ (800d9f4 <_vfiprintf_r+0x21c>)
 800d8a8:	f7fc fe41 	bl	800a52e <memchr>
 800d8ac:	9a04      	ldr	r2, [sp, #16]
 800d8ae:	b9d8      	cbnz	r0, 800d8e8 <_vfiprintf_r+0x110>
 800d8b0:	06d1      	lsls	r1, r2, #27
 800d8b2:	bf44      	itt	mi
 800d8b4:	2320      	movmi	r3, #32
 800d8b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800d8ba:	0713      	lsls	r3, r2, #28
 800d8bc:	bf44      	itt	mi
 800d8be:	232b      	movmi	r3, #43	@ 0x2b
 800d8c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800d8c4:	f89a 3000 	ldrb.w	r3, [sl]
 800d8c8:	2b2a      	cmp	r3, #42	@ 0x2a
 800d8ca:	d015      	beq.n	800d8f8 <_vfiprintf_r+0x120>
 800d8cc:	4654      	mov	r4, sl
 800d8ce:	2000      	movs	r0, #0
 800d8d0:	f04f 0c0a 	mov.w	ip, #10
 800d8d4:	9a07      	ldr	r2, [sp, #28]
 800d8d6:	4621      	mov	r1, r4
 800d8d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d8dc:	3b30      	subs	r3, #48	@ 0x30
 800d8de:	2b09      	cmp	r3, #9
 800d8e0:	d94b      	bls.n	800d97a <_vfiprintf_r+0x1a2>
 800d8e2:	b1b0      	cbz	r0, 800d912 <_vfiprintf_r+0x13a>
 800d8e4:	9207      	str	r2, [sp, #28]
 800d8e6:	e014      	b.n	800d912 <_vfiprintf_r+0x13a>
 800d8e8:	eba0 0308 	sub.w	r3, r0, r8
 800d8ec:	fa09 f303 	lsl.w	r3, r9, r3
 800d8f0:	4313      	orrs	r3, r2
 800d8f2:	46a2      	mov	sl, r4
 800d8f4:	9304      	str	r3, [sp, #16]
 800d8f6:	e7d2      	b.n	800d89e <_vfiprintf_r+0xc6>
 800d8f8:	9b03      	ldr	r3, [sp, #12]
 800d8fa:	1d19      	adds	r1, r3, #4
 800d8fc:	681b      	ldr	r3, [r3, #0]
 800d8fe:	9103      	str	r1, [sp, #12]
 800d900:	2b00      	cmp	r3, #0
 800d902:	bfbb      	ittet	lt
 800d904:	425b      	neglt	r3, r3
 800d906:	f042 0202 	orrlt.w	r2, r2, #2
 800d90a:	9307      	strge	r3, [sp, #28]
 800d90c:	9307      	strlt	r3, [sp, #28]
 800d90e:	bfb8      	it	lt
 800d910:	9204      	strlt	r2, [sp, #16]
 800d912:	7823      	ldrb	r3, [r4, #0]
 800d914:	2b2e      	cmp	r3, #46	@ 0x2e
 800d916:	d10a      	bne.n	800d92e <_vfiprintf_r+0x156>
 800d918:	7863      	ldrb	r3, [r4, #1]
 800d91a:	2b2a      	cmp	r3, #42	@ 0x2a
 800d91c:	d132      	bne.n	800d984 <_vfiprintf_r+0x1ac>
 800d91e:	9b03      	ldr	r3, [sp, #12]
 800d920:	3402      	adds	r4, #2
 800d922:	1d1a      	adds	r2, r3, #4
 800d924:	681b      	ldr	r3, [r3, #0]
 800d926:	9203      	str	r2, [sp, #12]
 800d928:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800d92c:	9305      	str	r3, [sp, #20]
 800d92e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 800d9f8 <_vfiprintf_r+0x220>
 800d932:	2203      	movs	r2, #3
 800d934:	4650      	mov	r0, sl
 800d936:	7821      	ldrb	r1, [r4, #0]
 800d938:	f7fc fdf9 	bl	800a52e <memchr>
 800d93c:	b138      	cbz	r0, 800d94e <_vfiprintf_r+0x176>
 800d93e:	2240      	movs	r2, #64	@ 0x40
 800d940:	9b04      	ldr	r3, [sp, #16]
 800d942:	eba0 000a 	sub.w	r0, r0, sl
 800d946:	4082      	lsls	r2, r0
 800d948:	4313      	orrs	r3, r2
 800d94a:	3401      	adds	r4, #1
 800d94c:	9304      	str	r3, [sp, #16]
 800d94e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d952:	2206      	movs	r2, #6
 800d954:	4829      	ldr	r0, [pc, #164]	@ (800d9fc <_vfiprintf_r+0x224>)
 800d956:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800d95a:	f7fc fde8 	bl	800a52e <memchr>
 800d95e:	2800      	cmp	r0, #0
 800d960:	d03f      	beq.n	800d9e2 <_vfiprintf_r+0x20a>
 800d962:	4b27      	ldr	r3, [pc, #156]	@ (800da00 <_vfiprintf_r+0x228>)
 800d964:	bb1b      	cbnz	r3, 800d9ae <_vfiprintf_r+0x1d6>
 800d966:	9b03      	ldr	r3, [sp, #12]
 800d968:	3307      	adds	r3, #7
 800d96a:	f023 0307 	bic.w	r3, r3, #7
 800d96e:	3308      	adds	r3, #8
 800d970:	9303      	str	r3, [sp, #12]
 800d972:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d974:	443b      	add	r3, r7
 800d976:	9309      	str	r3, [sp, #36]	@ 0x24
 800d978:	e76a      	b.n	800d850 <_vfiprintf_r+0x78>
 800d97a:	460c      	mov	r4, r1
 800d97c:	2001      	movs	r0, #1
 800d97e:	fb0c 3202 	mla	r2, ip, r2, r3
 800d982:	e7a8      	b.n	800d8d6 <_vfiprintf_r+0xfe>
 800d984:	2300      	movs	r3, #0
 800d986:	f04f 0c0a 	mov.w	ip, #10
 800d98a:	4619      	mov	r1, r3
 800d98c:	3401      	adds	r4, #1
 800d98e:	9305      	str	r3, [sp, #20]
 800d990:	4620      	mov	r0, r4
 800d992:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d996:	3a30      	subs	r2, #48	@ 0x30
 800d998:	2a09      	cmp	r2, #9
 800d99a:	d903      	bls.n	800d9a4 <_vfiprintf_r+0x1cc>
 800d99c:	2b00      	cmp	r3, #0
 800d99e:	d0c6      	beq.n	800d92e <_vfiprintf_r+0x156>
 800d9a0:	9105      	str	r1, [sp, #20]
 800d9a2:	e7c4      	b.n	800d92e <_vfiprintf_r+0x156>
 800d9a4:	4604      	mov	r4, r0
 800d9a6:	2301      	movs	r3, #1
 800d9a8:	fb0c 2101 	mla	r1, ip, r1, r2
 800d9ac:	e7f0      	b.n	800d990 <_vfiprintf_r+0x1b8>
 800d9ae:	ab03      	add	r3, sp, #12
 800d9b0:	9300      	str	r3, [sp, #0]
 800d9b2:	462a      	mov	r2, r5
 800d9b4:	4630      	mov	r0, r6
 800d9b6:	4b13      	ldr	r3, [pc, #76]	@ (800da04 <_vfiprintf_r+0x22c>)
 800d9b8:	a904      	add	r1, sp, #16
 800d9ba:	f7fb fd53 	bl	8009464 <_printf_float>
 800d9be:	4607      	mov	r7, r0
 800d9c0:	1c78      	adds	r0, r7, #1
 800d9c2:	d1d6      	bne.n	800d972 <_vfiprintf_r+0x19a>
 800d9c4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d9c6:	07d9      	lsls	r1, r3, #31
 800d9c8:	d405      	bmi.n	800d9d6 <_vfiprintf_r+0x1fe>
 800d9ca:	89ab      	ldrh	r3, [r5, #12]
 800d9cc:	059a      	lsls	r2, r3, #22
 800d9ce:	d402      	bmi.n	800d9d6 <_vfiprintf_r+0x1fe>
 800d9d0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d9d2:	f7fc fdab 	bl	800a52c <__retarget_lock_release_recursive>
 800d9d6:	89ab      	ldrh	r3, [r5, #12]
 800d9d8:	065b      	lsls	r3, r3, #25
 800d9da:	f53f af1f 	bmi.w	800d81c <_vfiprintf_r+0x44>
 800d9de:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d9e0:	e71e      	b.n	800d820 <_vfiprintf_r+0x48>
 800d9e2:	ab03      	add	r3, sp, #12
 800d9e4:	9300      	str	r3, [sp, #0]
 800d9e6:	462a      	mov	r2, r5
 800d9e8:	4630      	mov	r0, r6
 800d9ea:	4b06      	ldr	r3, [pc, #24]	@ (800da04 <_vfiprintf_r+0x22c>)
 800d9ec:	a904      	add	r1, sp, #16
 800d9ee:	f7fb ffd7 	bl	80099a0 <_printf_i>
 800d9f2:	e7e4      	b.n	800d9be <_vfiprintf_r+0x1e6>
 800d9f4:	0800dff1 	.word	0x0800dff1
 800d9f8:	0800dff7 	.word	0x0800dff7
 800d9fc:	0800dffb 	.word	0x0800dffb
 800da00:	08009465 	.word	0x08009465
 800da04:	0800d7b3 	.word	0x0800d7b3

0800da08 <_raise_r>:
 800da08:	291f      	cmp	r1, #31
 800da0a:	b538      	push	{r3, r4, r5, lr}
 800da0c:	4605      	mov	r5, r0
 800da0e:	460c      	mov	r4, r1
 800da10:	d904      	bls.n	800da1c <_raise_r+0x14>
 800da12:	2316      	movs	r3, #22
 800da14:	6003      	str	r3, [r0, #0]
 800da16:	f04f 30ff 	mov.w	r0, #4294967295
 800da1a:	bd38      	pop	{r3, r4, r5, pc}
 800da1c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800da1e:	b112      	cbz	r2, 800da26 <_raise_r+0x1e>
 800da20:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800da24:	b94b      	cbnz	r3, 800da3a <_raise_r+0x32>
 800da26:	4628      	mov	r0, r5
 800da28:	f000 f830 	bl	800da8c <_getpid_r>
 800da2c:	4622      	mov	r2, r4
 800da2e:	4601      	mov	r1, r0
 800da30:	4628      	mov	r0, r5
 800da32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800da36:	f000 b817 	b.w	800da68 <_kill_r>
 800da3a:	2b01      	cmp	r3, #1
 800da3c:	d00a      	beq.n	800da54 <_raise_r+0x4c>
 800da3e:	1c59      	adds	r1, r3, #1
 800da40:	d103      	bne.n	800da4a <_raise_r+0x42>
 800da42:	2316      	movs	r3, #22
 800da44:	6003      	str	r3, [r0, #0]
 800da46:	2001      	movs	r0, #1
 800da48:	e7e7      	b.n	800da1a <_raise_r+0x12>
 800da4a:	2100      	movs	r1, #0
 800da4c:	4620      	mov	r0, r4
 800da4e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800da52:	4798      	blx	r3
 800da54:	2000      	movs	r0, #0
 800da56:	e7e0      	b.n	800da1a <_raise_r+0x12>

0800da58 <raise>:
 800da58:	4b02      	ldr	r3, [pc, #8]	@ (800da64 <raise+0xc>)
 800da5a:	4601      	mov	r1, r0
 800da5c:	6818      	ldr	r0, [r3, #0]
 800da5e:	f7ff bfd3 	b.w	800da08 <_raise_r>
 800da62:	bf00      	nop
 800da64:	20000034 	.word	0x20000034

0800da68 <_kill_r>:
 800da68:	b538      	push	{r3, r4, r5, lr}
 800da6a:	2300      	movs	r3, #0
 800da6c:	4d06      	ldr	r5, [pc, #24]	@ (800da88 <_kill_r+0x20>)
 800da6e:	4604      	mov	r4, r0
 800da70:	4608      	mov	r0, r1
 800da72:	4611      	mov	r1, r2
 800da74:	602b      	str	r3, [r5, #0]
 800da76:	f7f6 fb28 	bl	80040ca <_kill>
 800da7a:	1c43      	adds	r3, r0, #1
 800da7c:	d102      	bne.n	800da84 <_kill_r+0x1c>
 800da7e:	682b      	ldr	r3, [r5, #0]
 800da80:	b103      	cbz	r3, 800da84 <_kill_r+0x1c>
 800da82:	6023      	str	r3, [r4, #0]
 800da84:	bd38      	pop	{r3, r4, r5, pc}
 800da86:	bf00      	nop
 800da88:	20000908 	.word	0x20000908

0800da8c <_getpid_r>:
 800da8c:	f7f6 bb16 	b.w	80040bc <_getpid>

0800da90 <_malloc_usable_size_r>:
 800da90:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800da94:	1f18      	subs	r0, r3, #4
 800da96:	2b00      	cmp	r3, #0
 800da98:	bfbc      	itt	lt
 800da9a:	580b      	ldrlt	r3, [r1, r0]
 800da9c:	18c0      	addlt	r0, r0, r3
 800da9e:	4770      	bx	lr

0800daa0 <fmaxf>:
 800daa0:	b538      	push	{r3, r4, r5, lr}
 800daa2:	4604      	mov	r4, r0
 800daa4:	460d      	mov	r5, r1
 800daa6:	f000 f811 	bl	800dacc <__fpclassifyf>
 800daaa:	b910      	cbnz	r0, 800dab2 <fmaxf+0x12>
 800daac:	462c      	mov	r4, r5
 800daae:	4620      	mov	r0, r4
 800dab0:	bd38      	pop	{r3, r4, r5, pc}
 800dab2:	4628      	mov	r0, r5
 800dab4:	f000 f80a 	bl	800dacc <__fpclassifyf>
 800dab8:	2800      	cmp	r0, #0
 800daba:	d0f8      	beq.n	800daae <fmaxf+0xe>
 800dabc:	4629      	mov	r1, r5
 800dabe:	4620      	mov	r0, r4
 800dac0:	f7f3 fb34 	bl	800112c <__aeabi_fcmpgt>
 800dac4:	2800      	cmp	r0, #0
 800dac6:	d0f1      	beq.n	800daac <fmaxf+0xc>
 800dac8:	e7f1      	b.n	800daae <fmaxf+0xe>
	...

0800dacc <__fpclassifyf>:
 800dacc:	f030 4000 	bics.w	r0, r0, #2147483648	@ 0x80000000
 800dad0:	d00d      	beq.n	800daee <__fpclassifyf+0x22>
 800dad2:	f5a0 0300 	sub.w	r3, r0, #8388608	@ 0x800000
 800dad6:	f1b3 4ffe 	cmp.w	r3, #2130706432	@ 0x7f000000
 800dada:	d30a      	bcc.n	800daf2 <__fpclassifyf+0x26>
 800dadc:	4b07      	ldr	r3, [pc, #28]	@ (800dafc <__fpclassifyf+0x30>)
 800dade:	1e42      	subs	r2, r0, #1
 800dae0:	429a      	cmp	r2, r3
 800dae2:	d908      	bls.n	800daf6 <__fpclassifyf+0x2a>
 800dae4:	f1a0 43ff 	sub.w	r3, r0, #2139095040	@ 0x7f800000
 800dae8:	4258      	negs	r0, r3
 800daea:	4158      	adcs	r0, r3
 800daec:	4770      	bx	lr
 800daee:	2002      	movs	r0, #2
 800daf0:	4770      	bx	lr
 800daf2:	2004      	movs	r0, #4
 800daf4:	4770      	bx	lr
 800daf6:	2003      	movs	r0, #3
 800daf8:	4770      	bx	lr
 800dafa:	bf00      	nop
 800dafc:	007ffffe 	.word	0x007ffffe

0800db00 <_init>:
 800db00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800db02:	bf00      	nop
 800db04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800db06:	bc08      	pop	{r3}
 800db08:	469e      	mov	lr, r3
 800db0a:	4770      	bx	lr

0800db0c <_fini>:
 800db0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800db0e:	bf00      	nop
 800db10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800db12:	bc08      	pop	{r3}
 800db14:	469e      	mov	lr, r3
 800db16:	4770      	bx	lr
